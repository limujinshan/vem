{"version":3,"sources":["webpack:///./node_modules/ol/index.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/geom/geometrytype.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/events/eventtype.js","webpack:///./node_modules/ol/tilestate.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/viewhint.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/proj4.js","webpack:///./node_modules/ol/proj/projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/object.js","webpack:///./node_modules/ol/mapbrowsereventtype.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/events/event.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/layer/property.js","webpack:///./node_modules/ol/collection.js","webpack:///./node_modules/ol/imagestate.js","webpack:///./node_modules/ol/geom/geometrylayout.js","webpack:///./node_modules/ol/layertype.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/events/eventtarget.js","webpack:///./node_modules/ol/extent/relationship.js","webpack:///./node_modules/ol/proj/units.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/layer.js","webpack:///./node_modules/ol/collectioneventtype.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/render/eventtype.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/source/state.js","webpack:///./node_modules/ol/geom/simplegeometry.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/tilerange.js","webpack:///./node_modules/ol/tilegrid/tilegrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/disposable.js","webpack:///./node_modules/ol/objecteventtype.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/mapbrowserpointerevent.js","webpack:///./node_modules/ol/mapevent.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/structs/lrucache.js","webpack:///./node_modules/ol/structs/rbush.js","webpack:///./node_modules/ol/style/stroke.js","webpack:///./node_modules/ol/extent/corner.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/attribution.js","webpack:///./node_modules/ol/source/source.js","webpack:///./node_modules/ol/source/tile.js","webpack:///./node_modules/ol/layer/base.js","webpack:///./node_modules/ol/mapeventtype.js","webpack:///./node_modules/ol/observable.js","webpack:///./node_modules/ol/style/image.js","webpack:///./node_modules/ol/style/regularshape.js","webpack:///./node_modules/ol/style/circle.js","webpack:///./node_modules/ol/style/fill.js","webpack:///./node_modules/ol/style/style.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/linearring.js","webpack:///./node_modules/ol/geom/point.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/polygon.js","webpack:///./node_modules/ol/geom/geometry.js","webpack:///./node_modules/ol/mapbrowserevent.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/viewproperty.js","webpack:///./node_modules/ol/view.js","webpack:///./node_modules/ol/control/control.js","webpack:///./node_modules/ol/control/attribution.js","webpack:///./node_modules/ol/control/rotate.js","webpack:///./node_modules/ol/control/zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/tile.js","webpack:///./node_modules/ol/imagetile.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/triangulation.js","webpack:///./node_modules/ol/reproj/tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/tileeventtype.js","webpack:///./node_modules/ol/source/urltile.js","webpack:///./node_modules/ol/source/tileimage.js","webpack:///./node_modules/ol/source/xyz.js","webpack:///./node_modules/ol/source/osm.js","webpack:///./node_modules/ol/kinetic.js","webpack:///./node_modules/ol/interaction/property.js","webpack:///./node_modules/ol/interaction/interaction.js","webpack:///./node_modules/ol/interaction/doubleclickzoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/pointer.js","webpack:///./node_modules/ol/interaction/dragpan.js","webpack:///./node_modules/ol/interaction/dragrotate.js","webpack:///./node_modules/ol/render/box.js","webpack:///./node_modules/ol/interaction/dragbox.js","webpack:///./node_modules/ol/interaction/dragzoom.js","webpack:///./node_modules/ol/events/keycode.js","webpack:///./node_modules/ol/interaction/keyboardpan.js","webpack:///./node_modules/ol/interaction/keyboardzoom.js","webpack:///./node_modules/ol/interaction/mousewheelzoom.js","webpack:///./node_modules/ol/interaction/pinchrotate.js","webpack:///./node_modules/ol/interaction/pinchzoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/tilecache.js","webpack:///./node_modules/ol/layer/vectorrendertype.js","webpack:///./node_modules/ol/assertionerror.js","webpack:///./node_modules/ol/layer/vector.js","webpack:///./node_modules/ol/layer/tileproperty.js","webpack:///./node_modules/ol/layer/tile.js","webpack:///./node_modules/ol/format/formattype.js","webpack:///./node_modules/ol/xml.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/vectoreventtype.js","webpack:///./node_modules/ol/source/vector.js","webpack:///./node_modules/ol/pointer/eventtype.js","webpack:///./node_modules/ol/pointer/eventsource.js","webpack:///./node_modules/ol/pointer/mousesource.js","webpack:///./node_modules/ol/pointer/mssource.js","webpack:///./node_modules/ol/pointer/nativesource.js","webpack:///./node_modules/ol/pointer/pointerevent.js","webpack:///./node_modules/ol/pointer/touchsource.js","webpack:///./node_modules/ol/pointer/pointereventhandler.js","webpack:///./node_modules/ol/mapbrowsereventhandler.js","webpack:///./node_modules/ol/mapproperty.js","webpack:///./node_modules/ol/structs/priorityqueue.js","webpack:///./node_modules/ol/tilequeue.js","webpack:///./node_modules/ol/layer/group.js","webpack:///./node_modules/ol/plugintype.js","webpack:///./node_modules/ol/plugins.js","webpack:///./node_modules/ol/renderer/type.js","webpack:///./node_modules/ol/pluggablemap.js","webpack:///./node_modules/ol/imagebase.js","webpack:///./node_modules/ol/imagecanvas.js","webpack:///./node_modules/ol/render/event.js","webpack:///./node_modules/ol/render/vectorcontext.js","webpack:///./node_modules/ol/render/canvas/immediate.js","webpack:///./node_modules/ol/renderer/layer.js","webpack:///./node_modules/ol/renderer/canvas/layer.js","webpack:///./node_modules/ol/renderer/canvas/intermediatecanvas.js","webpack:///./node_modules/ol/renderer/canvas/imagelayer.js","webpack:///./node_modules/ol/style/iconimagecache.js","webpack:///./node_modules/ol/style.js","webpack:///./node_modules/ol/renderer/map.js","webpack:///./node_modules/ol/renderer/canvas/map.js","webpack:///./node_modules/ol/renderer/canvas/tilelayer.js","webpack:///./node_modules/ol/render/replaygroup.js","webpack:///./node_modules/ol/render/replaytype.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/replay.js","webpack:///./node_modules/ol/render/canvas/imagereplay.js","webpack:///./node_modules/ol/render/canvas/linestringreplay.js","webpack:///./node_modules/ol/render/canvas/polygonreplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/textplacement.js","webpack:///./node_modules/ol/render/canvas/textreplay.js","webpack:///./node_modules/ol/render/canvas/replaygroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/vectorlayer.js","webpack:///./node_modules/ol/layer/vectortilerendertype.js","webpack:///./node_modules/ol/renderer/canvas/vectortilelayer.js","webpack:///./node_modules/ol/webgl/shader.js","webpack:///./node_modules/ol/webgl/fragment.js","webpack:///./node_modules/ol/webgl/vertex.js","webpack:///./node_modules/ol/render/webgl/circlereplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/circlereplay/defaultshader/locations.js","webpack:///./node_modules/ol/vec/mat4.js","webpack:///./node_modules/ol/render/webgl/replay.js","webpack:///./node_modules/ol/render/webgl.js","webpack:///./node_modules/ol/webgl/buffer.js","webpack:///./node_modules/ol/render/webgl/circlereplay.js","webpack:///./node_modules/ol/render/webgl/texturereplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/texturereplay/defaultshader/locations.js","webpack:///./node_modules/ol/webgl/contexteventtype.js","webpack:///./node_modules/ol/webgl/context.js","webpack:///./node_modules/ol/render/webgl/texturereplay.js","webpack:///./node_modules/ol/render/webgl/imagereplay.js","webpack:///./node_modules/ol/geom/flat/topology.js","webpack:///./node_modules/ol/render/webgl/linestringreplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/linestringreplay/defaultshader/locations.js","webpack:///./node_modules/ol/render/webgl/linestringreplay.js","webpack:///./node_modules/ol/render/webgl/polygonreplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/polygonreplay/defaultshader/locations.js","webpack:///./node_modules/ol/structs/linkedlist.js","webpack:///./node_modules/ol/render/webgl/polygonreplay.js","webpack:///./node_modules/ol/style/atlas.js","webpack:///./node_modules/ol/style/atlasmanager.js","webpack:///./node_modules/ol/render/webgl/textreplay.js","webpack:///./node_modules/ol/render/webgl/replaygroup.js","webpack:///./node_modules/ol/render/webgl/immediate.js","webpack:///./node_modules/ol/renderer/webgl/defaultmapshader.js","webpack:///./node_modules/ol/renderer/webgl/defaultmapshader/locations.js","webpack:///./node_modules/ol/renderer/webgl/layer.js","webpack:///./node_modules/ol/renderer/webgl/imagelayer.js","webpack:///./node_modules/ol/renderer/webgl/map.js","webpack:///./node_modules/ol/renderer/webgl/tilelayershader.js","webpack:///./node_modules/ol/renderer/webgl/tilelayershader/locations.js","webpack:///./node_modules/ol/renderer/webgl/tilelayer.js","webpack:///./node_modules/ol/renderer/webgl/vectorlayer.js","webpack:///./node_modules/ol/map.js","webpack:///./node_modules/ol/format/feature.js","webpack:///./node_modules/quickselect/quickselect.js"],"names":["_ol_","ASSUME_TOUCH","DEFAULT_MAX_ZOOM","DEFAULT_MIN_ZOOM","DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD","DEFAULT_TILE_SIZE","DEFAULT_WMS_VERSION","ENABLE_CANVAS","ENABLE_PROJ4JS","ENABLE_RASTER_REPROJECTION","ENABLE_WEBGL","DEBUG_WEBGL","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","MOUSEWHEELZOOM_MAXDELTA","OVERVIEWMAP_MAX_RATIO","OVERVIEWMAP_MIN_RATIO","RASTER_REPROJECTION_MAX_SOURCE_TILES","RASTER_REPROJECTION_MAX_SUBDIVISION","RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH","SIMPLIFY_TOLERANCE","WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK","VERSION","WEBGL_MAX_TEXTURE_SIZE","WEBGL_EXTENSIONS","inherits","childCtor","parentCtor","prototype","Object","create","constructor","nullFunction","getUid","obj","ol_uid","uidCounter_","__webpack_exports__","_ol_extent_","boundingExtent","coordinates","extent","createEmpty","i","ii","length","extendCoordinate","boundingExtentXYs_","xs","ys","opt_extent","minX","Math","min","apply","minY","maxX","max","maxY","createOrUpdate","buffer","value","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","_extent_relationship_js__WEBPACK_IMPORTED_MODULE_2__","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","equals","extend","extendXY","forEachCorner","callback","opt_this","val","call","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","_extent_corner_js__WEBPACK_IMPORTED_MODULE_1__","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","_ol_events_","bindListener_","listenerObj","boundListener","evt","listener","bindTo","target","callOnce","unlistenByKey","findListener_","listeners","opt_setDeleteIndex","deleteIndex","getListeners","type","listenerMap","ol_lm","undefined","getListenerMap_","removeListeners_","removeEventListener","_obj_js__WEBPACK_IMPORTED_MODULE_0__","clear","keys","listen","opt_once","addEventListener","push","listenOnce","unlisten","key","indexOf","splice","unlistenAll","_ol_transform_","tmp_","Array","reset","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","a","b","c","d","e","f","setFromArray","rotate","angle","scale","translate","compose","dx1","dy1","sx","sy","dx2","dy2","invert","det","determinant","mat","_ol_webgl_","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS_","getContext","canvas","opt_attributes","context","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","_ol_render_canvas_","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","_structs_lrucache_js__WEBPACK_IMPORTED_MODULE_3__","checkedFonts_","measureContext_","textHeights_","checkFont","interval","referenceWidth","retries","checked","font","text","isAvailable","fontFamily","getMeasureContext","measureText","width","available","check","done","_obj_js__WEBPACK_IMPORTED_MODULE_2__","window","clearInterval","fontSpec","fontFamilies","_css_js__WEBPACK_IMPORTED_MODULE_0__","getFontFamilies","setInterval","_dom_js__WEBPACK_IMPORTED_MODULE_1__","createCanvasContext2D","measureTextHeight","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","measureContext","rotateAtOffset","offsetX","offsetY","resetTransform_","_transform_js__WEBPACK_IMPORTED_MODULE_4__","drawImage","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","CHANGE","CLEAR","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","IDLE","LOADING","LOADED","EMPTY","ABORT","_ol_math_","clamp","cosh","exp","roundUpToPowerOfTwo","pow","ceil","log","LN2","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","n","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","l","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","_ol_obj_","assign","var_sources","TypeError","output","arguments","source","hasOwnProperty","object","property","getValues","values","_ol_array_","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","find","func","arr1","arr2","len1","stableSort","compareFnc","index","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","_ol_asserts_","assertion","errorCode","_assertionerror_js__WEBPACK_IMPORTED_MODULE_0__","ANIMATING","INTERACTING","_ol_dom_","opt_width","opt_height","outerWidth","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","_ol_Sphere_","radius","this","geodesicArea","getArea_","haversineDistance","getDistance_","distance","bearing","lat1","math","lon1","dByR","lat","asin","lon","atan2","DEFAULT_RADIUS","getLength","geometry","opt_options","coords","jj","options","projection","getType","geometrytype","getCoordinates","getLength_","geometries","getGeometries","Error","lat2","deltaLatBy2","deltaLonBy2","sqrt","len","sphere","_ol_proj_proj4_","cache_","proj4","get","proj_proj4","_ol_proj_Projection_","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","ol","proj4js","def","defs","axis","to_meter","units","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","proj_units","METERS_PER_UNIT","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","proj_projection","_ol_proj_EPSG3857_","Projection_","METERS","EXTENT","WORLD_EXTENT","point","RADIUS","HALF_SIZE","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg3857","_ol_proj_EPSG4326_","opt_axisOrientation","DEGREES","epsg4326","_ol_proj_projections_","add","proj_projections","_ol_proj_transforms_","destination","sourceCode","destinationCode","transforms","proj_transforms","_ol_proj_","SPHERE_","setProj4","opt_units","pointResolution","getter","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","forEach","cloneTransform","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","addProjection","clearAllProjections","createProjection","defaultCode","addCoordinateTransforms","forward","inverse","sourceProj","destProj","createTransformFromCoordinateTransform","fromLonLat","opt_projection","toLonLat","lonLat","projectionLike","equivalent","equalUnits","getTransform","sourceProjection","destinationProjection","sourceDef","destinationDef","proj4Transform","identityTransform","transformExtent","ol_extent","transformWithProjections","addCommon","_ol_functions_","TRUE","FALSE","_ol_Object_","opt_values","_observable_js__WEBPACK_IMPORTED_MODULE_2__","_index_js__WEBPACK_IMPORTED_MODULE_0__","values_","setProperties","changeEventTypeCache_","getChangeEventType","getKeys","getProperties","_obj_js__WEBPACK_IMPORTED_MODULE_4__","notify","oldValue","eventType","dispatchEvent","Event","_objecteventtype_js__WEBPACK_IMPORTED_MODULE_1__","PROPERTYCHANGE","opt_silent","unset","_events_event_js__WEBPACK_IMPORTED_MODULE_3__","_ol_MapBrowserEventType_","SINGLECLICK","_events_eventtype_js__WEBPACK_IMPORTED_MODULE_0__","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_ol_has_","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","CANVAS","setLineDash","DEVICE_ORIENTATION","GEOLOCATION","TOUCH","POINTER","MSPOINTER","WEBGL","textureSize","hasWebGL","extensions","gl","_webgl_js__WEBPACK_IMPORTED_MODULE_1__","failIfMajorPerformanceCaveat","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","_ol_events_Event_","propagationStopped","preventDefault","stopPropagation","_ol_geom_flat_transform_","transform2D","opt_dest","dest","anchor","anchorX","anchorY","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","_events_event_js__WEBPACK_IMPORTED_MODULE_4__","__webpack_require__","_ol_Collection_","opt_array","_object_js__WEBPACK_IMPORTED_MODULE_3__","unique_","unique","array_","assertUnique_","updateLength_","pop","fn","bind","array","getArray","item","Property_","LENGTH","insertAt","elem","_collectioneventtype_js__WEBPACK_IMPORTED_MODULE_2__","ADD","removeAt","prev","REMOVE","setAt","opt_except","_assertionerror_js__WEBPACK_IMPORTED_MODULE_1__","opt_element","XY","XYZ","XYM","XYZM","IMAGE","TILE","VECTOR_TILE","VECTOR","_ol_easing_","easeIn","easeOut","inAndOut","linear","upAndDown","_ol_events_EventTarget_","_disposable_js__WEBPACK_IMPORTED_MODULE_1__","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","disposeInternal","_events_js__WEBPACK_IMPORTED_MODULE_2__","hasListener","opt_type","_ol_proj_Units_","FEET","PIXELS","TILE_PIXELS","USFEET","_ol_css_","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","cache","family","split","_ol_layer_Layer_","baseOptions","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_layer_base_js__WEBPACK_IMPORTED_MODULE_4__","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","map","setMap","_events_js__WEBPACK_IMPORTED_MODULE_0__","_layer_property_js__WEBPACK_IMPORTED_MODULE_5__","handleSourcePropertyChange_","setSource","_index_js__WEBPACK_IMPORTED_MODULE_2__","visibleAtResolution","layerState","visible","minResolution","maxResolution","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","_source_state_js__WEBPACK_IMPORTED_MODULE_8__","UNDEFINED","handleSourceChange_","changed","_events_eventtype_js__WEBPACK_IMPORTED_MODULE_1__","_render_eventtype_js__WEBPACK_IMPORTED_MODULE_7__","PRECOMPOSE","managed","zIndex","frameState","layerStatesArray","layerStates","render","_ol_color_","HEX_COLOR_RE_","NAMED_COLOR_RE_","asArray","color","fromString","asString","toString","fromNamed","rgb","cacheSize","s","fromStringInternal_","g","parts","exec","hasAlpha","substr","Number","normalize","opt_color","result","_math_js__WEBPACK_IMPORTED_MODULE_1__","POSTCOMPOSE","RENDER","_ol_colorlike_","asColorLike","isColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","CanvasPattern","CanvasGradient","_ol_tilecoord_","z","opt_tileCoord","getKeyZXY","getKey","tileCoord","fromKey","hash","quadKey","charCode","digits","mask","String","fromCharCode","join","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","_ol_size_","opt_size","hasArea","ratio","toSize","READY","_ol_geom_SimpleGeometry_","_geom_geometry_js__WEBPACK_IMPORTED_MODULE_3__","layout","_geom_geometrylayout_js__WEBPACK_IMPORTED_MODULE_4__","getLayoutForStride_","getStrideForLayout","_functions_js__WEBPACK_IMPORTED_MODULE_1__","computeExtent","_extent_js__WEBPACK_IMPORTED_MODULE_2__","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinatesInternal","setCoordinates","opt_layout","setLayout","nesting","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_5__","opt_sy","opt_anchor","simpleGeometry","_ol_string_","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","n2","string","_ol_coordinate_","delta","closestOnCircle","circle","getRadius","closestOnSegment","segment","along","createStringXY","opt_fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","floor","sec","charAt","format","template","replace","coordinate1","coordinate2","cosAngle","sinAngle","sub","coord1","coord2","squaredDistanceToSegment","toStringHDMS","_ol_geom_flat_contains_","linearRingContainsExtent","_extent_js__WEBPACK_IMPORTED_MODULE_0__","linearRingContainsXY","wn","linearRingsContainsXY","ends","linearRingssContainsXY","endss","_ol_TileRange_","contains","containsTileRange","_ol_tilegrid_TileGrid_","zoomFactor","minZoom","resolutions_","resolutions","asserts","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","tilerange","calculateTileRanges_","tmpTileCoord_","forEachTileCoord","zoom","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getOrigin","getResolution","getResolutions","getTileCoordChildTileRange","getTileRangeExtent","ol_size","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","tilecoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","fullTileRanges","tilegrid","_ol_tilegrid_","getForProjection","createForProjection","wrapX","projectionExtent","extentFromProjection","worldWidth","worldsAway","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","extent_corner","resolutionsFromExtent","createXYZ","proj","half","_ol_Disposable_","disposed_","dispose","_ol_geom_flat_reverse_","flat_reverse","_ol_geom_flat_orient_","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingss","_ol_RotationConstraint_","disable","none","createSnapToN","theta","createSnapToZero","opt_tolerance","tolerance","_math_js__WEBPACK_IMPORTED_MODULE_0__","_ol_MapBrowserPointerEvent_","pointerEvent","opt_dragging","opt_frameState","_mapbrowserevent_js__WEBPACK_IMPORTED_MODULE_1__","originalEvent","_ol_MapEvent_","_events_event_js__WEBPACK_IMPORTED_MODULE_1__","_ol_geom_flat_inflate_","opt_coordinates","coordinatess","opt_coordinatess","coordinatesss","opt_coordinatesss","_ol_structs_LRUCache_","opt_highWaterMark","_events_eventtarget_js__WEBPACK_IMPORTED_MODULE_2__","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","_events_eventtype_js__WEBPACK_IMPORTED_MODULE_3__","containsKey","entry","value_","key_","newer","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","older","peekLast","peekLastKey","peekFirstKey","prune","_ol_structs_RBush_","opt_maxEntries","rbush_","rbush__WEBPACK_IMPORTED_MODULE_1___default","items_","insert","load","extents","items","uid","update","bbox","getAll","all","getInExtent","search","forEach_","forEachInExtent","_obj_js__WEBPACK_IMPORTED_MODULE_3__","concat","rbush","_ol_style_Stroke_","color_","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","checksum_","getColor","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","exports","module","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","p","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","stack","_all","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","_ol_geom_flat_simplify_","lineString","highQuality","opt_simplifiedFlatCoordinates","simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckers","simplifiedEnds","douglasPeuckerss","simplifiedEndss","snap","round","quantize","quantizes","quantizess","_ol_geom_flat_area_","linearRing","twiceArea","linearRings","linearRingss","_ol_Attribution_","html_","html","tileRanges_","tileRanges","getHTML","intersectsAnyTileRange","zKey","testTileRange","extentTileRange","ol_attribution","_ol_source_Source_","projection_","attributions_","attributions2_","adaptAttributions_","attributions","logo_","logo","state_","state","wrapX_","attributionLike","attribution","forEachFeatureAtCoordinate","getAttributions","getAttributions2","getLogo","getProjection","getWrapX","refresh","setAttributions","setLogo","setState","_ol_source_Tile_","_source_source_js__WEBPACK_IMPORTED_MODULE_6__","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","_tilecache_js__WEBPACK_IMPORTED_MODULE_1__","tmpSize","tileOptions","transition","expireCache","usedTiles","getTileCacheForProjection","forEachLoadedTile","tile","tileCoordKey","loaded","covered","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","_tilestate_js__WEBPACK_IMPORTED_MODULE_2__","getGutter","setKey","getOpaque","getTile","pixelRatio","getTileGrid","getTileGridForProjection","_tilegrid_js__WEBPACK_IMPORTED_MODULE_8__","thisProj","_proj_js__WEBPACK_IMPORTED_MODULE_4__","getTilePixelRatio","getTilePixelSize","_size_js__WEBPACK_IMPORTED_MODULE_5__","getTileCoordForTileUrlFunction","useTile","_ol_layer_Base_","_object_js__WEBPACK_IMPORTED_MODULE_1__","properties","_layer_property_js__WEBPACK_IMPORTED_MODULE_2__","layer","_math_js__WEBPACK_IMPORTED_MODULE_3__","getOpacity","sourceState","getVisible","getZIndex","getMaxResolution","getMinResolution","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","POSTRENDER","MOVESTART","MOVEEND","_ol_Observable_","revision_","unByKey","_events_js__WEBPACK_IMPORTED_MODULE_1__","on","once","un","_ol_style_Image_","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","snapToPixel_","snapToPixel","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","thisArg","unlistenImageChange","style_image","_ol_style_RegularShape_","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getFill","getPoints","getRadius2","getAngle","getStroke","imagestate","imageSize","strokeStyle","strokeWidth","colorlike","has","renderOptions","dom","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","id","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","regularshape","_ol_style_Circle_","setRadius","_ol_style_Fill_","ol_color","style_fill","_ol_style_Style_","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","zIndex_","getGeometry","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","createFunction","styleFunction","styles","default_","defaultFunction","style_stroke","createDefaultEditing","white","blue","_ol_geom_flat_closest_","offset1","offset2","closestPoint","getMaxSquaredDelta","maxSquaredDelta","squaredDelta","getsMaxSquaredDelta","getssMaxSquaredDelta","getClosestPoint","maxDelta","isRing","minSquaredDistance","opt_tmpPoint","tmpPoint","NaN","getsClosestPoint","getssClosestPoint","closest","_ol_geom_flat_deflate_","opt_ends","opt_endss","deflate","_ol_geom_LinearRing_","simplegeometry","maxDelta_","maxDeltaRevision_","setFlatCoordinates","closestPointXY","flat_area","inflate","simplify","simplifiedLinearRing","geometrylayout","intersectsExtent","linearring","_ol_geom_Point_","_ol_geom_flat_interiorpoint_","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","interiorpoint","_ol_geom_flat_segments_","ret","point1","point2","segments","_ol_geom_flat_intersectsextent_","coordinatesExtent","lineStrings","intersectsextent","_ol_geom_Polygon_","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","orient","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","simplifiedPolygon","circular","opt_n","fromExtent","fromCircle","opt_sides","opt_angle","sides","arrayLength","makeRegular","startAngle","_ol_geom_Geometry_","extentRevision_","tmpTransform_","_transform_js__WEBPACK_IMPORTED_MODULE_7__","opt_closestPoint","intersectsCoordinate","_functions_js__WEBPACK_IMPORTED_MODULE_3__","tmpTransform","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_proj_units_js__WEBPACK_IMPORTED_MODULE_6__","inCoordinates","outCoordinates","pixelExtent","projectedExtent","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_ol_MapBrowserEvent_","browserEvent","_mapevent_js__WEBPACK_IMPORTED_MODULE_1__","pixel","getEventPixel","getCoordinateFromPixel","dragging","_ol_CenterConstraint_","createExtent","centerconstraint","_ol_ResolutionConstraint_","createSnapToResolutions","power","createSnapToPower","opt_maxLevel","oldLevel","newLevel","resolutionconstraint","viewproperty","CENTER","RESOLUTION","ROTATION","_ol_View_","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint_","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint_","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint_","constraints_","constrainResolution","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","viewhint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","constrainRotation","getConstraints","getHints","opt_hints","calculateExtent","getZoomForResolution","setMaxZoom","setMinZoom","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","setTimeout","centerOn","centerX","centerY","hint","defaultMaxResolution","defaultMinResolution","enableRotation","rotationconstraint","_ol_control_Control_","target_","map_","listenerKeys","setTarget","getMap","events","getOverlayContainerStopEvent","mapeventtype","getElementById","control","_ol_control_Attribution_","ulElement_","logoLi_","display","collapsed_","collapsed","collapsible_","collapsible","className","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","button","setAttribute","title","eventtype","handleClick_","cssClasses","css","renderedAttributions_","renderedVisible_","logoElements_","getSourceAttributions_","lookup","visibleAttributions","viewState","layer_layer","attributionGetter","mapEvent","updateElement_","innerHTML","classList","logos","insertLogos_","logoElement","logoKey","logoElements","logoValue","HTMLElement","Image","src","href","handleToggle_","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","_ol_control_Rotate_","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","view","getView","msTransform","webkitTransform","_ol_control_Zoom_","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","_ol_control_","defaults","controls","collection","zoomOptions","rotateOptions","attributionOptions","_ol_Tile_","eventtarget","interimTile","transition_","transitionStarts_","getInterimTile","tilestate","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","ol_tile","_ol_ImageTile_","crossOrigin","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getBlankImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillRect","imagetile","_ol_reproj_","calculateSourceResolution","targetProj","ol_proj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint_","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","p0","p1","p2","moveTo","clip","restore","reproj","_ol_reproj_Triangulation_","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_triangulation","_ol_reproj_Tile_","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","pixelRatio_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","reproj_tile","_ol_TileUrlFunction_","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","url","urls","match","startCharCode","charCodeAt","stopCharCode","stop","tileurlfunction","tileeventtype","TILELOADSTART","TILELOADEND","TILELOADERROR","_ol_source_UrlTile_","source_tile","tileUrlFunction","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","tileState","setTileLoadFunction","opt_key","pruneExceptNewestZ","urltile","_ol_source_TileImage_","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutterInternal","projKey","ol_tilegrid","tilecache","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","imageTile","tileimage","_ol_source_XYZ_","xyz","_ol_source_OSM_","ATTRIBUTION","_ol_Kinetic_","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","getDistance","ol_kinetic","ACTIVE","_ol_interaction_Interaction_","setActive","handleEvent","getActive","active","pan","opt_duration","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","interaction","_ol_interaction_DoubleClickZoom_","delta_","mapBrowserEvent","stopEvent","mapbrowsereventtype","shiftKey","doubleclickzoom","_ol_events_condition_","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","always","functions","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","events_condition","_ol_interaction_Pointer_","handleDownEvent_","handleDownEvent","handleDragEvent_","handleDragEvent","handleMoveEvent_","handleMoveEvent","handleUpEvent_","handleUpEvent","handlingDownUpSequence","trackedPointers_","targetPointers","centroid","pointerEvents","clientX","clientY","isPointerDraggingEvent_","updateTrackedPointers_","pointerId","mapbrowserpointerevent","handledUp","handled","shouldStopEvent","pointer","_ol_interaction_DragPan_","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","ol_coordinate","centerpx","getPixelFromCoordinate","dragpan","_ol_interaction_DragRotate_","lastAngle_","dragrotate","_ol_render_Box_","element_","startPixel_","endPixel_","disposable","startPixel","endPixel","top","getOverlayContainer","setPixels","createOrUpdateGeometry","box","_ol_interaction_DragBox_","box_","minArea_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","EventType_","BOXDRAG","onBoxEnd","BOXEND","BOXSTART","events_event","dragbox","_ol_interaction_DragZoom_","out_","out","mapExtent","boxPixelExtent","factor","dragzoom","keycode","UP","DOWN","_ol_interaction_KeyboardPan_","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","keyboardpan","_ol_interaction_KeyboardZoom_","keyboardzoom","_ol_interaction_MouseWheelZoom_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","Mode_","TRACKPAD","clearTimeout","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","mousewheelzoom","_ol_interaction_PinchRotate_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getViewport","getBoundingClientRect","pinchrotate","_ol_interaction_PinchZoom_","lastDistance_","lastScaleDelta_","scaleDelta","pinchzoom","_ol_interaction_","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_ol_TileCache_","_structs_lrucache_js__WEBPACK_IMPORTED_MODULE_1__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","_ol_AssertionError_","message","name","_ol_layer_Vector_","renderBuffer","updateWhileAnimating","updateWhileInteracting","_layer_layer_js__WEBPACK_IMPORTED_MODULE_2__","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","_layer_vectorrendertype_js__WEBPACK_IMPORTED_MODULE_3__","_layertype_js__WEBPACK_IMPORTED_MODULE_1__","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","RENDER_ORDER","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","_style_style_js__WEBPACK_IMPORTED_MODULE_5__","getRenderMode","tileproperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_ol_layer_Tile_","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","layertype","getPreload","getUseInterimTilesOnError","formattype","JSON","TEXT","XML","_ol_xml_","DOCUMENT","implementation","createDocument","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","Document","getAttributeNS","setAttributeNS","parse","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","ol_array","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","_ol_featureloader_","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","features","dataProjection","addFeatures","featureloader","_ol_loadingstrategy_","loadingstrategy","vectoreventtype","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","_ol_source_Vector_","source_source","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","ol_collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","objecteventtype","valid","getId","newFeatures","geometryFeatures","modifyingCollection","collectioneventtype","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","ol_obj","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","opt_feature","_ol_pointer_EventSource_","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","eventsource","_ol_pointer_MouseSource_","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","DEDUP_DIST","isEventSimulatedFromTouch_","inEvent","lts","prepareEvent","cloneEvent","pd","cancel","down","move","up","cleanupMouse","enterOver","leaveOut","mousesource","_ol_pointer_MsSource_","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","cleanup","makeEvent","mssource","_ol_pointer_NativeSource_","pointerdown","pointerDown","pointermove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","nativesource","_ol_pointer_PointerEvent_","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointerevent","_ol_pointer_TouchSource_","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","DEDUP_TIMEOUT","CLICK_COUNT_TIMEOUT","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","changedTouches","findTouch_","touchList","searchId","vacuumTouches_","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","touchsource","_ol_pointer_PointerEventHandler_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","CLONE_PROPS","fireEvent","contains_","container","contained","inType","wrapMouseEvent","pointereventhandler","_ol_MapBrowserEventHandler_","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","mapbrowsereventhandler","mapproperty","LAYERGROUP","SIZE","TARGET","VIEW","_ol_structs_PriorityQueue_","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","priorityqueue","_ol_TileQueue_","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","events_eventtype","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","tilequeue","_ol_layer_Group_","layers","base","layersListenerKeys_","listenerKeys_","LAYERS","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","source_state","layer_group","plugintype","MAP_RENDERER","LAYER_RENDERER","_ol_plugins_","mapRendererPlugins_","getMapRendererPlugins","layerRendererPlugins_","getLayerRendererPlugins","register","plugin","registerMultiple","plugins","ol_plugins","renderer_type","_ol_PluggableMap_","optionsInternal","createOptionsInternal","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","logos_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","ol_transform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","overlays_","overlays","overlayIdIndex_","mapRendererPlugin","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","hitTolerance","layerFilter","getFeaturesAtPixel","forEachLayerAtPixel","opt_layerFilter","opt_this2","thisArg2","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","eventPosition","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapbrowserevent","interactionsArray","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","layerGroup","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","pixelResolution","skippedFeatureUids","renderFrame","mapevent","setLayerGroup","setSize","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","DEFAULT_RENDERER_TYPES","LOGO_URL","rendererTypes","ol_view","mapRendererPlugins","outer","rendererType","candidate","pluggablemap","_ol_ImageBase_","getPixelRatio","imagebase","_ol_ImageCanvas_","opt_loader","error_","getError","handleLoad_","err","imagecanvas","_ol_render_Event_","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","render_event","_ol_render_VectorContext_","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","vectorcontext","_ol_render_canvas_Immediate_","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","flat_transform","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","render_canvas","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","immediate","_ol_renderer_Layer_","observable","layer_","createLoadedTileFinder","tiles","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","updateLogos","updateUsedTiles","manageTilePyramid","currentZ","opt_tileCallback","renderer_layer","_ol_renderer_canvas_Layer_","renderedResolution","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","composeEvent","forEachLayerAtCoordinate","postCompose","render_eventtype","preCompose","dispatchRenderEvent","composeFrame","prepareFrame","canvas_layer","_ol_renderer_canvas_IntermediateCanvas_","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","clearRect","imageData","getImageData","intermediatecanvas","_ol_renderer_canvas_ImageLayer_","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","vectorrendertype","mapRenderer","candidates","setVectorRenderer","viewCenter","viewResolution","imageSource","renderedExtent","vectorRenderer","imageFrameState","skippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","imagelayer","_ol_style_IconImageCache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","iconimagecache","_ol_style_","iconImageCache","ol_style","_ol_renderer_Map_","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","expireIconCache_","translatedCoordinate","layerRenderer","getLayerRenderer","layerKey","layerRendererPlugins","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","sortByZIndex","state1","state2","renderer_map","_ol_renderer_canvas_Map_","insertBefore","childNodes","numLayers","canvas_map","_ol_renderer_canvas_TileLayer_","tileLayer","oversampling_","renderedExtent_","renderedRevision","renderedTiles","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","sourceRevision","oversampling","tilesToDrawByZ","findLoadedTiles","tmpTileRange","newTiles","childTileRange","animatingOrInteracting","tilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","drawTileImage","alphaChanged","tilelayer","_ol_render_ReplayGroup_","getReplay","replayType","replaygroup","replaytype","DEFAULT","_ol_geom_flat_length_","perimeter","flat_length","_ol_geom_flat_textpath_","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","unshift","textpath","canvas_instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","_ol_render_replay_","ORDER","TEXT_ALIGN","render_replay","_ol_render_canvas_Replay_","maxExtent","declutterTree","tmpExtent_","maxLineWidth","fillOrigin_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","applyFill","fillExtent","applyStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","canvas_replay","_ol_render_canvas_ImageReplay_","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","imagereplay","_ol_render_canvas_LineStringReplay_","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","linestringreplay","_ol_render_canvas_PolygonReplay_","drawFlatCoordinatess_","numEnds","beginPathInstruction","closePathInstruction","setFillStrokeStyles_","circleInstruction","polygonreplay","_ol_geom_flat_straightchunk_","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","straightchunk","textplacement","LINE","_ol_render_canvas_TextReplay_","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","measureTextWidths","lines","widths","currentWidth","numLines","geometryType","placement","flatEnd","flatOffset","o","oo","drawChars_","drawTextImage_","align","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","textreplay","_ol_render_canvas_ReplayGroup_","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache_","0","fillCircleArrayRowToMiddle_","getCircleArray_","arraySize","error","replayDeclutter","declutterReplays","zz","replayData","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","replayKey","hitExtent","contextSize","declutteredFeatures","zIndexKey","Constructor","BATCH_CONSTRUCTORS_","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","Circle","Default","LineString","Polygon","Text","canvas_replaygroup","_ol_renderer_vector_","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderCircleGeometry_","replayGroup","circleReplay","textReplay","renderFeature","loading","renderFeature_","renderGeometry_","geometryRenderer","GEOMETRY_RENDERERS_","renderGeometryCollectionGeometry_","renderLineStringGeometry_","lineStringReplay","renderMultiLineStringGeometry_","renderMultiPolygonGeometry_","polygonReplay","renderPointGeometry_","imageReplay","renderMultiPointGeometry_","renderPolygonGeometry_","Point","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","vector","_ol_renderer_canvas_VectorLayer_","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","vectorlayer","vectortilerendertype","HYBRID","_ol_renderer_canvas_VectorTileLayer_","renderedLayerRevision_","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","layerRevision","createReplayGroup_","revision","replayState","getReplayState","renderedRenderOrder","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","vectorImageTile","renderTileImage_","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","pixelScale","vectortilelayer","_ol_webgl_Shader_","source_","isAnimated","webgl_shader","_ol_webgl_Fragment_","webgl","fragment","_ol_webgl_Vertex_","vertex","_ol_render_webgl_circlereplay_defaultshader_","defaultshader","defaultshader_locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","_ol_vec_Mat4_","fromTransform","mat4","_ol_render_webgl_Replay_","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","webgl_replay","_ol_render_webgl_","triangleIsCounterClockwise","EPSILON","render_webgl","_ol_webgl_Buffer_","opt_arr","opt_usage","arr_","usage_","Usage_","getUsage","webgl_buffer","_ol_render_webgl_CircleReplay_","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","fragmentShader","vertexShader","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","circlereplay","_ol_render_webgl_texturereplay_defaultshader_","texturereplay_defaultshader","texturereplay_defaultshader_locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","contexteventtype","LOST","RESTORED","_ol_webgl_Context_","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","buf","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","texture","createEmptyTexture","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","bindTexture","createTexture_","opt_wrapS","opt_wrapT","createTexture","texParameteri","texImage2D","webgl_context","_ol_render_webgl_TextureReplay_","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","texturereplay","_ol_render_webgl_ImageReplay_","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","webgl_imagereplay","_ol_geom_flat_topology_","lineStringIsClosed","topology","_ol_render_webgl_linestringreplay_defaultshader_","linestringreplay_defaultshader","linestringreplay_defaultshader_locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","_ol_render_webgl_LineStringReplay_","startCoords","sign","lastSign","addVertices_","Instruction_","BEGIN_LINE_CAP","BEGIN_LINE","END_LINE","END_LINE_CAP","BEVEL_FIRST","BEVEL_SECOND","MITER_BOTTOM","MITER_TOP","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","ROUND","webgl_linestringreplay","_ol_render_webgl_polygonreplay_defaultshader_","polygonreplay_defaultshader","polygonreplay_defaultshader_locations","_ol_structs_LinkedList_","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","linkedlist","_ol_render_webgl_PolygonReplay_","outerRing","rtree","structs_rbush","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","dist","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holeFlatCoords","holes","lineDeleter","nullStrokeStyle","webgl_polygonreplay","_ol_style_Atlas_","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_atlas","_ol_style_AtlasManager_","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","atlasmanager","_ol_render_webgl_TextReplay_","measureCanvas_","textAlign_","textBaseline_","offsetX_","offsetY_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","str","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","params","calculateHash_","webgl_textreplay","_ol_render_webgl_ReplayGroup_","replayHitDetection_","HIT_DETECTION_SIZE_","Uint8Array","readPixels","webgl_replaygroup","_ol_render_webgl_Immediate_","center_","imageStyle_","fillStyle_","strokeStyle_","textStyle_","webgl_immediate","_ol_renderer_webgl_defaultmapshader_","defaultmapshader","defaultmapshader_locations","u_texCoordMatrix","u_texture","_ol_renderer_webgl_Layer_","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","webgl_layer","_ol_renderer_webgl_ImageLayer_","hitTransformationMatrix_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapSize","mapCoordTransform","projectionMatrixInv","webgl_imagelayer","_ol_renderer_webgl_Map_","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","depth","preserveDrawingBuffer","stencil","textureCache_","lrucache","tileTextureQueue_","loadNextTileTexture_","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","hasFeature","webgl_map","_ol_renderer_webgl_tilelayershader_","tilelayershader","tilelayershader_locations","u_tileOffset","_ol_renderer_webgl_TileLayer_","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","framebufferExtent","tilePixelResolution","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","webgl_tilelayer","_ol_renderer_webgl_VectorLayer_","layerState_","scissor","webgl_vectorlayer","_ol_Map_","_ol_format_Feature_","defaultDataProjection","defaultFeatureProjection","getReadOptions","adaptOptions","_obj_js__WEBPACK_IMPORTED_MODULE_1__","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformWithOptions","write","transformed","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_geom_geometry_js__WEBPACK_IMPORTED_MODULE_0__","decimals","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory"],"mappings":"sFAAA,IAAAA,GAaAC,cAAA,EAQAC,iBAAA,GAMAC,iBAAA,EAOAC,4CAAA,GAMAC,kBAAA,IAMAC,oBAAA,QAQAC,eAAA,EAOAC,gBAAA,EAOAC,4BAAA,EAQAC,cAAA,EAQAC,aAAA,EAOAC,mBAAA,IAQAC,gBAAA,EAMAC,wBAAA,EAOAC,sBAAA,IAOAC,sBAAA,GAaAC,qCAAA,IAUAC,oCAAA,GAYAC,uCAAA,IAMAC,mBAAA,GAMAC,oCAAA,KAMAC,QAAA,UASAtB,EAAAuB,uBAQAvB,EAAAwB,iBAyBAxB,EAAAyB,SAAA,SAAAC,EAAAC,GACAD,EAAAE,UAAAC,OAAAC,OAAAH,EAAAC,WACAF,EAAAE,UAAAG,YAAAL,GASA1B,EAAAgC,aAAA,aAWAhC,EAAAiC,OAAA,SAAAC,GACA,OAAAA,EAAAC,SACAD,EAAAC,SAAAnC,EAAAoC,cASApC,EAAAoC,YAAA,EACAC,EAAA,8DCrPAC,GAUAC,eAAA,SAAAC,GAEA,IADA,IAAAC,EAAAH,EAAAI,cACAC,EAAA,EAAAC,EAAAJ,EAAAK,OAA0CF,EAAAC,IAAQD,EAClDL,EAAAQ,iBAAAL,EAAAD,EAAAG,IAEA,OAAAF,GAWAM,mBAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAC,KAAAC,IAAAC,MAAA,KAAAN,GACAO,EAAAH,KAAAC,IAAAC,MAAA,KAAAL,GACAO,EAAAJ,KAAAK,IAAAH,MAAA,KAAAN,GACAU,EAAAN,KAAAK,IAAAH,MAAA,KAAAL,GACA,OAAAX,EAAAqB,eAAAR,EAAAI,EAAAC,EAAAE,EAAAR,IAYAU,OAAA,SAAAnB,EAAAoB,EAAAX,GACA,OAAAA,GACAA,EAAA,GAAAT,EAAA,GAAAoB,EACAX,EAAA,GAAAT,EAAA,GAAAoB,EACAX,EAAA,GAAAT,EAAA,GAAAoB,EACAX,EAAA,GAAAT,EAAA,GAAAoB,EACAX,IAGAT,EAAA,GAAAoB,EACApB,EAAA,GAAAoB,EACApB,EAAA,GAAAoB,EACApB,EAAA,GAAAoB,IAaAC,MAAA,SAAArB,EAAAS,GACA,OAAAA,GACAA,EAAA,GAAAT,EAAA,GACAS,EAAA,GAAAT,EAAA,GACAS,EAAA,GAAAT,EAAA,GACAS,EAAA,GAAAT,EAAA,GACAS,GAEAT,EAAAsB,SAWAC,yBAAA,SAAAvB,EAAAwB,EAAAC,GACA,IAAAC,EAAAC,EAeA,OAbAD,EADAF,EAAAxB,EAAA,GACAA,EAAA,GAAAwB,EACGxB,EAAA,GAAAwB,EACHA,EAAAxB,EAAA,GAEA,GASA0B,GANAC,EADAF,EAAAzB,EAAA,GACAA,EAAA,GAAAyB,EACGzB,EAAA,GAAAyB,EACHA,EAAAzB,EAAA,GAEA,GAEA2B,GAYAC,mBAAA,SAAA5B,EAAA6B,GACA,OAAAhC,EAAAiC,WAAA9B,EAAA6B,EAAA,GAAAA,EAAA,KAgBAE,eAAA,SAAAC,EAAAC,GACA,OAAAD,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IACAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IAaAF,WAAA,SAAA9B,EAAAwB,EAAAC,GACA,OAAAzB,EAAA,IAAAwB,MAAAxB,EAAA,IAAAA,EAAA,IAAAyB,MAAAzB,EAAA,IAWAkC,uBAAA,SAAAlC,EAAA6B,GACA,IAAAnB,EAAAV,EAAA,GACAc,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAiB,EAAAjB,EAAA,GACAwB,EAAAK,EAAA,GACAJ,EAAAI,EAAA,GACAM,EAAAC,EAAA,EAAAC,QAcA,OAbAb,EAAAd,EACAyB,GAAAC,EAAA,EAAAE,KACGd,EAAAT,IACHoB,GAAAC,EAAA,EAAAG,OAEAd,EAAAX,EACAqB,GAAAC,EAAA,EAAAI,MACGf,EAAAR,IACHkB,GAAAC,EAAA,EAAAK,OAEAN,IAAAC,EAAA,EAAAC,UACAF,EAAAC,EAAA,EAAAM,cAEAP,GASAlC,YAAA,WACA,OAAA0C,oBAaAzB,eAAA,SAAAR,EAAAI,EAAAC,EAAAE,EAAAR,GACA,OAAAA,GACAA,EAAA,GAAAC,EACAD,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAAQ,EACAR,IAEAC,EAAAI,EAAAC,EAAAE,IAUA2B,oBAAA,SAAAnC,GACA,OAAAZ,EAAAqB,eACAyB,kBAAAlC,IASAoC,6BAAA,SAAAhB,EAAApB,GACA,IAAAe,EAAAK,EAAA,GACAJ,EAAAI,EAAA,GACA,OAAAhC,EAAAqB,eAAAM,EAAAC,EAAAD,EAAAC,EAAAhB,IASAqC,8BAAA,SAAA/C,EAAAU,GACA,IAAAT,EAAAH,EAAA+C,oBAAAnC,GACA,OAAAZ,EAAAkD,kBAAA/C,EAAAD,IAYAiD,kCAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA3C,GACA,IAAAT,EAAAH,EAAA+C,oBAAAnC,GACA,OAAAZ,EAAAwD,sBACArD,EAAAiD,EAAAC,EAAAC,EAAAC,IASAE,wBAAA,SAAAC,EAAA9C,GACA,IAAAT,EAAAH,EAAA+C,oBAAAnC,GACA,OAAAZ,EAAA2D,YAAAxD,EAAAuD,IAWAE,OAAA,SAAAzB,EAAAC,GACA,OAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAWAyB,OAAA,SAAA1B,EAAAC,GAaA,OAZAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAD,GAQA3B,iBAAA,SAAAL,EAAA6B,GACAA,EAAA,GAAA7B,EAAA,KACAA,EAAA,GAAA6B,EAAA,IAEAA,EAAA,GAAA7B,EAAA,KACAA,EAAA,GAAA6B,EAAA,IAEAA,EAAA,GAAA7B,EAAA,KACAA,EAAA,GAAA6B,EAAA,IAEAA,EAAA,GAAA7B,EAAA,KACAA,EAAA,GAAA6B,EAAA,KAUAkB,kBAAA,SAAA/C,EAAAD,GACA,IAAAG,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAJ,EAAAK,OAAsCF,EAAAC,IAAQD,EAC9CL,EAAAQ,iBAAAL,EAAAD,EAAAG,IAEA,OAAAF,GAYAqD,sBAAA,SAAArD,EAAAiD,EAAAC,EAAAC,EAAAC,GACA,KAAQF,EAAAC,EAAcD,GAAAE,EACtBvD,EAAA8D,SACA3D,EAAAiD,EAAAC,GAAAD,EAAAC,EAAA,IAEA,OAAAlD,GASAwD,YAAA,SAAAxD,EAAAuD,GACA,IAAArD,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAoD,EAAAnD,OAAgCF,EAAAC,IAAQD,EACxCL,EAAAkD,kBAAA/C,EAAAuD,EAAArD,IAEA,OAAAF,GASA2D,SAAA,SAAA3D,EAAAwB,EAAAC,GACAzB,EAAA,GAAAW,KAAAC,IAAAZ,EAAA,GAAAwB,GACAxB,EAAA,GAAAW,KAAAC,IAAAZ,EAAA,GAAAyB,GACAzB,EAAA,GAAAW,KAAAK,IAAAhB,EAAA,GAAAwB,GACAxB,EAAA,GAAAW,KAAAK,IAAAhB,EAAA,GAAAyB,IAcAmC,cAAA,SAAA5D,EAAA6D,EAAAC,GACA,IAAAC,EAEA,OADAA,EAAAF,EAAAG,KAAAF,EAAAjE,EAAAoE,cAAAjE,KAEA+D,GAEAA,EAAAF,EAAAG,KAAAF,EAAAjE,EAAAqE,eAAAlE,KAEA+D,GAEAA,EAAAF,EAAAG,KAAAF,EAAAjE,EAAAsE,YAAAnE,KAEA+D,GAEAA,EAAAF,EAAAG,KAAAF,EAAAjE,EAAAuE,WAAApE,OAIA,GAUAqE,QAAA,SAAArE,GACA,IAAAsE,EAAA,EAIA,OAHAzE,EAAA0E,QAAAvE,KACAsE,EAAAzE,EAAA2E,SAAAxE,GAAAH,EAAA4E,UAAAzE,IAEAsE,GAUAL,cAAA,SAAAjE,GACA,OAAAA,EAAA,GAAAA,EAAA,KAUAkE,eAAA,SAAAlE,GACA,OAAAA,EAAA,GAAAA,EAAA,KAUA0E,UAAA,SAAA1E,GACA,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,QAUA2E,UAAA,SAAA3E,EAAA4E,GACA,IAAA/C,EAYA,OAXA+C,IAAAC,EAAA,EAAAC,YACAjD,EAAAhC,EAAAoE,cAAAjE,GACG4E,IAAAC,EAAA,EAAAE,aACHlD,EAAAhC,EAAAqE,eAAAlE,GACG4E,IAAAC,EAAA,EAAAG,SACHnD,EAAAhC,EAAAuE,WAAApE,GACG4E,IAAAC,EAAA,EAAAI,UACHpD,EAAAhC,EAAAsE,YAAAnE,GAEAkF,EAAA,EAAAC,QAAA,MAEmC,GASnCC,gBAAA,SAAApD,EAAAC,GACA,IAAAvB,EAAAC,KAAAC,IAAAoB,EAAA,GAAAC,EAAA,IACAnB,EAAAH,KAAAC,IAAAoB,EAAA,GAAAC,EAAA,IAGA,OAFAtB,KAAAK,IAAAgB,EAAA,GAAAC,EAAA,IAEAvB,IADAC,KAAAK,IAAAgB,EAAA,GAAAC,EAAA,IACAnB,IAYAuE,kBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAhF,GACA,IAAAiB,EAAA6D,EAAAE,EAAA,KACA9D,EAAA4D,EAAAE,EAAA,KACAC,EAAA/E,KAAAgF,IAAAH,GACAI,EAAAjF,KAAAkF,IAAAL,GACAM,EAAApE,EAAAgE,EACAK,EAAArE,EAAAkE,EACAI,EAAArE,EAAA+D,EACAO,EAAAtE,EAAAiE,EACApE,EAAA8D,EAAA,GACA7D,EAAA6D,EAAA,GACAY,EAAA1E,EAAAsE,EAAAG,EACAE,EAAA3E,EAAAsE,EAAAG,EACAG,EAAA5E,EAAAsE,EAAAG,EACAI,EAAA7E,EAAAsE,EAAAG,EACAK,EAAA7E,EAAAsE,EAAAC,EACAO,EAAA9E,EAAAsE,EAAAC,EACAQ,EAAA/E,EAAAsE,EAAAC,EACAS,EAAAhF,EAAAsE,EAAAC,EACA,OAAAnG,EAAAqB,eACAP,KAAAC,IAAAsF,EAAAC,EAAAC,EAAAC,GAAA1F,KAAAC,IAAA0F,EAAAC,EAAAC,EAAAC,GACA9F,KAAAK,IAAAkF,EAAAC,EAAAC,EAAAC,GAAA1F,KAAAK,IAAAsF,EAAAC,EAAAC,EAAAC,GACAhG,IAUAgE,UAAA,SAAAzE,GACA,OAAAA,EAAA,GAAAA,EAAA,IASA0G,oBAAA,SAAA1E,EAAAC,GACA,IAAA0E,EAAA9G,EAAA+G,gBAAA5E,EAAAC,GACA,OAAApC,EAAAwE,QAAAsC,IAYAC,gBAAA,SAAA5E,EAAAC,EAAAxB,GACA,IAAAkG,EAAAlG,GAAAZ,EAAAI,cAuBA,OAtBAJ,EAAAgH,WAAA7E,EAAAC,KACAD,EAAA,GAAAC,EAAA,GACA0E,EAAA,GAAA3E,EAAA,GAEA2E,EAAA,GAAA1E,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACA0E,EAAA,GAAA3E,EAAA,GAEA2E,EAAA,GAAA1E,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACA0E,EAAA,GAAA3E,EAAA,GAEA2E,EAAA,GAAA1E,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACA0E,EAAA,GAAA3E,EAAA,GAEA2E,EAAA,GAAA1E,EAAA,IAGA0E,GAQAG,UAAA,SAAA9G,GACA,OAAAH,EAAA2E,SAAAxE,GAAAH,EAAA4E,UAAAzE,IAUA+G,QAAA,SAAA/G,GACA,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAUAoE,WAAA,SAAApE,GACA,OAAAA,EAAA,GAAAA,EAAA,KAUAmE,YAAA,SAAAnE,GACA,OAAAA,EAAA,GAAAA,EAAA,KAUAwE,SAAA,SAAAxE,GACA,OAAAA,EAAA,GAAAA,EAAA,IAWA6G,WAAA,SAAA7E,EAAAC,GACA,OAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAUAsC,QAAA,SAAAvE,GACA,OAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IASAgH,eAAA,SAAAhH,EAAAS,GACA,OAAAA,GACAA,EAAA,GAAAT,EAAA,GACAS,EAAA,GAAAT,EAAA,GACAS,EAAA,GAAAT,EAAA,GACAS,EAAA,GAAAT,EAAA,GACAS,GAEAT,GASAiH,gBAAA,SAAAjH,EAAAoB,GACA,IAAA8F,GAAAlH,EAAA,GAAAA,EAAA,OAAAoB,EAAA,GACA+F,GAAAnH,EAAA,GAAAA,EAAA,OAAAoB,EAAA,GACApB,EAAA,IAAAkH,EACAlH,EAAA,IAAAkH,EACAlH,EAAA,IAAAmH,EACAnH,EAAA,IAAAmH,GAYAC,kBAAA,SAAApH,EAAAqH,EAAAlE,GACA,IAAA0D,GAAA,EACAS,EAAAzH,EAAAqC,uBAAAlC,EAAAqH,GACAE,EAAA1H,EAAAqC,uBAAAlC,EAAAmD,GACA,GAAAmE,IAAAlF,EAAA,EAAAM,cACA6E,IAAAnF,EAAA,EAAAM,aACAmE,GAAA,MACG,CACH,IASArF,EAAAC,EATAf,EAAAV,EAAA,GACAc,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAiB,EAAAjB,EAAA,GACAwH,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAvE,EAAA,GACAwE,EAAAxE,EAAA,GACAyE,GAAAD,EAAAF,IAAAC,EAAAF,GAEAD,EAAAnF,EAAA,EAAAK,SACA6E,EAAAlF,EAAA,EAAAK,SAGAoE,GADArF,EAAAkG,GAAAC,EAAA1G,GAAA2G,IACAlH,GAAAc,GAAAT,GAEA8F,KAAAU,EAAAnF,EAAA,EAAAG,QACA+E,EAAAlF,EAAA,EAAAG,QAGAsE,GADApF,EAAAkG,GAAAD,EAAA3G,GAAA6G,IACA9G,GAAAW,GAAAR,GAEA4F,KAAAU,EAAAnF,EAAA,EAAAI,QACA8E,EAAAlF,EAAA,EAAAI,QAGAqE,GADArF,EAAAkG,GAAAC,EAAA7G,GAAA8G,IACAlH,GAAAc,GAAAT,GAEA8F,KAAAU,EAAAnF,EAAA,EAAAE,OACAgF,EAAAlF,EAAA,EAAAE,OAGAuE,GADApF,EAAAkG,GAAAD,EAAAhH,GAAAkH,IACA9G,GAAAW,GAAAR,GAIA,OAAA4F,GAaAgB,eAAA,SAAA7H,EAAA8H,EAAArH,GACA,IAAAV,GACAC,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IAEA8H,EAAA/H,IAAA,GACA,IAAAQ,GAAAR,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAS,GAAAT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,OAAAF,EAAAS,mBAAAC,EAAAC,EAAAC,KAEAb,EAAA,8CCtxBAmI,GAOAC,cAAA,SAAAC,GACA,IAAAC,EAAA,SAAAC,GACA,IAAAC,EAAAH,EAAAG,SACAC,EAAAJ,EAAAI,QAAAJ,EAAAK,OAIA,OAHAL,EAAAM,UACAR,EAAAS,cAAAP,GAEAG,EAAApE,KAAAqE,EAAAF,IAGA,OADAF,EAAAC,gBACAA,GAgBAO,cAAA,SAAAC,EAAAN,EAAAtE,EACA6E,GAEA,IADA,IAAAV,EACA/H,EAAA,EAAAC,EAAAuI,EAAAtI,OAAwCF,EAAAC,IAAQD,EAEhD,IADA+H,EAAAS,EAAAxI,IACAkI,cACAH,EAAAI,SAAAvE,EAIA,OAHA6E,IACAV,EAAAW,YAAA1I,GAEA+H,GAYAY,aAAA,SAAAP,EAAAQ,GACA,IAAAC,EAAAT,EAAAU,MACA,OAAAD,IAAAD,QAAAG,GAYAC,gBAAA,SAAAZ,GACA,IAAAS,EAAAT,EAAAU,MAIA,OAHAD,IACAA,EAAAT,EAAAU,UAEAD,GAYAI,iBAAA,SAAAb,EAAAQ,GACA,IAAAJ,EAAAX,EAAAc,aAAAP,EAAAQ,GACA,GAAAJ,EAAA,CACA,QAAAxI,EAAA,EAAAC,EAAAuI,EAAAtI,OAA0CF,EAAAC,IAAQD,EAClDoI,EAAAc,oBAAAN,EAAAJ,EAAAxI,GAAAgI,eACAmB,EAAA,EAAAC,MAAAZ,EAAAxI,IAEAwI,EAAAtI,OAAA,EACA,IAAA2I,EAAAT,EAAAU,MACAD,WACAA,EAAAD,GACA,IAAA1J,OAAAmK,KAAAR,GAAA3I,eACAkI,EAAAU,SAsBAQ,OAAA,SAAAlB,EAAAQ,EAAAV,EAAAtE,EAAA2F,GACA,IAAAV,EAAAhB,EAAAmB,gBAAAZ,GACAI,EAAAK,EAAAD,GACAJ,IACAA,EAAAK,EAAAD,OAEA,IAAAb,EAAAF,EAAAU,cAAAC,EAAAN,EAAAtE,GACA,GAkBA,OAjBAmE,EACAwB,IAEAxB,EAAAM,UAAA,IAGAN,GACAI,OAAAvE,EACAyE,WAAAkB,EACArB,WACAE,SACAQ,QAEAR,EAAAoB,iBAAAZ,EAAAf,EAAAC,cAAAC,IACAS,EAAAiB,KAAA1B,IAGAA,GAwBA2B,WAAA,SAAAtB,EAAAQ,EAAAV,EAAAtE,GACA,OAAAiE,EAAAyB,OAAAlB,EAAAQ,EAAAV,EAAAtE,GAAA,IAiBA+F,SAAA,SAAAvB,EAAAQ,EAAAV,EAAAtE,GACA,IAAA4E,EAAAX,EAAAc,aAAAP,EAAAQ,GACA,GAAAJ,EAAA,CACA,IAAAT,EAAAF,EAAAU,cAAAC,EAAAN,EAAAtE,GACA,GACAmE,GACAF,EAAAS,cAAAP,KAeAO,cAAA,SAAAsB,GACA,GAAAA,KAAAxB,OAAA,CACAwB,EAAAxB,OAAAc,oBAAAU,EAAAhB,KAAAgB,EAAA5B,eACA,IAAAQ,EAAAX,EAAAc,aAAAiB,EAAAxB,OAAAwB,EAAAhB,MACA,GAAAJ,EAAA,CACA,IAAAxI,EAAA,gBAAA4J,IAAAlB,YAAAF,EAAAqB,QAAAD,IACA,IAAA5J,GACAwI,EAAAsB,OAAA9J,EAAA,GAEA,IAAAwI,EAAAtI,QACA2H,EAAAoB,iBAAAW,EAAAxB,OAAAwB,EAAAhB,MAGAO,EAAA,EAAAC,MAAAQ,KAWAG,YAAA,SAAA3B,GACA,IAAAS,EAAAhB,EAAAmB,gBAAAZ,GACA,QAAAQ,KAAAC,EACAhB,EAAAoB,iBAAAb,EAAAQ,KAGAlJ,EAAA,8CC9OAsK,KAoBAA,EAAAC,KAAA,IAAAC,MAAA,GAOAF,EAAA7K,OAAA,WACA,qBASA6K,EAAAG,MAAA,SAAAC,GACA,OAAAJ,EAAAK,IAAAD,EAAA,cAWAJ,EAAAM,SAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GASA,OAPAD,EAAA,GAAAE,EAAAM,EAAAJ,EAAAK,EACAT,EAAA,GAAAG,EAAAK,EAAAH,EAAAI,EACAT,EAAA,GAAAE,EAAAQ,EAAAN,EAAAO,EACAX,EAAA,GAAAG,EAAAO,EAAAL,EAAAM,EACAX,EAAA,GAAAE,EAAAU,EAAAR,EAAAS,EAAAP,EACAN,EAAA,GAAAG,EAAAS,EAAAP,EAAAQ,EAAAN,EAEAP,GAcAP,EAAAK,IAAA,SAAAD,EAAAiB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAOA,OANAtB,EAAA,GAAAiB,EACAjB,EAAA,GAAAkB,EACAlB,EAAA,GAAAmB,EACAnB,EAAA,GAAAoB,EACApB,EAAA,GAAAqB,EACArB,EAAA,GAAAsB,EACAtB,GAUAJ,EAAA2B,aAAA,SAAApB,EAAAC,GAOA,OANAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,GAaAP,EAAArJ,MAAA,SAAAyJ,EAAAzI,GACA,IAAAL,EAAAK,EAAA,GAAAJ,EAAAI,EAAA,GAGA,OAFAA,EAAA,GAAAyI,EAAA,GAAA9I,EAAA8I,EAAA,GAAA7I,EAAA6I,EAAA,GACAzI,EAAA,GAAAyI,EAAA,GAAA9I,EAAA8I,EAAA,GAAA7I,EAAA6I,EAAA,GACAzI,GAUAqI,EAAA4B,OAAA,SAAAxB,EAAAyB,GACA,IAAApG,EAAAhF,KAAAgF,IAAAoG,GACAlG,EAAAlF,KAAAkF,IAAAkG,GACA,OAAA7B,EAAAM,SAAAF,EACAJ,EAAAK,IAAAL,EAAAC,KAAAxE,EAAAE,KAAAF,EAAA,OAWAuE,EAAA8B,MAAA,SAAA1B,EAAA9I,EAAAC,GACA,OAAAyI,EAAAM,SAAAF,EACAJ,EAAAK,IAAAL,EAAAC,KAAA3I,EAAA,IAAAC,EAAA,OAWAyI,EAAA+B,UAAA,SAAA3B,EAAA5I,EAAAC,GACA,OAAAuI,EAAAM,SAAAF,EACAJ,EAAAK,IAAAL,EAAAC,KAAA,QAAAzI,EAAAC,KAiBAuI,EAAAgC,QAAA,SAAA5B,EAAA6B,EAAAC,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAC,GACA,IAAA3G,EAAAlF,KAAAkF,IAAAkG,GACApG,EAAAhF,KAAAgF,IAAAoG,GAOA,OANAzB,EAAA,GAAA+B,EAAA1G,EACA2E,EAAA,GAAAgC,EAAAzG,EACAyE,EAAA,IAAA+B,EAAAxG,EACAyE,EAAA,GAAAgC,EAAA3G,EACA2E,EAAA,GAAAiC,EAAAF,EAAA1G,EAAA6G,EAAAH,EAAAxG,EAAAsG,EACA7B,EAAA,GAAAiC,EAAAD,EAAAzG,EAAA2G,EAAAF,EAAA3G,EAAAyG,EACA9B,GASAJ,EAAAuC,OAAA,SAAAnC,GACA,IAAAoC,EAAAxC,EAAAyC,YAAArC,GACApF,EAAA,EAAAC,OAAA,IAAAuH,EAAA,IAEA,IAAAnB,EAAAjB,EAAA,GACAkB,EAAAlB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAqB,EAAArB,EAAA,GACAsB,EAAAtB,EAAA,GASA,OAPAA,EAAA,GAAAoB,EAAAgB,EACApC,EAAA,IAAAkB,EAAAkB,EACApC,EAAA,IAAAmB,EAAAiB,EACApC,EAAA,GAAAiB,EAAAmB,EACApC,EAAA,IAAAmB,EAAAG,EAAAF,EAAAC,GAAAe,EACApC,EAAA,KAAAiB,EAAAK,EAAAJ,EAAAG,GAAAe,EAEApC,GASAJ,EAAAyC,YAAA,SAAAC,GACA,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAhN,EAAA,kCCvOA,IAAAiN,GAWAC,IAAA,EAOAC,UAAA,IAOAC,kBAAA,MAOAC,iBAAA,MAOAC,UAAA,EAOAC,eAAA,EAOAC,oBAAA,IAOAC,aAAA,MAOAC,qBAAA,MAOAC,YAAA,MAOAC,YAAA,MAOAC,aAAA,MAOAC,UAAA,KAOAC,MAAA,KAOAC,aAAA,KAOAC,WAAA,KAOAC,aAAA,KAOAC,cAAA,KAOAC,eAAA,KAOAC,aAAA,KAOAC,MAAA,KAOAC,KAAA,KAOAC,gBAAA,MAOAC,cAAA,MAOAC,YAAA,MAOAC,OAAA,KAOAC,mBAAA,MAOAC,mBAAA,MAOAC,eAAA,MAOAC,eAAA,MAOAC,WAAA,KAOAC,SAAA,MAOAC,cAAA,MAOAC,eAAA,MAOAC,YAAA,MAYAC,cACA,qBACA,QACA,YACA,aASAC,WAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAnP,EAAAC,EAAA0M,EAAAoC,aAAA7O,OACA,IAAAF,EAAA,EAAaA,EAAAC,IAAQD,EACrB,IAEA,GADAmP,EAAAF,EAAAD,WAAArC,EAAAoC,aAAA/O,GAAAkP,GAEA,OAAiD,EAE5C,MAAAzD,IAIL,cAEA/L,EAAA,kCC9QAA,EAAA,GAXA0P,MAAA,QACAC,YAAA,aACAC,YAAA,aACAC,QAAA,UACAC,YAAA,aACAC,kBAAA,kBACAC,cAAA,eACAC,oBAAA,qBACAC,OAAA,mFCVAC,GAOAC,YAAA,kBAOAC,kBAAA,SAOAC,eAAA,QAOAC,mBAOAC,sBAAA,EAOAC,gBAAA,QAOAC,kBAAA,GAOAC,oBAAA,SAOAC,iBAAA,SAOAC,oBAAA,SAOAC,gBAAA,SAOAC,iBAAA,GAMAZ,EAAAa,WAAA,IAAAC,EAAA,EAMAd,EAAAe,iBAMAf,EAAAgB,gBAAA,KAMAhB,EAAAiB,gBAOAjB,EAAAkB,UAAA,WACA,IAKAC,EAAAC,EALAC,EAAA,GACAC,EAAAtB,EAAAe,cACAF,EAAAb,EAAAa,WACAU,EAAA,iBACAC,EAAA,0BAGA,SAAAC,EAAAC,GACA,IAAApC,EAAAU,EAAA2B,oBACArC,EAAAiC,OACAH,EAAA9B,EAAAsC,YAAAJ,GAAAK,MACA,IAAAC,GAAA,EACA,aAAAJ,IACApC,EAAAiC,KAAA,QAAAG,EAAA,aAKAI,EAJAxC,EAAAsC,YAAAJ,GAAAK,OAIAT,GAEA,OAAAU,EAGA,SAAAC,IACA,IAAAC,GAAA,EACA,QAAAT,KAAAD,EACAA,EAAAC,GAAAF,IACAI,EAAAF,IACAD,EAAAC,GAAAF,EACAY,EAAA,EAAA1I,MAAAyG,EAAAiB,cAEAjB,EAAAgB,gBAAA,KACAH,EAAAtH,YAEA+H,EAAAC,GACAS,GAAA,IAIAA,IACAE,OAAAC,cAAAhB,GACAA,OAAAjI,GAIA,gBAAAkJ,GACA,IAAAC,EAAAC,EAAA,EAAAC,gBAAAH,GACA,GAAAC,EAGA,QAAAlS,EAAA,EAAAC,EAAAiS,EAAAhS,OAA6CF,EAAAC,IAAQD,EAAA,CACrD,IAAAuR,EAAAW,EAAAlS,GACAuR,KAAAJ,IACAA,EAAAI,GAAAL,EACAI,EAAAC,KACAJ,EAAAI,GAAA,OACAxI,IAAAiI,IACAA,EAAAe,OAAAM,YAAAT,EAAA,SA1DA,GAsEA/B,EAAA2B,kBAAA,WACA,IAAArC,EAAAU,EAAAgB,gBAIA,OAHA1B,IACAA,EAAAU,EAAAgB,gBAAAyB,EAAA,EAAAC,sBAAA,MAEApD,GAQAU,EAAA2C,kBAAA,WACA,IAAAC,EACAC,EAAA7C,EAAAiB,aACA,gBAAAM,GACA,IAAAuB,EAAAD,EAAAtB,GAcA,YAbArI,GAAA4J,IACAF,KACAA,EAAAG,SAAAC,cAAA,SACAC,YAAA,IACAL,EAAAM,MAAAC,OAAAP,EAAAM,MAAAE,QAAA,eACAR,EAAAM,MAAAG,SAAA,sBACAT,EAAAM,MAAAI,KAAA,uBAEAV,EAAAM,MAAA3B,OACAwB,SAAAQ,KAAAC,YAAAZ,GACAE,EAAAD,EAAAtB,GAAAqB,EAAAa,aACAV,SAAAQ,KAAAG,YAAAd,IAEAE,GAlBA,GA4BA9C,EAAA2D,iBAAA,SAAApC,EAAAC,GACA,IAAAoC,EAAA5D,EAAA2B,oBAIA,OAHAJ,GAAAqC,EAAArC,OACAqC,EAAArC,QAEAqC,EAAAhC,YAAAJ,GAAAK,OAUA7B,EAAA6D,eAAA,SAAAvE,EAAA7J,EAAAqO,EAAAC,GACA,IAAAtO,IACA6J,EAAApD,UAAA4H,EAAAC,GACAzE,EAAAvD,OAAAtG,GACA6J,EAAApD,WAAA4H,GAAAC,KAKA/D,EAAAgE,gBAAAC,EAAA,EAAA3U,SAgBA0Q,EAAAkE,UAAA,SAAA5E,EACA/E,EAAA4J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/S,EAAAC,EAAAuK,GACA,IAAAwI,EACA,GAAAN,IACAM,EAAAnF,EAAAoF,YACApF,EAAAoF,YAAAD,EAAAN,GAEA5J,GACA+E,EAAAqF,aAAA7T,MAAAwO,EAAA/E,GAGA+E,EAAA4E,UAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/S,EAAAC,EAAA6S,EAAAtI,EAAAuI,EAAAvI,GAEAwI,IACAnF,EAAAoF,YAAAD,GAEAlK,GACA+E,EAAAqF,aAAA7T,MAAAwO,EAAAU,EAAAgE,kBAGAnU,EAAA,kCChQAA,EAAA,GAzBA+U,OAAA,SAEAC,MAAA,QACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,MAAA,QACAC,QAAA,UACAC,SAAA,WACAC,KAAA,OACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,cAAA,gBACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,MAAA,uCCpBApW,EAAA,GARAqW,KAAA,EACAC,QAAA,EACAC,OAAA,EACAjB,MAAA,EACAkB,MAAA,EACAC,MAAA,6CCRAC,GAWAC,MAAA,SAAAnV,EAAAR,EAAAI,GACA,OAAAL,KAAAC,IAAAD,KAAAK,IAAAI,EAAAR,GAAAI,KAaAsV,EAAAE,KAIA,SAAA7V,KAEAA,KAAA6V,KAGA,SAAAhV,GACA,IAAAC,EAAAd,KAAA8V,IAAAjV,GACA,OAAAC,EAAA,EAAAA,GAAA,GAWA6U,EAAAI,oBAAA,SAAAlV,GAEA,OADA0D,EAAA,EAAAC,OAAA,EAAA3D,EAAA,IACAb,KAAAgW,IAAA,EAAAhW,KAAAiW,KAAAjW,KAAAkW,IAAArV,GAAAb,KAAAmW,OAeAR,EAAAS,uBAAA,SAAAvV,EAAAC,EAAA0E,EAAAI,EAAAH,EAAAI,GACA,IAAA9E,EAAA0E,EAAAD,EACAxE,EAAA6E,EAAAD,EACA,OAAA7E,GAAA,IAAAC,EAAA,CACA,IAAAqV,IAAAxV,EAAA2E,GAAAzE,GAAAD,EAAA8E,GAAA5E,IAAAD,IAAAC,KACAqV,EAAA,GACA7Q,EAAAC,EACAG,EAAAC,GACKwQ,EAAA,IACL7Q,GAAAzE,EAAAsV,EACAzQ,GAAA5E,EAAAqV,GAGA,OAAAV,EAAAW,gBAAAzV,EAAAC,EAAA0E,EAAAI,IAYA+P,EAAAW,gBAAA,SAAA9Q,EAAAI,EAAAH,EAAAI,GACA,IAAA9E,EAAA0E,EAAAD,EACAxE,EAAA6E,EAAAD,EACA,OAAA7E,IAAAC,KAWA2U,EAAAY,kBAAA,SAAAtK,GAGA,IAFA,IAAAuK,EAAAvK,EAAAxM,OAEAF,EAAA,EAAiBA,EAAAiX,EAAOjX,IAAA,CAIxB,IAFA,IAAAkX,EAAAlX,EACAmX,EAAA1W,KAAA2W,IAAA1K,EAAA1M,OACAqX,EAAArX,EAAA,EAAuBqX,EAAAJ,EAAOI,IAAA,CAC9B,IAAAC,EAAA7W,KAAA2W,IAAA1K,EAAA2K,GAAArX,IACAsX,EAAAH,IACAA,EAAAG,EACAJ,EAAAG,GAIA,OAAAF,EACA,YAIA,IAAAI,EAAA7K,EAAAwK,GACAxK,EAAAwK,GAAAxK,EAAA1M,GACA0M,EAAA1M,GAAAuX,EAGA,QAAAC,EAAAxX,EAAA,EAAuBwX,EAAAP,EAAOO,IAE9B,IADA,IAAAC,GAAA/K,EAAA8K,GAAAxX,GAAA0M,EAAA1M,MACA0X,EAAA1X,EAAqB0X,EAAAT,EAAA,EAAWS,IAChC1X,GAAA0X,EACAhL,EAAA8K,GAAAE,GAAA,EAEAhL,EAAA8K,GAAAE,IAAAD,EAAA/K,EAAA1M,GAAA0X,GAQA,IADA,IAAApW,EAAA,IAAA4I,MAAA+M,GACAU,EAAAV,EAAA,EAAqBU,GAAA,EAAQA,IAAA,CAC7BrW,EAAAqW,GAAAjL,EAAAiL,GAAAV,GAAAvK,EAAAiL,MACA,QAAAC,EAAAD,EAAA,EAAuBC,GAAA,EAAQA,IAC/BlL,EAAAkL,GAAAX,IAAAvK,EAAAkL,GAAAD,GAAArW,EAAAqW,GAGA,OAAArW,GAUA8U,EAAAyB,UAAA,SAAAC,GACA,WAAAA,EAAArX,KAAAsX,IAUA3B,EAAA4B,UAAA,SAAAC,GACA,OAAAA,EAAAxX,KAAAsX,GAAA,KAUA3B,EAAA8B,OAAA,SAAA7M,EAAAC,GACA,IAAA+L,EAAAhM,EAAAC,EACA,OAAA+L,EAAA/L,EAAA,EAAA+L,EAAA/L,EAAA+L,GAWAjB,EAAA+B,KAAA,SAAA9M,EAAAC,EAAAhK,GACA,OAAA+J,EAAA/J,GAAAgK,EAAAD,IAEA3L,EAAA,kCCrMA,IAAA0Y,KAYAA,EAAAC,OAAA,mBAAAnZ,OAAAmZ,OAAAnZ,OAAAmZ,OAAA,SAAAjQ,EAAAkQ,GACA,QAAAvP,IAAAX,GAAA,OAAAA,EACA,UAAAmQ,UAAA,8CAIA,IADA,IAAAC,EAAAtZ,OAAAkJ,GACApI,EAAA,EAAAC,EAAAwY,UAAAvY,OAAwCF,EAAAC,IAAQD,EAAA,CAChD,IAAA0Y,EAAAD,UAAAzY,GACA,QAAA+I,IAAA2P,GAAA,OAAAA,EACA,QAAA9O,KAAA8O,EACAA,EAAAC,eAAA/O,KACA4O,EAAA5O,GAAA8O,EAAA9O,IAKA,OAAA4O,GAQAJ,EAAAhP,MAAA,SAAAwP,GACA,QAAAC,KAAAD,SACAA,EAAAC,IAWAT,EAAAU,UAAA,SAAAF,GACA,IAAAG,KACA,QAAAF,KAAAD,EACAG,EAAAtP,KAAAmP,EAAAC,IAEA,OAAAE,GASAX,EAAA/T,QAAA,SAAAuU,GACA,IAAAC,EACA,IAAAA,KAAAD,EACA,SAEA,OAAAC,GAEAnZ,EAAA,kCCtEA,IAAAsZ,GAYAC,aAAA,SAAAC,EAAAC,EAAAC,GAOA,IANA,IAAAC,EAAAC,EACAC,EAAAH,GAAAJ,EAAAQ,0BACAC,EAAA,EACAC,EAAAR,EAAAhZ,OACAyZ,GAAA,EAEAF,EAAAC,IAIAJ,GAAAC,EAAAL,EADAG,EAAAI,GAAAC,EAAAD,GAAA,IACAN,IAEA,EACAM,EAAAJ,EAAA,GAGAK,EAAAL,EACAM,GAAAL,GAKA,OAAAK,EAAAF,MAWAD,0BAAA,SAAAnO,EAAAC,GACA,OAAAD,EAAAC,EAAA,EAAAD,EAAAC,GAAA,KAUAsO,SAAA,SAAAC,EAAAta,GACA,OAAAsa,EAAAhQ,QAAAtK,IAAA,GAYAua,kBAAA,SAAAD,EAAAzR,EAAA2R,GACA,IAMA/Z,EANAiX,EAAA4C,EAAA3Z,OACA,GAAA2Z,EAAA,IAAAzR,EACA,SACG,GAAAA,GAAAyR,EAAA5C,EAAA,GACH,OAAAA,EAAA,EAGA,GAAA8C,EAAA,GACA,IAAA/Z,EAAA,EAAiBA,EAAAiX,IAAOjX,EACxB,GAAA6Z,EAAA7Z,GAAAoI,EACA,OAAApI,EAAA,OAGK,GAAA+Z,EAAA,GACL,IAAA/Z,EAAA,EAAiBA,EAAAiX,IAAOjX,EACxB,GAAA6Z,EAAA7Z,IAAAoI,EACA,OAAApI,OAIA,IAAAA,EAAA,EAAiBA,EAAAiX,IAAOjX,EAAA,CACxB,GAAA6Z,EAAA7Z,IAAAoI,EACA,OAAApI,EACS,GAAA6Z,EAAA7Z,GAAAoI,EACT,OAAAyR,EAAA7Z,EAAA,GAAAoI,IAAAyR,EAAA7Z,GACAA,EAAA,EAEAA,EAKA,OAAAiX,EAAA,GAUA+C,gBAAA,SAAAH,EAAAI,EAAAhX,GACA,KAAAgX,EAAAhX,GAAA,CACA,IAAAsU,EAAAsC,EAAAI,GACAJ,EAAAI,GAAAJ,EAAA5W,GACA4W,EAAA5W,GAAAsU,IACA0C,IACAhX,IAWAO,OAAA,SAAAqW,EAAAK,GACA,IAAAla,EACAma,EAAAjQ,MAAAkQ,QAAAF,SACAha,EAAAia,EAAAja,OACA,IAAAF,EAAA,EAAaA,EAAAE,EAAYF,IACzB6Z,IAAA3Z,QAAAia,EAAAna,IAWAqa,OAAA,SAAAR,EAAAta,GACA,IAAAS,EAAA6Z,EAAAhQ,QAAAtK,GACAoa,EAAA3Z,GAAA,EAIA,OAHA2Z,GACAE,EAAA/P,OAAA9J,EAAA,GAEA2Z,GAUAW,KAAA,SAAAT,EAAAU,GAIA,IAHA,IACArZ,EADAhB,EAAA2Z,EAAA3Z,SAAA,EAGAF,EAAA,EAAiBA,EAAAE,EAAYF,IAE7B,GAAAua,EADArZ,EAAA2Y,EAAA7Z,GACAA,EAAA6Z,GACA,OAAA3Y,EAGA,aASAqC,OAAA,SAAAiX,EAAAC,GACA,IAAAC,EAAAF,EAAAta,OACA,GAAAwa,IAAAD,EAAAva,OACA,SAEA,QAAAF,EAAA,EAAiBA,EAAA0a,EAAU1a,IAC3B,GAAAwa,EAAAxa,KAAAya,EAAAza,GACA,SAGA,UAQA2a,WAAA,SAAAd,EAAAe,GACA,IAEA5a,EAFAE,EAAA2Z,EAAA3Z,OACAqX,EAAArN,MAAA2P,EAAA3Z,QAEA,IAAAF,EAAA,EAAaA,EAAAE,EAAYF,IACzBuX,EAAAvX,IAAc6a,MAAA7a,EAAAkB,MAAA2Y,EAAA7Z,IAKd,IAHAuX,EAAAuD,KAAA,SAAAzP,EAAAC,GACA,OAAAsP,EAAAvP,EAAAnK,MAAAoK,EAAApK,QAAAmK,EAAAwP,MAAAvP,EAAAuP,QAEA7a,EAAA,EAAaA,EAAA6Z,EAAA3Z,OAAgBF,IAC7B6Z,EAAA7Z,GAAAuX,EAAAvX,GAAAkB,OAUA6Z,UAAA,SAAAlB,EAAAU,GACA,IAAAM,EAKA,OAJAhB,EAAAmB,MAAA,SAAAC,EAAAC,GAEA,OADAL,EAAAK,GACAX,EAAAU,EAAAC,EAAArB,KAEAgB,GAAA,GAUAM,SAAA,SAAAtB,EAAAuB,EAAAC,GACA,IAAAC,EAAAF,GAAApC,EAAAQ,0BACA,OAAAK,EAAAmB,MAAA,SAAAO,EAAAV,GACA,OAAAA,EACA,SAEA,IAAAW,EAAAF,EAAAzB,EAAAgB,EAAA,GAAAU,GACA,QAAAC,EAAA,GAAAH,GAAA,IAAAG,OAGA9b,EAAA,8CCrPA+b,GAOAxW,OAAA,SAAAyW,EAAAC,GACA,IAAAD,EACA,UAAAE,EAAA,EAAAD,KAGAjc,EAAA,kCCLAA,EAAA,GAJAmc,UAAA,EACAC,YAAA,iCCLA,IAAAC,GASAxJ,sBAAA,SAAAyJ,EAAAC,GACA,IAAAhN,EAAA2D,SAAAC,cAAA,UAOA,OANAmJ,IACA/M,EAAAyC,MAAAsK,GAEAC,IACAhN,EAAA0D,OAAAsJ,GAEAhN,EAAAD,WAAA,OAWAkN,WAAA,SAAAC,GACA,IAAAzK,EAAAyK,EAAAC,YACArJ,EAAAsJ,iBAAAF,GAGA,OAFAzK,GAAA4K,SAAAvJ,EAAAwJ,WAAA,IAAAD,SAAAvJ,EAAAyJ,YAAA,KAaAC,YAAA,SAAAN,GACA,IAAAxJ,EAAAwJ,EAAA7I,aACAP,EAAAsJ,iBAAAF,GAGA,OAFAxJ,GAAA2J,SAAAvJ,EAAA2J,UAAA,IAAAJ,SAAAvJ,EAAA4J,aAAA,KASAC,YAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAE,WACAD,GACAA,EAAAE,aAAAJ,EAAAC,IAQAI,WAAA,SAAAC,GACA,OAAAA,KAAAH,WAAAG,EAAAH,WAAAzJ,YAAA4J,GAAA,MAMAC,eAAA,SAAAD,GACA,KAAAA,EAAAE,WACAF,EAAA5J,YAAA4J,EAAAE,aAGA3d,EAAA,2DCrDA4d,EAAA,SAAAC,GAKAC,KAAAD,UAmBAD,EAAAre,UAAAwe,aAAA,SAAA5d,GACA,OAAAyd,EAAAI,SAAA7d,EAAA2d,KAAAD,SAYAD,EAAAre,UAAA0e,kBAAA,SAAAhT,EAAAM,GACA,OAAAqS,EAAAM,aAAAjT,EAAAM,EAAAuS,KAAAD,SAaAD,EAAAre,UAAA+D,OAAA,SAAA2H,EAAAkT,EAAAC,GACA,IAAAC,EAAAC,EAAA,EAAAhG,UAAArN,EAAA,IACAsT,EAAAD,EAAA,EAAAhG,UAAArN,EAAA,IACAuT,EAAAL,EAAAL,KAAAD,OACAY,EAAA1d,KAAA2d,KACA3d,KAAAkF,IAAAoY,GAAAtd,KAAAgF,IAAAyY,GACAzd,KAAAgF,IAAAsY,GAAAtd,KAAAkF,IAAAuY,GAAAzd,KAAAgF,IAAAqY,IACAO,EAAAJ,EAAAxd,KAAA6d,MACA7d,KAAAkF,IAAAmY,GAAArd,KAAAkF,IAAAuY,GAAAzd,KAAAgF,IAAAsY,GACAtd,KAAAgF,IAAAyY,GAAAzd,KAAAkF,IAAAoY,GAAAtd,KAAAkF,IAAAwY,IACA,OAAAH,EAAA,EAAAnG,UAAAwG,GAAAL,EAAA,EAAAnG,UAAAsG,KASAb,EAAAiB,eAAA,UAeAjB,EAAAkB,UAAA,SAAAC,EAAAC,GACA,IAMA7e,EAAA8e,EAAA3e,EAAAC,EAAAuX,EAAAoH,EANAC,EAAAH,MACAnB,EAAAsB,EAAAtB,QAAAD,EAAAiB,eACAO,EAAAD,EAAAC,YAAA,YAEAlW,GADA6V,IAAAtd,QAAAiJ,UAAA0U,EAAA,cACAC,UACA7e,EAAA,EAEA,OAAA0I,GACA,KAAAoW,EAAA,EAAA5P,MACA,KAAA4P,EAAA,EAAAxP,YACA,MAEA,KAAAwP,EAAA,EAAA3P,YACA,KAAA2P,EAAA,EAAA1P,YACAzP,EAAsD,EAAAof,iBACtD/e,EAAAod,EAAA4B,WAAArf,EAAA0d,GACA,MAEA,KAAAyB,EAAA,EAAAvP,kBACA,KAAAuP,EAAA,EAAAzP,QAEA,IAAAvP,EAAA,EAAAC,GADAJ,EAAsD,EAAAof,kBACtD/e,OAA0CF,EAAAC,IAAQD,EAClDE,GAAAod,EAAA4B,WAAArf,EAAAG,GAAAud,GAEA,MAEA,KAAAyB,EAAA,EAAAtP,cAEA,IAAA1P,EAAA,EAAAC,GADAJ,EAAsD,EAAAof,kBACtD/e,OAA0CF,EAAAC,IAAQD,EAElD,IAAAwX,EAAA,EAAAoH,GADAD,EAAA9e,EAAAG,IACAE,OAAuCsX,EAAAoH,IAAQpH,EAC/CtX,GAAAod,EAAA4B,WAAAP,EAAAnH,GAAA+F,GAGA,MAEA,KAAAyB,EAAA,EAAArP,oBACA,IAAAwP,EAA6D,EAAAC,gBAC7D,IAAApf,EAAA,EAAAC,EAAAkf,EAAAjf,OAAyCF,EAAAC,IAAQD,EACjDE,GAAAod,EAAAkB,UAAAW,EAAAnf,GAAA0e,GAEA,MAEA,QACA,UAAAW,MAAA,8BAAAzW,GAGA,OAAA1I,GAUAod,EAAA4B,WAAA,SAAArf,EAAA0d,GAEA,IADA,IAAArd,EAAA,EACAF,EAAA,EAAAC,EAAAJ,EAAAK,OAA0CF,EAAAC,EAAA,IAAYD,EACtDE,GAAAod,EAAAM,aAAA/d,EAAAG,GAAAH,EAAAG,EAAA,GAAAud,GAEA,OAAArd,GAWAod,EAAAM,aAAA,SAAAjT,EAAAM,EAAAsS,GACA,IAAAQ,EAAAC,EAAA,EAAAhG,UAAArN,EAAA,IACA2U,EAAAtB,EAAA,EAAAhG,UAAA/M,EAAA,IACAsU,GAAAD,EAAAvB,GAAA,EACAyB,EAAAxB,EAAA,EAAAhG,UAAA/M,EAAA,GAAAN,EAAA,MACAU,EAAA5K,KAAAkF,IAAA4Z,GAAA9e,KAAAkF,IAAA4Z,GACA9e,KAAAkF,IAAA6Z,GAAA/e,KAAAkF,IAAA6Z,GACA/e,KAAAgF,IAAAsY,GAAAtd,KAAAgF,IAAA6Z,GACA,SAAA/B,EAAA9c,KAAA6d,MAAA7d,KAAAgf,KAAApU,GAAA5K,KAAAgf,KAAA,EAAApU,KAcAiS,EAAAnZ,QAAA,SAAAsa,EAAAC,GACA,IAMA7e,EAAA8e,EAAA3e,EAAAC,EAAAuX,EAAAoH,EANAC,EAAAH,MACAnB,EAAAsB,EAAAtB,QAAAD,EAAAiB,eACAO,EAAAD,EAAAC,YAAA,YAEAlW,GADA6V,IAAAtd,QAAAiJ,UAAA0U,EAAA,cACAC,UACA3a,EAAA,EAEA,OAAAwE,GACA,KAAAoW,EAAA,EAAA5P,MACA,KAAA4P,EAAA,EAAAxP,YACA,KAAAwP,EAAA,EAAA3P,YACA,KAAA2P,EAAA,EAAAvP,kBACA,KAAAuP,EAAA,EAAA1P,YACA,MAEA,KAAA0P,EAAA,EAAAzP,QAGA,IAFA1P,EAA+C,EAAAof,iBAC/C7a,EAAA3D,KAAA2W,IAAAkG,EAAAI,SAAA7d,EAAA,GAAA0d,IACAvd,EAAA,EAAAC,EAAAJ,EAAAK,OAA0CF,EAAAC,IAAQD,EAClDoE,GAAA3D,KAAA2W,IAAAkG,EAAAI,SAAA7d,EAAAG,GAAAud,IAEA,MAEA,KAAAyB,EAAA,EAAAtP,cAEA,IAAA1P,EAAA,EAAAC,GADAJ,EAAsD,EAAAof,kBACtD/e,OAA0CF,EAAAC,IAAQD,EAGlD,IAFA2e,EAAA9e,EAAAG,GACAoE,GAAA3D,KAAA2W,IAAAkG,EAAAI,SAAAiB,EAAA,GAAApB,IACA/F,EAAA,EAAAoH,EAAAD,EAAAze,OAAuCsX,EAAAoH,IAAQpH,EAC/CpT,GAAA3D,KAAA2W,IAAAkG,EAAAI,SAAAiB,EAAAnH,GAAA+F,IAGA,MAEA,KAAAyB,EAAA,EAAArP,oBACA,IAAAwP,EAA6D,EAAAC,gBAC7D,IAAApf,EAAA,EAAAC,EAAAkf,EAAAjf,OAAyCF,EAAAC,IAAQD,EACjDoE,GAAAkZ,EAAAnZ,QAAAgb,EAAAnf,GAAA0e,GAEA,MAEA,QACA,UAAAW,MAAA,8BAAAzW,GAGA,OAAAxE,GAkBAkZ,EAAAI,SAAA,SAAA7d,EAAA0d,GAIA,IAHA,IAAAnZ,EAAA,EAAAsb,EAAA7f,EAAAK,OACA+F,EAAApG,EAAA6f,EAAA,MACArZ,EAAAxG,EAAA6f,EAAA,MACA1f,EAAA,EAAiBA,EAAA0f,EAAS1f,IAAA,CAC1B,IAAAkG,EAAArG,EAAAG,GAAA,GAAAsG,EAAAzG,EAAAG,GAAA,GACAoE,GAAA4Z,EAAA,EAAAhG,UAAA9R,EAAAD,IACA,EAAAxF,KAAAkF,IAAAqY,EAAA,EAAAhG,UAAA3R,IACA5F,KAAAkF,IAAAqY,EAAA,EAAAhG,UAAA1R,KACAL,EAAAC,EACAG,EAAAC,EAEA,OAAAlC,EAAAmZ,IAAA,GAEA,IAAAoC,EAAA,iBC7RAC,GAOAC,OAAA,KAOAxV,IAAA,SAAAyV,GACAF,EAAAC,OAAAC,GAQAC,IAAA,WACA,OAAAH,EAAAC,QAAA9N,OAAA,QAEAiO,EAAA,ECQAC,EAAA,SAAApB,GAKArB,KAAA0C,MAAArB,EAAAsB,KASA3C,KAAA4C,OAAyCvB,EAAA,MASzCrB,KAAA6C,aAAAtX,IAAA8V,EAAA/e,OAAA+e,EAAA/e,OAAA,KASA0d,KAAA8C,kBAAAvX,IAAA8V,EAAA0B,YACA1B,EAAA0B,YAAA,KAMA/C,KAAAgD,sBAAAzX,IAAA8V,EAAA4B,gBACA5B,EAAA4B,gBAAA,MAMAjD,KAAAkD,aAAA3X,IAAA8V,EAAA8B,QAAA9B,EAAA8B,OAMAnD,KAAAoD,aAAApD,KAAAkD,UAAAlD,KAAA6C,SAMA7C,KAAAqD,wBAAAhC,EAAAiC,mBAMAtD,KAAAuD,iBAAA,KAMAvD,KAAAwD,eAAAnC,EAAAoC,cAEA,IAAAd,EAAAtB,EAAAsB,KACA,GAAAe,EAAA,EAAArjB,eAAA,CACA,IAAAsjB,EAAAnB,EAAAD,MACA,sBAAAoB,EAAA,CACA,IAAAC,EAAAD,EAAAE,KAAAlB,QACApX,IAAAqY,SACArY,IAAAqY,EAAAE,WAAAvY,IAAA8V,EAAA4B,kBACAjD,KAAAgD,iBAAAY,EAAAE,WAEAvY,IAAA8V,EAAAoC,gBACAzD,KAAAwD,eAAAI,EAAAG,eAEAxY,IAAA8V,EAAA2C,QACAhE,KAAA4C,OAAAgB,EAAAI,WAWAvB,EAAAhhB,UAAAwiB,SAAA,WACA,OAAAjE,KAAAoD,WASAX,EAAAhhB,UAAAyiB,QAAA,WACA,OAAAlE,KAAA0C,OASAD,EAAAhhB,UAAA0iB,UAAA,WACA,OAAAnE,KAAA6C,SASAJ,EAAAhhB,UAAA2iB,SAAA,WACA,OAAApE,KAAA4C,QAWAH,EAAAhhB,UAAA4iB,iBAAA,WACA,OAAArE,KAAAwD,gBAAAc,EAAA,EAAAC,gBAAAvE,KAAA4C,SASAH,EAAAhhB,UAAA+iB,eAAA,WACA,OAAAxE,KAAA8C,cAeAL,EAAAhhB,UAAAgjB,mBAAA,WACA,OAAAzE,KAAAgD,kBASAP,EAAAhhB,UAAAijB,SAAA,WACA,OAAA1E,KAAAkD,SASAT,EAAAhhB,UAAAkjB,UAAA,SAAAxB,GACAnD,KAAAkD,QAAAC,EACAnD,KAAAoD,aAAAD,IAAAnD,KAAA6C,UAOAJ,EAAAhhB,UAAAmjB,mBAAA,WACA,OAAA5E,KAAAuD,kBAOAd,EAAAhhB,UAAAojB,mBAAA,SAAAC,GACA9E,KAAAuD,iBAAAuB,GASArC,EAAAhhB,UAAAsjB,UAAA,SAAAziB,GACA0d,KAAA6C,QAAAvgB,EACA0d,KAAAoD,aAAApD,KAAAkD,UAAA5gB,IAUAmgB,EAAAhhB,UAAAujB,eAAA,SAAAjC,GACA/C,KAAA8C,aAAAC,GAUAN,EAAAhhB,UAAAwjB,sBAAA,SAAAlI,GACAiD,KAAAqD,wBAAAtG,GASA0F,EAAAhhB,UAAAyjB,uBAAA,WACA,OAAAlF,KAAAqD,yBAEA,IAAA8B,EAAA,ECrRAC,GAYAC,YAAA,SAAA1C,GACAwC,EAAA7e,KAAA0Z,MACA2C,OACAqB,MAAAM,EAAA,EAAAgB,OACAhjB,OAAA8iB,EAAAG,OACApC,QAAA,EACAJ,YAAAqC,EAAAI,aACAlC,mBAAA,SAAAzb,EAAA4d,GACA,OAAA5d,EAAA2Y,EAAA,EAAA1H,KAAA2M,EAAA,GAAAL,EAAAM,aAIAhC,EAAA,EAAApiB,SAAA8jB,EAAAC,YAAAF,GASAC,EAAAM,OAAA,QAOAN,EAAAO,UAAA1iB,KAAAsX,GAAA6K,EAAAM,OAOAN,EAAAG,SACAH,EAAAO,WAAAP,EAAAO,UACAP,EAAAO,UAAAP,EAAAO,WAQAP,EAAAI,eAAA,gBASAJ,EAAAQ,aACA,IAAAR,EAAAC,YAAA,aACA,IAAAD,EAAAC,YAAA,eACA,IAAAD,EAAAC,YAAA,eACA,IAAAD,EAAAC,YAAA,eACA,IAAAD,EAAAC,YAAA,oCACA,IAAAD,EAAAC,YAAA,8BACA,IAAAD,EAAAC,YAAA,iDAYAD,EAAAS,aAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAtjB,EAAAojB,EAAApjB,OACAujB,EAAAD,EAAA,EAAAA,EAAA,EACAhL,EAAA+K,OACAxa,IAAAyP,IAGAA,EAFAiL,EAAA,EAEAH,EAAAliB,QAEA,IAAA8I,MAAAhK,IAIA,IADA,IAAAwjB,EAAAd,EAAAO,UACAnjB,EAAA,EAAiBA,EAAAE,EAAYF,GAAAyjB,EAAA,CAC7BjL,EAAAxY,GAAA0jB,EAAAJ,EAAAtjB,GAAA,IACA,IAAAuB,EAAAqhB,EAAAM,OACAziB,KAAAkW,IAAAlW,KAAAkjB,IAAAljB,KAAAsX,IAAAuL,EAAAtjB,EAAA,aACAuB,EAAAmiB,EACAniB,EAAAmiB,EACKniB,GAAAmiB,IACLniB,GAAAmiB,GAEAlL,EAAAxY,EAAA,GAAAuB,EAEA,OAAAiX,GAYAoK,EAAAgB,WAAA,SAAAN,EAAAC,EAAAC,GACA,IAAAtjB,EAAAojB,EAAApjB,OACAujB,EAAAD,EAAA,EAAAA,EAAA,EACAhL,EAAA+K,OACAxa,IAAAyP,IAGAA,EAFAiL,EAAA,EAEAH,EAAAliB,QAEA,IAAA8I,MAAAhK,IAGA,QAAAF,EAAA,EAAiBA,EAAAE,EAAYF,GAAAyjB,EAC7BjL,EAAAxY,GAAA,IAAAsjB,EAAAtjB,GAAA4iB,EAAAO,UACA3K,EAAAxY,EAAA,OAAAS,KAAAojB,KACApjB,KAAA8V,IAAA+M,EAAAtjB,EAAA,GAAA4iB,EAAAM,SAAAziB,KAAAsX,GAAA,GAEA,OAAAS,GAEA,IAAAsL,EAAA,EC7IAC,GAiBAlB,YAAA,SAAA1C,EAAA6D,GACArB,EAAA7e,KAAA0Z,MACA2C,OACAqB,MAAAM,EAAA,EAAAmC,QACAnkB,OAAAikB,EAAAhB,OACAtC,gBAAAuD,EACArD,QAAA,EACAM,cAAA8C,EAAAhC,gBACAxB,YAAAwD,EAAAhB,WAGA7B,EAAA,EAAApiB,SAAAilB,EAAAlB,YAAAF,GASAoB,EAAAb,OAAA,QASAa,EAAAhB,SAAA,gBAOAgB,EAAAhC,gBAAAthB,KAAAsX,GAAAgM,EAAAb,OAAA,IASAa,EAAAX,aACA,IAAAW,EAAAlB,YAAA,UACA,IAAAkB,EAAAlB,YAAA,mBACA,IAAAkB,EAAAlB,YAAA,oCACA,IAAAkB,EAAAlB,YAAA,uCACA,IAAAkB,EAAAlB,YAAA,iCACA,IAAAkB,EAAAlB,YAAA,4BACA,IAAAkB,EAAAlB,YAAA,sDACA,IAAAkB,EAAAlB,YAAA,sCAEA,IAAAqB,EAAA,EC3EAC,GAOAtE,UAMAzW,MAAA,WACA+a,EAAAtE,WASAE,IAAA,SAAAI,GAEA,OADAgE,EAAAtE,OACAM,IAAA,MASAiE,IAAA,SAAAjE,EAAArB,GACAqF,EAAAtE,OACAM,GAAArB,IAEAuF,EAAA,UCrCAC,GAOAzE,UAMAzW,MAAA,WACAkb,EAAAzE,WAYAuE,IAAA,SAAA1L,EAAA6L,EAAA3c,GACA,IAAA4c,EAAA9L,EAAAgJ,UACA+C,EAAAF,EAAA7C,UACAgD,EAAAJ,EAAAzE,OACA2E,KAAAE,IACAA,EAAAF,OAEAE,EAAAF,GAAAC,GAAA7c,GAaAyS,OAAA,SAAA3B,EAAA6L,GACA,IAAAC,EAAA9L,EAAAgJ,UACA+C,EAAAF,EAAA7C,UACAgD,EAAAJ,EAAAzE,OACAzV,EAAAsa,EAAAF,GAAAC,GAKA,cAJAC,EAAAF,GAAAC,GACAllB,EAAA,EAAA8E,QAAAqgB,EAAAF,YACAE,EAAAF,GAEApa,GAUA2V,IAAA,SAAAyE,EAAAC,GACA,IAAAra,EACAsa,EAAAJ,EAAAzE,OAIA,OAHA2E,KAAAE,GAAAD,KAAAC,EAAAF,KACApa,EAAAsa,EAAAF,GAAAC,IAEAra,IAEAua,EAAA,EC/DAC,KASAA,EAAA7C,gBAAAD,EAAA,EAAAC,gBAQA6C,EAAAC,QAAA,IAAAlF,IAAApB,gBAGA2C,EAAA,EAAArjB,iBAaA+mB,EAAAE,SAAA,SAAAhF,GACAE,EAAA3V,IAAAyV,KAyBA8E,EAAA9D,mBAAA,SAAAhC,EAAAzZ,EAAA4d,EAAA8B,GAEA,IAAAC,EACAC,GAFAnG,EAAA8F,EAAA7E,IAAAjB,IAEA4D,yBACA,GAAAuC,EACAD,EAAAC,EAAA5f,EAAA4d,QAGA,GADAnE,EAAA8C,YACAE,EAAA,EAAAmC,UAAAc,MAAAjD,EAAA,EAAAmC,QACAe,EAAA3f,MACK,CAIL,IAAAue,EAAAgB,EAAAM,4BAAApG,EAAA8F,EAAA7E,IAAA,cACAoF,GACAlC,EAAA,GAAA5d,EAAA,EAAA4d,EAAA,GACAA,EAAA,GAAA5d,EAAA,EAAA4d,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAA5d,EAAA,EACA4d,EAAA,GAAAA,EAAA,GAAA5d,EAAA,GAEA8f,EAAAvB,EAAAuB,IAAA,GAKAH,GAJAJ,EAAAC,QAAAlH,kBACAwH,EAAA/jB,MAAA,KAAA+jB,EAAA/jB,MAAA,MACAwjB,EAAAC,QAAAlH,kBACAwH,EAAA/jB,MAAA,KAAA+jB,EAAA/jB,MAAA,OACA,EACA,IAAA6f,EAAA8D,EACAjD,EAAA,EAAAC,gBAAAgD,GACAjG,EAAA+C,wBACA9Y,IAAAkY,IACA+D,GAAA/D,GAIA,OAAA+D,GAWAJ,EAAAQ,yBAAA,SAAAC,GACAT,EAAAU,eAAAD,GACAA,EAAAE,QAAA,SAAA7M,GACA2M,EAAAE,QAAA,SAAAhB,GACA7L,IAAA6L,GACAI,EAAAP,IAAA1L,EAAA6L,EAAAK,EAAAY,qBAoBAZ,EAAAa,wBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACAH,EAAAH,QAAA,SAAAO,GACAH,EAAAJ,QAAA,SAAAQ,GACApB,EAAAP,IAAA0B,EAAAC,EAAAH,GACAjB,EAAAP,IAAA2B,EAAAD,EAAAD,QAaAjB,EAAAoB,cAAA,SAAAlH,GACAuF,EAAAD,IAAAtF,EAAA4C,UAAA5C,GACA6F,EAAAP,IAAAtF,IAAA8F,EAAAY,iBAOAZ,EAAAU,eAAA,SAAAD,GACAA,EAAAE,QAAAX,EAAAoB,gBAOApB,EAAAqB,oBAAA,WACA5B,EAAAjb,QACAub,EAAAvb,SASAwb,EAAAsB,iBAAA,SAAApH,EAAAqH,GACA,OAAArH,EAEG,iBAAAA,EACH8F,EAAA7E,IAAAjB,GAEyC,EAJzC8F,EAAA7E,IAAAoG,IA4BAvB,EAAAwB,wBAAA,SAAA1N,EAAA6L,EAAA8B,EAAAC,GACA,IAAAC,EAAA3B,EAAA7E,IAAArH,GACA8N,EAAA5B,EAAA7E,IAAAwE,GACAI,EAAAP,IAAAmC,EAAAC,EACA5B,EAAA6B,uCAAAJ,IACA1B,EAAAP,IAAAoC,EAAAD,EACA3B,EAAA6B,uCAAAH,KAWA1B,EAAA6B,uCAAA,SAAArc,GACA,gBAOAkZ,EAAAC,EAAAC,GACA,IAGAP,EAAAjjB,EAAAwX,EAHAtX,EAAAojB,EAAApjB,OACAujB,OAAA1a,IAAAya,IAAA,EACAhL,OAAAzP,IAAAwa,IAAA,IAAArZ,MAAAhK,GAEA,IAAAF,EAAA,EAAiBA,EAAAE,EAAYF,GAAAyjB,EAI7B,IAHAR,EAAA7Y,GAAAkZ,EAAAtjB,GAAAsjB,EAAAtjB,EAAA,KACAwY,EAAAxY,GAAAijB,EAAA,GACAzK,EAAAxY,EAAA,GAAAijB,EAAA,GACAzL,EAAAiM,EAAA,EAA+BjM,GAAA,IAAQA,EACvCgB,EAAAxY,EAAAwX,GAAA8L,EAAAtjB,EAAAwX,GAGA,OAAAgB,IAcAoM,EAAA8B,WAAA,SAAA/kB,EAAAglB,GACA,OAAA/B,EAAAxa,UAAAzI,EAAA,iBACAoH,IAAA4d,IAAA,cAaA/B,EAAAgC,SAAA,SAAAjlB,EAAAglB,GACA,IAAAE,EAAAjC,EAAAxa,UAAAzI,OACAoH,IAAA4d,IAAA,yBACAtI,EAAAwI,EAAA,GAIA,OAHAxI,GAAA,KAAAA,EAAA,OACAwI,EAAA,GAAA7I,EAAA,EAAA9F,OAAAmG,EAAA,cAEAwI,GAaAjC,EAAA7E,IAAA,SAAA+G,GACA,IAAAhI,EAAA,KACA,GAAAgI,aAAAnE,EACA7D,EAAAgI,OACG,oBAAAA,EAAA,CACH,IAAA3G,EAAA2G,EAEA,GADAhI,EAAAuF,EAAAtE,IAAAI,GACAe,EAAA,EAAArjB,iBAAAihB,EAAA,CACA,IAAAqC,EAAAnB,EAAAD,MACA,mBAAAoB,QACApY,IAAAoY,EAAAE,KAAAlB,KACArB,EAAA,IAAA6D,GAA+CxC,SAC/CyE,EAAAoB,cAAAlH,KAIA,OAAAA,GAcA8F,EAAAmC,WAAA,SAAAjB,EAAAC,GACA,GAAAD,IAAAC,EACA,SAEA,IAAAiB,EAAAlB,EAAAlE,aAAAmE,EAAAnE,WACA,OAAAkE,EAAApE,YAAAqE,EAAArE,UACAsF,EAEApC,EAAAM,4BACAY,EAAAC,KACAnB,EAAAY,gBAAAwB,GAeApC,EAAAqC,aAAA,SAAAvO,EAAA6L,GACA,IAAA2C,EAAAtC,EAAA7E,IAAArH,GACAyO,EAAAvC,EAAA7E,IAAAwE,GACA,OAAAK,EAAAM,4BACAgC,EAAAC,IAaAvC,EAAAM,4BAAA,SAAAgC,EAAAC,GACA,IAAA3C,EAAA0C,EAAAxF,UACA+C,EAAA0C,EAAAzF,UACAtX,EAAAua,EAAA5E,IAAAyE,EAAAC,GACA,GAAAvD,EAAA,EAAArjB,iBAAAuM,EAAA,CACA,IAAA+W,EAAAnB,EAAAD,MACA,sBAAAoB,EAAA,CACA,IAAAiG,EAAAjG,EAAAE,KAAAmD,GACA6C,EAAAlG,EAAAE,KAAAoD,GAEA,QAAA1b,IAAAqe,QAAAre,IAAAse,EAAA,CACA,GAAAD,IAAAC,EACAzC,EAAAQ,0BAAA+B,EAAAD,QACS,CACT,IAAAI,EAAAnG,EAAAsD,EAAAD,GACAI,EAAAwB,wBAAAe,EAAAD,EACAI,EAAAjB,QAAAiB,EAAAhB,SAEAlc,EAAAua,EAAA5E,IAAAyE,EAAAC,KAOA,OAHAra,IACAA,EAAAwa,EAAA2C,mBAEAnd,GAUAwa,EAAA2C,kBAAA,SAAAjE,EAAAC,EAAAC,GACA,QAAAza,IAAAwa,GAAAD,IAAAC,EAAA,CACA,QAAAvjB,EAAA,EAAAC,EAAAqjB,EAAApjB,OAAsCF,EAAAC,IAAQD,EAC9CujB,EAAAvjB,GAAAsjB,EAAAtjB,GAEAsjB,EAAAC,EAEA,OAAAD,GAWAsB,EAAAY,eAAA,SAAAlC,EAAAC,EAAAC,GACA,IAAAhL,EACA,QAAAzP,IAAAwa,EAAA,CACA,QAAAvjB,EAAA,EAAAC,EAAAqjB,EAAApjB,OAAsCF,EAAAC,IAAQD,EAC9CujB,EAAAvjB,GAAAsjB,EAAAtjB,GAEAwY,EAAA+K,OAEA/K,EAAA8K,EAAAliB,QAEA,OAAAoX,GAkBAoM,EAAAxa,UAAA,SAAAzI,EAAA+W,EAAA6L,GAEA,OADAK,EAAAqC,aAAAvO,EAAA6L,EACA3c,CAAAjG,OAAAoH,EAAApH,EAAAzB,SAcA0kB,EAAA4C,gBAAA,SAAA1nB,EAAA4Y,EAAA6L,GACA,IAAA3c,EAAAgd,EAAAqC,aAAAvO,EAAA6L,GACA,OAAAkD,EAAA,EAAA9f,eAAA7H,EAAA8H,IAYAgd,EAAA8C,yBAAA,SAAAzE,EAAAiE,EAAAC,GAGA,OAFAvC,EAAAM,4BACAgC,EAAAC,EACAvf,CAAAqb,IAQA2B,EAAA+C,UAAA,WAGA/C,EAAAQ,yBAAAtB,EAAAV,aACAwB,EAAAQ,yBAAAlB,EAAAd,aAGAwB,EAAAa,wBACAvB,EAAAd,YACAU,EAAAV,YACAU,EAAAT,aACAS,EAAAF,aAGAgB,EAAA+C,YACAjoB,EAAA,kCChgBA,IAAAkoB,GAMAC,KAAA,WACA,UAOAC,MAAA,WACA,WAEApoB,EAAA,6ECkCAqoB,EAAA,SAAAC,GACAC,EAAA,EAAAnkB,KAAA0Z,MAMA0K,EAAA,EAAA5oB,OAAAke,MAMAA,KAAA2K,gBAEApf,IAAAif,GACAxK,KAAA4K,cAAAJ,IAIAE,EAAA,EAAAppB,SAAAipB,EAAAE,EAAA,GAOAF,EAAAM,yBAOAN,EAAAO,mBAAA,SAAA1e,GACA,OAAAme,EAAAM,sBAAA1P,eAAA/O,GACAme,EAAAM,sBAAAze,GACAme,EAAAM,sBAAAze,GAAA,UAAAA,GAUAme,EAAA9oB,UAAA8gB,IAAA,SAAAnW,GACA,IAAA1I,EAIA,OAHAsc,KAAA2K,QAAAxP,eAAA/O,KACA1I,EAAAsc,KAAA2K,QAAAve,IAEA1I,GASA6mB,EAAA9oB,UAAAspB,QAAA,WACA,OAAArpB,OAAAmK,KAAAmU,KAAA2K,UASAJ,EAAA9oB,UAAAupB,cAAA,WACA,OAAAC,EAAA,EAAApQ,UAA2BmF,KAAA2K,UAQ3BJ,EAAA9oB,UAAAypB,OAAA,SAAA9e,EAAA+e,GACA,IAAAC,EACAA,EAAAb,EAAAO,mBAAA1e,GACA4T,KAAAqL,cAAA,IAAAd,EAAAe,MAAAF,EAAAhf,EAAA+e,IACAC,EAAAG,EAAA,EAAAC,eACAxL,KAAAqL,cAAA,IAAAd,EAAAe,MAAAF,EAAAhf,EAAA+e,KAWAZ,EAAA9oB,UAAAoL,IAAA,SAAAT,EAAA1I,EAAA+nB,GACA,GAAAA,EACAzL,KAAA2K,QAAAve,GAAA1I,MACG,CACH,IAAAynB,EAAAnL,KAAA2K,QAAAve,GACA4T,KAAA2K,QAAAve,GAAA1I,EACAynB,IAAAznB,GACAsc,KAAAkL,OAAA9e,EAAA+e,KAaAZ,EAAA9oB,UAAAmpB,cAAA,SAAArP,EAAAkQ,GACA,IAAArf,EACA,IAAAA,KAAAmP,EACAyE,KAAAnT,IAAAT,EAAAmP,EAAAnP,GAAAqf,IAWAlB,EAAA9oB,UAAAiqB,MAAA,SAAAtf,EAAAqf,GACA,GAAArf,KAAA4T,KAAA2K,QAAA,CACA,IAAAQ,EAAAnL,KAAA2K,QAAAve,UACA4T,KAAA2K,QAAAve,GACAqf,GACAzL,KAAAkL,OAAA9e,EAAA+e,KAiBAZ,EAAAe,MAAA,SAAAlgB,EAAAgB,EAAA+e,GACAQ,EAAA,EAAArlB,KAAA0Z,KAAA5U,GAOA4U,KAAA5T,MAQA4T,KAAAmL,YAGAT,EAAA,EAAAppB,SAAAipB,EAAAe,MAAAK,EAAA,GACAzpB,EAAA,6CCzNA0pB,GAQAC,YAAA,cAOA1U,MAAA2U,EAAA,EAAA3U,MAOAC,SAAA0U,EAAA,EAAA1U,SAOA2U,YAAA,cAQAC,YAAA,cAEAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBAGArqB,EAAA,oDCpDAsqB,KAEAC,EAAA,oBAAAC,UACAA,UAAAC,UAAAC,cAAA,GAMAJ,EAAAK,SAAA,IAAAJ,EAAApgB,QAAA,WAMAmgB,EAAAM,QAAA,IAAAL,EAAApgB,QAAA,eAAAogB,EAAApgB,QAAA,SAMAmgB,EAAAO,QAAA,IAAAN,EAAApgB,QAAA,eAAAogB,EAAApgB,QAAA,QAMAmgB,EAAAQ,KAAA,IAAAP,EAAApgB,QAAA,aAUAmgB,EAAAS,mBAAA1Y,OAAA2Y,kBAAA,EAOAV,EAAAW,kBAAA,EAUAX,EAAAY,OAAA1C,EAAA,EAAAtqB,eAAA,WAKA,2BAAAmU,QACA,SAEA,IACA,IAAA5C,EAAAyD,SAAAC,cAAA,UAAA7D,WAAA,MACA,QAAAG,SAGApG,IAAAoG,EAAA0b,cACAb,EAAAW,kBAAA,IAEA,GAEK,MAAAlf,GACL,UAnBA,GA8BAue,EAAAc,mBAAA,2BAAA/Y,OASAiY,EAAAe,YAAA,gBAAAb,UASAF,EAAAgB,MAAA9C,EAAA,EAAA5qB,cAAA,iBAAAyU,OAQAiY,EAAAiB,QAAA,iBAAAlZ,OAQAiY,EAAAkB,YAAAhB,UAAA,iBAUAF,EAAAmB,MAGA,WACA,GAAAjD,EAAA,EAAAnqB,aAAA,CACA,IACAqtB,EADAC,GAAA,EAEkCC,KAElC,6BAAAvZ,OACA,IACA,IAAA9C,EACA2D,SAAAC,cAAA,UACA0Y,EAAAC,EAAA,EAAAxc,WAAAC,GACAwc,8BAAA,IAEAF,IACAF,GAAA,EACAD,EACAG,EAAAG,aAAAH,EAAAI,kBACAL,EAAAC,EAAAK,0BAEO,MAAAngB,IAIPue,EAAAmB,MAAAE,EACAnD,EAAA,EAAArpB,iBAAAysB,EACApD,EAAA,EAAAtpB,uBAAAwsB,GAzBA,GA4BA1rB,EAAA,kCCnJA,IAAAmsB,EAAA,SAAAjjB,GAKA4U,KAAAsO,mBAOAtO,KAAA5U,OAOA4U,KAAApV,OAAA,MAWAyjB,EAAA5sB,UAAA8sB,eAQAF,EAAA5sB,UAAA+sB,gBAAA,WACAxO,KAAAsO,oBAAA,GAOAD,EAAAG,gBAAA,SAAA/jB,GACAA,EAAA+jB,mBAOAH,EAAAE,eAAA,SAAA9jB,GACAA,EAAA8jB,kBAEArsB,EAAA,kCCvEA,IAAAusB,GAYAC,YAAA,SAAAnpB,EAAAC,EAAAC,EAAAC,EAAAkH,EAAA+hB,GACA,IAEA3U,EAFA4U,EAAAD,MACAnsB,EAAA,EAEA,IAAAwX,EAAAxU,EAAkBwU,EAAAvU,EAASuU,GAAAtU,EAAA,CAC3B,IAAA5B,EAAAyB,EAAAyU,GACAjW,EAAAwB,EAAAyU,EAAA,GACA4U,EAAApsB,KAAAoK,EAAA,GAAA9I,EAAA8I,EAAA,GAAA7I,EAAA6I,EAAA,GACAgiB,EAAApsB,KAAAoK,EAAA,GAAA9I,EAAA8I,EAAA,GAAA7I,EAAA6I,EAAA,GAKA,OAHA+hB,GAAAC,EAAAlsB,QAAAF,IACAosB,EAAAlsB,OAAAF,GAEAosB,GAcAxgB,OAAA,SAAA7I,EAAAC,EAAAC,EAAAC,EAAA2I,EAAAwgB,EAAAF,GAOA,IANA,IAAAC,EAAAD,MACA1mB,EAAAhF,KAAAgF,IAAAoG,GACAlG,EAAAlF,KAAAkF,IAAAkG,GACAygB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACArsB,EAAA,EACAwX,EAAAxU,EAAsBwU,EAAAvU,EAASuU,GAAAtU,EAAA,CAC/B,IAAA8D,EAAAjE,EAAAyU,GAAA8U,EACArlB,EAAAlE,EAAAyU,EAAA,GAAA+U,EACAH,EAAApsB,KAAAssB,EAAAtlB,EAAAvB,EAAAwB,EAAAtB,EACAymB,EAAApsB,KAAAusB,EAAAvlB,EAAArB,EAAAsB,EAAAxB,EACA,QAAAiS,EAAAF,EAAA,EAAuBE,EAAAF,EAAAtU,IAAgBwU,EACvC0U,EAAApsB,KAAA+C,EAAA2U,GAMA,OAHAyU,GAAAC,EAAAlsB,QAAAF,IACAosB,EAAAlsB,OAAAF,GAEAosB,GAgBAtgB,MAAA,SAAA/I,EAAAC,EAAAC,EAAAC,EAAAiJ,EAAAC,EAAAigB,EAAAF,GAKA,IAJA,IAAAC,EAAAD,MACAG,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACArsB,EAAA,EACAwX,EAAAxU,EAAsBwU,EAAAvU,EAASuU,GAAAtU,EAAA,CAC/B,IAAA8D,EAAAjE,EAAAyU,GAAA8U,EACArlB,EAAAlE,EAAAyU,EAAA,GAAA+U,EACAH,EAAApsB,KAAAssB,EAAAngB,EAAAnF,EACAolB,EAAApsB,KAAAusB,EAAAngB,EAAAnF,EACA,QAAAyQ,EAAAF,EAAA,EAAuBE,EAAAF,EAAAtU,IAAgBwU,EACvC0U,EAAApsB,KAAA+C,EAAA2U,GAMA,OAHAyU,GAAAC,EAAAlsB,QAAAF,IACAosB,EAAAlsB,OAAAF,GAEAosB,GAcArgB,UAAA,SAAAhJ,EAAAC,EAAAC,EAAAC,EAAA8D,EAAAC,EAAAklB,GACA,IAEA3U,EAAAE,EAFA0U,EAAAD,MACAnsB,EAAA,EAEA,IAAAwX,EAAAxU,EAAkBwU,EAAAvU,EAASuU,GAAAtU,EAG3B,IAFAkpB,EAAApsB,KAAA+C,EAAAyU,GAAAxQ,EACAolB,EAAApsB,KAAA+C,EAAAyU,EAAA,GAAAvQ,EACAyQ,EAAAF,EAAA,EAAmBE,EAAAF,EAAAtU,IAAgBwU,EACnC0U,EAAApsB,KAAA+C,EAAA2U,GAMA,OAHAyU,GAAAC,EAAAlsB,QAAAF,IACAosB,EAAAlsB,OAAAF,GAEAosB,IAEA1sB,EAAA,kCC5GAA,EAAA,GATA8sB,QAAA,UACAC,QAAA,UACA1J,OAAA,SACA2J,QAAA,SACAC,eAAA,gBACAC,eAAA,gBACAC,OAAA,2ECVAC,EAAAC,EAAA,IA2BAC,EAAA,SAAAC,EAAAvO,GAEAwO,EAAA,EAAAppB,KAAA0Z,MAEA,IAAAqB,EAAAH,MAcA,GARAlB,KAAA2P,UAAAtO,EAAAuO,OAMA5P,KAAA6P,OAAAJ,MAEAzP,KAAA2P,QACA,QAAAntB,EAAA,EAAAC,EAAAud,KAAA6P,OAAAntB,OAA4CF,EAAAC,IAAQD,EACpDwd,KAAA8P,cAAA9P,KAAA6P,OAAArtB,MAIAwd,KAAA+P,iBAIArF,EAAA,EAAAppB,SAAAkuB,EAAAE,EAAA,GAOAF,EAAA/tB,UAAAmK,MAAA,WACA,KAAAoU,KAAAgB,YAAA,GACAhB,KAAAgQ,OAYAR,EAAA/tB,UAAAuE,OAAA,SAAAqW,GACA,IAAA7Z,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA4Z,EAAA3Z,OAA8BF,EAAAC,IAAQD,EACtCwd,KAAA/T,KAAAoQ,EAAA7Z,IAEA,OAAAwd,MAaAwP,EAAA/tB,UAAAsmB,QAAA,SAAA7Z,EAAA9H,GAGA,IAFA,IAAA6pB,EAAA,EAAA/hB,EAAAgiB,KAAA9pB,GAAA8H,EACAiiB,EAAAnQ,KAAA6P,OACArtB,EAAA,EAAAC,EAAA0tB,EAAAztB,OAAoCF,EAAAC,IAAQD,EAC5CytB,EAAAE,EAAA3tB,KAAA2tB,IAaAX,EAAA/tB,UAAA2uB,SAAA,WACA,OAAApQ,KAAA6P,QAUAL,EAAA/tB,UAAA4uB,KAAA,SAAAhT,GACA,OAAA2C,KAAA6P,OAAAxS,IAUAmS,EAAA/tB,UAAAuf,UAAA,WACA,OACsBhB,KAAAuC,IAAAiN,EAAAc,UAAAC,SAWtBf,EAAA/tB,UAAA+uB,SAAA,SAAAnT,EAAAoT,GACAzQ,KAAA2P,SACA3P,KAAA8P,cAAAW,GAEAzQ,KAAA6P,OAAAvjB,OAAA+Q,EAAA,EAAAoT,GACAzQ,KAAA+P,gBACA/P,KAAAqL,cACA,IAAAmE,EAAAlE,MAAAoF,EAAA,EAAAC,IAAAF,KAUAjB,EAAA/tB,UAAAuuB,IAAA,WACA,OAAAhQ,KAAA4Q,SAAA5Q,KAAAgB,YAAA,IAUAwO,EAAA/tB,UAAAwK,KAAA,SAAAwkB,GACAzQ,KAAA2P,SACA3P,KAAA8P,cAAAW,GAEA,IAAAhX,EAAAuG,KAAAgB,YAEA,OADAhB,KAAAwQ,SAAA/W,EAAAgX,GACAzQ,KAAAgB,aAUAwO,EAAA/tB,UAAAob,OAAA,SAAA4T,GACA,IACAjuB,EAAAC,EADA4Z,EAAA2D,KAAA6P,OAEA,IAAArtB,EAAA,EAAAC,EAAA4Z,EAAA3Z,OAA8BF,EAAAC,IAAQD,EACtC,GAAA6Z,EAAA7Z,KAAAiuB,EACA,OAAAzQ,KAAA4Q,SAAApuB,IAcAgtB,EAAA/tB,UAAAmvB,SAAA,SAAAvT,GACA,IAAAwT,EAAA7Q,KAAA6P,OAAAxS,GAKA,OAJA2C,KAAA6P,OAAAvjB,OAAA+Q,EAAA,GACA2C,KAAA+P,gBACA/P,KAAAqL,cACA,IAAAmE,EAAAlE,MAAAoF,EAAA,EAAAI,OAAAD,IACAA,GAUArB,EAAA/tB,UAAAsvB,MAAA,SAAA1T,EAAAoT,GACA,IAAAhX,EAAAuG,KAAAgB,YACA,GAAA3D,EAAA5D,EAAA,CACAuG,KAAA2P,SACA3P,KAAA8P,cAAAW,EAAApT,GAEA,IAAAwT,EAAA7Q,KAAA6P,OAAAxS,GACA2C,KAAA6P,OAAAxS,GAAAoT,EACAzQ,KAAAqL,cACA,IAAAmE,EAAAlE,MAAAoF,EAAA,EAAAI,OAAAD,IACA7Q,KAAAqL,cACA,IAAAmE,EAAAlE,MAAAoF,EAAA,EAAAC,IAAAF,QACG,CACH,IAAAzW,EACA,IAAAA,EAAAP,EAAeO,EAAAqD,IAAWrD,EAC1BgG,KAAAwQ,SAAAxW,OAAAzO,GAEAyU,KAAAwQ,SAAAnT,EAAAoT,KAQAjB,EAAA/tB,UAAAsuB,cAAA,WACA/P,KAAAnT,IAAA2iB,EAAAc,UAAAC,OAAAvQ,KAAA6P,OAAAntB,SASA8sB,EAAA/tB,UAAAquB,cAAA,SAAAW,EAAAO,GACA,QAAAxuB,EAAA,EAAAC,EAAAud,KAAA6P,OAAAntB,OAA0CF,EAAAC,IAAQD,EAClD,GAAAwd,KAAA6P,OAAArtB,KAAAiuB,GAAAjuB,IAAAwuB,EACA,UAAAC,EAAA,OAUAzB,EAAAc,WACAC,OAAA,UAeAf,EAAAlE,MAAA,SAAAlgB,EAAA8lB,GAEA5B,EAAA,EAAAhpB,KAAA0Z,KAAA5U,GAOA4U,KAAArB,QAAAuS,GAGAxG,EAAA,EAAAppB,SAAAkuB,EAAAlE,MAAAgE,EAAA,GACAptB,EAAA,kCCpSAA,EAAA,GANAqW,KAAA,EACAC,QAAA,EACAC,OAAA,EACAjB,MAAA,iCCMAtV,EAAA,GANAivB,GAAA,KACAC,IAAA,MACAC,IAAA,MACAC,KAAA,sCCCApvB,EAAA,GANAqvB,MAAA,QACAC,KAAA,OACAC,YAAA,cACAC,OAAA,wCCRA,IAAAC,GASAC,OAAA,SAAAtY,GACA,OAAArW,KAAAgW,IAAAK,EAAA,IAUAuY,QAAA,SAAAvY,GACA,SAAAqY,EAAAC,OAAA,EAAAtY,IAUAwY,SAAA,SAAAxY,GACA,SAAAA,IAAA,EAAAA,OAUAyY,OAAA,SAAAzY,GACA,OAAAA,GAYA0Y,UAAA,SAAA1Y,GACA,OAAAA,EAAA,GACAqY,EAAAG,SAAA,EAAAxY,GAEA,EAAAqY,EAAAG,SAAA,GAAAxY,EAAA,OAGApX,EAAA,oECvCA+vB,EAAA,WAEAC,EAAA,EAAA5rB,KAAA0Z,MAMAA,KAAAmS,oBAMAnS,KAAAoS,gBAMApS,KAAAqS,eAIA3H,EAAA,EAAAppB,SAAA2wB,EAAAC,EAAA,GAOAD,EAAAxwB,UAAAuK,iBAAA,SAAAZ,EAAAV,GACA,IAAAM,EAAAgV,KAAAqS,WAAAjnB,GACAJ,IACAA,EAAAgV,KAAAqS,WAAAjnB,QAEA,IAAAJ,EAAAqB,QAAA3B,IACAM,EAAAiB,KAAAvB,IAYAunB,EAAAxwB,UAAA4pB,cAAA,SAAAiH,GACA,IAAA7nB,EAAA,iBAAA6nB,EAAA,IAAA3G,EAAA,EAAA2G,KACAlnB,EAAAX,EAAAW,KACAX,EAAAG,OAAAoV,KACA,IACAuS,EADAvnB,EAAAgV,KAAAqS,WAAAjnB,GAEA,GAAAJ,EAAA,CACAI,KAAA4U,KAAAoS,eACApS,KAAAoS,aAAAhnB,GAAA,EACA4U,KAAAmS,iBAAA/mB,GAAA,KAEA4U,KAAAoS,aAAAhnB,GACA,QAAA5I,EAAA,EAAAC,EAAAuI,EAAAtI,OAA0CF,EAAAC,IAAQD,EAClD,QAAAwI,EAAAxI,GAAA8D,KAAA0Z,KAAAvV,MAAA6jB,mBAAA,CACAiE,GAAA,EACA,MAIA,KADAvS,KAAAoS,aAAAhnB,GACA,IAAA4U,KAAAoS,aAAAhnB,GAAA,CACA,IAAAonB,EAAAxS,KAAAmS,iBAAA/mB,GAEA,WADA4U,KAAAmS,iBAAA/mB,GACAonB,KACAxS,KAAAtU,oBAAAN,EAAAsf,EAAA,EAAA7oB,qBAEAme,KAAAoS,aAAAhnB,GAEA,OAAAmnB,IAQAN,EAAAxwB,UAAAgxB,gBAAA,WACAC,EAAA,EAAAnmB,YAAAyT,OAWAiS,EAAAxwB,UAAA0J,aAAA,SAAAC,GACA,OAAA4U,KAAAqS,WAAAjnB,IASA6mB,EAAAxwB,UAAAkxB,YAAA,SAAAC,GACA,OAAAA,EACAA,KAAA5S,KAAAqS,WACA3wB,OAAAmK,KAAAmU,KAAAqS,YAAA3vB,OAAA,GAQAuvB,EAAAxwB,UAAAiK,oBAAA,SAAAN,EAAAV,GACA,IAAAM,EAAAgV,KAAAqS,WAAAjnB,GACA,GAAAJ,EAAA,CACA,IAAAqS,EAAArS,EAAAqB,QAAA3B,GACAU,KAAA4U,KAAAmS,kBAEAnnB,EAAAqS,GAAAqN,EAAA,EAAA7oB,eACAme,KAAAmS,iBAAA/mB,KAEAJ,EAAAsB,OAAA+Q,EAAA,GACA,IAAArS,EAAAtI,eACAsd,KAAAqS,WAAAjnB,MAKAlJ,EAAA,kCC/IAA,EAAA,GARAyC,QAAA,EACAK,aAAA,EACAD,MAAA,EACAF,MAAA,EACAC,MAAA,EACAF,KAAA,kCCLA,IAAAiuB,GACApM,QAAA,UACAqM,KAAA,KACAxN,OAAA,IACAyN,OAAA,SACAC,YAAA,cACAC,OAAA,QAUA1O,oBAEAsO,EAAAtO,gBAAAsO,EAAApM,SACA,EAAAxjB,KAAAsX,GAAA,YACAsY,EAAAtO,gBAAAsO,EAAAC,MAAA,MACAD,EAAAtO,gBAAAsO,EAAAvN,QAAA,EACAuN,EAAAtO,gBAAAsO,EAAAI,QAAA,UACA/wB,EAAA,kCC5BA,IAAAgxB,GASAC,aAAA,YASAC,iBAAA,gBAQAC,mBAAA,kBASAC,kBAAA,iBASAC,cAAA,cASAL,EAAAte,gBAAA,WACA,IAAAW,EACAie,KACA,gBAAA5f,GAIA,GAHA2B,IACAA,EAAAH,SAAAC,cAAA,OAAAE,SAEA3B,KAAA4f,GAAA,CACAje,EAAA3B,OACA,IAAA6f,EAAAle,EAAAxB,WAEA,GADAwB,EAAA3B,KAAA,IACA6f,EACA,YAEAD,EAAA5f,GAAA6f,EAAAC,MAAA,QAEA,OAAAF,EAAA5f,IAhBA,GAmBA1R,EAAA,2GCxCAyxB,EAAA,SAAAtS,GAEA,IAAAuS,EAAAC,EAAA,EAAAhZ,UAAsCwG,UACtCuS,EAAA1Y,OAEA4Y,EAAA,EAAAxtB,KAAA0Z,KAA8D,GAM9DA,KAAA+T,kBAAA,KAMA/T,KAAAgU,cAAA,KAMAhU,KAAAiU,iBAAA,KAEA5S,EAAA6S,KACAlU,KAAAmU,OAAA9S,EAAA6S,KAGAE,EAAA,EAAAtoB,OAAAkU,KACA0P,EAAA,EAAA5E,mBAAAuJ,EAAA,EAAAhF,QACArP,KAAAsU,4BAAAtU,MAEA,IAAA9E,EAAAmG,EAAAnG,OAAAmG,EAAAnG,OAAA,KACA8E,KAAAuU,UAAArZ,IAGAsZ,EAAA,EAAAlzB,SAAAqyB,EAAAG,EAAA,GAWAH,EAAAc,oBAAA,SAAAC,EAAA7sB,GACA,OAAA6sB,EAAAC,SAAA9sB,GAAA6sB,EAAAE,eACA/sB,EAAA6sB,EAAAG,eAOAlB,EAAAlyB,UAAAqzB,eAAA,SAAArF,GACA,IAAAU,EAAAV,MAEA,OADAU,EAAAlkB,KAAA+T,MACAmQ,GAOAwD,EAAAlyB,UAAAszB,oBAAA,SAAAC,GACA,IAAAC,EAAAD,MAEA,OADAC,EAAAhpB,KAAA+T,KAAAkV,iBACAD,GAUAtB,EAAAlyB,UAAA0zB,UAAA,WAEA,OADAnV,KAAAuC,IAAA8R,EAAA,EAAAhF,SACqC,MAOrCsE,EAAAlyB,UAAA2zB,eAAA,WACA,IAAAla,EAAA8E,KAAAmV,YACA,OAAAja,IAAAma,WAAAC,EAAA,EAAAC,WAOA5B,EAAAlyB,UAAA+zB,oBAAA,WACAxV,KAAAyV,WAOA9B,EAAAlyB,UAAA6yB,4BAAA,WACAtU,KAAAiU,mBACAG,EAAA,EAAAtpB,cAAAkV,KAAAiU,kBACAjU,KAAAiU,iBAAA,MAEA,IAAA/Y,EAAA8E,KAAAmV,YACAja,IACA8E,KAAAiU,iBAAAG,EAAA,EAAAtoB,OAAAoP,EACAwa,EAAA,EAAAze,OAAA+I,KAAAwV,oBAAAxV,OAEAA,KAAAyV,WAgBA9B,EAAAlyB,UAAA0yB,OAAA,SAAAD,GACAlU,KAAA+T,oBACAK,EAAA,EAAAtpB,cAAAkV,KAAA+T,mBACA/T,KAAA+T,kBAAA,MAEAG,GACAlU,KAAAyV,UAEAzV,KAAAgU,gBACAI,EAAA,EAAAtpB,cAAAkV,KAAAgU,eACAhU,KAAAgU,cAAA,MAEAE,IACAlU,KAAA+T,kBAAAK,EAAA,EAAAtoB,OACAooB,EAAAyB,EAAA,EAAAC,WAAA,SAAAnrB,GACA,IAAAiqB,EAAA1U,KAAAkV,gBACAR,EAAAmB,SAAA,EACAnB,EAAAoB,OAAA7wB,IACAwF,EAAAsrB,WAAAC,iBAAA/pB,KAAAyoB,GACAjqB,EAAAsrB,WAAAE,YAAAzB,EAAA,EAAA1yB,OAAAke,OAAA0U,GACS1U,MACTA,KAAAgU,cAAAI,EAAA,EAAAtoB,OACAkU,KAAA0V,EAAA,EAAAze,OAAAid,EAAAgC,OAAAhC,GACAlU,KAAAyV,YAWA9B,EAAAlyB,UAAA8yB,UAAA,SAAArZ,GACA8E,KAAAnT,IAAAwnB,EAAA,EAAAhF,OAAAnU,IAEAhZ,EAAA,kCCvLAA,EAAA,GATAyuB,IAAA,MAMAG,OAAA,2DCbAqF,GASAC,cAAA,6BASAC,gBAAA,cAUAC,QAAA,SAAAC,GACA,OAAA7pB,MAAAkQ,QAAA2Z,GACAA,EAEAJ,EAAAK,WAAmD,IAWnDC,SAAA,SAAAF,GACA,uBAAAA,EACAA,EAEAJ,EAAAO,SAAAH,IASAI,UAAA,SAAAJ,GACA,IAAA9Y,EAAArI,SAAAC,cAAA,OACAoI,EAAAlI,MAAAghB,QACAnhB,SAAAQ,KAAAC,YAAA4H,GACA,IAAAmZ,EAAA/X,iBAAApB,GAAA8Y,MAEA,OADAnhB,SAAAQ,KAAAG,YAAA0H,GACAmZ,IAQAT,EAAAK,WAAA,WAWA,IAKAhD,KAKAqD,EAAA,EAEA,gBAKAC,GACA,IAAAP,EACA,GAAA/C,EAAArY,eAAA2b,GACAP,EAAA/C,EAAAsD,OACS,CACT,GAAAD,GAtBA,KAsBA,CACA,IACAzqB,EADA5J,EAAA,EAEA,IAAA4J,KAAAonB,EACA,MAAAhxB,cACAgxB,EAAApnB,KACAyqB,GAIAN,EAAAJ,EAAAY,oBAAAD,GACAtD,EAAAsD,GAAAP,IACAM,EAEA,OAAAN,GA/CA,GA2DAJ,EAAAY,oBAAA,SAAAD,GACA,IAAAjd,EAAAmd,EAAAlpB,EAAAD,EAAA0oB,EAAAU,EAMA,GAJAd,EAAAE,gBAAAa,KAAAJ,KACAA,EAAAX,EAAAQ,UAAAG,IAGAX,EAAAC,cAAAc,KAAAJ,GAAA,CACA,IACA9oB,EADAyL,EAAAqd,EAAAp0B,OAAA,EAGAsL,EADAyL,GAAA,EACA,EAEA,EAEA,IAAA0d,EAAA,IAAA1d,GAAA,IAAAA,EACAI,EAAAiF,SAAAgY,EAAAM,OAAA,IAAAppB,KAAA,IACAgpB,EAAAlY,SAAAgY,EAAAM,OAAA,IAAAppB,KAAA,IACAF,EAAAgR,SAAAgY,EAAAM,OAAA,IAAAppB,KAAA,IAEAH,EADAspB,EACArY,SAAAgY,EAAAM,OAAA,IAAAppB,KAAA,IAEA,IAEA,GAAAA,IACA6L,MAAA,GAAAA,EACAmd,MAAA,GAAAA,EACAlpB,MAAA,GAAAA,EACAqpB,IACAtpB,MAAA,GAAAA,IAGA0oB,GAAA1c,EAAAmd,EAAAlpB,EAAAD,EAAA,UACG,GAAAipB,EAAAzqB,QAAA,UACH4qB,EAAAH,EAAAlzB,MAAA,MAAA8vB,MAAA,KAAAQ,IAAAmD,QACAd,EAAAJ,EAAAmB,UAAAL,IACG,GAAAH,EAAAzqB,QAAA,UACH4qB,EAAAH,EAAAlzB,MAAA,MAAA8vB,MAAA,KAAAQ,IAAAmD,SACAprB,KAAA,GACAsqB,EAAAJ,EAAAmB,UAAAL,IAEAzvB,EAAA,EAAAC,QAAA,MAEA,OAA6B,GAS7B0uB,EAAAmB,UAAA,SAAAf,EAAAgB,GACA,IAAAC,EAAAD,MAKA,OAJAC,EAAA,GAAAC,EAAA,EAAA5e,MAAA0d,EAAA,eACAiB,EAAA,GAAAC,EAAA,EAAA5e,MAAA0d,EAAA,eACAiB,EAAA,GAAAC,EAAA,EAAA5e,MAAA0d,EAAA,eACAiB,EAAA,GAAAC,EAAA,EAAA5e,MAAA0d,EAAA,QACAiB,GAQArB,EAAAO,SAAA,SAAAH,GACA,IAAA1c,EAAA0c,EAAA,GACA1c,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAmd,EAAAT,EAAA,GACAS,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAlpB,EAAAyoB,EAAA,GAKA,OAJAzoB,IAAA,EAAAA,KACAA,IAAA,MAGA,QAAA+L,EAAA,IAAAmd,EAAA,IAAAlpB,EAAA,UADAvC,IAAAgrB,EAAA,KAAAA,EAAA,IACA,KAEAr0B,EAAA,kCChMAA,EAAA,GAbAw1B,YAAA,cAKA9B,WAAA,aAKA+B,OAAA,oDCjBAC,GAQAC,YAAA,SAAAtB,GACA,OAAAqB,EAAAE,YAAAvB,GAC0D,EAE1DwB,EAAA,EAAAtB,SAAmD,IASnDqB,YAAA,SAAAvB,GACA,MACA,iBAAAA,GACAA,aAAAyB,eACAzB,aAAA0B,iBAGA/1B,EAAA,kCC7BA,IAAAg2B,GAUA10B,eAAA,SAAA20B,EAAAr0B,EAAAC,EAAAq0B,GACA,YAAA7sB,IAAA6sB,GACAA,EAAA,GAAAD,EACAC,EAAA,GAAAt0B,EACAs0B,EAAA,GAAAr0B,EACAq0B,IAEAD,EAAAr0B,EAAAC,IAWAs0B,UAAA,SAAAF,EAAAr0B,EAAAC,GACA,OAAAo0B,EAAA,IAAAr0B,EAAA,IAAAC,GASAu0B,OAAA,SAAAC,GACA,OAAAL,EAAAG,UAAAE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KASAC,QAAA,SAAApsB,GACA,OAAAA,EAAAsnB,MAAA,KAAAQ,IAAAmD,SAQAoB,KAAA,SAAAF,GACA,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAQAG,QAAA,SAAAH,GACA,IAGA/1B,EAAAm2B,EAHAR,EAAAI,EAAA,GACAK,EAAA,IAAAlsB,MAAAyrB,GACAU,EAAA,GAAAV,EAAA,EAEA,IAAA31B,EAAA,EAAaA,EAAA21B,IAAO31B,EAEpBm2B,EAAA,GACAJ,EAAA,GAAAM,IACAF,GAAA,GAEAJ,EAAA,GAAAM,IACAF,GAAA,GAEAC,EAAAp2B,GAAAs2B,OAAAC,aAAAJ,GACAE,IAAA,EAEA,OAAAD,EAAAI,KAAA,KASAC,iBAAA,SAAAV,EAAAzT,GACA,IAAAqT,EAAAI,EAAA,GACAz0B,EAAAy0B,EAAA,GACAx0B,EAAAw0B,EAAA,GAEA,GAAAzT,EAAAoU,aAAAf,KAAArT,EAAAqU,aACA,SAEA,IACAC,EADA92B,EAAAwiB,EAAAX,YAOA,QAFAiV,EAHA92B,EAGAwiB,EAAAuU,0BAAA/2B,EAAA61B,GAFArT,EAAAwU,iBAAAnB,KAOAiB,EAAAh1B,WAAAN,EAAAC,KAGA7B,EAAA,kCCjHA,IAAAq3B,GAUA91B,OAAA,SAAAsE,EAAAtE,EAAA+1B,GAMA,YALAjuB,IAAAiuB,IACAA,GAAA,MAEAA,EAAA,GAAAzxB,EAAA,KAAAtE,EACA+1B,EAAA,GAAAzxB,EAAA,KAAAtE,EACA+1B,GASAC,QAAA,SAAA1xB,GACA,OAAAA,EAAA,MAAAA,EAAA,MAWAuG,MAAA,SAAAvG,EAAA2xB,EAAAF,GAMA,YALAjuB,IAAAiuB,IACAA,GAAA,MAEAA,EAAA,GAAAzxB,EAAA,GAAA2xB,EAAA,KACAF,EAAA,GAAAzxB,EAAA,GAAA2xB,EAAA,KACAF,GAaAG,OAAA,SAAA5xB,EAAAyxB,GACA,OAAA9sB,MAAAkQ,QAAA7U,GACAA,QAEAwD,IAAAiuB,EACAA,GAAAzxB,KAEAyxB,EAAA,GAAAA,EAAA,GAAoD,EAEpDA,KAGAt3B,EAAA,kCCzDAA,EAAA,GANAqzB,UAAA,YACA/c,QAAA,UACAohB,MAAA,QACApiB,MAAA,iGCUAqiB,EAAA,WAEAC,EAAA,EAAAxzB,KAAA0Z,MAMAA,KAAA+Z,OAAAC,EAAA,EAAA7I,GAMAnR,KAAAta,OAAA,EAMAsa,KAAAza,gBAAA,MAIAmlB,EAAA,EAAAppB,SAAAu4B,EAAAC,EAAA,GAQAD,EAAAI,oBAAA,SAAAv0B,GACA,IAAAq0B,EAQA,OAPA,GAAAr0B,EACAq0B,EAAAC,EAAA,EAAA7I,GACG,GAAAzrB,EACHq0B,EAAAC,EAAA,EAAA5I,IACG,GAAA1rB,IACHq0B,EAAAC,EAAA,EAAA1I,MAE2C,GAQ3CuI,EAAAK,mBAAA,SAAAH,GACA,IAAAr0B,EAQA,OAPAq0B,GAAAC,EAAA,EAAA7I,GACAzrB,EAAA,EACGq0B,GAAAC,EAAA,EAAA5I,KAAA2I,GAAAC,EAAA,EAAA3I,IACH3rB,EAAA,EACGq0B,GAAAC,EAAA,EAAA1I,OACH5rB,EAAA,GAE2B,GAO3Bm0B,EAAAp4B,UAAA2C,WAAA+1B,EAAA,EAAA7P,MAMAuP,EAAAp4B,UAAA24B,cAAA,SAAA93B,GACA,OAAA+3B,EAAA,EAAA/0B,kCACA0a,KAAAza,gBAAA,EAAAya,KAAAza,gBAAA7C,OAAAsd,KAAAta,OACApD,IAQAu3B,EAAAp4B,UAAAggB,eAAA,aAQAoY,EAAAp4B,UAAA64B,mBAAA,WACA,OAAAta,KAAAza,gBAAA3B,MAAA,EAAAoc,KAAAta,SAOAm0B,EAAAp4B,UAAA84B,mBAAA,WACA,OAAAva,KAAAza,iBASAs0B,EAAAp4B,UAAA+4B,kBAAA,WACA,OAAAxa,KAAAza,gBAAA3B,MAAAoc,KAAAza,gBAAA7C,OAAAsd,KAAAta,SASAm0B,EAAAp4B,UAAAg5B,UAAA,WACA,OAAAza,KAAA+Z,QAOAF,EAAAp4B,UAAAi5B,sBAAA,SAAAC,GAQA,GAPA3a,KAAA4a,4BAAA5a,KAAA6a,gBACAhH,EAAA,EAAAjoB,MAAAoU,KAAA8a,yBACA9a,KAAA+a,yCAAA,EACA/a,KAAA4a,2BAAA5a,KAAA6a,eAIAF,EAAA,GACA,IAAA3a,KAAA+a,0CACAJ,GAAA3a,KAAA+a,yCACA,OAAA/a,KAEA,IAAA5T,EAAAuuB,EAAAjE,WACA,GAAA1W,KAAA8a,wBAAA3f,eAAA/O,GACA,OAAA4T,KAAA8a,wBAAA1uB,GAEA,IAAA4uB,EACAhb,KAAAib,8BAAAN,GAEA,OADAK,EAAAT,qBACA73B,OAAAsd,KAAAza,gBAAA7C,QACAsd,KAAA8a,wBAAA1uB,GAAA4uB,EACAA,IAQAhb,KAAA+a,yCAAAJ,EACA3a,OAWA6Z,EAAAp4B,UAAAw5B,8BAAA,SAAAN,GACA,OAAA3a,MAOA6Z,EAAAp4B,UAAAy5B,UAAA,WACA,OAAAlb,KAAAta,QASAm0B,EAAAp4B,UAAA05B,2BAAA,SAAApB,EAAAx0B,GACAya,KAAAta,OAAAm0B,EAAAK,mBAAAH,GACA/Z,KAAA+Z,SACA/Z,KAAAza,mBASAs0B,EAAAp4B,UAAA25B,eAAA,SAAA/4B,EAAAg5B,KASAxB,EAAAp4B,UAAA65B,UAAA,SAAAvB,EAAA13B,EAAAk5B,GAEA,IAAA71B,EACA,GAAAq0B,EACAr0B,EAAAm0B,EAAAK,mBAAAH,OACG,CACH,IAAAv3B,EACA,IAAAA,EAAA,EAAeA,EAAA+4B,IAAa/4B,EAAA,CAC5B,OAAAH,EAAAK,OAGA,OAFAsd,KAAA+Z,OAAAC,EAAA,EAAA7I,QACAnR,KAAAta,OAAA,GAGArD,EAAuCA,EAAA,GAGvCqD,EAAArD,EAAAK,OACAq3B,EAAAF,EAAAI,oBAAAv0B,GAEAsa,KAAA+Z,SACA/Z,KAAAta,UAQAm0B,EAAAp4B,UAAA0I,eAAA,SAAAC,GACA4V,KAAAza,kBACA6E,EAAA4V,KAAAza,gBAAAya,KAAAza,gBAAAya,KAAAta,QACAsa,KAAAyV,YASAoE,EAAAp4B,UAAA2M,OAAA,SAAAC,EAAAwgB,GACA,IAAAtpB,EAAAya,KAAAua,qBACA,GAAAh1B,EAAA,CACA,IAAAG,EAAAsa,KAAAkb,YACAM,EAAA,EAAAptB,OACA7I,EAAA,EAAAA,EAAA7C,OACAgD,EAAA2I,EAAAwgB,EAAAtpB,GACAya,KAAAyV,YASAoE,EAAAp4B,UAAA6M,MAAA,SAAAK,EAAA8sB,EAAAC,GACA,IAAA9sB,EAAA6sB,OACAlwB,IAAAqD,IACAA,EAAAD,GAEA,IAAAkgB,EAAA6M,EACA7M,IACAA,EAAAwL,EAAA,EAAArzB,UAAAgZ,KAAAmE,cAEA,IAAA5e,EAAAya,KAAAua,qBACA,GAAAh1B,EAAA,CACA,IAAAG,EAAAsa,KAAAkb,YACAM,EAAA,EAAAltB,MACA/I,EAAA,EAAAA,EAAA7C,OACAgD,EAAAiJ,EAAAC,EAAAigB,EAAAtpB,GACAya,KAAAyV,YASAoE,EAAAp4B,UAAA8M,UAAA,SAAA/E,EAAAC,GACA,IAAAlE,EAAAya,KAAAua,qBACA,GAAAh1B,EAAA,CACA,IAAAG,EAAAsa,KAAAkb,YACAM,EAAA,EAAAjtB,UACAhJ,EAAA,EAAAA,EAAA7C,OAAAgD,EACA8D,EAAAC,EAAAlE,GACAya,KAAAyV,YAWAoE,EAAAnL,YAAA,SAAAiN,EAAA/uB,EAAA+hB,GACA,IAAAppB,EAAAo2B,EAAApB,qBACA,GAAAh1B,EAEG,CACH,IAAAG,EAAAi2B,EAAAT,YACA,OAAAM,EAAA,EAAA9M,YACAnpB,EAAA,EAAAA,EAAA7C,OAAAgD,EACAkH,EAAA+hB,GALA,aAQAzsB,EAAA,6CC9UA05B,GAQAC,UAAA,SAAAC,EAAA5nB,EAAA6nB,GACA,IAAAC,OAAAzwB,IAAAwwB,EAAAD,EAAAG,QAAAF,GAAA,GAAAD,EACAI,EAAAF,EAAA3vB,QAAA,KAEA,OADA6vB,GAAA,IAAAA,EAAAF,EAAAt5B,OAAAw5B,GACAhoB,EAAA8nB,EAAA,IAAAtvB,MAAA,EAAAwH,EAAAgoB,GAAAlD,KAAA,KAAAgD,GASAG,gBAAA,SAAAC,EAAAC,GAIA,IAHA,IAAAC,GAAA,GAAAF,GAAA1I,MAAA,KACA6I,GAAA,GAAAF,GAAA3I,MAAA,KAEAlxB,EAAA,EAAiBA,EAAAS,KAAAK,IAAAg5B,EAAA55B,OAAA65B,EAAA75B,QAAoCF,IAAA,CACrD,IAAAg6B,EAAA1d,SAAAwd,EAAA95B,IAAA,QACAi6B,EAAA3d,SAAAyd,EAAA/5B,IAAA,QAEA,GAAAg6B,EAAAC,EACA,SAEA,GAAAA,EAAAD,EACA,SAIA,WAEAE,EAAA,ECrCAC,GAkBA/V,IAAA,SAAAziB,EAAAy4B,GAGA,OAFAz4B,EAAA,IAAAy4B,EAAA,GACAz4B,EAAA,IAAAy4B,EAAA,GACAz4B,GAWA04B,gBAAA,SAAA14B,EAAA24B,GACA,IAAAjjB,EAAAijB,EAAAC,YACAn1B,EAAAk1B,EAAA91B,YACAwB,EAAAZ,EAAA,GACAgB,EAAAhB,EAAA,GAIA5D,EAHAG,EAAA,GAGAqE,EACAvE,EAHAE,EAAA,GAGAyE,EACA,IAAA5E,GAAA,IAAAC,IACAD,EAAA,GAEA,IAAAgK,EAAA/K,KAAAgf,KAAAje,IAAAC,KAOA,OAHAuE,EAAAqR,EAAA7V,EAAAgK,EACApF,EAAAiR,EAAA5V,EAAA+J,IAiBAgvB,iBAAA,SAAA74B,EAAA84B,GACA,IAYAn5B,EAAAC,EAZAyE,EAAArE,EAAA,GACAyE,EAAAzE,EAAA,GACAwF,EAAAszB,EAAA,GACAx3B,EAAAw3B,EAAA,GACAx0B,EAAAkB,EAAA,GACAd,EAAAc,EAAA,GACAjB,EAAAjD,EAAA,GACAqD,EAAArD,EAAA,GACAzB,EAAA0E,EAAAD,EACAxE,EAAA6E,EAAAD,EACAq0B,EAAA,IAAAl5B,GAAA,IAAAC,EAAA,GACAD,GAAAwE,EAAAC,GAAAxE,GAAA2E,EAAAC,KAAA7E,IAAAC,KAAA,GAYA,OAVAi5B,GAAA,GACAp5B,EAAA2E,EACA1E,EAAA8E,GACGq0B,GAAA,GACHp5B,EAAA4E,EACA3E,EAAA+E,IAEAhF,EAAA2E,EAAAy0B,EAAAl5B,EACAD,EAAA8E,EAAAq0B,EAAAj5B,IAEAH,EAAAC,IA2BAo5B,eAAA,SAAAC,GACA,gBAKAj5B,GACA,OAAAw4B,EAAAU,WAAAl5B,EAAAi5B,KAaAE,oBAAA,SAAAC,EAAAC,EAAAJ,GACA,IAAAK,EAAAjd,EAAA,EAAA9F,OAAA8iB,EAAA,aACA15B,EAAAb,KAAA2W,IAAA,KAAA6jB,GACAC,EAAAN,GAAA,EACAO,EAAA16B,KAAAgW,IAAA,GAAAykB,GAEAE,EAAA36B,KAAA46B,MAAA/5B,EAAA,MACAZ,EAAAD,KAAA46B,OAAA/5B,EAAA,KAAA85B,GAAA,IACAE,EAAAh6B,EAAA,KAAA85B,EAAA,GAAA16B,EAaA,OAZA46B,EAAA76B,KAAAiW,KAAA4kB,EAAAH,OAEA,KACAG,EAAA,EACA56B,GAAA,GAGAA,GAAA,KACAA,EAAA,EACA06B,GAAA,GAGAA,EAAA,KAAAlB,EAAAb,UAAA34B,EAAA,QACAw5B,EAAAb,UAAAiC,EAAA,EAAAJ,GAAA,KACA,GAAAD,EAAA,OAAAF,EAAAQ,OAAAN,EAAA,SA+BAO,OAAA,SAAA75B,EAAA85B,EAAAb,GACA,OAAAj5B,EACA85B,EACAC,QAAA,MAAqB/5B,EAAA,GAAA83B,QAAAmB,IACrBc,QAAA,MAAqB/5B,EAAA,GAAA83B,QAAAmB,IAErB,IAUAr3B,OAAA,SAAAo4B,EAAAC,GAEA,IADA,IAAAr4B,GAAA,EACAvD,EAAA27B,EAAAz7B,OAAA,EAAsCF,GAAA,IAAQA,EAC9C,GAAA27B,EAAA37B,IAAA47B,EAAA57B,GAAA,CACAuD,GAAA,EACA,MAGA,OAAAA,GAoBAqI,OAAA,SAAAjK,EAAAkK,GACA,IAAAgwB,EAAAp7B,KAAAgF,IAAAoG,GACAiwB,EAAAr7B,KAAAkF,IAAAkG,GACAvK,EAAAK,EAAA,GAAAk6B,EAAAl6B,EAAA,GAAAm6B,EACAv6B,EAAAI,EAAA,GAAAk6B,EAAAl6B,EAAA,GAAAm6B,EAGA,OAFAn6B,EAAA,GAAAL,EACAK,EAAA,GAAAJ,EACAI,GAmBAmK,MAAA,SAAAnK,EAAAmK,GAGA,OAFAnK,EAAA,IAAAmK,EACAnK,EAAA,IAAAmK,EACAnK,GAYAo6B,IAAA,SAAAp6B,EAAAy4B,GAGA,OAFAz4B,EAAA,IAAAy4B,EAAA,GACAz4B,EAAA,IAAAy4B,EAAA,GACAz4B,GASAoV,gBAAA,SAAAilB,EAAAC,GACA,IAAAz6B,EAAAw6B,EAAA,GAAAC,EAAA,GACAx6B,EAAAu6B,EAAA,GAAAC,EAAA,GACA,OAAAz6B,IAAAC,KASAoc,SAAA,SAAAme,EAAAC,GACA,OAAAx7B,KAAAgf,KAAA0a,EAAApjB,gBAAAilB,EAAAC,KAWAC,yBAAA,SAAAv6B,EAAA84B,GACA,OAAAN,EAAApjB,gBAAApV,EACAw4B,EAAAK,iBAAA74B,EAAA84B,KA0BA0B,aAAA,SAAAx6B,EAAAi5B,GACA,OAAAj5B,EACAw4B,EAAAW,oBAAA,KAAAn5B,EAAA,GAAAi5B,GAAA,IACAT,EAAAW,oBAAA,KAAAn5B,EAAA,GAAAi5B,GAEA,IA0BAC,WAAA,SAAAl5B,EAAAi5B,GACA,OAAAT,EAAAqB,OAAA75B,EAAA,WAAqDi5B,KAErDl7B,EAAA,6CCxXA08B,GAWAC,yBAAA,SAAAt5B,EAAAC,EAAAC,EAAAC,EAAApD,GAUA,OATAw8B,EAAA,EAAA54B,cAAA5D,EAKA,SAAA6B,GACA,OAAAy6B,EAAAG,qBAAAx5B,EACAC,EAAAC,EAAAC,EAAAvB,EAAA,GAAAA,EAAA,OAeA46B,qBAAA,SAAAx5B,EAAAC,EAAAC,EAAAC,EAAA5B,EAAAC,GAWA,IAHA,IAAAi7B,EAAA,EACAv2B,EAAAlD,EAAAE,EAAAC,GACAmD,EAAAtD,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAAgD,EAAAnD,EAAAC,GACAsD,EAAAvD,EAAAC,EAAA,GACAqD,GAAA9E,EACA+E,EAAA/E,IAAA2E,EAAAD,IAAA1E,EAAA8E,IAAA/E,EAAA2E,IAAAK,EAAAD,GAAA,GACAm2B,IAEKl2B,GAAA/E,IAAA2E,EAAAD,IAAA1E,EAAA8E,IAAA/E,EAAA2E,IAAAK,EAAAD,GAAA,GACLm2B,IAEAv2B,EAAAC,EACAG,EAAAC,EAEA,WAAAk2B,GAaAC,sBAAA,SAAA15B,EAAAC,EAAA05B,EAAAx5B,EAAA5B,EAAAC,GACA,OAAAm7B,EAAAx8B,OACA,SAEA,IAAAk8B,EAAAG,qBACAx5B,EAAAC,EAAA05B,EAAA,GAAAx5B,EAAA5B,EAAAC,GACA,SAEA,IAAAvB,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EACvC,GAAAo8B,EAAAG,qBACAx5B,EAAA25B,EAAA18B,EAAA,GAAA08B,EAAA18B,GAAAkD,EAAA5B,EAAAC,GACA,SAGA,UAaAo7B,uBAAA,SAAA55B,EAAAC,EAAA45B,EAAA15B,EAAA5B,EAAAC,GACA,OAAAq7B,EAAA18B,OACA,SAEA,IAAAF,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACA,GAAAo8B,EAAAK,sBACA15B,EAAAC,EAAA05B,EAAAx5B,EAAA5B,EAAAC,GACA,SAEAyB,EAAA05B,IAAAx8B,OAAA,GAEA,WAEAR,EAAA,kCCxGA,IAAAm9B,EAAA,SAAAr8B,EAAAK,EAAAD,EAAAG,GAKAyc,KAAAhd,OAKAgd,KAAA3c,OAKA2c,KAAA5c,OAKA4c,KAAAzc,QAaA87B,EAAA77B,eAAA,SAAAR,EAAAK,EAAAD,EAAAG,EAAA61B,GACA,YAAA7tB,IAAA6tB,GACAA,EAAAp2B,OACAo2B,EAAA/1B,OACA+1B,EAAAh2B,OACAg2B,EAAA71B,OACA61B,GAEA,IAAAiG,EAAAr8B,EAAAK,EAAAD,EAAAG,IASA87B,EAAA59B,UAAA69B,SAAA,SAAA/G,GACA,OAAAvY,KAAA5b,WAAAm0B,EAAA,GAAAA,EAAA,KAQA8G,EAAA59B,UAAA89B,kBAAA,SAAAnG,GACA,OAAApZ,KAAAhd,MAAAo2B,EAAAp2B,MAAAo2B,EAAA/1B,MAAA2c,KAAA3c,MACA2c,KAAA5c,MAAAg2B,EAAAh2B,MAAAg2B,EAAA71B,MAAAyc,KAAAzc,MASA87B,EAAA59B,UAAA2C,WAAA,SAAAN,EAAAC,GACA,OAAAic,KAAAhd,MAAAc,MAAAkc,KAAA3c,MAAA2c,KAAA5c,MAAAW,MAAAic,KAAAzc,MAQA87B,EAAA59B,UAAAsE,OAAA,SAAAqzB,GACA,OAAApZ,KAAAhd,MAAAo2B,EAAAp2B,MAAAgd,KAAA5c,MAAAg2B,EAAAh2B,MACA4c,KAAA3c,MAAA+1B,EAAA/1B,MAAA2c,KAAAzc,MAAA61B,EAAA71B,MAOA87B,EAAA59B,UAAAuE,OAAA,SAAAozB,GACAA,EAAAp2B,KAAAgd,KAAAhd,OACAgd,KAAAhd,KAAAo2B,EAAAp2B,MAEAo2B,EAAA/1B,KAAA2c,KAAA3c,OACA2c,KAAA3c,KAAA+1B,EAAA/1B,MAEA+1B,EAAAh2B,KAAA4c,KAAA5c,OACA4c,KAAA5c,KAAAg2B,EAAAh2B,MAEAg2B,EAAA71B,KAAAyc,KAAAzc,OACAyc,KAAAzc,KAAA61B,EAAA71B,OAQA87B,EAAA59B,UAAAsF,UAAA,WACA,OAAAiZ,KAAAzc,KAAAyc,KAAA5c,KAAA,GAOAi8B,EAAA59B,UAAA4H,QAAA,WACA,OAAA2W,KAAAlZ,WAAAkZ,KAAAjZ,cAOAs4B,EAAA59B,UAAAqF,SAAA,WACA,OAAAkZ,KAAA3c,KAAA2c,KAAAhd,KAAA,GAQAq8B,EAAA59B,UAAA0H,WAAA,SAAAiwB,GACA,OAAApZ,KAAAhd,MAAAo2B,EAAA/1B,MACA2c,KAAA3c,MAAA+1B,EAAAp2B,MACAgd,KAAA5c,MAAAg2B,EAAA71B,MACAyc,KAAAzc,MAAA61B,EAAAh2B,MAEAlB,EAAA,mIClIAs9B,EAAA,SAAAne,GAmBA,IAAAoe,EACA,GAdAzf,KAAA0f,aAAAn0B,IAAA8V,EAAAqe,QAAAre,EAAAqe,QAAA,EAMA1f,KAAA2f,aAAAte,EAAAue,YACAC,EAAA,EAAAp4B,OAAA0oB,EAAA,EAAAxS,SAAAqC,KAAA2f,aAAA,SAAA9xB,EAAAC,GACA,OAAAA,EAAAD,IACG,QAKHwT,EAAAye,QACA,QAAAt9B,EAAA,EAAAC,EAAAud,KAAA2f,aAAAj9B,OAAA,EAAsDF,EAAAC,IAAQD,EAC9D,GAAAi9B,GAGA,GAAAzf,KAAA2f,aAAAn9B,GAAAwd,KAAA2f,aAAAn9B,EAAA,KAAAi9B,EAAA,CACAA,OAAAl0B,EACA,YAJAk0B,EAAAzf,KAAA2f,aAAAn9B,GAAAwd,KAAA2f,aAAAn9B,EAAA,GAeAwd,KAAA+f,YAAAN,EAOAzf,KAAAggB,QAAAhgB,KAAA2f,aAAAj9B,OAAA,EAMAsd,KAAAigB,aAAA10B,IAAA8V,EAAA6e,OAAA7e,EAAA6e,OAAA,KAMAlgB,KAAAmgB,SAAA,UACA50B,IAAA8V,EAAAye,UACA9f,KAAAmgB,SAAA9e,EAAAye,QACAD,EAAA,EAAAp4B,OAAAuY,KAAAmgB,SAAAz9B,QAAAsd,KAAA2f,aAAAj9B,OACA,KAGA,IAAAJ,EAAA+e,EAAA/e,YAEAiJ,IAAAjJ,GACA0d,KAAAigB,SAAAjgB,KAAAmgB,WACAngB,KAAAigB,QAAAhW,EAAA,EAAAvjB,WAAApE,IAGAu9B,EAAA,EAAAp4B,QACAuY,KAAAigB,SAAAjgB,KAAAmgB,UAAAngB,KAAAigB,UAAAjgB,KAAAmgB,SACA,IAMAngB,KAAAogB,WAAA,UACA70B,IAAA8V,EAAAgf,YACArgB,KAAAogB,WAAA/e,EAAAgf,UACAR,EAAA,EAAAp4B,OAAAuY,KAAAogB,WAAA19B,QAAAsd,KAAA2f,aAAAj9B,OACA,KAOAsd,KAAAsgB,eAAA/0B,IAAA8V,EAAAkf,SACAlf,EAAAkf,SACAvgB,KAAAogB,WAAA,KAAA1c,EAAA,EAAAxjB,kBACA2/B,EAAA,EAAAp4B,QACAuY,KAAAsgB,WAAAtgB,KAAAogB,YACApgB,KAAAsgB,YAAAtgB,KAAAogB,WACA,IAMApgB,KAAA6C,aAAAtX,IAAAjJ,IAAA,KAOA0d,KAAAwgB,gBAAA,KAMAxgB,KAAAygB,UAAA,UAEAl1B,IAAA8V,EAAAqf,MACA1gB,KAAAwgB,gBAAAnf,EAAAqf,MAAAxM,IAAA,SAAAnsB,EAAAowB,GAIA,OAHA,IAAAwI,EAAA,EACA19B,KAAAC,IAAA,EAAA6E,EAAA,IAAA9E,KAAAK,IAAAyE,EAAA,SACA9E,KAAAC,IAAA,EAAA6E,EAAA,IAAA9E,KAAAK,IAAAyE,EAAA,WAEKiY,MACF1d,GACH0d,KAAA4gB,qBAAAt+B,IAUAk9B,EAAAqB,eAAA,OAWArB,EAAA/9B,UAAAq/B,iBAAA,SAAAx+B,EAAAy+B,EAAA56B,GAEA,IADA,IAAAizB,EAAApZ,KAAAqZ,0BAAA/2B,EAAAy+B,GACAv+B,EAAA42B,EAAAp2B,KAAAP,EAAA22B,EAAA/1B,KAAmDb,GAAAC,IAASD,EAC5D,QAAAwX,EAAAof,EAAAh2B,KAAAge,EAAAgY,EAAA71B,KAAqDyW,GAAAoH,IAASpH,EAC9D7T,GAAA46B,EAAAv+B,EAAAwX,KAeAwlB,EAAA/9B,UAAAu/B,gCAAA,SAAAzI,EAAApyB,EAAAC,EAAA66B,EAAAl+B,GACA,IAAAq2B,EAAAt1B,EAAAC,EACAm9B,EAAA,KACA/I,EAAAI,EAAA,KAOA,IANA,IAAAvY,KAAA+f,aACAj8B,EAAAy0B,EAAA,GACAx0B,EAAAw0B,EAAA,IAEA2I,EAAAlhB,KAAAmhB,mBAAA5I,EAAAx1B,GAEAo1B,GAAAnY,KAAA0f,SAAA,CAQA,GAPA,IAAA1f,KAAA+f,aACAj8B,EAAAb,KAAA46B,MAAA/5B,EAAA,GACAC,EAAAd,KAAA46B,MAAA95B,EAAA,GACAq1B,EAAAuH,EAAA,EAAAn9B,eAAAM,IAAAC,IAAAk9B,IAEA7H,EAAApZ,KAAAqZ,0BAAA6H,EAAA/I,EAAA8I,GAEA96B,EAAAG,KAAAF,EAAA+xB,EAAAiB,GACA,WAEAjB,EAEA,UAQAqH,EAAA/9B,UAAA0iB,UAAA,WACA,OAAAnE,KAAA6C,SASA2c,EAAA/9B,UAAA03B,WAAA,WACA,OAAAnZ,KAAAggB,SASAR,EAAA/9B,UAAAy3B,WAAA,WACA,OAAAlZ,KAAA0f,SAUAF,EAAA/9B,UAAA2/B,UAAA,SAAAjJ,GACA,OAAAnY,KAAAigB,QACAjgB,KAAAigB,QAEAjgB,KAAAmgB,SAAAhI,IAWAqH,EAAA/9B,UAAA4/B,cAAA,SAAAlJ,GACA,OAAAnY,KAAA2f,aAAAxH,IASAqH,EAAA/9B,UAAA6/B,eAAA,WACA,OAAAthB,KAAA2f,cAUAH,EAAA/9B,UAAA8/B,2BAAA,SAAAhJ,EAAA0I,EAAAl+B,GACA,GAAAw1B,EAAA,GAAAvY,KAAAggB,QAAA,CACA,OAAAhgB,KAAA+f,YAAA,CACA,IAAA/8B,EAAA,EAAAu1B,EAAA,GACAn1B,EAAA,EAAAm1B,EAAA,GACA,OAAAoI,EAAA,EAAAn9B,eAAAR,IAAA,EAAAI,IAAA,EAAA69B,GAEA,IAAAC,EAAAlhB,KAAAmhB,mBAAA5I,EAAAx1B,GACA,OAAAid,KAAAqZ,0BACA6H,EAAA3I,EAAA,KAAA0I,GAEA,aAWAzB,EAAA/9B,UAAA+/B,mBAAA,SAAArJ,EAAAiB,EAAAr2B,GACA,IAAAm9B,EAAAlgB,KAAAohB,UAAAjJ,GACAtwB,EAAAmY,KAAAqhB,cAAAlJ,GACAoI,EAAAkB,EAAA,EAAA9H,OAAA3Z,KAAA0hB,YAAAvJ,GAAAnY,KAAAygB,UACAz9B,EAAAk9B,EAAA,GAAA9G,EAAAp2B,KAAAu9B,EAAA,GAAA14B,EACAxE,EAAA68B,EAAA,IAAA9G,EAAA/1B,KAAA,GAAAk9B,EAAA,GAAA14B,EACAzE,EAAA88B,EAAA,GAAA9G,EAAAh2B,KAAAm9B,EAAA,GAAA14B,EACAtE,EAAA28B,EAAA,IAAA9G,EAAA71B,KAAA,GAAAg9B,EAAA,GAAA14B,EACA,OAAAoiB,EAAA,EAAAzmB,eAAAR,EAAAI,EAAAC,EAAAE,EAAAR,IAWAy8B,EAAA/9B,UAAA43B,0BAAA,SAAA/2B,EAAA61B,EAAA8I,GACA,IAAA1I,EAAAiH,EAAAqB,cACA7gB,KAAA2hB,uBAAAr/B,EAAA,GAAAA,EAAA,GAAA61B,GAAA,EAAAI,GACA,IAAAv1B,EAAAu1B,EAAA,GACAn1B,EAAAm1B,EAAA,GAEA,OADAvY,KAAA2hB,uBAAAr/B,EAAA,GAAAA,EAAA,GAAA61B,GAAA,EAAAI,GACAoI,EAAA,EAAAn9B,eACAR,EAAAu1B,EAAA,GAAAn1B,EAAAm1B,EAAA,GAAA0I,IAQAzB,EAAA/9B,UAAAmgC,mBAAA,SAAArJ,GACA,IAAA2H,EAAAlgB,KAAAohB,UAAA7I,EAAA,IACA1wB,EAAAmY,KAAAqhB,cAAA9I,EAAA,IACAgI,EAAAkB,EAAA,EAAA9H,OAAA3Z,KAAA0hB,YAAAnJ,EAAA,IAAAvY,KAAAygB,UACA,OACAP,EAAA,IAAA3H,EAAA,OAAAgI,EAAA,GAAA14B,EACAq4B,EAAA,IAAA3H,EAAA,OAAAgI,EAAA,GAAA14B,IAaA23B,EAAA/9B,UAAA0/B,mBAAA,SAAA5I,EAAAx1B,GACA,IAAAm9B,EAAAlgB,KAAAohB,UAAA7I,EAAA,IACA1wB,EAAAmY,KAAAqhB,cAAA9I,EAAA,IACAgI,EAAAkB,EAAA,EAAA9H,OAAA3Z,KAAA0hB,YAAAnJ,EAAA,IAAAvY,KAAAygB,UACAz9B,EAAAk9B,EAAA,GAAA3H,EAAA,GAAAgI,EAAA,GAAA14B,EACAzE,EAAA88B,EAAA,GAAA3H,EAAA,GAAAgI,EAAA,GAAA14B,EACAxE,EAAAL,EAAAu9B,EAAA,GAAA14B,EACAtE,EAAAH,EAAAm9B,EAAA,GAAA14B,EACA,OAAAoiB,EAAA,EAAAzmB,eAAAR,EAAAI,EAAAC,EAAAE,EAAAR,IAeAy8B,EAAA/9B,UAAAogC,kCAAA,SAAA19B,EAAA0D,EAAAuwB,GACA,OAAApY,KAAA8hB,gCACA39B,EAAA,GAAAA,EAAA,GAAA0D,GAAA,EAAAuwB,IAiBAoH,EAAA/9B,UAAAqgC,gCAAA,SACAh+B,EAAAC,EAAA8D,EAAAk6B,EAAA3J,GACA,IAAAD,EAAAnY,KAAAgiB,kBAAAn6B,GACAyG,EAAAzG,EAAAmY,KAAAqhB,cAAAlJ,GACA+H,EAAAlgB,KAAAohB,UAAAjJ,GACAoI,EAAAkB,EAAA,EAAA9H,OAAA3Z,KAAA0hB,YAAAvJ,GAAAnY,KAAAygB,UAEAwB,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAAl/B,KAAA46B,OAAA/5B,EAAAo8B,EAAA,IAAAr4B,EAAAo6B,GACAG,EAAAn/B,KAAA46B,OAAA95B,EAAAm8B,EAAA,IAAAr4B,EAAAq6B,GACAG,EAAA/zB,EAAA6zB,EAAA5B,EAAA,GACA+B,EAAAh0B,EAAA8zB,EAAA7B,EAAA,GAUA,OARAwB,GACAM,EAAAp/B,KAAAiW,KAAAmpB,GAAA,EACAC,EAAAr/B,KAAAiW,KAAAopB,GAAA,IAEAD,EAAAp/B,KAAA46B,MAAAwE,GACAC,EAAAr/B,KAAA46B,MAAAyE,IAGAC,EAAA,EAAA/+B,eAAA20B,EAAAkK,EAAAC,EAAAlK,IAmBAoH,EAAA/9B,UAAAkgC,uBAAA,SAAA79B,EAAAC,EAAAo0B,EAAA4J,EAAA3J,GACA,IAAA8H,EAAAlgB,KAAAohB,UAAAjJ,GACAtwB,EAAAmY,KAAAqhB,cAAAlJ,GACAoI,EAAAkB,EAAA,EAAA9H,OAAA3Z,KAAA0hB,YAAAvJ,GAAAnY,KAAAygB,UAEAwB,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAAl/B,KAAA46B,OAAA/5B,EAAAo8B,EAAA,IAAAr4B,EAAAo6B,GACAG,EAAAn/B,KAAA46B,OAAA95B,EAAAm8B,EAAA,IAAAr4B,EAAAq6B,GACAG,EAAAF,EAAA5B,EAAA,GACA+B,EAAAF,EAAA7B,EAAA,GAUA,OARAwB,GACAM,EAAAp/B,KAAAiW,KAAAmpB,GAAA,EACAC,EAAAr/B,KAAAiW,KAAAopB,GAAA,IAEAD,EAAAp/B,KAAA46B,MAAAwE,GACAC,EAAAr/B,KAAA46B,MAAAyE,IAGAC,EAAA,EAAA/+B,eAAA20B,EAAAkK,EAAAC,EAAAlK,IAYAoH,EAAA/9B,UAAA+gC,yBAAA,SAAAr+B,EAAAg0B,EAAAC,GACA,OAAApY,KAAA2hB,uBACAx9B,EAAA,GAAAA,EAAA,GAAAg0B,GAAA,EAAAC,IAQAoH,EAAA/9B,UAAAghC,uBAAA,SAAAlK,GACA,OAAAvY,KAAA2f,aAAApH,EAAA,KAYAiH,EAAA/9B,UAAAigC,YAAA,SAAAvJ,GACA,OAAAnY,KAAAsgB,UACAtgB,KAAAsgB,UAEAtgB,KAAAogB,WAAAjI,IASAqH,EAAA/9B,UAAA63B,iBAAA,SAAAnB,GACA,OAAAnY,KAAAwgB,gBAGAxgB,KAAAwgB,gBAAArI,GAFA,MAeAqH,EAAA/9B,UAAAugC,kBAAA,SACAn6B,EAAA66B,GACA,IAAAvK,EAAAhI,EAAA,EAAA7T,kBAAA0D,KAAA2f,aAAA93B,EACA66B,GAAA,GACA,OAAAliB,EAAA,EAAA3H,MAAAsf,EAAAnY,KAAA0f,QAAA1f,KAAAggB,UAQAR,EAAA/9B,UAAAm/B,qBAAA,SAAAt+B,GAGA,IAFA,IAAAI,EAAAsd,KAAA2f,aAAAj9B,OACAigC,EAAA,IAAAj2B,MAAAhK,GACAy1B,EAAAnY,KAAA0f,QAA4BvH,EAAAz1B,IAAYy1B,EACxCwK,EAAAxK,GAAAnY,KAAAqZ,0BAAA/2B,EAAA61B,GAEAnY,KAAAwgB,gBAAAmC,GAEA,IAAAC,EAAA,ECzhBAC,GAOAC,iBAAA,SAAAxhB,GACA,IAAAwD,EAAAxD,EAAAsD,qBAKA,OAJAE,IACAA,EAAA+d,EAAAE,oBAAAzhB,GACAA,EAAAuD,mBAAAC,IAEAA,GAUAke,MAAA,SAAAle,EAAAyT,EAAAjX,GACA,IAAA6W,EAAAI,EAAA,GACA3wB,EAAAkd,EAAA8c,mBAAArJ,GACA0K,EAAAJ,EAAAK,qBAAA5hB,GACA,GAAA2I,EAAA,EAAA/lB,mBAAA++B,EAAAr7B,GAMA,OAAA2wB,EALA,IAAA4K,EAAAlZ,EAAA,EAAAnjB,SAAAm8B,GACAG,EAAAngC,KAAAiW,MAAA+pB,EAAA,GAAAr7B,EAAA,IAAAu7B,GAEA,OADAv7B,EAAA,IAAAu7B,EAAAC,EACAte,EAAA0d,yBAAA56B,EAAAuwB,IAiBAkL,gBAAA,SAAA/gC,EAAAghC,EAAAC,EAAAC,GACA,IAAAt8B,OAAAqE,IAAAi4B,EACAA,EAAAC,EAAA,EAAAn8B,SAEAs4B,EAAAiD,EAAAa,sBACAphC,EAAAghC,EAAAC,GAEA,WAAAX,GACAtgC,SACA49B,OAAAjW,EAAA,EAAAhjB,UAAA3E,EAAA4E,GACA04B,cACAW,SAAAgD,KAWAI,UAAA,SAAAziB,GACA,IAAAG,KAUA,OATAtf,EAAA,EAAA8Y,OAAAwG,OAAA9V,IAAA2V,EACAA,WACA3V,IAAA8V,EAAA/e,SACA+e,EAAA/e,OAAAshC,EAAA,EAAArhB,IAAA,aAAA4B,aAEA9C,EAAAue,YAAAiD,EAAAa,sBACAriB,EAAA/e,OAAA+e,EAAA2e,QAAA3e,EAAAkf,iBACAlf,EAAA2e,QAEA,IAAA4C,EAAAvhB,IAaAqiB,sBAAA,SAAAphC,EAAAghC,EAAAC,GAcA,IAbA,IAAAvD,OAAAz0B,IAAA+3B,EACAA,EAAA5f,EAAA,EAAA3jB,iBAEAoV,EAAA8U,EAAA,EAAAljB,UAAAzE,GACA4R,EAAA+V,EAAA,EAAAnjB,SAAAxE,GAEAi+B,EAAAkB,EAAA,EAAA9H,YAAApuB,IAAAg4B,EACAA,EAAA7f,EAAA,EAAAxjB,mBACA20B,EAAA5xB,KAAAK,IACA4Q,EAAAqsB,EAAA,GAAAprB,EAAAorB,EAAA,IAEA79B,EAAAs9B,EAAA,EACAJ,EAAA,IAAAlzB,MAAAhK,GACAy1B,EAAA,EAAiBA,EAAAz1B,IAAYy1B,EAC7ByH,EAAAzH,GAAAtD,EAAA5xB,KAAAgW,IAAA,EAAAkf,GAEA,OAAAyH,GAcAmD,oBAAA,SAAAzhB,EAAAgiB,EAAAC,EAAAC,GACA,IAAAlhC,EAAAugC,EAAAK,qBAAA5hB,GACA,OAAAuhB,EAAAQ,gBACA/gC,EAAAghC,EAAAC,EAAAC,IAUAN,qBAAA,SAAA5hB,GAEA,IAAAhf,GADAgf,EAAAsiB,EAAA,EAAArhB,IAAAjB,IACA6C,YACA,IAAA7hB,EAAA,CACA,IAAAuhC,EAAA,IAAAD,EAAA,EAAArf,gBAAAP,EAAA,EAAAyC,SACAnF,EAAA+C,mBACA/hB,EAAA2nB,EAAA,EAAAzmB,gBAAAqgC,UAEA,OAAAvhC,IAEAJ,EAAA,6CCtJA4hC,EAAA,aAOAA,EAAAriC,UAAAsiC,WAAA,EAKAD,EAAAriC,UAAAuiC,QAAA,WACAhkB,KAAA+jB,YACA/jB,KAAA+jB,WAAA,EACA/jB,KAAAyS,oBAQAqR,EAAAriC,UAAAgxB,gBAAA/H,EAAA,EAAA7oB,aACAK,EAAA,kCClBAA,EAAA,GAHAspB,eAAA,gDCTA,IAAAyY,GASA5hC,YAAA,SAAAkD,EAAAC,EAAAC,EAAAC,GACA,KAAAF,EAAAC,EAAAC,GAAA,CACA,IAAAlD,EACA,IAAAA,EAAA,EAAeA,EAAAkD,IAAYlD,EAAA,CAC3B,IAAAuX,EAAAxU,EAAAC,EAAAhD,GACA+C,EAAAC,EAAAhD,GAAA+C,EAAAE,EAAAC,EAAAlD,GACA+C,EAAAE,EAAAC,EAAAlD,GAAAuX,EAEAvU,GAAAE,EACAD,GAAAC,KAGAw+B,EAAA,ECpBAC,GAUAC,sBAAA,SAAA7+B,EAAAC,EAAAC,EAAAC,GAMA,IAHA,IAAA2+B,EAAA,EACA57B,EAAAlD,EAAAE,EAAAC,GACAmD,EAAAtD,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAAgD,EAAAnD,EAAAC,GACAsD,EAAAvD,EAAAC,EAAA,GACA6+B,IAAA37B,EAAAD,IAAAK,EAAAD,GACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAAu7B,EAAA,GAiBAC,uBAAA,SAAA/+B,EAAAC,EAAA05B,EAAAx5B,EAAA6+B,GACA,IACA/hC,EAAAC,EADA+hC,OAAAj5B,IAAAg5B,KAEA,IAAA/hC,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACAiiC,EAAAN,EAAAC,sBACA7+B,EAAAC,EAAAC,EAAAC,GACA,OAAAlD,GACA,GAAAgiC,GAAAC,IAAAD,IAAAC,EACA,cAGA,GAAAD,IAAAC,IAAAD,GAAAC,EACA,SAGAj/B,EAAAC,EAEA,UAiBAi/B,wBAAA,SAAAn/B,EAAAC,EAAA45B,EAAA15B,EAAA6+B,GACA,IAAA/hC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EACxC,IAAA2hC,EAAAG,uBACA/+B,EAAAC,EAAA45B,EAAA58B,GAAAkD,EAAA6+B,GACA,SAGA,UAiBAI,kBAAA,SAAAp/B,EAAAC,EAAA05B,EAAAx5B,EAAA6+B,GACA,IACA/hC,EAAAC,EADA+hC,OAAAj5B,IAAAg5B,KAEA,IAAA/hC,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACAiiC,EAAAN,EAAAC,sBACA7+B,EAAAC,EAAAC,EAAAC,IACA,IAAAlD,EACAgiC,GAAAC,IAAAD,IAAAC,EACAD,IAAAC,IAAAD,GAAAC,IAEAP,EAAA7hC,YAAAkD,EAAAC,EAAAC,EAAAC,GAEAF,EAAAC,EAEA,OAAAD,GAiBAo/B,mBAAA,SAAAr/B,EAAAC,EAAA45B,EAAA15B,EAAA6+B,GACA,IAAA/hC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EACxCgD,EAAA2+B,EAAAQ,kBACAp/B,EAAAC,EAAA45B,EAAA58B,GAAAkD,EAAA6+B,GAEA,OAAA/+B,IAEAtD,EAAA,6CC5IA2iC,GAQAC,QAAA,SAAAh9B,EAAA80B,GACA,YAAArxB,IAAAzD,EACA,OAEA,GAUAi9B,KAAA,SAAAj9B,EAAA80B,GACA,YAAArxB,IAAAzD,EACAA,EAAA80B,OAEA,GASAoI,cAAA,SAAAvrB,GACA,IAAAwrB,EAAA,EAAAhiC,KAAAsX,GAAAd,EACA,gBAMA3R,EAAA80B,GACA,YAAArxB,IAAAzD,EACAA,EAAA7E,KAAA46B,OAAA/1B,EAAA80B,GAAAqI,EAAA,IAAAA,OAGA,IAUAC,iBAAA,SAAAC,GACA,IAAAC,EAAAD,GAAAE,EAAA,EAAA7qB,UAAA,GACA,gBAMA1S,EAAA80B,GACA,YAAArxB,IAAAzD,EACA7E,KAAA2W,IAAA9R,EAAA80B,IAAAwI,EACA,EAEAt9B,EAAA80B,OAGA,KAIA16B,EAAA,qDCnEAojC,EAAA,SAAAl6B,EAAA8oB,EAAAqR,EAAAC,EACAC,GAEAC,EAAA,EAAAp/B,KAAA0Z,KAAA5U,EAAA8oB,EAAAqR,EAAAI,cAAAH,EACAC,GAMAzlB,KAAAulB,gBAIA7a,EAAA,EAAAppB,SAAAgkC,EAAAI,EAAA,GACAxjC,EAAA,qDCZA0jC,EAAA,SAAAx6B,EAAA8oB,EAAAuR,GAEAI,EAAA,EAAAv/B,KAAA0Z,KAAA5U,GAOA4U,KAAAkU,MAOAlU,KAAA+V,gBAAAxqB,IAAAk6B,IAAA,MAIA/a,EAAA,EAAAppB,SAAAskC,EAAAC,EAAA,GACA3jC,EAAA,kCCpCA,IAAA4jC,GAWAzjC,YAAA,SAAAkD,EAAAC,EAAAC,EAAAC,EAAAqgC,GACA,IAEA/rB,EAFA3X,OAAAkJ,IAAAw6B,OACAvjC,EAAA,EAEA,IAAAwX,EAAAxU,EAAkBwU,EAAAvU,EAASuU,GAAAtU,EAC3BrD,EAAAG,KAAA+C,EAAA3B,MAAAoW,IAAAtU,GAGA,OADArD,EAAAK,OAAAF,EACAH,GAYA2jC,aAAA,SAAAzgC,EAAAC,EAAA05B,EAAAx5B,EAAAugC,GACA,IAEAjsB,EAAAoH,EAFA4kB,OAAAz6B,IAAA06B,OACAzjC,EAAA,EAEA,IAAAwX,EAAA,EAAAoH,EAAA8d,EAAAx8B,OAA+BsX,EAAAoH,IAAQpH,EAAA,CACvC,IAAAvU,EAAAy5B,EAAAllB,GACAgsB,EAAAxjC,KAAAsjC,EAAAzjC,YACAkD,EAAAC,EAAAC,EAAAC,EAAAsgC,EAAAxjC,IACAgD,EAAAC,EAGA,OADAugC,EAAAtjC,OAAAF,EACAwjC,GAaAE,cAAA,SAAA3gC,EAAAC,EAAA45B,EAAA15B,EAAAygC,GACA,IAEAnsB,EAAAoH,EAFA8kB,OAAA36B,IAAA46B,OACA3jC,EAAA,EAEA,IAAAwX,EAAA,EAAAoH,EAAAge,EAAA18B,OAAgCsX,EAAAoH,IAAQpH,EAAA,CACxC,IAAAklB,EAAAE,EAAAplB,GACAksB,EAAA1jC,KAAAsjC,EAAAE,aACAzgC,EAAAC,EAAA05B,EAAAx5B,EAAAwgC,EAAA1jC,IACAgD,EAAA05B,IAAAx8B,OAAA,GAGA,OADAwjC,EAAAxjC,OAAAF,EACA0jC,IAEAhkC,EAAA,oECpDAkkC,EAAA,SAAAC,GAEAC,EAAA,EAAAhgC,KAAA0Z,MAKAA,KAAAumB,mBAAAh7B,IAAA86B,IAAA,KAMArmB,KAAAwmB,OAAA,EAMAxmB,KAAAymB,YAMAzmB,KAAA0mB,QAAA,KAMA1mB,KAAA2mB,QAAA,MAIAjc,EAAA,EAAAppB,SAAA8kC,EAAAE,EAAA,GAMAF,EAAA3kC,UAAAmlC,eAAA,WACA,OAAA5mB,KAAA6mB,WAAA7mB,KAAAumB,eAOAH,EAAA3kC,UAAAmK,MAAA,WACAoU,KAAAwmB,OAAA,EACAxmB,KAAAymB,YACAzmB,KAAA0mB,QAAA,KACA1mB,KAAA2mB,QAAA,KACA3mB,KAAAqL,cAAAyb,EAAA,EAAA5vB,QAQAkvB,EAAA3kC,UAAAslC,YAAA,SAAA36B,GACA,OAAA4T,KAAAymB,SAAAtrB,eAAA/O,IAYAg6B,EAAA3kC,UAAAsmB,QAAA,SAAA7Z,EAAA9H,GAEA,IADA,IAAA4gC,EAAAhnB,KAAA0mB,QACAM,GACA94B,EAAA5H,KAAAF,EAAA4gC,EAAAC,OAAAD,EAAAE,KAAAlnB,MACAgnB,IAAAG,OASAf,EAAA3kC,UAAA8gB,IAAA,SAAAnW,GACA,IAAA46B,EAAAhnB,KAAAymB,SAAAr6B,GAGA,OAFAg7B,EAAA,EAAA3/B,YAAA8D,IAAAy7B,EACA,IACAA,IAAAhnB,KAAA2mB,QACAK,EAAAC,QACGD,IAAAhnB,KAAA0mB,SACH1mB,KAAA0mB,QAA+C1mB,KAAA0mB,QAAA,MAC/C1mB,KAAA0mB,QAAAW,MAAA,OAEAL,EAAAG,MAAAE,MAAAL,EAAAK,MACAL,EAAAK,MAAAF,MAAAH,EAAAG,OAEAH,EAAAG,MAAA,KACAH,EAAAK,MAAArnB,KAAA2mB,QACA3mB,KAAA2mB,QAAAQ,MAAAH,EACAhnB,KAAA2mB,QAAAK,EACAA,EAAAC,SASAb,EAAA3kC,UAAAob,OAAA,SAAAzQ,GACA,IAAA46B,EAAAhnB,KAAAymB,SAAAr6B,GAkBA,OAjBAg7B,EAAA,EAAA3/B,YAAA8D,IAAAy7B,EAAA,IACAA,IAAAhnB,KAAA2mB,SACA3mB,KAAA2mB,QAA+CK,EAAA,MAC/ChnB,KAAA2mB,UACA3mB,KAAA2mB,QAAAQ,MAAA,OAEGH,IAAAhnB,KAAA0mB,SACH1mB,KAAA0mB,QAA+CM,EAAA,MAC/ChnB,KAAA0mB,UACA1mB,KAAA0mB,QAAAW,MAAA,QAGAL,EAAAG,MAAAE,MAAAL,EAAAK,MACAL,EAAAK,MAAAF,MAAAH,EAAAG,cAEAnnB,KAAAymB,SAAAr6B,KACA4T,KAAAwmB,OACAQ,EAAAC,QAOAb,EAAA3kC,UAAAolC,SAAA,WACA,OAAA7mB,KAAAwmB,QAOAJ,EAAA3kC,UAAAspB,QAAA,WACA,IAEAic,EAFAn7B,EAAA,IAAAa,MAAAsT,KAAAwmB,QACAhkC,EAAA,EAEA,IAAAwkC,EAAAhnB,KAAA2mB,QAA4BK,EAAOA,IAAAK,MACnCx7B,EAAArJ,KAAAwkC,EAAAE,KAEA,OAAAr7B,GAOAu6B,EAAA3kC,UAAA6Z,UAAA,WACA,IAEA0rB,EAFAzrB,EAAA,IAAA7O,MAAAsT,KAAAwmB,QACAhkC,EAAA,EAEA,IAAAwkC,EAAAhnB,KAAA2mB,QAA4BK,EAAOA,IAAAK,MACnC9rB,EAAA/Y,KAAAwkC,EAAAC,OAEA,OAAA1rB,GAOA6qB,EAAA3kC,UAAA6lC,SAAA,WACA,OAAAtnB,KAAA0mB,QAAAO,QAOAb,EAAA3kC,UAAA8lC,YAAA,WACA,OAAAvnB,KAAA0mB,QAAAQ,MAQAd,EAAA3kC,UAAA+lC,aAAA,WACA,OAAAxnB,KAAA2mB,QAAAO,MAOAd,EAAA3kC,UAAAuuB,IAAA,WACA,IAAAgX,EAAAhnB,KAAA0mB,QAUA,cATA1mB,KAAAymB,SAAAO,EAAAE,MACAF,EAAAG,QACAH,EAAAG,MAAAE,MAAA,MAEArnB,KAAA0mB,QAA6CM,EAAA,MAC7ChnB,KAAA0mB,UACA1mB,KAAA2mB,QAAA,QAEA3mB,KAAAwmB,OACAQ,EAAAC,QAQAb,EAAA3kC,UAAAy8B,QAAA,SAAA9xB,EAAA1I,GACAsc,KAAAuC,IAAAnW,GACA4T,KAAAymB,SAAAr6B,GAAA66B,OAAAvjC,GAQA0iC,EAAA3kC,UAAAoL,IAAA,SAAAT,EAAA1I,GACA0jC,EAAA,EAAA3/B,SAAA2E,KAAA4T,KAAAymB,UACA,IACA,IAAAO,GACAE,KAAA96B,EACA+6B,MAAA,KACAE,MAAArnB,KAAA2mB,QACAM,OAAAvjC,GAEAsc,KAAA2mB,QAGA3mB,KAAA2mB,QAAAQ,MAAAH,EAFAhnB,KAAA0mB,QAAAM,EAIAhnB,KAAA2mB,QAAAK,EACAhnB,KAAAymB,SAAAr6B,GAAA46B,IACAhnB,KAAAwmB,QAOAJ,EAAA3kC,UAAAgmC,MAAA,WACA,KAAAznB,KAAA4mB,kBACA5mB,KAAAgQ,OAGA9tB,EAAA,6ECpQAwlC,EAAA,SAAAC,GAKA3nB,KAAA4nB,OAAAC,IAAAF,GAQA3nB,KAAA8nB,WAUAJ,EAAAjmC,UAAAsmC,OAAA,SAAAzlC,EAAAoB,GAEA,IAAA2sB,GACArtB,KAAAV,EAAA,GACAc,KAAAd,EAAA,GACAe,KAAAf,EAAA,GACAiB,KAAAjB,EAAA,GACAoB,SAGAsc,KAAA4nB,OAAAG,OAAA1X,GACArQ,KAAA8nB,OAAApd,EAAA,EAAA5oB,OAAA4B,IAAA2sB,GASAqX,EAAAjmC,UAAAumC,KAAA,SAAAC,EAAA1sB,GAEA,IADA,IAAA2sB,EAAA,IAAAx7B,MAAA6O,EAAA7Y,QACAF,EAAA,EAAA2X,EAAAoB,EAAA7Y,OAAoCF,EAAA2X,EAAO3X,IAAA,CAC3C,IAAAF,EAAA2lC,EAAAzlC,GACAkB,EAAA6X,EAAA/Y,GAGA6tB,GACArtB,KAAAV,EAAA,GACAc,KAAAd,EAAA,GACAe,KAAAf,EAAA,GACAiB,KAAAjB,EAAA,GACAoB,SAEAwkC,EAAA1lC,GAAA6tB,EACArQ,KAAA8nB,OAAApd,EAAA,EAAA5oB,OAAA4B,IAAA2sB,EAEArQ,KAAA4nB,OAAAI,KAAAE,IASAR,EAAAjmC,UAAAob,OAAA,SAAAnZ,GACA,IAAAykC,EAAAzd,EAAA,EAAA5oB,OAAA4B,GAIA2sB,EAAArQ,KAAA8nB,OAAAK,GAEA,cADAnoB,KAAA8nB,OAAAK,GACA,OAAAnoB,KAAA4nB,OAAA/qB,OAAAwT,IASAqX,EAAAjmC,UAAA2mC,OAAA,SAAA9lC,EAAAoB,GACA,IAAA2sB,EAAArQ,KAAA8nB,OAAApd,EAAA,EAAA5oB,OAAA4B,IACA2kC,GAAAhY,EAAArtB,KAAAqtB,EAAAjtB,KAAAitB,EAAAhtB,KAAAgtB,EAAA9sB,MACA82B,EAAA,EAAAt0B,OAAAsiC,EAAA/lC,KACA0d,KAAAnD,OAAAnZ,GACAsc,KAAA+nB,OAAAzlC,EAAAoB,KASAgkC,EAAAjmC,UAAA6mC,OAAA,WAEA,OADAtoB,KAAA4nB,OAAAW,MACArU,IAAA,SAAA7D,GACA,OAAAA,EAAA3sB,SAUAgkC,EAAAjmC,UAAA+mC,YAAA,SAAAlmC,GAEA,IAAA+lC,GACArlC,KAAAV,EAAA,GACAc,KAAAd,EAAA,GACAe,KAAAf,EAAA,GACAiB,KAAAjB,EAAA,IAGA,OADA0d,KAAA4nB,OAAAa,OAAAJ,GACAnU,IAAA,SAAA7D,GACA,OAAAA,EAAA3sB,SAcAgkC,EAAAjmC,UAAAsmB,QAAA,SAAA5hB,EAAAC,GACA,OAAA4Z,KAAA0oB,SAAA1oB,KAAAsoB,SAAAniC,EAAAC,IAYAshC,EAAAjmC,UAAAknC,gBAAA,SAAArmC,EAAA6D,EAAAC,GACA,OAAA4Z,KAAA0oB,SAAA1oB,KAAAwoB,YAAAlmC,GAAA6D,EAAAC,IAYAshC,EAAAjmC,UAAAinC,SAAA,SAAAntB,EAAApV,EAAAC,GAEA,IADA,IAAAoxB,EACAh1B,EAAA,EAAA2X,EAAAoB,EAAA7Y,OAAoCF,EAAA2X,EAAO3X,IAE3C,GADAg1B,EAAArxB,EAAAG,KAAAF,EAAAmV,EAAA/Y,IAEA,OAAAg1B,EAGA,OAAAA,GAOAkQ,EAAAjmC,UAAAoF,QAAA,WACA,OAAA+hC,EAAA,EAAA/hC,QAAAmZ,KAAA8nB,SAOAJ,EAAAjmC,UAAAmK,MAAA,WACAoU,KAAA4nB,OAAAh8B,QACAoU,KAAA8nB,WAQAJ,EAAAjmC,UAAA0iB,UAAA,SAAAphB,GAEA,IAAA2Z,EAAAsD,KAAA4nB,OAAAlrB,KACA,OAAA2d,EAAA,EAAA72B,eAAAkZ,EAAA1Z,KAAA0Z,EAAAtZ,KAAAsZ,EAAArZ,KAAAqZ,EAAAnZ,KAAAR,IAOA2kC,EAAAjmC,UAAAonC,OAAA,SAAAC,GAEA,QAAAtmC,KADAwd,KAAA4nB,OAAAI,KAAAc,EAAAlB,OAAAW,OACAO,EAAAhB,OACA9nB,KAAA8nB,OAAA,EAAAtlC,GAAAsmC,EAAAhB,OAAA,EAAAtlC,IAGAN,EAAA,6CCpNA6mC,EAAA,SAAA7nB,GAEA,IAAAG,EAAAH,MAMAlB,KAAAgpB,YAAAz9B,IAAA8V,EAAAkV,MAAAlV,EAAAkV,MAAA,KAMAvW,KAAAipB,SAAA5nB,EAAA6nB,QAMAlpB,KAAAmpB,eAAA59B,IAAA8V,EAAA+nB,SAAA/nB,EAAA+nB,SAAA,KAMAppB,KAAAqpB,gBAAAhoB,EAAAioB,eAMAtpB,KAAAupB,UAAAloB,EAAAmoB,SAMAxpB,KAAAypB,YAAApoB,EAAAqoB,WAMA1pB,KAAA2pB,OAAAtoB,EAAAnN,MAMA8L,KAAA4pB,eAAAr+B,GASAw9B,EAAAtnC,UAAAkC,MAAA,WACA,IAAA4yB,EAAAvW,KAAA6pB,WACA,WAAAd,GACAxS,WAAA3yB,MAAA2yB,EAAA3yB,QAAA2yB,QAAAhrB,EACA29B,QAAAlpB,KAAA8pB,aACAV,SAAAppB,KAAA+pB,cAAA/pB,KAAA+pB,cAAAnmC,aAAA2H,EACA+9B,eAAAtpB,KAAAgqB,oBACAR,SAAAxpB,KAAAiqB,cACAP,WAAA1pB,KAAAkqB,gBACAh2B,MAAA8L,KAAAlZ,cAUAiiC,EAAAtnC,UAAAooC,SAAA,WACA,OAAA7pB,KAAAgpB,QASAD,EAAAtnC,UAAAqoC,WAAA,WACA,OAAA9pB,KAAAipB,UASAF,EAAAtnC,UAAAsoC,YAAA,WACA,OAAA/pB,KAAAmpB,WASAJ,EAAAtnC,UAAAuoC,kBAAA,WACA,OAAAhqB,KAAAqpB,iBASAN,EAAAtnC,UAAAwoC,YAAA,WACA,OAAAjqB,KAAAupB,WASAR,EAAAtnC,UAAAyoC,cAAA,WACA,OAAAlqB,KAAAypB,aASAV,EAAAtnC,UAAAqF,SAAA,WACA,OAAAkZ,KAAA2pB,QAUAZ,EAAAtnC,UAAA0oC,SAAA,SAAA5T,GACAvW,KAAAgpB,OAAAzS,EACAvW,KAAA4pB,eAAAr+B,GAUAw9B,EAAAtnC,UAAA2oC,WAAA,SAAAlB,GACAlpB,KAAAipB,SAAAC,EACAlpB,KAAA4pB,eAAAr+B,GAgBAw9B,EAAAtnC,UAAA4rB,YAAA,SAAA+b,GACAppB,KAAAmpB,UAAAC,EACAppB,KAAA4pB,eAAAr+B,GAUAw9B,EAAAtnC,UAAA4oC,kBAAA,SAAAf,GACAtpB,KAAAqpB,gBAAAC,EACAtpB,KAAA4pB,eAAAr+B,GAUAw9B,EAAAtnC,UAAA6oC,YAAA,SAAAd,GACAxpB,KAAAupB,UAAAC,EACAxpB,KAAA4pB,eAAAr+B,GAUAw9B,EAAAtnC,UAAA8oC,cAAA,SAAAb,GACA1pB,KAAAypB,YAAAC,EACA1pB,KAAA4pB,eAAAr+B,GAUAw9B,EAAAtnC,UAAA+oC,SAAA,SAAAt2B,GACA8L,KAAA2pB,OAAAz1B,EACA8L,KAAA4pB,eAAAr+B,GAOAw9B,EAAAtnC,UAAAgpC,YAAA,WA2BA,YA1BAl/B,IAAAyU,KAAA4pB,YACA5pB,KAAA4pB,UAAA,IACA5pB,KAAAgpB,OACA,iBAAAhpB,KAAAgpB,OACAhpB,KAAA4pB,WAAA5pB,KAAAgpB,OAEAhpB,KAAA4pB,WAAAlf,EAAA,EAAA5oB,OAAAke,KAAAgpB,QAAAtS,WAGA1W,KAAA4pB,WAAA,IAEA5pB,KAAA4pB,WAAA,UACAr+B,IAAAyU,KAAAipB,SACAjpB,KAAAipB,SAAAvS,WAAA,UACA1W,KAAAmpB,UACAnpB,KAAAmpB,UAAAzS,WAAA,eACAnrB,IAAAyU,KAAAqpB,gBACArpB,KAAAqpB,gBAAA,eACA99B,IAAAyU,KAAAupB,UACAvpB,KAAAupB,UAAA,eACAh+B,IAAAyU,KAAAypB,YACAzpB,KAAAypB,YAAA/S,WAAA,eACAnrB,IAAAyU,KAAA2pB,OACA3pB,KAAA2pB,OAAAjT,WAAA,MAGA1W,KAAA4pB,WAEA1nC,EAAA,kCC3QAA,EAAA,GANAkF,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,2CCFA,SAAAmjC,EACAC,EACAzU,EACA0U,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBAC,EArBA7pB,EAAA,mBAAAspB,EACAA,EAAAtpB,QACAspB,EAiDA,GA9CAzU,IACA7U,EAAA6U,SACA7U,EAAAupB,kBACAvpB,EAAA8pB,WAAA,GAIAN,IACAxpB,EAAA+pB,YAAA,GAIAL,IACA1pB,EAAAgqB,SAAA,UAAAN,GAIAC,GACAE,EAAA,SAAAv5B,IAEAA,EACAA,GACAqO,KAAAsrB,QAAAtrB,KAAAsrB,OAAAC,YACAvrB,KAAAT,QAAAS,KAAAT,OAAA+rB,QAAAtrB,KAAAT,OAAA+rB,OAAAC,aAEA,oBAAAC,sBACA75B,EAAA65B,qBAGAV,GACAA,EAAAxkC,KAAA0Z,KAAArO,GAGAA,KAAA85B,uBACA95B,EAAA85B,sBAAA7kB,IAAAokB,IAKA3pB,EAAAqqB,aAAAR,GACGJ,IACHI,EAAAD,EACA,WAAqBH,EAAAxkC,KAAA0Z,UAAA2rB,MAAAC,SAAAC,aACrBf,GAGAI,EACA,GAAA7pB,EAAA+pB,WAAA,CAGA/pB,EAAAyqB,cAAAZ,EAEA,IAAAa,EAAA1qB,EAAA6U,OACA7U,EAAA6U,OAAA,SAAArf,EAAAlF,GAEA,OADAu5B,EAAA5kC,KAAAqL,GACAo6B,EAAAl1B,EAAAlF,QAEK,CAEL,IAAAq6B,EAAA3qB,EAAA4qB,aACA5qB,EAAA4qB,aAAAD,KACAnD,OAAAmD,EAAAd,IACAA,GAIA,OACAgB,QAAAvB,EACAtpB,WA1FAkO,EAAAvhB,EAAA9L,EAAA,sBAAAwoC,kCCEAyB,EAAAD,QAAApD,EAEA,IAAAsD,EAAA7c,EAAA,IAEA,SAAAuZ,EAAAuD,EAAArO,GACA,KAAAhe,gBAAA8oB,GAAA,WAAAA,EAAAuD,EAAArO,GAGAhe,KAAAssB,YAAArpC,KAAAK,IAAA,EAAA+oC,GAAA,GACArsB,KAAAusB,YAAAtpC,KAAAK,IAAA,EAAAL,KAAAiW,KAAA,GAAA8G,KAAAssB,cAEAtO,GACAhe,KAAAwsB,YAAAxO,GAGAhe,KAAApU,QAwbA,SAAA6gC,EAAApc,EAAA6X,EAAAwE,GACA,IAAAA,EAAA,OAAAxE,EAAA77B,QAAAgkB,GAEA,QAAA7tB,EAAA,EAAmBA,EAAA0lC,EAAAxlC,OAAkBF,IACrC,GAAAkqC,EAAArc,EAAA6X,EAAA1lC,IAAA,OAAAA,EAEA,SAIA,SAAAmqC,EAAAhtB,EAAAitB,GACAC,EAAAltB,EAAA,EAAAA,EAAAmtB,SAAApqC,OAAAkqC,EAAAjtB,GAIA,SAAAktB,EAAAltB,EAAAzF,EAAA6yB,EAAAH,EAAAI,GACAA,MAAAC,EAAA,OACAD,EAAAhqC,KAAAiC,IACA+nC,EAAA5pC,KAAA6B,IACA+nC,EAAA3pC,MAAA4B,IACA+nC,EAAAzpC,MAAA0B,IAEA,QAAAioC,EAAA1qC,EAAA0X,EAA0B1X,EAAAuqC,EAAOvqC,IACjC0qC,EAAAvtB,EAAAmtB,SAAAtqC,GACAwD,EAAAgnC,EAAArtB,EAAAwtB,KAAAP,EAAAM,MAGA,OAAAF,EAGA,SAAAhnC,EAAA6H,EAAAC,GAKA,OAJAD,EAAA7K,KAAAC,KAAAC,IAAA2K,EAAA7K,KAAA8K,EAAA9K,MACA6K,EAAAzK,KAAAH,KAAAC,IAAA2K,EAAAzK,KAAA0K,EAAA1K,MACAyK,EAAAxK,KAAAJ,KAAAK,IAAAuK,EAAAxK,KAAAyK,EAAAzK,MACAwK,EAAAtK,KAAAN,KAAAK,IAAAuK,EAAAtK,KAAAuK,EAAAvK,MACAsK,EAGA,SAAAu/B,EAAAv/B,EAAAC,GAAgC,OAAAD,EAAA7K,KAAA8K,EAAA9K,KAChC,SAAAqqC,EAAAx/B,EAAAC,GAAgC,OAAAD,EAAAzK,KAAA0K,EAAA1K,KAEhC,SAAAkqC,EAAAz/B,GAAwB,OAAAA,EAAAxK,KAAAwK,EAAA7K,OAAA6K,EAAAtK,KAAAsK,EAAAzK,MACxB,SAAAmqC,EAAA1/B,GAAwB,OAAAA,EAAAxK,KAAAwK,EAAA7K,MAAA6K,EAAAtK,KAAAsK,EAAAzK,MAExB,SAAAoqC,EAAA3/B,EAAAC,GACA,OAAA7K,KAAAK,IAAAwK,EAAAzK,KAAAwK,EAAAxK,MAAAJ,KAAAC,IAAA4K,EAAA9K,KAAA6K,EAAA7K,QACAC,KAAAK,IAAAwK,EAAAvK,KAAAsK,EAAAtK,MAAAN,KAAAC,IAAA4K,EAAA1K,KAAAyK,EAAAzK,OAGA,SAAAqqC,EAAA5/B,EAAAC,GACA,IAAA9K,EAAAC,KAAAK,IAAAuK,EAAA7K,KAAA8K,EAAA9K,MACAI,EAAAH,KAAAK,IAAAuK,EAAAzK,KAAA0K,EAAA1K,MACAC,EAAAJ,KAAAC,IAAA2K,EAAAxK,KAAAyK,EAAAzK,MACAE,EAAAN,KAAAC,IAAA2K,EAAAtK,KAAAuK,EAAAvK,MAEA,OAAAN,KAAAK,IAAA,EAAAD,EAAAL,GACAC,KAAAK,IAAA,EAAAC,EAAAH,GAGA,SAAAk8B,EAAAzxB,EAAAC,GACA,OAAAD,EAAA7K,MAAA8K,EAAA9K,MACA6K,EAAAzK,MAAA0K,EAAA1K,MACA0K,EAAAzK,MAAAwK,EAAAxK,MACAyK,EAAAvK,MAAAsK,EAAAtK,KAGA,SAAA4F,EAAA0E,EAAAC,GACA,OAAAA,EAAA9K,MAAA6K,EAAAxK,MACAyK,EAAA1K,MAAAyK,EAAAtK,MACAuK,EAAAzK,MAAAwK,EAAA7K,MACA8K,EAAAvK,MAAAsK,EAAAzK,KAGA,SAAA6pC,EAAAH,GACA,OACAA,WACA33B,OAAA,EACAg4B,MAAA,EACAnqC,KAAAiC,IACA7B,KAAA6B,IACA5B,MAAA4B,IACA1B,MAAA0B,KAOA,SAAAyoC,EAAArxB,EAAA1G,EAAA6uB,EAAA/qB,EAAAqE,GAIA,IAHA,IACAjC,EADA8xB,GAAAh4B,EAAA6uB,GAGAmJ,EAAAjrC,SACA8hC,EAAAmJ,EAAA3d,QACAra,EAAAg4B,EAAA3d,QAEAvW,IAEAoC,EAAAlG,EAAA1S,KAAAiW,MAAAsrB,EAAA7uB,GAAA8D,EAAA,GAAAA,EACA2yB,EAAA/vB,EAAAR,EAAAlG,EAAA6uB,EAAA1mB,GAEA6vB,EAAA1hC,KAAA0J,EAAAkG,IAAA2oB,IA1hBAsE,EAAArnC,WAEA8mC,IAAA,WACA,OAAAvoB,KAAA4tB,KAAA5tB,KAAAtD,UAGA+rB,OAAA,SAAAJ,GAEA,IAAA1oB,EAAAK,KAAAtD,KACA8a,KACAoV,EAAA5sB,KAAA4sB,OAEA,IAAAzjC,EAAAk/B,EAAA1oB,GAAA,OAAA6X,EAKA,IAHA,IACAh1B,EAAA0f,EAAAgrB,EAAAW,EADAC,KAGAnuB,GAAA,CACA,IAAAnd,EAAA,EAAA0f,EAAAvC,EAAAmtB,SAAApqC,OAAmDF,EAAA0f,EAAS1f,IAE5D0qC,EAAAvtB,EAAAmtB,SAAAtqC,GAGA2G,EAAAk/B,EAFAwF,EAAAluB,EAAAwtB,KAAAP,EAAAM,QAGAvtB,EAAAwtB,KAAA3V,EAAAvrB,KAAAihC,GACA5N,EAAA+I,EAAAwF,GAAA7tB,KAAA4tB,KAAAV,EAAA1V,GACAsW,EAAA7hC,KAAAihC,IAGAvtB,EAAAmuB,EAAA9d,MAGA,OAAAwH,GAGAuW,SAAA,SAAA1F,GAEA,IAAA1oB,EAAAK,KAAAtD,KACAkwB,EAAA5sB,KAAA4sB,OAEA,IAAAzjC,EAAAk/B,EAAA1oB,GAAA,SAKA,IAHA,IACAnd,EAAA0f,EAAAgrB,EAAAW,EADAC,KAGAnuB,GAAA,CACA,IAAAnd,EAAA,EAAA0f,EAAAvC,EAAAmtB,SAAApqC,OAAmDF,EAAA0f,EAAS1f,IAK5D,GAHA0qC,EAAAvtB,EAAAmtB,SAAAtqC,GAGA2G,EAAAk/B,EAFAwF,EAAAluB,EAAAwtB,KAAAP,EAAAM,MAEA,CACA,GAAAvtB,EAAAwtB,MAAA7N,EAAA+I,EAAAwF,GAAA,SACAC,EAAA7hC,KAAAihC,GAGAvtB,EAAAmuB,EAAA9d,MAGA,UAGAgY,KAAA,SAAAtrB,GACA,IAAAA,MAAAha,OAAA,OAAAsd,KAEA,GAAAtD,EAAAha,OAAAsd,KAAAusB,YAAA,CACA,QAAA/pC,EAAA,EAAA0f,EAAAxF,EAAAha,OAA8CF,EAAA0f,EAAS1f,IACvDwd,KAAA+nB,OAAArrB,EAAAla,IAEA,OAAAwd,KAIA,IAAAL,EAAAK,KAAAguB,OAAAtxB,EAAA9Y,QAAA,EAAA8Y,EAAAha,OAAA,KAEA,GAAAsd,KAAAtD,KAAAowB,SAAApqC,OAIS,GAAAsd,KAAAtD,KAAAvH,SAAAwK,EAAAxK,OAET6K,KAAAiuB,WAAAjuB,KAAAtD,KAAAiD,OAES,CACT,GAAAK,KAAAtD,KAAAvH,OAAAwK,EAAAxK,OAAA,CAEA,IAAA+4B,EAAAluB,KAAAtD,KACAsD,KAAAtD,KAAAiD,EACAA,EAAAuuB,EAIAluB,KAAAmuB,QAAAxuB,EAAAK,KAAAtD,KAAAvH,OAAAwK,EAAAxK,OAAA,WAfA6K,KAAAtD,KAAAiD,EAkBA,OAAAK,MAGA+nB,OAAA,SAAA1X,GAEA,OADAA,GAAArQ,KAAAmuB,QAAA9d,EAAArQ,KAAAtD,KAAAvH,OAAA,GACA6K,MAGApU,MAAA,WAEA,OADAoU,KAAAtD,KAAAuwB,MACAjtB,MAGAnD,OAAA,SAAAwT,EAAAqc,GACA,IAAArc,EAAA,OAAArQ,KASA,IAPA,IAIAxd,EAAA+c,EAAAlC,EAAA+wB,EAJAzuB,EAAAK,KAAAtD,KACA2rB,EAAAroB,KAAA4sB,OAAAvc,GACAge,KACAC,KAIA3uB,GAAA0uB,EAAA3rC,QAAA,CASA,GAPAid,IACAA,EAAA0uB,EAAAre,MACAzQ,EAAA8uB,IAAA3rC,OAAA,GACAF,EAAA8rC,EAAAte,MACAoe,GAAA,GAGAzuB,EAAAwtB,OAGA,KAFA9vB,EAAAovB,EAAApc,EAAA1Q,EAAAmtB,SAAAJ,IAOA,OAHA/sB,EAAAmtB,SAAAxgC,OAAA+Q,EAAA,GACAgxB,EAAApiC,KAAA0T,GACAK,KAAAuuB,UAAAF,GACAruB,KAIAouB,GAAAzuB,EAAAwtB,OAAA7N,EAAA3f,EAAA0oB,GAOa9oB,GACb/c,IACAmd,EAAAJ,EAAAutB,SAAAtqC,GACA4rC,GAAA,GAEazuB,EAAA,MAXb0uB,EAAApiC,KAAA0T,GACA2uB,EAAAriC,KAAAzJ,GACAA,EAAA,EACA+c,EAAAI,EACAA,IAAAmtB,SAAA,IAUA,OAAA9sB,MAGA4sB,OAAA,SAAAvc,GAA6B,OAAAA,GAE7Bme,YAAApB,EACAqB,YAAApB,EAEAqB,OAAA,WAAyB,OAAA1uB,KAAAtD,MAEzBiyB,SAAA,SAAAjyB,GAEA,OADAsD,KAAAtD,OACAsD,MAGA4tB,KAAA,SAAAjuB,EAAA6X,GAEA,IADA,IAAAsW,KACAnuB,GACAA,EAAAwtB,KAAA3V,EAAAvrB,KAAA9I,MAAAq0B,EAAA7X,EAAAmtB,UACAgB,EAAA7hC,KAAA9I,MAAA2qC,EAAAnuB,EAAAmtB,UAEAntB,EAAAmuB,EAAA9d,MAEA,OAAAwH,GAGAwW,OAAA,SAAA9F,EAAAvyB,EAAA6uB,EAAArvB,GAEA,IAEAwK,EAFAivB,EAAApK,EAAA7uB,EAAA,EACAk5B,EAAA7uB,KAAAssB,YAGA,GAAAsC,GAAAC,EAIA,OADAlC,EADAhtB,EAAAstB,EAAA/E,EAAAtkC,MAAA+R,EAAA6uB,EAAA,IACAxkB,KAAA4sB,QACAjtB,EAGAxK,IAEAA,EAAAlS,KAAAiW,KAAAjW,KAAAkW,IAAAy1B,GAAA3rC,KAAAkW,IAAA01B,IAGAA,EAAA5rC,KAAAiW,KAAA01B,EAAA3rC,KAAAgW,IAAA41B,EAAA15B,EAAA,MAGAwK,EAAAstB,OACAE,MAAA,EACAxtB,EAAAxK,SAIA,IAEA3S,EAAAwX,EAAA80B,EAAAC,EAFAC,EAAA/rC,KAAAiW,KAAA01B,EAAAC,GACAI,EAAAD,EAAA/rC,KAAAiW,KAAAjW,KAAAgf,KAAA4sB,IAKA,IAFAnB,EAAAxF,EAAAvyB,EAAA6uB,EAAAyK,EAAAjvB,KAAAwuB,aAEAhsC,EAAAmT,EAAsBnT,GAAAgiC,EAAYhiC,GAAAysC,EAMlC,IAFAvB,EAAAxF,EAAA1lC,EAFAssC,EAAA7rC,KAAAC,IAAAV,EAAAysC,EAAA,EAAAzK,GAEAwK,EAAAhvB,KAAAyuB,aAEAz0B,EAAAxX,EAAuBwX,GAAA80B,EAAa90B,GAAAg1B,EAEpCD,EAAA9rC,KAAAC,IAAA8W,EAAAg1B,EAAA,EAAAF,GAGAnvB,EAAAmtB,SAAA7gC,KAAA+T,KAAAguB,OAAA9F,EAAAluB,EAAA+0B,EAAA55B,EAAA,IAMA,OAFAw3B,EAAAhtB,EAAAK,KAAA4sB,QAEAjtB,GAGAuvB,eAAA,SAAA7G,EAAA1oB,EAAAwvB,EAAAd,GAIA,IAFA,IAAA7rC,EAAA0f,EAAAgrB,EAAAkC,EAAAxoC,EAAAyoC,EAAAC,EAAAC,EAGAlB,EAAApiC,KAAA0T,IAEAA,EAAAwtB,MAAAkB,EAAA3rC,OAAA,IAAAysC,GAHA,CAOA,IAFAG,EAAAC,EAAAtqC,IAEAzC,EAAA,EAAA0f,EAAAvC,EAAAmtB,SAAApqC,OAAmDF,EAAA0f,EAAS1f,IAE5DoE,EAAA0mC,EADAJ,EAAAvtB,EAAAmtB,SAAAtqC,KAEA6sC,EAAA7B,EAAAnF,EAAA6E,GAAAtmC,GAGA2oC,GACAA,EAAAF,EACAC,EAAA1oC,EAAA0oC,EAAA1oC,EAAA0oC,EACAF,EAAAlC,GAEiBmC,IAAAE,GAEjB3oC,EAAA0oC,IACAA,EAAA1oC,EACAwoC,EAAAlC,GAKAvtB,EAAAyvB,GAAAzvB,EAAAmtB,SAAA,GAGA,OAAAntB,GAGAwuB,QAAA,SAAA9d,EAAA8e,EAAAK,GAEA,IAAA5C,EAAA5sB,KAAA4sB,OACAvE,EAAAmH,EAAAnf,EAAAuc,EAAAvc,GACAof,KAGA9vB,EAAAK,KAAAkvB,eAAA7G,EAAAroB,KAAAtD,KAAAyyB,EAAAM,GAOA,IAJA9vB,EAAAmtB,SAAA7gC,KAAAokB,GACArqB,EAAA2Z,EAAA0oB,GAGA8G,GAAA,GACAM,EAAAN,GAAArC,SAAApqC,OAAAsd,KAAAssB,aACAtsB,KAAA0vB,OAAAD,EAAAN,GACAA,IAKAnvB,KAAA2vB,oBAAAtH,EAAAoH,EAAAN,IAIAO,OAAA,SAAAD,EAAAN,GAEA,IAAAxvB,EAAA8vB,EAAAN,GACAN,EAAAlvB,EAAAmtB,SAAApqC,OACA0X,EAAA4F,KAAAusB,YAEAvsB,KAAA4vB,iBAAAjwB,EAAAvF,EAAAy0B,GAEA,IAAAgB,EAAA7vB,KAAA8vB,kBAAAnwB,EAAAvF,EAAAy0B,GAEAxvB,EAAA4tB,EAAAttB,EAAAmtB,SAAAxgC,OAAAujC,EAAAlwB,EAAAmtB,SAAApqC,OAAAmtC,IACAxwB,EAAAlK,OAAAwK,EAAAxK,OACAkK,EAAA8tB,KAAAxtB,EAAAwtB,KAEAR,EAAAhtB,EAAAK,KAAA4sB,QACAD,EAAAttB,EAAAW,KAAA4sB,QAEAuC,EAAAM,EAAAN,EAAA,GAAArC,SAAA7gC,KAAAoT,GACAW,KAAAiuB,WAAAtuB,EAAAN,IAGA4uB,WAAA,SAAAtuB,EAAAN,GAEAW,KAAAtD,KAAAuwB,GAAAttB,EAAAN,IACAW,KAAAtD,KAAAvH,OAAAwK,EAAAxK,OAAA,EACA6K,KAAAtD,KAAAywB,MAAA,EACAR,EAAA3sB,KAAAtD,KAAAsD,KAAA4sB,SAGAkD,kBAAA,SAAAnwB,EAAAvF,EAAAy0B,GAEA,IAAArsC,EAAAutC,EAAAC,EAAAC,EAAArpC,EAAAspC,EAAAZ,EAAAjyB,EAIA,IAFA6yB,EAAAZ,EAAArqC,IAEAzC,EAAA4X,EAAmB5X,GAAAqsC,EAAAz0B,EAAY5X,IAI/BytC,EAAAxC,EAHAsC,EAAAlD,EAAAltB,EAAA,EAAAnd,EAAAwd,KAAA4sB,QACAoD,EAAAnD,EAAAltB,EAAAnd,EAAAqsC,EAAA7uB,KAAA4sB,SAGAhmC,EAAA0mC,EAAAyC,GAAAzC,EAAA0C,GAGAC,EAAAC,GACAA,EAAAD,EACA5yB,EAAA7a,EAEA8sC,EAAA1oC,EAAA0oC,EAAA1oC,EAAA0oC,GAEaW,IAAAC,GAEbtpC,EAAA0oC,IACAA,EAAA1oC,EACAyW,EAAA7a,GAKA,OAAA6a,GAIAuyB,iBAAA,SAAAjwB,EAAAvF,EAAAy0B,GAEA,IAAAL,EAAA7uB,EAAAwtB,KAAAntB,KAAAwuB,YAAApB,EACAqB,EAAA9uB,EAAAwtB,KAAAntB,KAAAyuB,YAAApB,EACArtB,KAAAmwB,eAAAxwB,EAAAvF,EAAAy0B,EAAAL,GACAxuB,KAAAmwB,eAAAxwB,EAAAvF,EAAAy0B,EAAAJ,IAIA9uB,EAAAmtB,SAAAxvB,KAAAkxB,IAIA2B,eAAA,SAAAxwB,EAAAvF,EAAAy0B,EAAA/wB,GAEA6B,EAAAmtB,SAAAxvB,KAAAQ,GAEA,IAIAtb,EAAA0qC,EAJAN,EAAA5sB,KAAA4sB,OACAwD,EAAAvD,EAAAltB,EAAA,EAAAvF,EAAAwyB,GACAyD,EAAAxD,EAAAltB,EAAAkvB,EAAAz0B,EAAAy0B,EAAAjC,GACAp3B,EAAA+3B,EAAA6C,GAAA7C,EAAA8C,GAGA,IAAA7tC,EAAA4X,EAAmB5X,EAAAqsC,EAAAz0B,EAAW5X,IAC9B0qC,EAAAvtB,EAAAmtB,SAAAtqC,GACAwD,EAAAoqC,EAAAzwB,EAAAwtB,KAAAP,EAAAM,MACA13B,GAAA+3B,EAAA6C,GAGA,IAAA5tC,EAAAqsC,EAAAz0B,EAAA,EAA2B5X,GAAA4X,EAAQ5X,IACnC0qC,EAAAvtB,EAAAmtB,SAAAtqC,GACAwD,EAAAqqC,EAAA1wB,EAAAwtB,KAAAP,EAAAM,MACA13B,GAAA+3B,EAAA8C,GAGA,OAAA76B,GAGAm6B,oBAAA,SAAAtH,EAAAgG,EAAAc,GAEA,QAAA3sC,EAAA2sC,EAA2B3sC,GAAA,EAAQA,IACnCwD,EAAAqoC,EAAA7rC,GAAA6lC,IAIAkG,UAAA,SAAAF,GAEA,QAAAiC,EAAA9tC,EAAA6rC,EAAA3rC,OAAA,EAA+CF,GAAA,EAAQA,IACvD,IAAA6rC,EAAA7rC,GAAAsqC,SAAApqC,OACAF,EAAA,GACA8tC,EAAAjC,EAAA7rC,EAAA,GAAAsqC,UACAxgC,OAAAgkC,EAAAjkC,QAAAgiC,EAAA7rC,IAAA,GAEiBwd,KAAApU,QAEJ+gC,EAAA0B,EAAA7rC,GAAAwd,KAAA4sB,SAIbJ,YAAA,SAAAxO,GAOA,IAAAuS,GAAA,uBAEAvwB,KAAAwuB,YAAA,IAAAgC,SAAA,QAAAD,EAAAvX,KAAAgF,EAAA,KACAhe,KAAAyuB,YAAA,IAAA+B,SAAA,QAAAD,EAAAvX,KAAAgF,EAAA,KAEAhe,KAAA4sB,OAAA,IAAA4D,SAAA,IACA,kBAAqBxS,EAAA,GACrB,YAAAA,EAAA,GACA,YAAAA,EAAA,GACA,YAAAA,EAAA,yCCrcA,IAAAqH,EAAA9V,EAAA,GA2BAkhB,GAcAC,WAAA,SAAAnrC,EAAAC,EAAAC,EACAC,EAAAi1B,EAAAgW,EAAAC,GACA,IAAAC,OAAAtlC,IAAAqlC,EACAA,KAYA,OAXAD,IACAlrC,EAAAgrC,EAAAK,eAAAvrC,EAAAC,EAAAC,EACAC,EAAAi1B,EACAkW,EAAA,GACAtrC,EAAAsrC,EACArrC,EAAA,EACAE,EAAA,GAEAmrC,EAAAnuC,OAAA+tC,EAAAM,eACAxrC,EAAAC,EAAAC,EAAAC,EAAAi1B,EACAkW,EAAA,GACAA,GAeAE,eAAA,SAAAxrC,EAAAC,EAAAC,EACAC,EAAAi1B,EAAAkW,EAAAG,GACA,IAAAv3B,GAAAhU,EAAAD,GAAAE,EACA,GAAA+T,EAAA,GACA,KAAUjU,EAAAC,EAAcD,GAAAE,EACxBmrC,EAAAG,KACAzrC,EAAAC,GACAqrC,EAAAG,KACAzrC,EAAAC,EAAA,GAEA,OAAAwrC,EAGA,IAAAC,EAAA,IAAAvkC,MAAA+M,GACAw3B,EAAA,KACAA,EAAAx3B,EAAA,KAKA,IAHA,IAEAjX,EAFAmrC,GAAAnoC,EAAAC,EAAAC,GACA2X,EAAA,EAEAswB,EAAAjrC,OAAA,IACA,IAAAwuC,EAAAvD,EAAA3d,MACAmhB,EAAAxD,EAAA3d,MACAohB,EAAA,EACA3oC,EAAAlD,EAAA4rC,GACAtoC,EAAAtD,EAAA4rC,EAAA,GACAzoC,EAAAnD,EAAA2rC,GACApoC,EAAAvD,EAAA2rC,EAAA,GACA,IAAA1uC,EAAA2uC,EAAAzrC,EAA4BlD,EAAA0uC,EAAU1uC,GAAAkD,EAAA,CACtC,IAAA5B,EAAAyB,EAAA/C,GACAuB,EAAAwB,EAAA/C,EAAA,GACA+W,EAAA8rB,EAAA,EAAAhsB,uBACAvV,EAAAC,EAAA0E,EAAAI,EAAAH,EAAAI,GACAyQ,EAAA63B,IACA/zB,EAAA7a,EACA4uC,EAAA73B,GAGA63B,EAAAzW,IACAsW,GAAA5zB,EAAA7X,GAAAE,GAAA,EACAyrC,EAAAzrC,EAAA2X,GACAswB,EAAA1hC,KAAAklC,EAAA9zB,GAEAA,EAAA3X,EAAAwrC,GACAvD,EAAA1hC,KAAAoR,EAAA6zB,IAIA,IAAA1uC,EAAA,EAAaA,EAAAiX,IAAOjX,EACpByuC,EAAAzuC,KACAquC,EAAAG,KACAzrC,EAAAC,EAAAhD,EAAAkD,GACAmrC,EAAAG,KACAzrC,EAAAC,EAAAhD,EAAAkD,EAAA,IAGA,OAAAsrC,GAgBAK,gBAAA,SAAA9rC,EAAAC,EACA05B,EAAAx5B,EAAAi1B,EAAAkW,EACAG,EAAAM,GACA,IAAA9uC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACAwuC,EAAAP,EAAAM,eACAxrC,EAAAC,EAAAC,EAAAC,EAAAi1B,EACAkW,EAAAG,GACAM,EAAArlC,KAAA+kC,GACAxrC,EAAAC,EAEA,OAAAurC,GAgBAO,iBAAA,SACAhsC,EAAAC,EAAA45B,EAAA15B,EAAAi1B,EACAkW,EAAAG,EAAAQ,GACA,IAAAhvC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACA8uC,KACAN,EAAAP,EAAAY,gBACA9rC,EAAAC,EAAA05B,EAAAx5B,EAAAi1B,EACAkW,EAAAG,EAAAM,GACAE,EAAAvlC,KAAAqlC,GACA9rC,EAAA05B,IAAAx8B,OAAA,GAEA,OAAAsuC,GAeAF,eAAA,SAAAvrC,EAAAC,EAAAC,EACAC,EAAAi1B,EAAAkW,EAAAG,GACA,GAAAvrC,GAAAD,EAAAE,EAAA,CAEA,KAAUF,EAAAC,EAAcD,GAAAE,EACxBmrC,EAAAG,KAAAzrC,EAAAC,GACAqrC,EAAAG,KACAzrC,EAAAC,EAAA,GAEA,OAAAwrC,EAEA,IAAAvoC,EAAAlD,EAAAC,GACAqD,EAAAtD,EAAAC,EAAA,GAEAqrC,EAAAG,KAAAvoC,EACAooC,EAAAG,KAAAnoC,EACA,IAAAH,EAAAD,EACAK,EAAAD,EACA,IAAArD,GAAAE,EAAwBF,EAAAC,EAAcD,GAAAE,EACtCgD,EAAAnD,EAAAC,GACAsD,EAAAvD,EAAAC,EAAA,GACA6/B,EAAA,EAAA9rB,gBAAA9Q,EAAAI,EAAAH,EAAAI,GAAA6xB,IAEAkW,EAAAG,KAAAtoC,EACAmoC,EAAAG,KAAAloC,EACAL,EAAAC,EACAG,EAAAC,GAQA,OALAJ,GAAAD,GAAAK,GAAAD,IAEAgoC,EAAAG,KAAAtoC,EACAmoC,EAAAG,KAAAloC,GAEAkoC,GASAS,KAAA,SAAA/tC,EAAA0hC,GACA,OAAAA,EAAAniC,KAAAyuC,MAAAhuC,EAAA0hC,IAuBAuM,SAAA,SAAApsC,EAAAC,EAAAC,EAAAC,EACA0/B,EAAAyL,EAAAG,GAEA,GAAAxrC,GAAAC,EACA,OAAAurC,EAGA,IAQAtoC,EAAAI,EARAL,EAAAgoC,EAAAgB,KAAAlsC,EAAAC,GAAA4/B,GACAv8B,EAAA4nC,EAAAgB,KAAAlsC,EAAAC,EAAA,GAAA4/B,GACA5/B,GAAAE,EAEAmrC,EAAAG,KAAAvoC,EACAooC,EAAAG,KAAAnoC,EAIA,GAIA,GAHAH,EAAA+nC,EAAAgB,KAAAlsC,EAAAC,GAAA4/B,GACAt8B,EAAA2nC,EAAAgB,KAAAlsC,EAAAC,EAAA,GAAA4/B,IACA5/B,GAAAE,IACAD,EAOA,OAFAorC,EAAAG,KAAAtoC,EACAmoC,EAAAG,KAAAloC,EACAkoC,QAEGtoC,GAAAD,GAAAK,GAAAD,GACH,KAAArD,EAAAC,GAAA,CACA,IAAAkD,EAAAI,EAMA,GAJAJ,EAAA8nC,EAAAgB,KAAAlsC,EAAAC,GAAA4/B,GACAr8B,EAAA0nC,EAAAgB,KAAAlsC,EAAAC,EAAA,GAAA4/B,GACA5/B,GAAAE,EAEAiD,GAAAD,GAAAK,GAAAD,EAAA,CAIA,IAAA2F,EAAA/F,EAAAD,EACAiG,EAAA5F,EAAAD,EAEAgG,EAAAlG,EAAAF,EACAqG,EAAA/F,EAAAF,EAIA4F,EAAAK,GAAAJ,EAAAG,IACAJ,EAAA,GAAAI,EAAAJ,MAAAI,GAAAJ,EAAA,GAAAI,EAAAJ,KACAC,EAAA,GAAAI,EAAAJ,MAAAI,GAAAJ,EAAA,GAAAI,EAAAJ,IAEAhG,EAAAC,EACAG,EAAAC,IAMA8nC,EAAAG,KAAAtoC,EACAmoC,EAAAG,KAAAloC,EACAL,EAAAC,EACAG,EAAAC,EACAJ,EAAAC,EACAG,EAAAC,IAKA,OAFA8nC,EAAAG,KAAAtoC,EACAmoC,EAAAG,KAAAloC,EACAkoC,GAgBAY,UAAA,SACArsC,EAAAC,EAAA05B,EAAAx5B,EACA0/B,EACAyL,EAAAG,EAAAM,GACA,IAAA9uC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACAwuC,EAAAP,EAAAkB,SACApsC,EAAAC,EAAAC,EAAAC,EACA0/B,EACAyL,EAAAG,GACAM,EAAArlC,KAAA+kC,GACAxrC,EAAAC,EAEA,OAAAurC,GAgBAa,WAAA,SACAtsC,EAAAC,EAAA45B,EAAA15B,EACA0/B,EACAyL,EAAAG,EAAAQ,GACA,IAAAhvC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACA8uC,KACAN,EAAAP,EAAAmB,UACArsC,EAAAC,EAAA05B,EAAAx5B,EACA0/B,EACAyL,EAAAG,EAAAM,GACAE,EAAAvlC,KAAAqlC,GACA9rC,EAAA05B,IAAAx8B,OAAA,GAEA,OAAAsuC,IAEA9uC,EAAA,kCC/YA,IAAA4vC,GAUAC,WAAA,SAAAxsC,EAAAC,EAAAC,EAAAC,GAIA,IAHA,IAAAssC,EAAA,EACAvpC,EAAAlD,EAAAE,EAAAC,GACAmD,EAAAtD,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAAgD,EAAAnD,EAAAC,GACAsD,EAAAvD,EAAAC,EAAA,GACAwsC,GAAAnpC,EAAAH,EAAAD,EAAAK,EACAL,EAAAC,EACAG,EAAAC,EAEA,OAAAkpC,EAAA,GAWAC,YAAA,SAAA1sC,EAAAC,EAAA05B,EAAAx5B,GACA,IACAlD,EAAAC,EADAmE,EAAA,EAEA,IAAApE,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACAoE,GAAAkrC,EAAAC,WAAAxsC,EAAAC,EAAAC,EAAAC,GACAF,EAAAC,EAEA,OAAAmB,GAWAsrC,aAAA,SAAA3sC,EAAAC,EAAA45B,EAAA15B,GACA,IACAlD,EAAAC,EADAmE,EAAA,EAEA,IAAApE,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACAoE,GACAkrC,EAAAG,YAAA1sC,EAAAC,EAAA05B,EAAAx5B,GACAF,EAAA05B,IAAAx8B,OAAA,GAEA,OAAAkE,IAEA1E,EAAA,oECpCAiwC,EAAA,SAAA9wB,GAMArB,KAAAoyB,MAAA/wB,EAAAgxB,KAMAryB,KAAAsyB,YAAAjxB,EAAAkxB,WAAAlxB,EAAAkxB,WAAA,MAUAJ,EAAA1wC,UAAA+wC,QAAA,WACA,OAAAxyB,KAAAoyB,OAUAD,EAAA1wC,UAAAgxC,uBAAA,SAAAF,EAAAztB,EAAAxD,GACA,IAAAtB,KAAAsyB,YACA,SAEA,IAAA9vC,EAAAC,EAAA22B,EAAAsZ,EACA,IAAAA,KAAAH,EAAA,CAKA,IAAAI,EAJA,GAAAD,KAAA1yB,KAAAsyB,YAKA,IAFAlZ,EAAAmZ,EAAAG,GAEAlwC,EAAA,EAAAC,EAAAud,KAAAsyB,YAAAI,GAAAhwC,OAAmDF,EAAAC,IAAQD,EAAA,CAE3D,IADAmwC,EAAA3yB,KAAAsyB,YAAAI,GAAAlwC,IACA2G,WAAAiwB,GACA,SAEA,IAAAwZ,EAAA9tB,EAAAuU,0BACAuJ,EAAA,EAAAM,qBAAA5hB,GAAAxC,SAAA4zB,EAAA,KACAx+B,EAAA0+B,EAAA9rC,WACA,GAAAsyB,EAAAp2B,KAAA4vC,EAAA5vC,MACAo2B,EAAA/1B,KAAAuvC,EAAAvvC,KAAA,CACA,GAAAsvC,EAAAxpC,WAAA,IAAAw3B,EAAA,EACAngB,EAAA,EAAA9F,OAAA0e,EAAAp2B,KAAAkR,GACAsM,EAAA,EAAA9F,OAAA0e,EAAA/1B,KAAA6Q,GACAklB,EAAAh2B,KAAAg2B,EAAA71B,OACA,SAEA,GAAA61B,EAAAtyB,WAAAoN,GACAy+B,EAAAxpC,WAAAypC,GACA,WAKA,UAEA,IAAAC,EAAA,0BC3EAC,EAAA,SAAAzxB,GAEAjG,EAAA,EAAA9U,KAAA0Z,MAMAA,KAAA+yB,YAAAnP,EAAA,EAAArhB,IAAAlB,EAAAC,YAMAtB,KAAAgzB,cAAA,KAMAhzB,KAAAizB,eAAAjzB,KAAAkzB,mBAAA7xB,EAAA8xB,cAMAnzB,KAAAozB,MAAA/xB,EAAAgyB,KAMArzB,KAAAszB,YAAA/nC,IAAA8V,EAAAkyB,MACAlyB,EAAAkyB,QAAA,EAAA3Z,MAMA5Z,KAAAwzB,YAAAjoC,IAAA8V,EAAA2hB,OAAA3hB,EAAA2hB,OAIAtf,EAAA,EAAApiB,SAAAwxC,EAAA13B,EAAA,GAQA03B,EAAArxC,UAAAyxC,mBAAA,SAAAO,GACA,IAAAA,EACA,YAEA,GAAAA,aAAAZ,EAKA,OAFA7yB,KAAAgzB,eAAAS,GAEA,SAAA1d,GACA,OAAA0d,EAAAjB,YAGA,GAAA9lC,MAAAkQ,QAAA62B,GAAA,CACA,GAAAA,EAAA,aAAAZ,EAAA,CAGA7yB,KAAAgzB,cAAAS,EAEA,IAAAN,EAAAM,EAAAvf,IAAA,SAAAwf,GACA,OAAAA,EAAAlB,YAEA,gBAAAzc,GACA,OAAAod,GASA,OAJAnzB,KAAAgzB,cAAAS,EAAAvf,IAAA,SAAAwf,GACA,WAAAb,GAAmCR,KAAAqB,MAGnC,SAAA3d,GACA,OAAA0d,GAIA,yBAAAA,EACAA,GAIAzzB,KAAAgzB,eACA,IAAAH,GAA0BR,KAAAoB,KAG1B,SAAA1d,GACA,OAAA0d,MAeAX,EAAArxC,UAAAkyC,2BAAAjwB,EAAA,EAAA7hB,aAQAixC,EAAArxC,UAAAmyC,gBAAA,WACA,OAAA5zB,KAAAgzB,eAQAF,EAAArxC,UAAAoyC,iBAAA,WACA,OAAA7zB,KAAAizB,gBASAH,EAAArxC,UAAAqyC,QAAA,WACA,OAAA9zB,KAAAozB,OASAN,EAAArxC,UAAAsyC,cAAA,WACA,OAAA/zB,KAAA+yB,aAQAD,EAAArxC,UAAA6/B,eAAA,aAQAwR,EAAArxC,UAAA4zB,SAAA,WACA,OAAArV,KAAAszB,QAOAR,EAAArxC,UAAAuyC,SAAA,WACA,OAAAh0B,KAAAwzB,QAQAV,EAAArxC,UAAAwyC,QAAA,WACAj0B,KAAAyV,WAWAqd,EAAArxC,UAAAyyC,gBAAA,SAAAf,GACAnzB,KAAAizB,eAAAjzB,KAAAkzB,mBAAAC,GACAnzB,KAAAyV,WAQAqd,EAAArxC,UAAA0yC,QAAA,SAAAd,GACArzB,KAAAozB,MAAAC,GASAP,EAAArxC,UAAA2yC,SAAA,SAAAb,GACAvzB,KAAAszB,OAAAC,EACAvzB,KAAAyV,WAEAvzB,EAAA,4GC1NAmyC,EAAA,SAAAhzB,GAEAizB,EAAA,EAAAhuC,KAAA0Z,MACAmzB,aAAA9xB,EAAA8xB,aACA7wC,OAAA+e,EAAA/e,OACA+wC,KAAAhyB,EAAAgyB,KACA/xB,WAAAD,EAAAC,WACAiyB,MAAAlyB,EAAAkyB,MACAvQ,MAAA3hB,EAAA2hB,QAOAhjB,KAAAu0B,aAAAhpC,IAAA8V,EAAAmzB,QAAAnzB,EAAAmzB,OAMAx0B,KAAAy0B,qBAAAlpC,IAAA8V,EAAAqzB,eACArzB,EAAAqzB,eAAA,EAMA10B,KAAA8E,cAAAvZ,IAAA8V,EAAAyD,SAAAzD,EAAAyD,SAAA,KAMA9E,KAAA20B,UAAA,IAAAC,EAAA,EAAAvzB,EAAAwV,WAMA7W,KAAA60B,SAAA,KAMA70B,KAAAknB,KAAA,GAMAlnB,KAAA80B,aAAsBC,WAAA1zB,EAAA0zB,aAItBrqB,EAAA,EAAAppB,SAAA+yC,EAAAC,EAAA,GAMAD,EAAA5yC,UAAAmlC,eAAA,WACA,OAAA5mB,KAAA20B,UAAA/N,kBAQAyN,EAAA5yC,UAAAuzC,YAAA,SAAA1zB,EAAA2zB,GACA,IAAAN,EAAA30B,KAAAk1B,0BAAA5zB,GACAqzB,GACAA,EAAAK,YAAAC,IAcAZ,EAAA5yC,UAAA0zC,kBAAA,SAAA7zB,EAAA6W,EAAAiB,EAAAjzB,GACA,IAAAwuC,EAAA30B,KAAAk1B,0BAAA5zB,GACA,IAAAqzB,EACA,SAKA,IAFA,IACAS,EAAAC,EAAAC,EADAC,GAAA,EAEAzxC,EAAAs1B,EAAAp2B,KAA8Bc,GAAAs1B,EAAA/1B,OAAqBS,EACnD,QAAAC,EAAAq1B,EAAAh2B,KAAgCW,GAAAq1B,EAAA71B,OAAqBQ,EACrDsxC,EAAAG,EAAA,EAAAnd,UAAAF,EAAAr0B,EAAAC,GACAuxC,GAAA,EACAX,EAAA5N,YAAAsO,KAEAC,GADAF,EAAmCT,EAAApyB,IAAA8yB,IACnChgB,aAAAogB,EAAA,EAAAh9B,UAEA68B,GAAA,IAAAnvC,EAAAivC,IAGAE,IACAC,GAAA,GAIA,OAAAA,GAQAlB,EAAA5yC,UAAAi0C,UAAA,SAAAp0B,GACA,UASA+yB,EAAA5yC,UAAA62B,OAAA,WACA,OAAAtY,KAAAknB,MASAmN,EAAA5yC,UAAAk0C,OAAA,SAAAvpC,GACA4T,KAAAknB,OAAA96B,IACA4T,KAAAknB,KAAA96B,EACA4T,KAAAyV,YASA4e,EAAA5yC,UAAAm0C,UAAA,SAAAt0B,GACA,OAAAtB,KAAAu0B,SAOAF,EAAA5yC,UAAA6/B,eAAA,WACA,OAAAthB,KAAA8E,SAAAwc,kBAaA+S,EAAA5yC,UAAAo0C,QAAA,SAAA1d,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,KAQA+yB,EAAA5yC,UAAAs0C,YAAA,WACA,OAAA/1B,KAAA8E,UAQAuvB,EAAA5yC,UAAAu0C,yBAAA,SAAA10B,GACA,OAAAtB,KAAA8E,SAGA9E,KAAA8E,SAFAmxB,EAAA,EAAAnT,iBAAAxhB,IAYA+yB,EAAA5yC,UAAAyzC,0BAAA,SAAA5zB,GACA,IAAA40B,EAAAl2B,KAAA+zB,gBACA,OAAAmC,IAAAC,EAAA,EAAA5sB,WAAA2sB,EAAA50B,GACA,KAEAtB,KAAA20B,WAYAN,EAAA5yC,UAAA20C,kBAAA,SAAAN,GACA,OAAA91B,KAAAy0B,iBAUAJ,EAAA5yC,UAAA40C,iBAAA,SAAAle,EAAA2d,EAAAx0B,GACA,IAAAwD,EAAA9E,KAAAg2B,yBAAA10B,GACAozB,EAAA10B,KAAAo2B,kBAAAN,GACAvV,EAAA+V,EAAA,EAAA3c,OAAA7U,EAAA4c,YAAAvJ,GAAAnY,KAAA60B,SACA,UAAAH,EACAnU,EAEA+V,EAAA,EAAAhoC,MAAAiyB,EAAAmU,EAAA10B,KAAA60B,UAcAR,EAAA5yC,UAAA80C,+BAAA,SAAAhe,EAAApP,GACA,IAAA7H,OAAA/V,IAAA4d,EACAA,EAAAnJ,KAAA+zB,gBACAjvB,EAAA9E,KAAAg2B,yBAAA10B,GAIA,OAHAtB,KAAAg0B,YAAA1yB,EAAAoD,aACA6T,EAAA0d,EAAA,EAAAjT,MAAAle,EAAAyT,EAAAjX,IAEAk0B,EAAA,EAAAvc,iBAAAV,EAAAzT,GAAAyT,EAAA,MAOA8b,EAAA5yC,UAAAwyC,QAAA,WACAj0B,KAAA20B,UAAA/oC,QACAoU,KAAAyV,WAWA4e,EAAA5yC,UAAA+0C,QAAA9rB,EAAA,EAAA7oB,aAcAwyC,EAAA/oB,MAAA,SAAAlgB,EAAAgqC,GAEAzpB,EAAA,EAAArlB,KAAA0Z,KAAA5U,GAOA4U,KAAAo1B,QAGA1qB,EAAA,EAAAppB,SAAA+yC,EAAA/oB,MAAAK,EAAA,GACAzpB,EAAA,4ECtTAu0C,EAAA,SAAAp1B,GAEAq1B,EAAA,EAAApwC,KAAA0Z,MAKA,IAAA22B,EAAA1rB,EAAA,EAAApQ,UAAqCwG,GACrCs1B,EAAAC,EAAA,EAAA5nB,cACAzjB,IAAA8V,EAAA7K,QAAA6K,EAAA7K,QAAA,EACAmgC,EAAAC,EAAA,EAAA3nB,cACA1jB,IAAA8V,EAAAsT,SAAAtT,EAAAsT,QACAgiB,EAAAC,EAAA,EAAA1nB,cACA3jB,IAAA8V,EAAAyU,OAAAzU,EAAAyU,OAAA,EACA6gB,EAAAC,EAAA,EAAAznB,qBACA5jB,IAAA8V,EAAAwT,cAAAxT,EAAAwT,cAAA5vB,IACA0xC,EAAAC,EAAA,EAAAxnB,qBACA7jB,IAAA8V,EAAAuT,cAAAvT,EAAAuT,cAAA,EAEA5U,KAAA4K,cAAA+rB,GAMA32B,KAAAszB,QACAuD,MAAqC,KACrChhB,SAAA,GAQA7V,KAAA5U,MAIAsf,EAAA,EAAAppB,SAAAm1C,EAAAC,EAAA,GAOAD,EAAAh1C,UAAA8f,QAAA,WACA,OAAAvB,KAAA5U,MAOAqrC,EAAAh1C,UAAAyzB,cAAA,WASA,OARAlV,KAAAszB,OAAA98B,QAAAsgC,EAAA,EAAAj+B,MAAAmH,KAAA+2B,aAAA,KACA/2B,KAAAszB,OAAA0D,YAAAh3B,KAAAoV,iBACApV,KAAAszB,OAAA3e,QAAA3U,KAAAi3B,aACAj3B,KAAAszB,OAAAhxC,OAAA0d,KAAAmE,YACAnE,KAAAszB,OAAAxd,OAAA9V,KAAAk3B,YACAl3B,KAAAszB,OAAAze,cAAA7U,KAAAm3B,mBACAn3B,KAAAszB,OAAA1e,cAAA3xB,KAAAK,IAAA0c,KAAAo3B,mBAAA,GAEAp3B,KAAAszB,QAUAmD,EAAAh1C,UAAAqzB,eAAA,SAAArF,KASAgnB,EAAAh1C,UAAAszB,oBAAA,SAAAC,KAUAyhB,EAAAh1C,UAAA0iB,UAAA,WACA,OACiCnE,KAAAuC,IAAAq0B,EAAA,EAAArxB,SAWjCkxB,EAAAh1C,UAAA01C,iBAAA,WACA,OACoBn3B,KAAAuC,IAAAq0B,EAAA,EAAAznB,iBAWpBsnB,EAAAh1C,UAAA21C,iBAAA,WACA,OACoBp3B,KAAAuC,IAAAq0B,EAAA,EAAAxnB,iBAWpBqnB,EAAAh1C,UAAAs1C,WAAA,WACA,OACoB/2B,KAAAuC,IAAAq0B,EAAA,EAAA5nB,UASpBynB,EAAAh1C,UAAA2zB,eAAA,aASAqhB,EAAAh1C,UAAAw1C,WAAA,WACA,OACqBj3B,KAAAuC,IAAAq0B,EAAA,EAAA3nB,UAYrBwnB,EAAAh1C,UAAAy1C,UAAA,WACA,OACoBl3B,KAAAuC,IAAAq0B,EAAA,EAAA1nB,UAYpBunB,EAAAh1C,UAAAsjB,UAAA,SAAAziB,GACA0d,KAAAnT,IAAA+pC,EAAA,EAAArxB,OAAAjjB,IAUAm0C,EAAAh1C,UAAA41C,iBAAA,SAAAxiB,GACA7U,KAAAnT,IAAA+pC,EAAA,EAAAznB,eAAA0F,IAUA4hB,EAAAh1C,UAAA61C,iBAAA,SAAA1iB,GACA5U,KAAAnT,IAAA+pC,EAAA,EAAAxnB,eAAAwF,IAUA6hB,EAAAh1C,UAAA81C,WAAA,SAAA/gC,GACAwJ,KAAAnT,IAAA+pC,EAAA,EAAA5nB,QAAAxY,IAUAigC,EAAAh1C,UAAA+1C,WAAA,SAAA7iB,GACA3U,KAAAnT,IAAA+pC,EAAA,EAAA3nB,QAAA0F,IAWA8hB,EAAAh1C,UAAAg2C,UAAA,SAAAC,GACA13B,KAAAnT,IAAA+pC,EAAA,EAAA1nB,QAAAwoB,IAEAx1C,EAAA,kCCtOAA,EAAA,GAlBAy1C,WAAA,aAOAC,UAAA,YAOAC,QAAA,0ECLAC,EAAA,WAEAxR,EAAA,EAAAhgC,KAAA0Z,MAMAA,KAAA+3B,UAAA,GAIArtB,EAAA,EAAAppB,SAAAw2C,EAAAxR,EAAA,GASAwR,EAAAE,QAAA,SAAA5rC,GACA,GAAAM,MAAAkQ,QAAAxQ,GACA,QAAA5J,EAAA,EAAAC,EAAA2J,EAAA1J,OAAoCF,EAAAC,IAAQD,EAC5Cy1C,EAAA,EAAAntC,cAAAsB,EAAA5J,SAGAy1C,EAAA,EAAAntC,cAAsD,IAStDgtC,EAAAr2C,UAAAg0B,QAAA,aACAzV,KAAA+3B,UACA/3B,KAAAqL,cAAAyb,EAAA,EAAA7vB,SAeA6gC,EAAAr2C,UAAA4pB,cASAysB,EAAAr2C,UAAAo5B,YAAA,WACA,OAAA7a,KAAA+3B,WAcAD,EAAAr2C,UAAAy2C,GAAA,SAAA9sC,EAAAV,EAAAtE,GACA,GAAAsG,MAAAkQ,QAAAxR,GAAA,CAGA,IAFA,IAAA8W,EAAA9W,EAAA1I,OACAmJ,EAAA,IAAAa,MAAAwV,GACA1f,EAAA,EAAmBA,EAAA0f,IAAS1f,EAC5BqJ,EAAArJ,GAAAy1C,EAAA,EAAAnsC,OAAAkU,KAAA5U,EAAA5I,GAAAkI,EAAAtE,GAEA,OAAAyF,EAEA,OAAAosC,EAAA,EAAAnsC,OACAkU,KAAgC,EAAAtV,EAAAtE,IAehC0xC,EAAAr2C,UAAA02C,KAAA,SAAA/sC,EAAAV,EAAAtE,GACA,GAAAsG,MAAAkQ,QAAAxR,GAAA,CAGA,IAFA,IAAA8W,EAAA9W,EAAA1I,OACAmJ,EAAA,IAAAa,MAAAwV,GACA1f,EAAA,EAAmBA,EAAA0f,IAAS1f,EAC5BqJ,EAAArJ,GAAAy1C,EAAA,EAAA/rC,WAAA8T,KAAA5U,EAAA5I,GAAAkI,EAAAtE,GAEA,OAAAyF,EAEA,OAAAosC,EAAA,EAAA/rC,WACA8T,KAAgC,EAAAtV,EAAAtE,IAahC0xC,EAAAr2C,UAAA22C,GAAA,SAAAhtC,EAAAV,EAAAtE,GACA,GAAAsG,MAAAkQ,QAAAxR,GACA,QAAA5I,EAAA,EAAAC,EAAA2I,EAAA1I,OAAqCF,EAAAC,IAAQD,EAC7Cy1C,EAAA,EAAA9rC,SAAA6T,KAAA5U,EAAA5I,GAAAkI,EAAAtE,QAIA6xC,EAAA,EAAA9rC,SAAA6T,KAAiD,EAAAtV,EAAAtE,IAGjDlE,EAAA,mGC/IAm2C,EAAA,SAAAh3B,GAMArB,KAAAs4B,SAAAj3B,EAAA7K,QAMAwJ,KAAAu4B,gBAAAl3B,EAAAm3B,eAMAx4B,KAAAy4B,UAAAp3B,EAAAvZ,SAMAkY,KAAA04B,OAAAr3B,EAAA/S,MAMA0R,KAAA24B,aAAAt3B,EAAAu3B,aAUAP,EAAA52C,UAAAs1C,WAAA,WACA,OAAA/2B,KAAAs4B,UASAD,EAAA52C,UAAAo3C,kBAAA,WACA,OAAA74B,KAAAu4B,iBASAF,EAAA52C,UAAAq3C,YAAA,WACA,OAAA94B,KAAAy4B,WASAJ,EAAA52C,UAAAs3C,SAAA,WACA,OAAA/4B,KAAA04B,QASAL,EAAA52C,UAAAu3C,eAAA,WACA,OAAAh5B,KAAA24B,cAUAN,EAAA52C,UAAAw3C,UAAA,aASAZ,EAAA52C,UAAAy3C,SAAA,SAAApD,KAQAuC,EAAA52C,UAAA03C,qBAAA,SAAArD,KAOAuC,EAAA52C,UAAA23C,cAAA,aAOAf,EAAA52C,UAAA43C,aAAA,aAOAhB,EAAA52C,UAAA63C,yBAAA,aAQAjB,EAAA52C,UAAA2/B,UAAA,aAQAiX,EAAA52C,UAAA4H,QAAA,aASAgvC,EAAA52C,UAAA81C,WAAA,SAAA/gC,GACAwJ,KAAAs4B,SAAA9hC,GASA6hC,EAAA52C,UAAA83C,kBAAA,SAAAf,GACAx4B,KAAAu4B,gBAAAC,GAUAH,EAAA52C,UAAA+3C,YAAA,SAAA1xC,GACAkY,KAAAy4B,UAAA3wC,GAUAuwC,EAAA52C,UAAAg4C,SAAA,SAAAnrC,GACA0R,KAAA04B,OAAApqC,GASA+pC,EAAA52C,UAAAi4C,eAAA,SAAAd,GACA54B,KAAA24B,aAAAC,GAWAP,EAAA52C,UAAAk4C,kBAAA,SAAAjvC,EAAAkvC,KAOAvB,EAAA52C,UAAAumC,KAAA,aASAqQ,EAAA52C,UAAAo4C,oBAAA,SAAAnvC,EAAAkvC,KACA,IAAAE,EAAA,ECzNAC,EAAA,SAAA14B,GAKArB,KAAAg6B,WAAA,KAMAh6B,KAAAi6B,QAAA,KAMAj6B,KAAAk6B,oBAAA,KAMAl6B,KAAAm6B,WAAA5uC,IAAA8V,EAAA+4B,KAAA/4B,EAAA+4B,KAAA,KAMAp6B,KAAAigB,SAAA,KAMAjgB,KAAAq6B,QAAAh5B,EAAAi5B,OAMAt6B,KAAAu6B,aAAmChvC,IAAA8V,EAAAtB,OACnCsB,EAAAtB,OAAAsB,EAAAm5B,QAMAx6B,KAAAy6B,SAAAp5B,EAAAq5B,QAMA16B,KAAA26B,YAAApvC,IAAA8V,EAAAhT,MAAAgT,EAAAhT,MAAA,EAMA2R,KAAA46B,aAAArvC,IAAA8V,EAAAw5B,OAAAx5B,EAAAw5B,OAAA,KAMA76B,KAAA86B,QAAA,KAMA96B,KAAA+6B,MAAA,KAMA/6B,KAAAg7B,WAAA,KAMAh7B,KAAAi7B,uBAAA,KAMAj7B,KAAAk7B,cAAA75B,EAAA85B,aAEAn7B,KAAAo7B,QAAAp7B,KAAAk7B,eAKA,IAAAtC,OAAArtC,IAAA8V,EAAAu3B,aACAv3B,EAAAu3B,YAKAJ,OAAAjtC,IAAA8V,EAAAm3B,gBACAn3B,EAAAm3B,eAEAsB,EAAAxzC,KAAA0Z,MACAxJ,QAAA,EACAgiC,iBACA1wC,cAAAyD,IAAA8V,EAAAvZ,SAAAuZ,EAAAvZ,SAAA,EACAwG,MAAA,EACAsqC,iBAIAl1B,EAAA,EAAApiB,SAAAy4C,EAAAD,GAQAC,EAAAt4C,UAAAkC,MAAA,WACA,IAAA4R,EAAA,IAAAwkC,GACAK,KAAAp6B,KAAAq7B,UAAAr7B,KAAAq7B,UAAA13C,aAAA4H,EACA+uC,OAAAt6B,KAAAs7B,YACAv7B,OAAAC,KAAA+c,YACA2d,QAAA16B,KAAAu7B,aACAltC,MAAA2R,KAAAw7B,WACA5C,YAAA54B,KAAAg5B,iBACA6B,OAAA76B,KAAAy7B,YAAAz7B,KAAAy7B,YAAA93C,aAAA4H,EACAzD,SAAAkY,KAAA84B,cACAN,eAAAx4B,KAAA64B,oBACAsC,aAAAn7B,KAAAk7B,gBAIA,OAFA3lC,EAAAgiC,WAAAv3B,KAAA+2B,cACAxhC,EAAAkkC,SAAAz5B,KAAA+4B,YACAxjC,GAQAwkC,EAAAt4C,UAAAw3C,UAAA,WACA,OAAAj5B,KAAA86B,SASAf,EAAAt4C,UAAA+5C,SAAA,WACA,OAAAx7B,KAAA26B,QASAZ,EAAAt4C,UAAA45C,QAAA,WACA,OAAAr7B,KAAAm6B,OAOAJ,EAAAt4C,UAAA03C,qBAAA,SAAArD,GACA,OAAA91B,KAAAk6B,qBAQAH,EAAAt4C,UAAAy3C,SAAA,SAAApD,GACA,OAAA91B,KAAAi6B,SAOAF,EAAAt4C,UAAA43C,aAAA,WACA,OAAAr5B,KAAAg7B,YAOAjB,EAAAt4C,UAAA63C,yBAAA,WACA,OAAAt5B,KAAAi7B,wBAOAlB,EAAAt4C,UAAA23C,cAAA,WACA,OAAAsC,EAAA,EAAAjjC,QAQAshC,EAAAt4C,UAAA2/B,UAAA,WACA,OAAAphB,KAAAigB,SASA8Z,EAAAt4C,UAAA65C,UAAA,WACA,OAAAt7B,KAAAq6B,SASAN,EAAAt4C,UAAAs7B,UAAA,WACA,OAAA/c,KAAAu6B,SASAR,EAAAt4C,UAAA85C,WAAA,WACA,OAAAv7B,KAAAy6B,UAQAV,EAAAt4C,UAAA4H,QAAA,WACA,OAAA2W,KAAA+6B,OASAhB,EAAAt4C,UAAAg6C,UAAA,WACA,OAAAz7B,KAAA46B,SAOAb,EAAAt4C,UAAAk4C,kBAAA,SAAAjvC,EAAAkvC,KAMAG,EAAAt4C,UAAAumC,KAAA,aAMA+R,EAAAt4C,UAAAo4C,oBAAA,SAAAnvC,EAAAkvC,KAOAG,EAAAt4C,UAAA25C,QAAA,SAAAD,GACA,IAAAQ,EAMAC,EALA1S,EAAA,GACAM,EAAA,GACAE,EAAA,EACAN,EAAA,KACAE,EAAA,EAEAuS,EAAA,EAEA77B,KAAA46B,UAEA,QADAgB,EAAA57B,KAAA46B,QAAA/Q,cAEA+R,EAAAnqC,EAAA,EAAAoB,oBAEA+oC,EAAAE,EAAA,EAAAjkB,YAAA+jB,QAEArwC,KADAswC,EAAA77B,KAAA46B,QAAA9zC,cAEA+0C,EAAApqC,EAAA,EAAAwB,kBAEAm2B,EAAAppB,KAAA46B,QAAA7Q,cACAT,EAAAtpB,KAAA46B,QAAA5Q,oBACA+R,EAAA,EAAA5uB,mBACAic,EAAA,KACAE,EAAA,QAGA/9B,KADAi+B,EAAAxpB,KAAA46B,QAAA3Q,iBAEAT,EAAA/3B,EAAA,EAAAkB,sBAGApH,KADA29B,EAAAlpB,KAAA46B,QAAA9Q,gBAEAZ,EAAAz3B,EAAA,EAAAe,qBAGAjH,KADAm+B,EAAA1pB,KAAA46B,QAAA1Q,mBAEAR,EAAAj4B,EAAA,EAAAmB,oBAIA,IAAA7K,EAAA,GAAAiY,KAAAu6B,QAAAsB,GAAA,EAGAG,GACAJ,cACAC,cACA9zC,OACAmhC,UACAE,WACAE,iBACAE,WACAE,cAGA,QAAAn+B,IAAA4vC,EAAA,CAEA,IAAAxpC,EAAAsqC,EAAA,EAAAlnC,sBAAAhN,KACAiY,KAAAi6B,QAAAtoC,EAAAF,OAIAkqC,EADA5zC,EAAAiY,KAAAi6B,QAAA/lC,MAGA8L,KAAAk8B,MAAAF,EAAArqC,EAAA,KAEAqO,KAAAm8B,0BAAAH,OACG,CAEHj0C,EAAA9E,KAAAyuC,MAAA3pC,GAEA,IACAq0C,EADAC,GAAAr8B,KAAAm6B,MAEAkC,IAEAD,EACAp8B,KAAAs8B,wBAAApsB,KAAAlQ,KAAAg8B,IAGA,IAAAO,EAAAv8B,KAAAyqB,cACA+R,EAAArB,EAAAv0B,IACA21B,EAAAx0C,IAAAiY,KAAAk8B,MAAAhsB,KAAAlQ,KAAAg8B,GACAI,GAEAp8B,KAAAi6B,QAAAuC,EAAA/lC,MACAuJ,KAAAigB,SAAAuc,EAAArmC,QAAAqmC,EAAApmC,SACAulC,EAAAa,EAAA/lC,MAAAvC,MAEAmoC,GACAr8B,KAAAk6B,oBAAAsC,EAAAC,SACAz8B,KAAAi7B,wBACAuB,EAAAC,SAAAvoC,MAAAsoC,EAAAC,SAAAtnC,UAEA6K,KAAAk6B,oBAAAl6B,KAAAi6B,QACAj6B,KAAAi7B,wBAAAU,MAIA37B,KAAA86B,SAAA/yC,EAAA,EAAAA,EAAA,GACAiY,KAAA+6B,OAAAhzC,KACAiY,KAAAg7B,YAAAW,MAWA5B,EAAAt4C,UAAAy6C,MAAA,SAAAF,EAAArqC,EAAA7N,EAAAC,GACA,IAAAvB,EAAAk6C,EAAAC,EAEAhrC,EAAAqF,aAAA,aAGArF,EAAApD,UAAAzK,EAAAC,GAEA4N,EAAAirC,YAEA,IAAAtC,EAAAt6B,KAAAq6B,QACA,GAAAC,IAAAr1C,IACA0M,EAAAkrC,IACAb,EAAAj0C,KAAA,EAAAi0C,EAAAj0C,KAAA,EACAiY,KAAAu6B,QAAA,IAAAt3C,KAAAsX,IAAA,OACG,CACH,IAAAmgC,OAAAnvC,IAAAyU,KAAAy6B,SAAAz6B,KAAAy6B,SACAz6B,KAAAu6B,QAIA,IAHAG,IAAA16B,KAAAu6B,UACAD,GAAA,GAEA93C,EAAA,EAAeA,GAAA83C,EAAa93C,IAC5Bk6C,EAAA,EAAAl6C,EAAAS,KAAAsX,GAAA+/B,EAAAr3C,KAAAsX,GAAA,EAAAyF,KAAA26B,OACAgC,EAAAn6C,EAAA,KAAAwd,KAAAu6B,QAAAG,EACA/oC,EAAAmrC,OAAAd,EAAAj0C,KAAA,EAAA40C,EAAA15C,KAAAgF,IAAAy0C,GACAV,EAAAj0C,KAAA,EAAA40C,EAAA15C,KAAAkF,IAAAu0C,IAKA,GAAA18B,KAAAm6B,MAAA,CACA,IAAA5jB,EAAAvW,KAAAm6B,MAAAtQ,WACA,OAAAtT,IACAA,EAAA9kB,EAAA,EAAAc,kBAEAZ,EAAAorC,UAAAjB,EAAA,EAAAjkB,YAAAtB,GACA5kB,EAAAyoC,OAEAp6B,KAAA46B,UACAjpC,EAAAiqC,YAAAI,EAAAJ,YACAjqC,EAAAqrC,UAAAhB,EAAAH,YACAG,EAAA5S,WACAz3B,EAAA0b,YAAA2uB,EAAA5S,UACAz3B,EAAA23B,eAAA0S,EAAA1S,gBAEA33B,EAAAu3B,QAAA8S,EAAA9S,QACAv3B,EAAA63B,SAAAwS,EAAAxS,SACA73B,EAAA+3B,WAAAsS,EAAAtS,WACA/3B,EAAAkpC,UAEAlpC,EAAAsrC,aAQAlD,EAAAt4C,UAAA06C,0BAAA,SAAAH,GAEA,GADAh8B,KAAAi7B,wBAAAe,EAAAj0C,KAAAi0C,EAAAj0C,MACAiY,KAAAm6B,MACAn6B,KAAAk6B,oBAAAl6B,KAAAi6B,YADA,CAOA,IAAAtoC,EAAAsqC,EAAA,EAAAlnC,sBAAAinC,EAAAj0C,KAAAi0C,EAAAj0C,MACAiY,KAAAk6B,oBAAAvoC,EAAAF,OAEAuO,KAAAs8B,wBAAAN,EAAArqC,EAAA,OAWAooC,EAAAt4C,UAAA66C,wBAAA,SAAAN,EAAArqC,EAAA7N,EAAAC,GAEA4N,EAAAqF,aAAA,aAGArF,EAAApD,UAAAzK,EAAAC,GAEA4N,EAAAirC,YAEA,IAAAtC,EAAAt6B,KAAAq6B,QACA,GAAAC,IAAAr1C,IACA0M,EAAAkrC,IACAb,EAAAj0C,KAAA,EAAAi0C,EAAAj0C,KAAA,EACAiY,KAAAu6B,QAAA,IAAAt3C,KAAAsX,IAAA,OACG,CACH,IAKA/X,EAAAm6C,EAAAD,EALAhC,OAAAnvC,IAAAyU,KAAAy6B,SAAAz6B,KAAAy6B,SACAz6B,KAAAu6B,QAKA,IAJAG,IAAA16B,KAAAu6B,UACAD,GAAA,GAGA93C,EAAA,EAAeA,GAAA83C,EAAa93C,IAC5Bk6C,EAAA,EAAAl6C,EAAAS,KAAAsX,GAAA+/B,EAAAr3C,KAAAsX,GAAA,EAAAyF,KAAA26B,OACAgC,EAAAn6C,EAAA,KAAAwd,KAAAu6B,QAAAG,EACA/oC,EAAAmrC,OAAAd,EAAAj0C,KAAA,EAAA40C,EAAA15C,KAAAgF,IAAAy0C,GACAV,EAAAj0C,KAAA,EAAA40C,EAAA15C,KAAAkF,IAAAu0C,IAIA/qC,EAAAorC,UAAAtrC,EAAA,EAAAc,iBACAZ,EAAAyoC,OACAp6B,KAAA46B,UACAjpC,EAAAiqC,YAAAI,EAAAJ,YACAjqC,EAAAqrC,UAAAhB,EAAAH,YACAG,EAAA5S,WACAz3B,EAAA0b,YAAA2uB,EAAA5S,UACAz3B,EAAA23B,eAAA0S,EAAA1S,gBAEA33B,EAAAkpC,UAEAlpC,EAAAsrC,aAOAlD,EAAAt4C,UAAAgpC,YAAA,WACA,IAAAyS,EAAAl9B,KAAA46B,QACA56B,KAAA46B,QAAAnQ,cAAA,IACA0S,EAAAn9B,KAAAm6B,MACAn6B,KAAAm6B,MAAA1P,cAAA,IAUA,IARAzqB,KAAAg6B,YACAkD,GAAAl9B,KAAAg6B,WAAA,IACAmD,GAAAn9B,KAAAg6B,WAAA,IACAh6B,KAAAu6B,SAAAv6B,KAAAg6B,WAAA,IACAh6B,KAAAy6B,UAAAz6B,KAAAg6B,WAAA,IACAh6B,KAAA26B,QAAA36B,KAAAg6B,WAAA,IACAh6B,KAAAq6B,SAAAr6B,KAAAg6B,WAAA,GAEA,CACA,IAAAoD,EAAA,IAAAF,EAAAC,QACA5xC,IAAAyU,KAAAu6B,QAAAv6B,KAAAu6B,QAAA7jB,WAAA,WACAnrB,IAAAyU,KAAAy6B,SAAAz6B,KAAAy6B,SAAA/jB,WAAA,WACAnrB,IAAAyU,KAAA26B,OAAA36B,KAAA26B,OAAAjkB,WAAA,WACAnrB,IAAAyU,KAAAq6B,QAAAr6B,KAAAq6B,QAAA3jB,WAAA,KACA1W,KAAAg6B,YAAAoD,EAAAF,EAAAC,EACAn9B,KAAAu6B,QAAAv6B,KAAAy6B,SAAAz6B,KAAA26B,OAAA36B,KAAAq6B,SAGA,OAAAr6B,KAAAg6B,WAAA,IAEA,IAAAqD,EAAA,ECnjBAC,EAAA,SAAAp8B,GAEA,IAAAG,EAAAH,MAEAm8B,EAAA/2C,KAAA0Z,MACAs6B,OAAAr1C,IACAm1C,KAAA/4B,EAAA+4B,KACAr6B,OAAAsB,EAAAtB,OACA64B,YAAAv3B,EAAAu3B,YACAiC,OAAAx5B,EAAAw5B,OACAM,aAAA95B,EAAA85B,gBAKAz3B,EAAA,EAAApiB,SAAAg8C,EAAAD,GASAC,EAAA77C,UAAAkC,MAAA,WACA,IAAA4R,EAAA,IAAA+nC,GACAlD,KAAAp6B,KAAAq7B,UAAAr7B,KAAAq7B,UAAA13C,aAAA4H,EACAsvC,OAAA76B,KAAAy7B,YAAAz7B,KAAAy7B,YAAA93C,aAAA4H,EACAwU,OAAAC,KAAA+c,YACA6b,YAAA54B,KAAAg5B,iBACAmC,aAAAn7B,KAAAk7B,gBAIA,OAFA3lC,EAAAgiC,WAAAv3B,KAAA+2B,cACAxhC,EAAAkkC,SAAAz5B,KAAA+4B,YACAxjC,GAUA+nC,EAAA77C,UAAA87C,UAAA,SAAAx9B,GACAC,KAAAu6B,QAAAx6B,EACAC,KAAAo7B,QAAAp7B,KAAAk7B,gBAEA,IAAApe,EAAA,UCjDA0gB,EAAA,SAAAt8B,GAEA,IAAAG,EAAAH,MAMAlB,KAAAgpB,YAAAz9B,IAAA8V,EAAAkV,MAAAlV,EAAAkV,MAAA,KAMAvW,KAAA4pB,eAAAr+B,GASAiyC,EAAA/7C,UAAAkC,MAAA,WACA,IAAA4yB,EAAAvW,KAAA6pB,WACA,WAAA2T,GACAjnB,WAAA3yB,MAAA2yB,EAAA3yB,QAAA2yB,QAAAhrB,KAUAiyC,EAAA/7C,UAAAooC,SAAA,WACA,OAAA7pB,KAAAgpB,QAUAwU,EAAA/7C,UAAA0oC,SAAA,SAAA5T,GACAvW,KAAAgpB,OAAAzS,EACAvW,KAAA4pB,eAAAr+B,GAOAiyC,EAAA/7C,UAAAgpC,YAAA,WAaA,YAZAl/B,IAAAyU,KAAA4pB,YAEA5pB,KAAAgpB,kBAAAhR,eACAhY,KAAAgpB,kBAAA/Q,eAEAjY,KAAA4pB,UAAAlmB,EAAA,EAAA5hB,OAAAke,KAAAgpB,QAAAtS,WAEA1W,KAAA4pB,UAAA,KAAA5pB,KAAAgpB,OACAyU,EAAA,EAAAhnB,SAAAzW,KAAAgpB,QAAA,MAIAhpB,KAAA4pB,WAEA,IAAA8T,EAAA,UCjEAC,EAAA,SAAAz8B,GAEA,IAAAG,EAAAH,MAMAlB,KAAA49B,UAAA,KAMA59B,KAAA69B,kBAAAF,EAAAG,6BAEAvyC,IAAA8V,EAAAJ,UACAjB,KAAA+9B,YAAA18B,EAAAJ,UAOAjB,KAAAm6B,WAAA5uC,IAAA8V,EAAA+4B,KAAA/4B,EAAA+4B,KAAA,KAMAp6B,KAAAg+B,YAAAzyC,IAAA8V,EAAA5K,MAAA4K,EAAA5K,MAAA,KAMAuJ,KAAAi+B,eAAA1yC,IAAA8V,EAAA68B,SAAA78B,EAAA68B,SAAA,KAMAl+B,KAAA46B,aAAArvC,IAAA8V,EAAAw5B,OAAAx5B,EAAAw5B,OAAA,KAMA76B,KAAAm+B,WAAA5yC,IAAA8V,EAAAxN,KAAAwN,EAAAxN,KAAA,KAMAmM,KAAAo+B,QAAA/8B,EAAAyU,QAUA6nB,EAAAl8C,UAAAkC,MAAA,WACA,IAAAsd,EAAAjB,KAAAq+B,cAIA,OAHAp9B,KAAAtd,QACAsd,IAAAtd,SAEA,IAAAg6C,GACA18B,WACAm5B,KAAAp6B,KAAAq7B,UAAAr7B,KAAAq7B,UAAA13C,aAAA4H,EACAkL,MAAAuJ,KAAAk5B,WAAAl5B,KAAAk5B,WAAAv1C,aAAA4H,EACAsvC,OAAA76B,KAAAy7B,YAAAz7B,KAAAy7B,YAAA93C,aAAA4H,EACAsI,KAAAmM,KAAAs+B,UAAAt+B,KAAAs+B,UAAA36C,aAAA4H,EACAuqB,OAAA9V,KAAAk3B,eAWAyG,EAAAl8C,UAAA88C,YAAA,WACA,OAAAv+B,KAAAi+B,WAUAN,EAAAl8C,UAAA+8C,YAAA,SAAAN,GACAl+B,KAAAi+B,UAAAC,GAWAP,EAAAl8C,UAAA48C,YAAA,WACA,OAAAr+B,KAAA49B,WAUAD,EAAAl8C,UAAAg9C,oBAAA,WACA,OAAAz+B,KAAA69B,mBASAF,EAAAl8C,UAAA45C,QAAA,WACA,OAAAr7B,KAAAm6B,OASAwD,EAAAl8C,UAAAi9C,QAAA,SAAAtE,GACAp6B,KAAAm6B,MAAAC,GASAuD,EAAAl8C,UAAAy3C,SAAA,WACA,OAAAl5B,KAAAg+B,QASAL,EAAAl8C,UAAAk9C,SAAA,SAAAloC,GACAuJ,KAAAg+B,OAAAvnC,GASAknC,EAAAl8C,UAAAg6C,UAAA,WACA,OAAAz7B,KAAA46B,SASA+C,EAAAl8C,UAAAm9C,UAAA,SAAA/D,GACA76B,KAAA46B,QAAAC,GASA8C,EAAAl8C,UAAA68C,QAAA,WACA,OAAAt+B,KAAAm+B,OASAR,EAAAl8C,UAAAo9C,QAAA,SAAAhrC,GACAmM,KAAAm+B,MAAAtqC,GASA8pC,EAAAl8C,UAAAy1C,UAAA,WACA,OAAAl3B,KAAAo+B,SAYAT,EAAAl8C,UAAAs8C,YAAA,SAAA98B,GACA,mBAAAA,EACAjB,KAAA69B,kBAAA58B,EACG,iBAAAA,EACHjB,KAAA69B,kBAAA,SAAAiB,GACA,OAAyCA,EAAAv8B,IAAAtB,IAEtCA,OAEA1V,IAAA0V,IACHjB,KAAA69B,kBAAA,WACA,OAAyC,IAHzC79B,KAAA69B,kBAAAF,EAAAG,wBAMA99B,KAAA49B,UAAA38B,GAUA08B,EAAAl8C,UAAAg2C,UAAA,SAAA3hB,GACA9V,KAAAo+B,QAAAtoB,GAYA6nB,EAAAoB,eAAA,SAAAh9C,GACA,IAAAi9C,EAQAC,EANA,mBAAAl9C,EACAi9C,EAAAj9C,GAMA2K,MAAAkQ,QAAA7a,GACAk9C,EAAAl9C,GAEA89B,EAAA,EAAAp4B,OAAA1F,aAAA47C,EACA,IACAsB,GAAAl9C,IAEAi9C,EAAA,WACA,OAAAC,IAGA,OAAAD,GAQArB,EAAAuB,SAAA,KAQAvB,EAAAwB,gBAAA,SAAAL,EAAAj3C,GAMA,IAAA81C,EAAAuB,SAAA,CACA,IAAA9E,EAAA,IAAAsD,GACAnnB,MAAA,0BAEAskB,EAAA,IAAAuE,EAAA,GACA7oB,MAAA,UACAriB,MAAA,OAEAypC,EAAAuB,UACA,IAAAvB,GACAlnC,MAAA,IAAAqmB,GACAsd,OACAS,SACA96B,OAAA,IAEAq6B,OACAS,YAIA,OAAA8C,EAAAuB,UAQAvB,EAAA0B,qBAAA,WAEA,IAAAJ,KACAK,GAAA,eACAC,GAAA,aA2DA,OAzDAN,EAAAz9B,EAAA,EAAAzP,UACA,IAAA4rC,GACAvD,KAAA,IAAAsD,GACAnnB,OAAA,qBAIA0oB,EAAAz9B,EAAA,EAAAtP,eACA+sC,EAAAz9B,EAAA,EAAAzP,SAEAktC,EAAAz9B,EAAA,EAAA3P,cACA,IAAA8rC,GACA9C,OAAA,IAAAuE,EAAA,GACA7oB,MAAA+oB,EACAprC,YAGA,IAAAypC,GACA9C,OAAA,IAAAuE,EAAA,GACA7oB,MAAAgpB,EACArrC,MArBA,OAyBA+qC,EAAAz9B,EAAA,EAAAvP,mBACAgtC,EAAAz9B,EAAA,EAAA3P,aAEAotC,EAAAz9B,EAAA,EAAApP,QACA6sC,EAAAz9B,EAAA,EAAAzP,SAAA82B,OACAoW,EAAAz9B,EAAA,EAAA3P,cAIAotC,EAAAz9B,EAAA,EAAA5P,QACA,IAAA+rC,GACAlnC,MAAA,IAAAqmB,GACA/c,OAAA7L,EACAkmC,KAAA,IAAAsD,GACAnnB,MAAAgpB,IAEA1E,OAAA,IAAAuE,EAAA,GACA7oB,MAAA+oB,EACAprC,cAGA4hB,OAAA7wB,OAGAg6C,EAAAz9B,EAAA,EAAAxP,aACAitC,EAAAz9B,EAAA,EAAA5P,OAEAqtC,EAAAz9B,EAAA,EAAArP,qBACA8sC,EAAAz9B,EAAA,EAAAzP,SAAA82B,OACAoW,EAAAz9B,EAAA,EAAA3P,aACAotC,EAAAz9B,EAAA,EAAA5P,QAGAqtC,GAUAtB,EAAAG,wBAAA,SAAAgB,GACA,OAAAA,EAAAT,eAEAn8C,EAAA,kGCvaAs9C,GAeA/5B,MAAA,SAAAlgB,EAAAk6C,EAAAC,EAAAh6C,EAAA5B,EAAAC,EAAA47C,GACA,IAIAn9C,EAAAgD,EAJAiD,EAAAlD,EAAAk6C,GACA52C,EAAAtD,EAAAk6C,EAAA,GACAz7C,EAAAuB,EAAAm6C,GAAAj3C,EACAxE,EAAAsB,EAAAm6C,EAAA,GAAA72C,EAEA,OAAA7E,GAAA,IAAAC,EACAuB,EAAAi6C,MACG,CACH,IAAAnmC,IAAAxV,EAAA2E,GAAAzE,GAAAD,EAAA8E,GAAA5E,IAAAD,IAAAC,KACA,GAAAqV,EAAA,EACA9T,EAAAk6C,MACK,IAAApmC,EAAA,GACL,IAAA9W,EAAA,EAAiBA,EAAAkD,IAAYlD,EAC7Bm9C,EAAAn9C,GAAAge,EAAA,EAAA7F,KAAApV,EAAAk6C,EAAAj9C,GACA+C,EAAAm6C,EAAAl9C,GAAA8W,GAGA,YADAqmC,EAAAj9C,OAAAgD,GAGAF,EAAAi6C,GAGA,IAAAj9C,EAAA,EAAaA,EAAAkD,IAAYlD,EACzBm9C,EAAAn9C,GAAA+C,EAAAC,EAAAhD,GAEAm9C,EAAAj9C,OAAAgD,GAcAk6C,mBAAA,SAAAr6C,EAAAC,EAAAC,EAAAC,EAAAm6C,GACA,IAAAp3C,EAAAlD,EAAAC,GACAqD,EAAAtD,EAAAC,EAAA,GACA,IAAAA,GAAAE,EAAwBF,EAAAC,EAAcD,GAAAE,EAAA,CACtC,IAAAgD,EAAAnD,EAAAC,GACAsD,EAAAvD,EAAAC,EAAA,GACAs6C,EAAAt/B,EAAA,EAAAjH,gBAAA9Q,EAAAI,EAAAH,EAAAI,GACAg3C,EAAAD,IACAA,EAAAC,GAEAr3C,EAAAC,EACAG,EAAAC,EAEA,OAAA+2C,GAYAE,oBAAA,SAAAx6C,EAAAC,EAAA05B,EAAAx5B,EAAAm6C,GACA,IAAAr9C,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACAq9C,EAAAL,EAAAI,mBACAr6C,EAAAC,EAAAC,EAAAC,EAAAm6C,GACAr6C,EAAAC,EAEA,OAAAo6C,GAYAG,qBAAA,SAAAz6C,EAAAC,EAAA45B,EAAA15B,EAAAm6C,GACA,IAAAr9C,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACAq9C,EAAAL,EAAAO,oBACAx6C,EAAAC,EAAA05B,EAAAx5B,EAAAm6C,GACAr6C,EAAA05B,IAAAx8B,OAAA,GAEA,OAAAm9C,GAkBAI,gBAAA,SAAA16C,EAAAC,EAAAC,EACAC,EAAAw6C,EAAAC,EAAAr8C,EAAAC,EAAA47C,EAAAS,EACAC,GACA,GAAA76C,GAAAC,EACA,OAAA26C,EAEA,IAAA59C,EAAA+W,EACA,OAAA2mC,EAAA,CAIA,IAFA3mC,EAAAiH,EAAA,EAAAjH,gBACAzV,EAAAC,EAAAwB,EAAAC,GAAAD,EAAAC,EAAA,KACA46C,EAAA,CACA,IAAA59C,EAAA,EAAiBA,EAAAkD,IAAYlD,EAC7Bm9C,EAAAn9C,GAAA+C,EAAAC,EAAAhD,GAGA,OADAm9C,EAAAj9C,OAAAgD,EACA6T,EAEA,OAAA6mC,EAKA,IAFA,IAAAE,EAAAD,IAAAE,SACAljC,EAAA7X,EAAAE,EACA2X,EAAA5X,GAIA,GAHA+5C,EAAA/5B,MACAlgB,EAAA8X,EAAA3X,EAAA2X,EAAA3X,EAAA5B,EAAAC,EAAAu8C,IACA/mC,EAAAiH,EAAA,EAAAjH,gBAAAzV,EAAAC,EAAAu8C,EAAA,GAAAA,EAAA,KACAF,EAAA,CAEA,IADAA,EAAA7mC,EACA/W,EAAA,EAAiBA,EAAAkD,IAAYlD,EAC7Bm9C,EAAAn9C,GAAA89C,EAAA99C,GAEAm9C,EAAAj9C,OAAAgD,EACA2X,GAAA3X,OAYA2X,GAAA3X,EAAAzC,KAAAK,KACAL,KAAAgf,KAAA1I,GACAtW,KAAAgf,KAAAm+B,IAAAF,EAAA,KAGA,GAAAC,IAEAX,EAAA/5B,MACAlgB,EAAAE,EAAAC,EAAAF,EAAAE,EAAA5B,EAAAC,EAAAu8C,IACA/mC,EAAAiH,EAAA,EAAAjH,gBAAAzV,EAAAC,EAAAu8C,EAAA,GAAAA,EAAA,KACAF,GAAA,CAEA,IADAA,EAAA7mC,EACA/W,EAAA,EAAiBA,EAAAkD,IAAYlD,EAC7Bm9C,EAAAn9C,GAAA89C,EAAA99C,GAEAm9C,EAAAj9C,OAAAgD,EAGA,OAAA06C,GAkBAI,iBAAA,SAAAj7C,EAAAC,EAAA05B,EACAx5B,EAAAw6C,EAAAC,EAAAr8C,EAAAC,EAAA47C,EAAAS,EACAC,GACA,IACA79C,EAAAC,EADA69C,EAAAD,IAAAE,SAEA,IAAA/9C,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACA49C,EAAAZ,EAAAS,gBACA16C,EAAAC,EAAAC,EAAAC,EACAw6C,EAAAC,EAAAr8C,EAAAC,EAAA47C,EAAAS,EAAAE,GACA96C,EAAAC,EAEA,OAAA26C,GAkBAK,kBAAA,SAAAl7C,EAAAC,EACA45B,EAAA15B,EAAAw6C,EAAAC,EAAAr8C,EAAAC,EAAA47C,EAAAS,EACAC,GACA,IACA79C,EAAAC,EADA69C,EAAAD,IAAAE,SAEA,IAAA/9C,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACA49C,EAAAZ,EAAAgB,iBACAj7C,EAAAC,EAAA05B,EAAAx5B,EACAw6C,EAAAC,EAAAr8C,EAAAC,EAAA47C,EAAAS,EAAAE,GACA96C,EAAA05B,IAAAx8B,OAAA,GAEA,OAAA09C,IAEAM,EAAA,EC5PAC,GAUAx8C,WAAA,SAAAoB,EAAAC,EAAArB,EAAAuB,GACA,IAAAlD,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA0B,EAAAzB,OAAqCF,EAAAC,IAAQD,EAC7C+C,EAAAC,KAAArB,EAAA3B,GAEA,OAAAgD,GAWAnD,YAAA,SAAAkD,EAAAC,EAAAnD,EAAAqD,GACA,IAAAlD,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAJ,EAAAK,OAAsCF,EAAAC,IAAQD,EAAA,CAC9C,IACAwX,EADA7V,EAAA9B,EAAAG,GAEA,IAAAwX,EAAA,EAAeA,EAAAtU,IAAYsU,EAC3BzU,EAAAC,KAAArB,EAAA6V,GAGA,OAAAxU,GAYAwgC,aAAA,SAAAzgC,EAAAC,EAAAwgC,EAAAtgC,EAAAk7C,GACA,IAEA5mC,EAAAoH,EAFA8d,EAAA0hB,MACAp+C,EAAA,EAEA,IAAAwX,EAAA,EAAAoH,EAAA4kB,EAAAtjC,OAAuCsX,EAAAoH,IAAQpH,EAAA,CAC/C,IAAAvU,EAAAk7C,EAAAt+C,YACAkD,EAAAC,EAAAwgC,EAAAhsB,GAAAtU,GACAw5B,EAAA18B,KAAAiD,EACAD,EAAAC,EAGA,OADAy5B,EAAAx8B,OAAAF,EACA08B,GAYAgH,cAAA,SAAA3gC,EAAAC,EAAA0gC,EAAAxgC,EAAAm7C,GACA,IAEA7mC,EAAAoH,EAFAge,EAAAyhB,MACAr+C,EAAA,EAEA,IAAAwX,EAAA,EAAAoH,EAAA8kB,EAAAxjC,OAAwCsX,EAAAoH,IAAQpH,EAAA,CAChD,IAAAklB,EAAAyhB,EAAA3a,aACAzgC,EAAAC,EAAA0gC,EAAAlsB,GAAAtU,EAAA05B,EAAA58B,IACA48B,EAAA58B,KAAA08B,EACA15B,EAAA05B,IAAAx8B,OAAA,GAGA,OADA08B,EAAA18B,OAAAF,EACA48B,IAEA0hB,EAAA,kBC7DAC,EAAA,SAAA1+C,EAAAg5B,GAEA2lB,EAAA,EAAA16C,KAAA0Z,MAMAA,KAAAihC,WAAA,EAMAjhC,KAAAkhC,mBAAA,EAEAlhC,KAAAob,eAAA/4B,EAAAg5B,IAIA3X,EAAA,EAAApiB,SAAAy/C,EAAAC,EAAA,GASAD,EAAAt/C,UAAAkC,MAAA,WACA,IAAAouC,EAAA,IAAAgP,EAAA,MAEA,OADAhP,EAAAoP,mBAAAnhC,KAAA+Z,OAAA/Z,KAAAza,gBAAA3B,SACAmuC,GAOAgP,EAAAt/C,UAAA2/C,eAAA,SAAAt9C,EAAAC,EAAA47C,EAAAS,GACA,OAAAA,EACAn2B,EAAA,EAAApmB,yBAAAmc,KAAAmE,YAAArgB,EAAAC,GACAq8C,GAEApgC,KAAAkhC,mBAAAlhC,KAAA6a,gBACA7a,KAAAihC,UAAAh+C,KAAAgf,KAAAy+B,EAAAd,mBACA5/B,KAAAza,gBAAA,EAAAya,KAAAza,gBAAA7C,OAAAsd,KAAAta,OAAA,IACAsa,KAAAkhC,kBAAAlhC,KAAA6a,eAEA6lB,EAAAT,gBACAjgC,KAAAza,gBAAA,EAAAya,KAAAza,gBAAA7C,OAAAsd,KAAAta,OACAsa,KAAAihC,WAAA,EAAAn9C,EAAAC,EAAA47C,EAAAS,KASAW,EAAAt/C,UAAAkF,QAAA,WACA,OAAA06C,EAAA,EAAAtP,WACA/xB,KAAAza,gBAAA,EAAAya,KAAAza,gBAAA7C,OAAAsd,KAAAta,SAUAq7C,EAAAt/C,UAAAggB,eAAA,WACA,OAAA6/B,EAAA,EAAAj/C,YACA2d,KAAAza,gBAAA,EAAAya,KAAAza,gBAAA7C,OAAAsd,KAAAta,SAOAq7C,EAAAt/C,UAAAw5B,8BAAA,SAAAN,GACA,IAAAkW,KACAA,EAAAnuC,OAAA6+C,EAAA,EAAAxQ,eACA/wB,KAAAza,gBAAA,EAAAya,KAAAza,gBAAA7C,OAAAsd,KAAAta,OACAi1B,EAAAkW,EAAA,GACA,IAAA2Q,EAAA,IAAAT,EAAA,MAGA,OAFAS,EAAAL,mBACAM,EAAA,EAAAtwB,GAAA0f,GACA2Q,GAQAT,EAAAt/C,UAAA8f,QAAA,WACA,OAAAC,EAAA,EAAA1P,aAOAivC,EAAAt/C,UAAAigD,iBAAA,SAAAp/C,KAUAy+C,EAAAt/C,UAAA25B,eAAA,SAAA/4B,EAAAg5B,GACAh5B,GAGA2d,KAAAsb,UAAAD,EAAAh5B,EAAA,GACA2d,KAAAza,kBACAya,KAAAza,oBAEAya,KAAAza,gBAAA7C,OAAAo+C,EAAAz+C,YACA2d,KAAAza,gBAAA,EAAAlD,EAAA2d,KAAAta,QACAsa,KAAAyV,WARAzV,KAAAmhC,mBAAAM,EAAA,EAAAtwB,GAAA,OAiBA4vB,EAAAt/C,UAAA0/C,mBAAA,SAAApnB,EAAAx0B,GACAya,KAAAmb,2BAAApB,EAAAx0B,GACAya,KAAAyV,WAEA,IAAAksB,EAAA,EC9IAC,EAAA,SAAAv/C,EAAAg5B,GACA2lB,EAAA,EAAA16C,KAAA0Z,MACAA,KAAAob,eAAA/4B,EAAAg5B,IAGA3X,EAAA,EAAApiB,SAAAsgD,EAAAZ,EAAA,GASAY,EAAAngD,UAAAkC,MAAA,WACA,IAAA8hB,EAAA,IAAAm8B,EAAA,MAEA,OADAn8B,EAAA07B,mBAAAnhC,KAAA+Z,OAAA/Z,KAAAza,gBAAA3B,SACA6hB,GAOAm8B,EAAAngD,UAAA2/C,eAAA,SAAAt9C,EAAAC,EAAA47C,EAAAS,GACA,IAAA76C,EAAAya,KAAAza,gBACAgU,EAAAiH,EAAA,EAAAjH,gBACAzV,EAAAC,EAAAwB,EAAA,GAAAA,EAAA,IACA,GAAAgU,EAAA6mC,EAAA,CACA,IACA59C,EADAkD,EAAAsa,KAAAta,OAEA,IAAAlD,EAAA,EAAeA,EAAAkD,IAAYlD,EAC3Bm9C,EAAAn9C,GAAA+C,EAAA/C,GAGA,OADAm9C,EAAAj9C,OAAAgD,EACA6T,EAEA,OAAA6mC,GAWAwB,EAAAngD,UAAAggB,eAAA,WACA,OAAAzB,KAAAza,gBAAAya,KAAAza,gBAAA3B,YAOAg+C,EAAAngD,UAAA24B,cAAA,SAAA93B,GACA,OAAA2nB,EAAA,EAAA9kB,6BAAA6a,KAAAza,gBAAAjD,IAQAs/C,EAAAngD,UAAA8f,QAAA,WACA,OAAAC,EAAA,EAAA5P,OAQAgwC,EAAAngD,UAAAigD,iBAAA,SAAAp/C,GACA,OAAA2nB,EAAA,EAAA7lB,WAAA9B,EACA0d,KAAAza,gBAAA,GAAAya,KAAAza,gBAAA,KAQAq8C,EAAAngD,UAAA25B,eAAA,SAAA/4B,EAAAg5B,GACAh5B,GAGA2d,KAAAsb,UAAAD,EAAAh5B,EAAA,GACA2d,KAAAza,kBACAya,KAAAza,oBAEAya,KAAAza,gBAAA7C,OAAAo+C,EAAA38C,WACA6b,KAAAza,gBAAA,EAAAlD,EAAA2d,KAAAta,QACAsa,KAAAyV,WARAzV,KAAAmhC,mBAAAM,EAAA,EAAAtwB,GAAA,OAiBAywB,EAAAngD,UAAA0/C,mBAAA,SAAApnB,EAAAx0B,GACAya,KAAAmb,2BAAApB,EAAAx0B,GACAya,KAAAyV,WAEA,IAAAhQ,EAAA,UC3HAo8B,GAgBA5P,YAAA,SAAA1sC,EAAAC,EACA05B,EAAAx5B,EAAAo8C,EAAAC,EAAApzB,GAMA,IALA,IAAAnsB,EAAAC,EAAAqB,EAAA2E,EAAAC,EAAAG,EAAAC,EACA/E,EAAA+9C,EAAAC,EAAA,GAEAC,KAEAnoC,EAAA,EAAAooC,EAAA/iB,EAAAx8B,OAAmCmX,EAAAooC,IAAQpoC,EAAA,CAC3C,IAAApU,EAAAy5B,EAAArlB,GAGA,IAFApR,EAAAlD,EAAAE,EAAAC,GACAmD,EAAAtD,EAAAE,EAAAC,EAAA,GACAlD,EAAAgD,EAAoBhD,EAAAiD,EAASjD,GAAAkD,EAC7BgD,EAAAnD,EAAA/C,GACAsG,EAAAvD,EAAA/C,EAAA,IACAuB,GAAA8E,GAAAC,GAAA/E,GAAA8E,GAAA9E,MAAA+E,KACAhF,GAAAC,EAAA8E,IAAAC,EAAAD,IAAAH,EAAAD,KACAu5C,EAAA/1C,KAAAnI,IAEA2E,EAAAC,EACAG,EAAAC,EAKA,IAAAo5C,EAAA3B,IACA4B,GAAAl9C,IAGA,IAFA+8C,EAAA1kC,KAAA6S,EAAA,EAAAnU,2BACAvT,EAAAu5C,EAAA,GACAx/C,EAAA,EAAAC,EAAAu/C,EAAAt/C,OAAwCF,EAAAC,IAAQD,EAAA,CAChDkG,EAAAs5C,EAAAx/C,GACA,IAAA4/C,EAAAn/C,KAAA2W,IAAAlR,EAAAD,GACA25C,EAAAD,IACAr+C,GAAA2E,EAAAC,GAAA,EACA42B,EAAA,EAAAL,sBACA15B,EAAAC,EAAA05B,EAAAx5B,EAAA5B,EAAAC,KACAm+C,EAAAp+C,EACAq+C,EAAAC,IAGA35C,EAAAC,EAOA,OALA25C,MAAAH,KAGAA,EAAAJ,EAAAC,IAEApzB,GACAA,EAAA1iB,KAAAi2C,EAAAn+C,EAAAo+C,GACAxzB,IAEAuzB,EAAAn+C,EAAAo+C,IAcAjQ,aAAA,SAAA3sC,EAAAC,EAAA45B,EAAA15B,EAAAo8C,GACA,IACAt/C,EAAAC,EADA6/C,KAEA,IAAA9/C,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACA8/C,EAAAT,EAAA5P,YAAA1sC,EACAC,EAAA05B,EAAAx5B,EAAAo8C,EAAA,EAAAt/C,EAAA8/C,GACA98C,EAAA05B,IAAAx8B,OAAA,GAEA,OAAA4/C,IAEAC,EAAA,EC7FAC,GAkBAz6B,QAAA,SAAAxiB,EAAAC,EAAAC,EAAAC,EAAAS,EAAAC,GAIA,IAHA,IAEAq8C,EAFAC,GAAAn9C,EAAAC,GAAAD,EAAAC,EAAA,IACAm9C,KAEQn9C,EAAAE,EAAAD,EAAyBD,GAAAE,EAAA,CAIjC,GAHAi9C,EAAA,GAAAp9C,EAAAC,EAAAE,GACAi9C,EAAA,GAAAp9C,EAAAC,EAAAE,EAAA,GACA+8C,EAAAt8C,EAAAG,KAAAF,EAAAs8C,EAAAC,GAEA,OAAAF,EAEAC,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAEA,WAEAC,EAAA,EC/BAC,GAWAnS,WAAA,SAAAnrC,EAAAC,EAAAC,EAAAC,EAAApD,GACA,IAAAwgD,EAAA74B,EAAA,EAAAtkB,sBACAskB,EAAA,EAAA1nB,cAAAgD,EAAAC,EAAAC,EAAAC,GACA,QAAAukB,EAAA,EAAA9gB,WAAA7G,EAAAwgD,OAGA74B,EAAA,EAAA5lB,eAAA/B,EAAAwgD,KAGAA,EAAA,IAAAxgD,EAAA,IACAwgD,EAAA,IAAAxgD,EAAA,KAGAwgD,EAAA,IAAAxgD,EAAA,IACAwgD,EAAA,IAAAxgD,EAAA,IAGAsgD,EAAA76B,QAAAxiB,EAAAC,EAAAC,EAAAC,EAOA,SAAAg9C,EAAAC,GACA,OAAA14B,EAAA,EAAAvgB,kBAAApH,EAAAogD,EAAAC,SAaAI,YAAA,SAAAx9C,EAAAC,EAAA05B,EAAAx5B,EAAApD,GACA,IAAAE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,GAAAqgD,EAAAnS,WACAnrC,EAAAC,EAAA05B,EAAA18B,GAAAkD,EAAApD,GACA,SAEAkD,EAAA05B,EAAA18B,GAEA,UAYAuvC,WAAA,SAAAxsC,EAAAC,EAAAC,EAAAC,EAAApD,GACA,QAAAugD,EAAAnS,WACAnrC,EAAAC,EAAAC,EAAAC,EAAApD,OAGAg9B,EAAA,EAAAP,qBACAx5B,EAAAC,EAAAC,EAAAC,EAAApD,EAAA,GAAAA,EAAA,QAGAg9B,EAAA,EAAAP,qBACAx5B,EAAAC,EAAAC,EAAAC,EAAApD,EAAA,GAAAA,EAAA,QAGAg9B,EAAA,EAAAP,qBACAx5B,EAAAC,EAAAC,EAAAC,EAAApD,EAAA,GAAAA,EAAA,OAGAg9B,EAAA,EAAAP,qBACAx5B,EAAAC,EAAAC,EAAAC,EAAApD,EAAA,GAAAA,EAAA,QAeA2vC,YAAA,SAAA1sC,EAAAC,EAAA05B,EAAAx5B,EAAApD,GACA,IAAAugD,EAAA9Q,WACAxsC,EAAAC,EAAA05B,EAAA,GAAAx5B,EAAApD,GACA,SAEA,OAAA48B,EAAAx8B,OACA,SAEA,IAAAF,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EACvC,GAAA88B,EAAA,EAAAT,yBACAt5B,EAAA25B,EAAA18B,EAAA,GAAA08B,EAAA18B,GAAAkD,EAAApD,GACA,SAGA,UAYA4vC,aAAA,SAAA3sC,EAAAC,EAAA45B,EAAA15B,EAAApD,GACA,IAAAE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACA,GAAAqgD,EAAA5Q,YACA1sC,EAAAC,EAAA05B,EAAAx5B,EAAApD,GACA,SAEAkD,EAAA05B,IAAAx8B,OAAA,GAEA,WAEAsgD,EAAA,UC/GAC,EAAA,SAAA5gD,EAAAg5B,GAEA2lB,EAAA,EAAA16C,KAAA0Z,MAMAA,KAAAkjC,SAMAljC,KAAAmjC,4BAAA,EAMAnjC,KAAAojC,mBAAA,KAMApjC,KAAAihC,WAAA,EAMAjhC,KAAAkhC,mBAAA,EAMAlhC,KAAAqjC,mBAAA,EAMArjC,KAAAsjC,yBAAA,KAEAtjC,KAAAob,eAAA/4B,EAAAg5B,IAIA3X,EAAA,EAAApiB,SAAA2hD,EAAAjC,EAAA,GAQAiC,EAAAxhD,UAAA8hD,iBAAA,SAAAxR,GACA/xB,KAAAza,gBAGA4qB,EAAA,EAAAnqB,OAAAga,KAAAza,gBAAAwsC,EAAAxX,sBAFAva,KAAAza,gBAAAwsC,EAAAxX,qBAAA32B,QAIAoc,KAAAkjC,MAAAj3C,KAAA+T,KAAAza,gBAAA7C,QACAsd,KAAAyV,WAUAwtB,EAAAxhD,UAAAkC,MAAA,WACA,IAAA6/C,EAAA,IAAAP,EAAA,MAGA,OAFAO,EAAArC,mBACAnhC,KAAA+Z,OAAA/Z,KAAAza,gBAAA3B,QAAAoc,KAAAkjC,MAAAt/C,SACA4/C,GAOAP,EAAAxhD,UAAA2/C,eAAA,SAAAt9C,EAAAC,EAAA47C,EAAAS,GACA,OAAAA,EACAn2B,EAAA,EAAApmB,yBAAAmc,KAAAmE,YAAArgB,EAAAC,GACAq8C,GAEApgC,KAAAkhC,mBAAAlhC,KAAA6a,gBACA7a,KAAAihC,UAAAh+C,KAAAgf,KAAAy+B,EAAAX,oBACA//B,KAAAza,gBAAA,EAAAya,KAAAkjC,MAAAljC,KAAAta,OAAA,IACAsa,KAAAkhC,kBAAAlhC,KAAA6a,eAEA6lB,EAAAF,iBACAxgC,KAAAza,gBAAA,EAAAya,KAAAkjC,MAAAljC,KAAAta,OACAsa,KAAAihC,WAAA,EAAAn9C,EAAAC,EAAA47C,EAAAS,KAOA6C,EAAAxhD,UAAA2C,WAAA,SAAAN,EAAAC,GACA,OAAAu7B,EAAA,EAAAL,sBACAjf,KAAAyjC,6BAAA,EAAAzjC,KAAAkjC,MAAAljC,KAAAta,OAAA5B,EAAAC,IASAk/C,EAAAxhD,UAAAkF,QAAA,WACA,OAAA06C,EAAA,EAAApP,YACAjyB,KAAAyjC,6BAAA,EAAAzjC,KAAAkjC,MAAAljC,KAAAta,SAkBAu9C,EAAAxhD,UAAAggB,eAAA,SAAA8iB,GACA,IAAAh/B,EASA,YARAgG,IAAAg5B,GACAh/B,EAAAya,KAAAyjC,6BAAA7/C,QACA8/C,EAAA,EAAA/e,kBACAp/B,EAAA,EAAAya,KAAAkjC,MAAAljC,KAAAta,OAAA6+B,IAEAh/B,EAAAya,KAAAza,gBAGA+7C,EAAA,EAAAtb,aACAzgC,EAAA,EAAAya,KAAAkjC,MAAAljC,KAAAta,SAOAu9C,EAAAxhD,UAAAkiD,QAAA,WACA,OAAA3jC,KAAAkjC,OAOAD,EAAAxhD,UAAAmiD,qBAAA,WACA,GAAA5jC,KAAAmjC,4BAAAnjC,KAAA6a,cAAA,CACA,IAAAgpB,EAAA55B,EAAA,EAAAjjB,UAAAgZ,KAAAmE,aACAnE,KAAAojC,mBAAAb,EAAAtQ,YACAjyB,KAAAyjC,6BAAA,EAAAzjC,KAAAkjC,MAAAljC,KAAAta,OACAm+C,EAAA,GACA7jC,KAAAmjC,2BAAAnjC,KAAA6a,cAEA,OAAA7a,KAAAojC,oBAUAH,EAAAxhD,UAAAqiD,iBAAA,WACA,WAAAr+B,EAAAzF,KAAA4jC,uBAAAnC,EAAA,EAAApwB,MAWA4xB,EAAAxhD,UAAAsiD,mBAAA,WACA,OAAA/jC,KAAAkjC,MAAAxgD,QAcAugD,EAAAxhD,UAAAuiD,cAAA,SAAA3mC,GACA,GAAAA,EAAA,GAAA2C,KAAAkjC,MAAAxgD,QAAA2a,EACA,YAEA,IAAA00B,EAAA,IAAA4P,EAAA,MAGA,OAFA5P,EAAAoP,mBAAAnhC,KAAA+Z,OAAA/Z,KAAAza,gBAAA3B,MACA,IAAAyZ,EAAA,EAAA2C,KAAAkjC,MAAA7lC,EAAA,GAAA2C,KAAAkjC,MAAA7lC,KACA00B,GASAkR,EAAAxhD,UAAAwiD,eAAA,WACA,IAKAzhD,EAAAC,EALAs3B,EAAA/Z,KAAA+Z,OACAx0B,EAAAya,KAAAza,gBACA25B,EAAAlf,KAAAkjC,MACAjR,KACAzsC,EAAA,EAEA,IAAAhD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAAiD,EAAAy5B,EAAA18B,GACAuvC,EAAA,IAAA4P,EAAA,MACA5P,EAAAoP,mBAAApnB,EAAAx0B,EAAA3B,MAAA4B,EAAAC,IACAwsC,EAAAhmC,KAAA8lC,GACAvsC,EAAAC,EAEA,OAAAwsC,GAOAgR,EAAAxhD,UAAAgiD,2BAAA,WACA,GAAAzjC,KAAAqjC,mBAAArjC,KAAA6a,cAAA,CACA,IAAAt1B,EAAAya,KAAAza,gBACAm+C,EAAA,EAAApf,uBACA/+B,EAAA,EAAAya,KAAAkjC,MAAAljC,KAAAta,QACAsa,KAAAsjC,yBAAA/9C,GAEAya,KAAAsjC,yBAAA/9C,EAAA3B,QACAoc,KAAAsjC,yBAAA5gD,OACAghD,EAAA,EAAA/e,kBACA3kB,KAAAsjC,yBAAA,EAAAtjC,KAAAkjC,MAAAljC,KAAAta,SAEAsa,KAAAqjC,kBAAArjC,KAAA6a,cAEA,OAAA7a,KAAAsjC,0BAOAL,EAAAxhD,UAAAw5B,8BAAA,SAAAN,GACA,IAAAkW,KACAS,KACAT,EAAAnuC,OAAA6+C,EAAA,EAAA3P,UACA5xB,KAAAza,gBAAA,EAAAya,KAAAkjC,MAAAljC,KAAAta,OACAzC,KAAAgf,KAAA0Y,GACAkW,EAAA,EAAAS,GACA,IAAA4S,EAAA,IAAAjB,EAAA,MAGA,OAFAiB,EAAA/C,mBACAM,EAAA,EAAAtwB,GAAA0f,EAAAS,GACA4S,GAQAjB,EAAAxhD,UAAA8f,QAAA,WACA,OAAAC,EAAA,EAAAzP,SAQAkxC,EAAAxhD,UAAAigD,iBAAA,SAAAp/C,GACA,OAAA0gD,EAAA/Q,YACAjyB,KAAAyjC,6BAAA,EAAAzjC,KAAAkjC,MAAAljC,KAAAta,OAAApD,IAWA2gD,EAAAxhD,UAAA25B,eAAA,SAAA/4B,EAAAg5B,GACA,GAAAh5B,EAEG,CACH2d,KAAAsb,UAAAD,EAAAh5B,EAAA,GACA2d,KAAAza,kBACAya,KAAAza,oBAEA,IAAA25B,EAAA4hB,EAAA9a,aACAhmB,KAAAza,gBAAA,EAAAlD,EAAA2d,KAAAta,OAAAsa,KAAAkjC,OACAljC,KAAAza,gBAAA7C,OAAA,IAAAw8B,EAAAx8B,OAAA,EAAAw8B,IAAAx8B,OAAA,GACAsd,KAAAyV,eATAzV,KAAAmhC,mBAAAM,EAAA,EAAAtwB,GAAA,KAAAnR,KAAAkjC,QAmBAD,EAAAxhD,UAAA0/C,mBAAA,SAAApnB,EAAAx0B,EAAA25B,GACAlf,KAAAmb,2BAAApB,EAAAx0B,GACAya,KAAAkjC,MAAAhkB,EACAlf,KAAAyV,WAeAwtB,EAAAkB,SAAA,SAAAhiC,EAAAva,EAAAmY,EAAAqkC,GACA,IAGA5hD,EAHAiX,EAAA2qC,GAAA,GAEA7+C,KAEA,IAAA/C,EAAA,EAAaA,EAAAiX,IAAOjX,EACpB2tB,EAAA,EAAAnqB,OACAT,EAAA4c,EAAA3c,OAAAoC,EAAAmY,EAAA,EAAA9c,KAAAsX,GAAA/X,EAAAiX,IAEAlU,EAAA0G,KAAA1G,EAAA,GAAAA,EAAA,IACA,IAAAi+C,EAAA,IAAAP,EAAA,MAGA,OAFAO,EAAArC,mBACAM,EAAA,EAAAtwB,GAAA5rB,KAAA7C,SACA8gD,GAUAP,EAAAoB,WAAA,SAAA/hD,GACA,IAAAU,EAAAV,EAAA,GACAc,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAiB,EAAAjB,EAAA,GACAiD,GACAvC,EAAAI,EAAAJ,EAAAO,EAAAF,EAAAE,EAAAF,EAAAD,EAAAJ,EAAAI,GACAogD,EAAA,IAAAP,EAAA,MAGA,OAFAO,EAAArC,mBACAM,EAAA,EAAAtwB,GAAA5rB,KAAA7C,SACA8gD,GAaAP,EAAAqB,WAAA,SAAAxnB,EAAAynB,EAAAC,GAOA,IANA,IAAAC,EAAAF,GAAA,GACA7+C,EAAAo3B,EAAA5B,YACAnB,EAAA+C,EAAArC,YACA+oB,EAAA,IAAAP,EAAA,KAAAlpB,GACA2qB,EAAAh/C,GAAA++C,EAAA,GACAl/C,EAAA,IAAAmH,MAAAg4C,GACAliD,EAAA,EAAiBA,EAAAkiD,EAAiBliD,IAClC+C,EAAA/C,GAAA,EAEA,IAAA08B,GAAA35B,EAAA7C,QAIA,OAHA8gD,EAAArC,mBAAApnB,EAAAx0B,EAAA25B,GACA+jB,EAAA0B,YACAnB,EAAA1mB,EAAA91B,YAAA81B,EAAAC,YAAAynB,GACAhB,GAYAP,EAAA0B,YAAA,SAAAnB,EAAA57C,EAAAmY,EAAAykC,GAQA,IAPA,IAMAn2C,EAAA7I,EANAD,EAAAi+C,EAAAjpB,qBACAR,EAAAypB,EAAA/oB,YACA/0B,EAAA89C,EAAAtoB,YACAgE,EAAAskB,EAAAG,UACAc,EAAAl/C,EAAA7C,OAAAgD,EAAA,EACAk/C,EAAAJ,GAAA,EAEAhiD,EAAA,EAAiBA,GAAAiiD,IAAYjiD,EAC7BgD,EAAAhD,EAAAkD,EACA2I,EAAAu2C,EAAA,EAAApkC,EAAA,EAAA9F,OAAAlY,EAAAiiD,GAAAxhD,KAAAsX,GAAAkqC,EACAl/C,EAAAC,GAAAoC,EAAA,GAAAmY,EAAA9c,KAAAgF,IAAAoG,GACA9I,EAAAC,EAAA,GAAAoC,EAAA,GAAAmY,EAAA9c,KAAAkF,IAAAkG,GAEAm1C,EAAArC,mBAAApnB,EAAAx0B,EAAA25B,IAEAh9B,EAAA,mGC3bA2iD,EAAA,WAEAnO,EAAA,EAAApwC,KAAA0Z,MAMAA,KAAA6C,QAAAwX,EAAA,EAAA93B,cAMAyd,KAAA8kC,iBAAA,EAMA9kC,KAAA8a,2BAMA9a,KAAA+a,yCAAA,EAMA/a,KAAA4a,2BAAA,EAMA5a,KAAA+kC,cAAAC,EAAA,EAAArjD,UAIA+oB,EAAA,EAAAppB,SAAAujD,EAAAnO,EAAA,GAQAmO,EAAApjD,UAAAkC,MAAA,aAWAkhD,EAAApjD,UAAA2/C,eAAA,SAAAt9C,EAAAC,EAAA47C,EAAAS,KAWAyE,EAAApjD,UAAAw+C,gBAAA,SAAAx6B,EAAAw/B,GACA,IAAAtF,EAAAsF,IAAA1E,SAEA,OADAvgC,KAAAohC,eAAA37B,EAAA,GAAAA,EAAA,GAAAk6B,EAAA16C,KACA06C,GAWAkF,EAAApjD,UAAAyjD,qBAAA,SAAA/gD,GACA,OAAA6b,KAAA5b,WAAAD,EAAA,GAAAA,EAAA,KAUA0gD,EAAApjD,UAAA24B,cAAA,SAAA93B,KAQAuiD,EAAApjD,UAAA2C,WAAA+gD,EAAA,EAAA76B,MASAu6B,EAAApjD,UAAA0iB,UAAA,SAAAphB,GAKA,OAJAid,KAAA8kC,iBAAA9kC,KAAA6a,gBACA7a,KAAA6C,QAAA7C,KAAAoa,cAAApa,KAAA6C,SACA7C,KAAA8kC,gBAAA9kC,KAAA6a,eAEAR,EAAA,EAAA/wB,eAAA0W,KAAA6C,QAAA9f,IAYA8hD,EAAApjD,UAAA2M,OAAA,SAAAC,EAAAwgB,KAcAg2B,EAAApjD,UAAA6M,MAAA,SAAAK,EAAA8sB,EAAAC,KAeAmpB,EAAApjD,UAAA8/C,SAAA,SAAAnc,GACA,OAAAplB,KAAA0a,sBAAA0K,MAYAyf,EAAApjD,UAAAi5B,sBAAA,SAAAC,KAQAkqB,EAAApjD,UAAA8f,QAAA,aAWAsjC,EAAApjD,UAAA0I,eAAA,SAAAC,KASAy6C,EAAApjD,UAAAigD,iBAAA,SAAAp/C,KAUAuiD,EAAApjD,UAAA8M,UAAA,SAAA/E,EAAAC,KAkBAo7C,EAAApjD,UAAAmL,UAAA,SAAAsO,EAAA6L,GACA,IAAAq+B,EAAAplC,KAAA+kC,cAEA36C,GADA8Q,EAAAmqC,EAAA,EAAA9iC,IAAArH,IACAkJ,YAAAkhC,EAAA,EAAAtyB,YACA,SAAAuyB,EAAAC,EAAA9/C,GACA,IAAA+/C,EAAAvqC,EAAAiJ,YACAuhC,EAAAxqC,EAAAsJ,iBACAlW,EAAA+rB,EAAA,EAAAtzB,UAAA2+C,GAAArrB,EAAA,EAAAtzB,UAAA0+C,GAOA,OANAT,EAAA,EAAAx2C,QAAA42C,EACAM,EAAA,GAAAA,EAAA,GACAp3C,KAAA,EACA,KACAq3C,EAAA,EAAAj3B,YAAA62B,EAAA,EAAAA,EAAA7iD,OAAAgD,EACA0/C,EAAAI,GACAH,EAAA,EAAA57B,aAAAvO,EAAA6L,EAAAs+B,CAAAE,EAAAC,EAAA9/C,IAEA2/C,EAAA,EAAA57B,aAAAvO,EAAA6L,GAEA,OADA/G,KAAA7V,eAAAC,GACA4V,MAEA9d,EAAA,qDC/PA0jD,EAAA,SAAAx6C,EAAA8oB,EAAA2xB,EAAArgB,EACAC,GAEAqgB,EAAA,EAAAx/C,KAAA0Z,KAAA5U,EAAA8oB,EAAAuR,GAQAzlB,KAAA2lB,cAAAkgB,EAOA7lC,KAAA+lC,MAAA7xB,EAAA8xB,cAAAH,GAOA7lC,KAAA7b,WAAA+vB,EAAA+xB,uBAAAjmC,KAAA+lC,OASA/lC,KAAAkmC,cAAA36C,IAAAi6B,MAIA9a,EAAA,EAAAppB,SAAAskD,EAAAE,EAAA,GASAF,EAAAnkD,UAAA8sB,eAAA,WACAu3B,EAAA,EAAArkD,UAAA8sB,eAAAjoB,KAAA0Z,MACAA,KAAA2lB,cAAApX,kBAUAq3B,EAAAnkD,UAAA+sB,gBAAA,WACAs3B,EAAA,EAAArkD,UAAA+sB,gBAAAloB,KAAA0Z,MACAA,KAAA2lB,cAAAnX,mBAEAtsB,EAAA,oDC/EAikD,GAOAC,aAAA,SAAA9jD,GACA,gBAKAsF,GACA,OAAAA,GAEA4Y,EAAA,EAAA3H,MAAAjR,EAAA,GAAAtF,EAAA,GAAAA,EAAA,IACAke,EAAA,EAAA3H,MAAAjR,EAAA,GAAAtF,EAAA,GAAAA,EAAA,UAGA,IAWAyiC,KAAA,SAAAn9B,GACA,OAAAA,IAEAy+C,EAAA,kBCjCAC,GAOAC,wBAAA,SAAA3mB,GACA,gBAOA/3B,EAAA+0B,EAAArgB,GACA,QAAAhR,IAAA1D,EAAA,CACA,IAAAswB,EACAhI,EAAA,EAAA7T,kBAAAsjB,EAAA/3B,EAAA0U,GACA4b,EAAA3X,EAAA,EAAA3H,MAAAsf,EAAAyE,EAAA,EAAAgD,EAAAl9B,OAAA,GACA,IAAA2a,EAAApa,KAAA46B,MAAA1F,GACA,GAAAA,GAAA9a,KAAAuiB,EAAAl9B,OAAA,GACA,IAAA8jD,EAAA5mB,EAAAviB,GAAAuiB,EAAAviB,EAAA,GACA,OAAAuiB,EAAAviB,GAAApa,KAAAgW,IAAAutC,EAAAruB,EAAA9a,GAEA,OAAAuiB,EAAAviB,MAgBAopC,kBAAA,SAAAD,EAAA3xB,EAAA6xB,GACA,gBAOA7+C,EAAA+0B,EAAArgB,GACA,QAAAhR,IAAA1D,EAAA,CACA,IAAArC,GAAA+W,EAAA,KACAoqC,EAAA1jD,KAAA46B,MACA56B,KAAAkW,IAAA0b,EAAAhtB,GAAA5E,KAAAkW,IAAAqtC,GAAAhhD,GACAohD,EAAA3jD,KAAAK,IAAAqjD,EAAA/pB,EAAA,GAIA,YAHArxB,IAAAm7C,IACAE,EAAA3jD,KAAAC,IAAA0jD,EAAAF,IAEA7xB,EAAA5xB,KAAAgW,IAAAutC,EAAAI,OAMAC,EAAA,kBCzDAC,GALAC,OAAA,SACAC,WAAA,aACAC,SAAA,0FCuEAC,EAAA,SAAAhmC,GACA9F,EAAA,EAAA9U,KAAA0Z,MAEA,IAAAqB,EAAAtf,EAAA,EAAA8Y,UAAkCqG,GAMlClB,KAAAmnC,QAAA,KAMAnnC,KAAAonC,eAMApnC,KAAAqnC,oBAEArnC,KAAAsnC,kBAAAtnC,KAAAsnC,kBAAAp3B,KAAAlQ,MAOAA,KAAA+yB,YAAAnP,EAAA,EAAAlb,iBAAArH,EAAAC,WAAA,aAEAtB,KAAAunC,cAAAlmC,IAGAqC,EAAA,EAAApiB,SAAA4lD,EAAA9rC,EAAA,GAOA8rC,EAAAzlD,UAAA8lD,cAAA,SAAAlmC,GAKA,IAAAs1B,KACAA,EAAAmQ,EAAAC,aAAAx7C,IAAA8V,EAAAzZ,OACAyZ,EAAAzZ,OAAA,KAEA,IAAA4/C,EAAAN,EAAAO,4BACApmC,GAMArB,KAAA0nC,eAAAF,EAAA3yB,cAMA7U,KAAA2nC,eAAAH,EAAA5yB,cAMA5U,KAAA+f,YAAAynB,EAAA/nB,WAMAzf,KAAA2f,aAAAte,EAAAue,YAMA5f,KAAA4nC,SAAAJ,EAAA9nB,QAEA,IAAAmoB,EAAAX,EAAAY,wBAAAzmC,GACA0mC,EAAAP,EAAAQ,WACAC,EAAAf,EAAAgB,0BAAA7mC,GAMArB,KAAAmoC,cACAvgD,OAAAigD,EACAhgD,WAAAkgD,EACAjgD,SAAAmgD,QAGA18C,IAAA8V,EAAAxZ,WACA8uC,EAAAmQ,EAAAE,YAAA3lC,EAAAxZ,gBACG0D,IAAA8V,EAAA0f,OACH4V,EAAAmQ,EAAAE,YAAAhnC,KAAAooC,oBACApoC,KAAA0nC,eAAArmC,EAAA0f,KAAA/gB,KAAA4nC,UAEA5nC,KAAA2f,eACAgX,EAAAmQ,EAAAE,YAAAxmC,EAAA,EAAA3H,MACAwe,OAAArX,KAAAqhB,iBAAAsV,EAAAmQ,EAAAE,aACAhnC,KAAA2nC,eAAA3nC,KAAA0nC,kBAGA/Q,EAAAmQ,EAAAG,eACA17C,IAAA8V,EAAAvZ,SAAAuZ,EAAAvZ,SAAA,EACAkY,KAAA4K,cAAA+rB,GAMA32B,KAAAqoC,SAAAhnC,GAYA6lC,EAAAzlD,UAAA6mD,mBAAA,SAAAC,GACA,IAAAlnC,EAAAtf,EAAA,EAAA8Y,UAAkCmF,KAAAqoC,UAelC,YAZA98C,IAAA8V,EAAAxZ,WACAwZ,EAAAxZ,WAAAmY,KAAAqhB,gBAEAhgB,EAAA0f,KAAA/gB,KAAAwoC,UAIAnnC,EAAAzZ,OAAAoY,KAAAhZ,YAGAqa,EAAAvZ,SAAAkY,KAAA84B,cAEA/2C,EAAA,EAAA8Y,UAA2BwG,EAAAknC,IAqC3BrB,EAAAzlD,UAAAgnD,QAAA,SAAAC,GACA,IACAviD,EADAwiD,EAAA1tC,UAAAvY,OAMA,GAJAimD,EAAA,sBAAA1tC,UAAA0tC,EAAA,KACAxiD,EAAA8U,UAAA0tC,EAAA,KACAA,IAEA3oC,KAAA4oC,QAAA,CAEA,IAAArV,EAAAt4B,UAAA0tC,EAAA,GAaA,OAZApV,EAAA3rC,QACAoY,KAAA6oC,UAAAtV,EAAA3rC,aAEA2D,IAAAgoC,EAAAxS,MACA/gB,KAAA8oC,QAAAvV,EAAAxS,WAEAx1B,IAAAgoC,EAAAzrC,UACAkY,KAAAw5B,YAAAjG,EAAAzrC,eAEA3B,GACAA,GAAA,IASA,IALA,IAAAwD,EAAAo/C,KAAAC,MACAphD,EAAAoY,KAAAhZ,YAAApD,QACAiE,EAAAmY,KAAAqhB,gBACAv5B,EAAAkY,KAAA84B,cACAmQ,KACAzmD,EAAA,EAAiBA,EAAAmmD,IAAoBnmD,EAAA,CACrC,IAAA6e,EAAkDpG,UAAAzY,GAElD0mD,GACAv/C,QACAw/C,UAAA,EACAt6B,OAAAxN,EAAAwN,OACAu6B,cAAA79C,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,IACAC,OAAAhoC,EAAAgoC,UAAA,EAAAv3B,UAoBA,GAjBAzQ,EAAAzZ,SACAshD,EAAAI,aAAA1hD,EACAshD,EAAAK,aAAAloC,EAAAzZ,OACAA,EAAAshD,EAAAK,mBAGAh+C,IAAA8V,EAAA0f,MACAmoB,EAAAM,iBAAA3hD,EACAqhD,EAAAO,iBAAAzpC,KAAAooC,oBACApoC,KAAA0nC,eAAArmC,EAAA0f,KAAA/gB,KAAA4nC,SAAA,GACA//C,EAAAqhD,EAAAO,kBACKpoC,EAAAxZ,aACLqhD,EAAAM,iBAAA3hD,EACAqhD,EAAAO,iBAAApoC,EAAAxZ,WACAA,EAAAqhD,EAAAO,uBAGAl+C,IAAA8V,EAAAvZ,SAAA,CACAohD,EAAAQ,eAAA5hD,EACA,IAAA80B,EAAApc,EAAA,EAAA9F,OAAA2G,EAAAvZ,WAAA7E,KAAAsX,GAAA,EAAAtX,KAAAsX,IAAAtX,KAAAsX,GACA2uC,EAAAS,eAAA7hD,EAAA80B,EACA90B,EAAAohD,EAAAS,eAGAT,EAAA/iD,WAGA+gD,EAAA0C,gBAAAV,GACAA,EAAAC,UAAA,EAGAx/C,GAAAu/C,EAAAE,SAEAH,EAAAh9C,KAAAi9C,GAEAlpC,KAAAonC,YAAAn7C,KAAAg9C,GACAjpC,KAAA6pC,QAAAC,EAAA,EAAAzrC,UAAA,GACA2B,KAAAsnC,qBASAJ,EAAAzlD,UAAAsoD,aAAA,WACA,OAAA/pC,KAAAmnC,OAAA2C,EAAA,EAAAzrC,WAAA,GASA6oC,EAAAzlD,UAAAuoD,eAAA,WACA,OAAAhqC,KAAAmnC,OAAA2C,EAAA,EAAAxrC,aAAA,GAQA4oC,EAAAzlD,UAAAwoD,iBAAA,WACAjqC,KAAA6pC,QAAAC,EAAA,EAAAzrC,WAAA2B,KAAAmnC,OAAA2C,EAAA,EAAAzrC,YACA,QAAA7b,EAAA,EAAAC,EAAAud,KAAAonC,YAAA1kD,OAA+CF,EAAAC,IAAQD,EAAA,CACvD,IAAAymD,EAAAjpC,KAAAonC,YAAA5kD,GACAymD,EAAA,GAAA9iD,UACA8iD,EAAA,GAAA9iD,UAAA,GAGA6Z,KAAAonC,YAAA1kD,OAAA,GAMAwkD,EAAAzlD,UAAA6lD,kBAAA,WAKA,QAJA/7C,IAAAyU,KAAAqnC,sBACA6C,qBAAAlqC,KAAAqnC,qBACArnC,KAAAqnC,yBAAA97C,GAEAyU,KAAA+pC,eAAA,CAKA,IAFA,IAAAf,EAAAD,KAAAC,MACAmB,GAAA,EACA3nD,EAAAwd,KAAAonC,YAAA1kD,OAAA,EAA2CF,GAAA,IAAQA,EAAA,CAGnD,IAFA,IAAAymD,EAAAjpC,KAAAonC,YAAA5kD,GACA4nD,GAAA,EACApwC,EAAA,EAAAoH,EAAA6nC,EAAAvmD,OAAuCsX,EAAAoH,IAAQpH,EAAA,CAC/C,IAAAkvC,EAAAD,EAAAjvC,GACA,IAAAkvC,EAAAC,SAAA,CAGA,IAAAkB,EAAArB,EAAAE,EAAAv/C,MACA2gD,EAAApB,EAAAE,SAAA,EAAAiB,EAAAnB,EAAAE,SAAA,EACAkB,GAAA,GACApB,EAAAC,UAAA,EACAmB,EAAA,GAEAF,GAAA,EAEA,IAAAG,EAAArB,EAAAG,OAAAiB,GACA,GAAApB,EAAAI,aAAA,CACA,IAAA9gD,EAAA0gD,EAAAI,aAAA,GACA1gD,EAAAsgD,EAAAI,aAAA,GAGAxlD,EAAA0E,EAAA+hD,GAFArB,EAAAK,aAAA,GAEA/gD,GACAzE,EAAA6E,EAAA2hD,GAFArB,EAAAK,aAAA,GAEA3gD,GACAoX,KAAAnT,IAAAi6C,EAAAC,QAAAjjD,EAAAC,IAEA,GAAAmlD,EAAAM,kBAAAN,EAAAO,iBAAA,CACA,IAAA5hD,EAAA,IAAA0iD,EACArB,EAAAO,iBACAP,EAAAM,iBAAAe,GAAArB,EAAAO,iBAAAP,EAAAM,kBACAN,EAAAr6B,QACA7O,KAAAnT,IAAAi6C,EAAAC,OACA/mC,KAAAwqC,oBAAA3iD,EAAAqhD,EAAAr6B,SAEA7O,KAAAnT,IAAAi6C,EAAAE,WAAAn/C,GAEA,QAAA0D,IAAA29C,EAAAQ,qBAAAn+C,IAAA29C,EAAAS,eAAA,CACA,IAAA7hD,EAAA,IAAAyiD,EACA/pC,EAAA,EAAA9F,OAAAwuC,EAAAS,eAAA1mD,KAAAsX,GAAA,EAAAtX,KAAAsX,IAAAtX,KAAAsX,GACA2uC,EAAAQ,eAAAa,GAAArB,EAAAS,eAAAT,EAAAQ,gBACAR,EAAAr6B,QACA7O,KAAAnT,IAAAi6C,EAAAC,OACA/mC,KAAAyqC,sBAAA3iD,EAAAohD,EAAAr6B,SAEA7O,KAAAnT,IAAAi6C,EAAAG,SAAAn/C,GAGA,GADAqiD,GAAA,GACAjB,EAAAC,SACA,OAGA,GAAAiB,EAAA,CACApqC,KAAAonC,YAAA5kD,GAAA,KACAwd,KAAA6pC,QAAAC,EAAA,EAAAzrC,WAAA,GACA,IAAAlY,EAAA8iD,EAAA,GAAA9iD,SACAA,GACAA,GAAA,IAKA6Z,KAAAonC,YAAApnC,KAAAonC,YAAAsD,OAAAC,SACAR,QAAA5+C,IAAAyU,KAAAqnC,sBACArnC,KAAAqnC,oBAAAuD,sBAAA5qC,KAAAsnC,sBASAJ,EAAAzlD,UAAAgpD,sBAAA,SAAA3iD,EAAA+mB,GACA,IAAAjnB,EACAijD,EAAA7qC,KAAAhZ,YAMA,YALAuE,IAAAs/C,IACAjjD,GAAAijD,EAAA,GAAAh8B,EAAA,GAAAg8B,EAAA,GAAAh8B,EAAA,IACA1qB,EAAA,EAAAiK,OAAAxG,EAAAE,EAAAkY,KAAA84B,eACA30C,EAAA,EAAAyiB,IAAAhf,EAAAinB,IAEAjnB,GASAs/C,EAAAzlD,UAAA+oD,oBAAA,SAAA3iD,EAAAgnB,GACA,IAAAjnB,EACAijD,EAAA7qC,KAAAhZ,YACA8jD,EAAA9qC,KAAAqhB,qBACA91B,IAAAs/C,QAAAt/C,IAAAu/C,IAKAljD,GAJAinB,EAAA,GACAhnB,GAAAgnB,EAAA,GAAAg8B,EAAA,IAAAC,EACAj8B,EAAA,GACAhnB,GAAAgnB,EAAA,GAAAg8B,EAAA,IAAAC,IAGA,OAAAljD,GAQAs/C,EAAAzlD,UAAAspD,qBAAA,WACA,IAAAhjD,GAAA,SACAijD,EAAA,2BAAAtnC,EAAA,EAAA5hB,OAAAke,MAAA,KACArB,EAAAvJ,SAAA61C,cAAAD,GACA,GAAArsC,EAAA,CACA,IAAAusC,EAAArsC,iBAAAF,GACA5W,EAAA,GAAA+W,SAAAosC,EAAAh3C,MAAA,IACAnM,EAAA,GAAA+W,SAAAosC,EAAA/1C,OAAA,IAEA,OAAApN,GAUAm/C,EAAAzlD,UAAA0pD,gBAAA,SAAAvjD,GACA,OAAAoY,KAAAmoC,aAAAvgD,WAYAs/C,EAAAzlD,UAAA2mD,oBAAA,SACAvgD,EAAAujD,EAAA1oB,GACA,IAAA9F,EAAAwuB,GAAA,EACA7uC,EAAAmmB,GAAA,EACA,OAAA1iB,KAAAmoC,aAAAtgD,aAAA+0B,EAAArgB,IAWA2qC,EAAAzlD,UAAA4pD,kBAAA,SAAAvjD,EAAAsjD,GACA,IAAAxuB,EAAAwuB,GAAA,EACA,OAAAprC,KAAAmoC,aAAArgD,WAAA80B,IAUAsqB,EAAAzlD,UAAAuF,UAAA,WACA,OACuCgZ,KAAAuC,IAAAukC,EAAAC,SAQvCG,EAAAzlD,UAAA6pD,eAAA,WACA,OAAAtrC,KAAAmoC,cAQAjB,EAAAzlD,UAAA8pD,SAAA,SAAAC,GACA,YAAAjgD,IAAAigD,GACAA,EAAA,GAAAxrC,KAAAmnC,OAAA,GACAqE,EAAA,GAAAxrC,KAAAmnC,OAAA,GACAqE,GAEAxrC,KAAAmnC,OAAAvjD,SAeAsjD,EAAAzlD,UAAAgqD,gBAAA,SAAAjyB,GACA,IAAAzxB,EAAAyxB,GAAAxZ,KAAA+qC,uBACAnjD,EAAyCoY,KAAAhZ,YACzC64B,EAAA,EAAAp4B,OAAAG,EAAA,GACA,IAAAC,EAAsCmY,KAAAqhB,gBACtCxB,EAAA,EAAAp4B,YAAA8D,IAAA1D,EAAA,GACA,IAAAC,EAAoCkY,KAAA84B,cAGpC,OAFAjZ,EAAA,EAAAp4B,YAAA8D,IAAAzD,EAAA,GAEAmiB,EAAA,EAAAtiB,kBAAAC,EAAAC,EAAAC,EAAAC,IASAm/C,EAAAzlD,UAAA01C,iBAAA,WACA,OAAAn3B,KAAA0nC,gBASAR,EAAAzlD,UAAA21C,iBAAA,WACA,OAAAp3B,KAAA2nC,gBASAT,EAAAzlD,UAAA03B,WAAA,WACA,OAA2BnZ,KAAA0rC,qBAAA1rC,KAAA2nC,iBAS3BT,EAAAzlD,UAAAkqD,WAAA,SAAA5qB,GACA/gB,KAAAunC,cAAAvnC,KAAAsoC,oBAA8CtoB,QAAAe,MAS9CmmB,EAAAzlD,UAAAy3B,WAAA,WACA,OAA2BlZ,KAAA0rC,qBAAA1rC,KAAA0nC,iBAS3BR,EAAAzlD,UAAAmqD,WAAA,SAAA7qB,GACA/gB,KAAAunC,cAAAvnC,KAAAsoC,oBAA8C5oB,QAAAqB,MAS9CmmB,EAAAzlD,UAAAsyC,cAAA,WACA,OAAA/zB,KAAA+yB,aAUAmU,EAAAzlD,UAAA4/B,cAAA,WACA,OACgCrhB,KAAAuC,IAAAukC,EAAAE,aAWhCE,EAAAzlD,UAAA6/B,eAAA,WACA,OAAAthB,KAAA2f,cAYAunB,EAAAzlD,UAAAoqD,uBAAA,SAAAvpD,EAAAk3B,GACA,IAAAzxB,EAAAyxB,GAAAxZ,KAAA+qC,uBACAe,EAAA7hC,EAAA,EAAAnjB,SAAAxE,GAAAyF,EAAA,GACAgkD,EAAA9hC,EAAA,EAAAljB,UAAAzE,GAAAyF,EAAA,GACA,OAAA9E,KAAAK,IAAAwoD,EAAAC,IAUA7E,EAAAzlD,UAAAuqD,8BAAA,SAAAC,GACA,IAAAzF,EAAAyF,GAAA,EACAp3B,EAAA7U,KAAA0nC,eACA9yB,EAAA5U,KAAA2nC,eACArkD,EAAAL,KAAAkW,IAAA0b,EAAAD,GAAA3xB,KAAAkW,IAAAqtC,GACA,gBAKA9iD,GAEA,OADAmxB,EAAA5xB,KAAAgW,IAAAutC,EAAA9iD,EAAAJ,KAYA4jD,EAAAzlD,UAAAq3C,YAAA,WACA,OACsB94B,KAAAuC,IAAAukC,EAAAG,WAWtBC,EAAAzlD,UAAAyqD,8BAAA,SAAAD,GACA,IAAAzF,EAAAyF,GAAA,EACAp3B,EAAA7U,KAAA0nC,eACA9yB,EAAA5U,KAAA2nC,eACArkD,EAAAL,KAAAkW,IAAA0b,EAAAD,GAAA3xB,KAAAkW,IAAAqtC,GACA,gBAKA3+C,GAGA,OADA5E,KAAAkW,IAAA0b,EAAAhtB,GAAA5E,KAAAkW,IAAAqtC,GAAAljD,IASA4jD,EAAAzlD,UAAA4zB,SAAA,WACA,IAAAztB,EAAwCoY,KAAAhZ,YACxCsa,EAAAtB,KAAA+zB,gBACAlsC,EAAqCmY,KAAAqhB,gBACrCv5B,EAAAkY,KAAA84B,cACA,OACAlxC,SAAAhE,QACA0d,gBAAA/V,IAAA+V,IAAA,KACAzZ,aACAC,WACAi5B,KAAA/gB,KAAAwoC,YAYAtB,EAAAzlD,UAAA+mD,QAAA,WACA,IAAAznB,EACAl5B,EAAAmY,KAAAqhB,gBAIA,YAHA91B,IAAA1D,IACAk5B,EAAA/gB,KAAA0rC,qBAAA7jD,IAEAk5B,GAUAmmB,EAAAzlD,UAAAiqD,qBAAA,SAAA7jD,GACA,IACAvE,EAAAm8B,EADAj6B,EAAAwa,KAAA4nC,UAAA,EAEA,GAAA5nC,KAAA2f,aAAA,CACA,IAAAwsB,EAAAh8B,EAAA,EAAA7T,kBAAA0D,KAAA2f,aAAA93B,EAAA,GACArC,EAAA2mD,EACA7oD,EAAA0c,KAAA2f,aAAAwsB,GAEA1sB,EADA0sB,GAAAnsC,KAAA2f,aAAAj9B,OAAA,EACA,EAEAY,EAAA0c,KAAA2f,aAAAwsB,EAAA,QAGA7oD,EAAA0c,KAAA0nC,eACAjoB,EAAAzf,KAAA+f,YAEA,OAAAv6B,EAAAvC,KAAAkW,IAAA7V,EAAAuE,GAAA5E,KAAAkW,IAAAsmB,IAUAynB,EAAAzlD,UAAA2qD,qBAAA,SAAArrB,GACA,OAA2B/gB,KAAAooC,oBAC3BpoC,KAAA0nC,eAAA3mB,EAAA/gB,KAAA4nC,SAAA,IAcAV,EAAAzlD,UAAA4qD,IAAA,SAAAC,EAAAprC,GACA,IAMAD,EANAI,EAAAH,MACAnZ,EAAAsZ,EAAAtZ,KACAA,IACAA,EAAAiY,KAAA+qC,wBAIAuB,aAAAtL,EAAA,EAMGsL,EAAA/qC,YAAAC,EAAA,EAAApP,QACHk6C,IAAAnoC,aACAlD,EAAAuiC,EAAA,EAAAa,WAAAiI,IACAl+C,OAAA4R,KAAA84B,cAAA7uB,EAAA,EAAAjjB,UAAAslD,KAEArrC,EAAAqrC,GAVAzsB,EAAA,EAAAp4B,OAAAiF,MAAAkQ,QAAA0vC,GACA,IACAzsB,EAAA,EAAAp4B,QAAAwiB,EAAA,EAAApjB,QAAAylD,GACA,IACArrC,EAAAuiC,EAAA,EAAAa,WAAAiI,IASA,IAIA13B,EAJAnf,OAAAlK,IAAA8V,EAAA5L,QAAA4L,EAAA5L,SAAA,SACA2yC,OAAA78C,IAAA8V,EAAA+mC,qBACA/mC,EAAA+mC,oBACA+D,OAAA5gD,IAAA8V,EAAA8qC,SAAA9qC,EAAA8qC,QAGAv3B,OADArpB,IAAA8V,EAAAuT,cACAvT,EAAAuT,mBACGrpB,IAAA8V,EAAA2e,QACHhgB,KAAAooC,oBACApoC,KAAA0nC,eAAArmC,EAAA2e,QAAAhgB,KAAA4nC,SAAA,GAEA,EAaA,IAXA,IAAAzmC,EAAAF,EAAAsZ,qBAGAzyB,EAAAkY,KAAA84B,cACAza,EAAAp7B,KAAAgF,KAAAH,GACAw2B,EAAAr7B,KAAAkF,KAAAL,GACAykD,EAAAtnD,IACAunD,EAAAvnD,IACAwnD,GAAAxnD,IACAynD,GAAAznD,IACAS,EAAAub,EAAAia,YACA14B,EAAA,EAAAC,EAAA0e,EAAAze,OAAqCF,EAAAC,EAAQD,GAAAkD,EAAA,CAC7C,IAAAinD,EAAAxrC,EAAA3e,GAAA67B,EAAAld,EAAA3e,EAAA,GAAA87B,EACAsuB,EAAAzrC,EAAA3e,GAAA87B,EAAAnd,EAAA3e,EAAA,GAAA67B,EACAkuB,EAAAtpD,KAAAC,IAAAqpD,EAAAI,GACAH,EAAAvpD,KAAAC,IAAAspD,EAAAI,GACAH,EAAAxpD,KAAAK,IAAAmpD,EAAAE,GACAD,EAAAzpD,KAAAK,IAAAopD,EAAAE,GAIA,IAAA/kD,EAAAmY,KAAA6rC,wBACAU,EAAAC,EAAAC,EAAAC,IACA3kD,EAAA,GAAA0N,EAAA,GAAAA,EAAA,GAAA1N,EAAA,GAAA0N,EAAA,GAAAA,EAAA,KAGA,GAFA5N,EAAAw6C,MAAAx6C,GAAA+sB,EACA3xB,KAAAK,IAAAuE,EAAA+sB,GACAwzB,EAAA,CACA,IAAAyE,EAAA7sC,KAAAooC,oBAAAvgD,EAAA,MACAskD,GAAAU,EAAAhlD,IACAglD,EAAA7sC,KAAAooC,oBACAyE,GAAA,MAEAhlD,EAAAglD,EAIAvuB,KACA,IAAAwuB,GAAAP,EAAAE,GAAA,EACAM,GAAAP,EAAAE,GAAA,EAKA9kD,IAJAklD,IAAAr3C,EAAA,GAAAA,EAAA,MAAA5N,GAEAw2B,GADA0uB,IAAAt3C,EAAA,GAAAA,EAAA,MAAA5N,GACAy2B,EACAyuB,EAAA1uB,EAAAyuB,EAAAxuB,GAEAn4B,EAAAkb,EAAAlb,SAAAkb,EAAAlb,SAAAud,EAAA,EAAA7hB,kBAEA0J,IAAA8V,EAAA+nC,SACAppC,KAAAyoC,SACA5gD,aACAD,SACAwhD,SAAA/nC,EAAA+nC,SACAC,OAAAhoC,EAAAgoC,QACKljD,IAEL6Z,KAAAgtC,cAAAnlD,GACAmY,KAAA6oC,UAAAjhD,GACAqlD,WAAA9mD,EAAA+pB,UAAA3kB,GAAA,QAYA27C,EAAAzlD,UAAAyrD,SAAA,SAAA/oD,EAAA4D,EAAA2N,GAEA,IAAA5N,EAAAkY,KAAA84B,cACAza,EAAAp7B,KAAAgF,KAAAH,GACAw2B,EAAAr7B,KAAAkF,KAAAL,GACA6kD,EAAAxoD,EAAA,GAAAk6B,EAAAl6B,EAAA,GAAAm6B,EACAsuB,EAAAzoD,EAAA,GAAAk6B,EAAAl6B,EAAA,GAAAm6B,EACAz2B,EAAAmY,KAAAqhB,gBAMA8rB,GALAR,IAAA5kD,EAAA,KAAA2N,EAAA,IAAA7N,GAKAw2B,GAJAuuB,IAAAl3C,EAAA,GAAA3N,EAAA,MAAAF,IAGAy2B,MAEA8uB,EAAAR,EAAAvuB,EAAAsuB,EAAAruB,EAEAte,KAAA6oC,WAAAsE,EAAAC,KAOAlG,EAAAzlD,UAAAmnD,MAAA,WACA,QAAA5oC,KAAAhZ,kBAAAuE,IAAAyU,KAAAqhB,iBAUA6lB,EAAAzlD,UAAA2M,OAAA,SAAAtG,EAAA4zB,GACA,QAAAnwB,IAAAmwB,EAAA,CACA,IAAA9zB,EAAAoY,KAAAyqC,sBAAA3iD,EAAA4zB,GACA1b,KAAA6oC,UAAAjhD,GAEAoY,KAAAw5B,YAAA1xC,IAUAo/C,EAAAzlD,UAAAonD,UAAA,SAAAjhD,GACAoY,KAAAnT,IAAAi6C,EAAAC,OAAAn/C,GACAoY,KAAA+pC,gBACA/pC,KAAAiqC,oBAUA/C,EAAAzlD,UAAAooD,QAAA,SAAAwD,EAAAzwB,GAGA,OAFA5c,KAAAmnC,OAAAkG,IAAAzwB,EACA5c,KAAAyV,UACAzV,KAAAmnC,OAAAkG,IAUAnG,EAAAzlD,UAAAurD,cAAA,SAAAnlD,GACAmY,KAAAnT,IAAAi6C,EAAAE,WAAAn/C,GACAmY,KAAA+pC,gBACA/pC,KAAAiqC,oBAWA/C,EAAAzlD,UAAA+3C,YAAA,SAAA1xC,GACAkY,KAAAnT,IAAAi6C,EAAAG,SAAAn/C,GACAkY,KAAA+pC,gBACA/pC,KAAAiqC,oBAUA/C,EAAAzlD,UAAAqnD,QAAA,SAAA/nB,GACA/gB,KAAAgtC,cAAAhtC,KAAAosC,qBAAArrB,KASAmmB,EAAAY,wBAAA,SAAAzmC,GACA,YAAA9V,IAAA8V,EAAA/e,OACA+jD,EAAAD,aAAA/kC,EAAA/e,QAEA+jD,EAAAthB,MAWAmiB,EAAAO,4BAAA,SAAApmC,GACA,IAAA0mC,EACAlzB,EACAD,EAOA8K,OAAAn0B,IAAA8V,EAAAqe,QACAre,EAAAqe,QAAAhc,EAAA,EAAA1jB,iBAEAggC,OAAAz0B,IAAA8V,EAAA2e,QACA3e,EAAA2e,QAPA,GASAP,OAAAl0B,IAAA8V,EAAAoe,WACApe,EAAAoe,WATA,EAWA,QAAAl0B,IAAA8V,EAAAue,YAAA,CACA,IAAAA,EAAAve,EAAAue,YACA/K,EAAA+K,EAAAF,GACA9K,OAAArpB,IAAAq0B,EAAAI,GACAJ,EAAAI,GAAAJ,IAAAl9B,OAAA,GACAqlD,EAAAlB,EAAAN,wBACA3mB,OACG,CAEH,IAAAte,EAAAsiB,EAAA,EAAAlb,iBAAArH,EAAAC,WAAA,aACAhf,EAAAgf,EAAA6C,YAOAmpC,GANAhrD,EAIAW,KAAAK,IAAA2mB,EAAA,EAAAnjB,SAAAxE,GAAA2nB,EAAA,EAAAljB,UAAAzE,IAFA,IAAAshC,EAAA,EAAArf,gBAAAP,EAAA,EAAAyC,SACAnF,EAAA+C,oBAGAX,EAAA,EAAAxjB,kBAAA+C,KAAAgW,IA5BA,EA6BAyK,EAAA,EAAA1jB,kBAEAutD,EAAAD,EAAArqD,KAAAgW,IA/BA,EADA,GAiCAyK,EAAA,EAAA1jB,uBAIAuL,KADAspB,EAAAxT,EAAAwT,eAEA6K,EAAA,EAEA7K,EAAAy4B,EAAArqD,KAAAgW,IAAAwmB,EAAAC,QAKAn0B,KADAqpB,EAAAvT,EAAAuT,iBAIAA,OAFArpB,IAAA8V,EAAA2e,aACAz0B,IAAA8V,EAAAwT,cACAA,EAAA5xB,KAAAgW,IAAAwmB,EAAAO,GAEAstB,EAAArqD,KAAAgW,IAAAwmB,EAAAO,GAGAutB,GAKAvtB,EAAAN,EAAAz8B,KAAA46B,MACA56B,KAAAkW,IAAA0b,EAAAD,GAAA3xB,KAAAkW,IAAAsmB,IACA7K,EAAAC,EAAA5xB,KAAAgW,IAAAwmB,EAAAO,EAAAN,GAEAqoB,EAAAlB,EAAAJ,kBACAhnB,EAAA5K,EAAAmL,EAAAN,GAEA,OAAUsoB,WAAAD,EAAAlzB,gBACVD,gBAAA8K,UAAAD,eASAynB,EAAAgB,0BAAA,SAAA7mC,GAGA,QAFA9V,IAAA8V,EAAAmsC,gBACAnsC,EAAAmsC,eACA,CACA,IAAAnC,EAAAhqC,EAAAgqC,kBACA,YAAA9/C,IAAA8/C,IAAA,IAAAA,EACAoC,EAAA,EAAAvoB,oBACK,IAAAmmB,EACLoC,EAAA,EAAA1oB,KACK,iBAAAsmB,EACLoC,EAAA,EAAAzoB,cAAAqmB,GAEAoC,EAAA,EAAA1oB,KAGA,OAAA0oB,EAAA,EAAA3oB,SAUAoiB,EAAA0C,gBAAA,SAAAV,GACA,QAAAA,EAAAI,cAAAJ,EAAAK,eACAplD,EAAA,EAAA4B,OAAAmjD,EAAAI,aAAAJ,EAAAK,iBAIAL,EAAAM,mBAAAN,EAAAO,kBAGAP,EAAAQ,iBAAAR,EAAAS,iBAKAznD,EAAA,4FC1pCAwrD,EAAA,SAAArsC,GAEAjG,EAAA,EAAA9U,KAAA0Z,MAMAA,KAAArB,QAAA0C,EAAA1C,QAAA0C,EAAA1C,QAAA,KAMAqB,KAAA2tC,QAAA,KAMA3tC,KAAA4tC,KAAA,KAMA5tC,KAAA6tC,gBAKA7tC,KAAAkW,OAAA7U,EAAA6U,OAAA7U,EAAA6U,OAAAxS,EAAA,EAAA7hB,aAEAwf,EAAAzW,QACAoV,KAAA8tC,UAAAzsC,EAAAzW,SAKA8Y,EAAA,EAAApiB,SAAAosD,EAAAtyC,EAAA,GAMAsyC,EAAAjsD,UAAAgxB,gBAAA,WACAwpB,EAAA,EAAAv8B,WAAAM,KAAArB,SACAvD,EAAA,EAAA3Z,UAAAgxB,gBAAAnsB,KAAA0Z,OASA0tC,EAAAjsD,UAAAssD,OAAA,WACA,OAAA/tC,KAAA4tC,MAYAF,EAAAjsD,UAAA0yB,OAAA,SAAAD,GACAlU,KAAA4tC,MACA3R,EAAA,EAAAv8B,WAAAM,KAAArB,SAEA,QAAAnc,EAAA,EAAAC,EAAAud,KAAA6tC,aAAAnrD,OAAgDF,EAAAC,IAAQD,EACxDwrD,EAAA,EAAAljD,cAAAkV,KAAA6tC,aAAArrD,KAEAwd,KAAA6tC,aAAAnrD,OAAA,EACAsd,KAAA4tC,KAAA15B,EACAlU,KAAA4tC,SACA5tC,KAAA2tC,QACA3tC,KAAA2tC,QAAAz5B,EAAA+5B,gCACAp4C,YAAAmK,KAAArB,SACAqB,KAAAkW,SAAAxS,EAAA,EAAA7hB,cACAme,KAAA6tC,aAAA5hD,KAAA+hD,EAAA,EAAAliD,OAAAooB,EACAg6B,EAAA,EAAAvW,WAAA33B,KAAAkW,OAAAlW,OAEAkU,EAAAgC,WAcAw3B,EAAAjsD,UAAAqsD,UAAA,SAAAljD,GACAoV,KAAA2tC,QAAA,iBAAA/iD,EACAwK,SAAA+4C,eAAAvjD,GACAA,GAEA,IAAAwjD,EAAA,iCCpHAC,EAAA,SAAAntC,GAEA,IAAAG,EAAAH,MAMAlB,KAAAsuC,WAAAl5C,SAAAC,cAAA,MAMA2K,KAAAuuC,QAAAn5C,SAAAC,cAAA,MAEA2K,KAAAsuC,WAAAz4C,YAAAmK,KAAAuuC,SACAvuC,KAAAuuC,QAAAh5C,MAAAi5C,QAAA,OAMAxuC,KAAAyuC,gBAAAljD,IAAA8V,EAAAqtC,WAAArtC,EAAAqtC,UAMA1uC,KAAA2uC,kBAAApjD,IAAA8V,EAAAutC,aACAvtC,EAAAutC,YAEA5uC,KAAA2uC,eACA3uC,KAAAyuC,YAAA,GAGA,IAAAI,OAAAtjD,IAAA8V,EAAAwtC,UAAAxtC,EAAAwtC,UAAA,iBAEAC,OAAAvjD,IAAA8V,EAAAytC,SAAAztC,EAAAytC,SAAA,eAEAC,OAAAxjD,IAAA8V,EAAA0tC,cAAA1tC,EAAA0tC,cAAA,IAEA,iBAAAA,GAKA/uC,KAAAgvC,eAAA55C,SAAAC,cAAA,QACA2K,KAAAgvC,eAAA15C,YAAAy5C,GAEA/uC,KAAAgvC,eAAAD,EAGA,IAAAE,OAAA1jD,IAAA8V,EAAA4tC,MAAA5tC,EAAA4tC,MAAA,IAEA,iBAAAA,GAKAjvC,KAAAkvC,OAAA95C,SAAAC,cAAA,QACA2K,KAAAkvC,OAAA55C,YAAA25C,GAEAjvC,KAAAkvC,OAAAD,EAIA,IAAAE,EAAAnvC,KAAA2uC,eAAA3uC,KAAAyuC,WACAzuC,KAAAgvC,eAAAhvC,KAAAkvC,OACAE,EAAAh6C,SAAAC,cAAA,UACA+5C,EAAAC,aAAA,iBACAD,EAAAE,MAAAR,EACAM,EAAAv5C,YAAAs5C,GAEAnB,EAAA,EAAAliD,OAAAsjD,EAAAG,EAAA,EAAAp4C,MAAA6I,KAAAwvC,aAAAxvC,MAEA,IAAAyvC,EAAAZ,EAAA,IAAAa,EAAA,EAAAr8B,mBAAA,IACAq8B,EAAA,EAAAn8B,eACAvT,KAAAyuC,YAAAzuC,KAAA2uC,aAAA,qBACA3uC,KAAA2uC,aAAA,wBACAhwC,EAAAvJ,SAAAC,cAAA,OACAsJ,EAAAkwC,UAAAY,EACA9wC,EAAA9I,YAAAmK,KAAAsuC,YACA3vC,EAAA9I,YAAAu5C,GAEA,IAAAl5B,EAAA7U,EAAA6U,OAAA7U,EAAA6U,OAAAm4B,EAAAn4B,OAEAk4B,EAAA9nD,KAAA0Z,MACArB,UACAuX,SACAtrB,OAAAyW,EAAAzW,SAQAoV,KAAA2vC,yBAMA3vC,KAAA4vC,kBAAA,EAMA5vC,KAAA6vC,kBAIAnsC,EAAA,EAAApiB,SAAA+sD,EAAAD,GASAC,EAAA5sD,UAAAquD,uBAAA,SAAA/5B,GAeA,IAVA,IAAAg6B,KAMAC,KAEAh6B,EAAAD,EAAAC,iBACAnuB,EAAAkuB,EAAAk6B,UAAApoD,WACArF,EAAA,EAAAC,EAAAuzB,EAAAtzB,OAA+CF,EAAAC,IAAQD,EAAA,CACvD,IAAAkyB,EAAAsB,EAAAxzB,GACA,GAAA0tD,EAAA,EAAAz7B,oBAAAC,EAAA7sB,GAAA,CAIA,IAAAqT,EAAAwZ,EAAAmiB,MAAA1hB,YACA,GAAAja,EAAA,CAIA,IAAAi1C,EAAAj1C,EAAA24B,mBACA,GAAAsc,EAAA,CAIA,IAAAhd,EAAAgd,EAAAp6B,GACA,GAAAod,EAIA,GAAAzmC,MAAAkQ,QAAAu2B,GACA,QAAAn5B,EAAA,EAAAoH,EAAA+xB,EAAAzwC,OAA+CsX,EAAAoH,IAAQpH,EACvDm5B,EAAAn5B,KAAA+1C,IACAC,EAAA/jD,KAAAknC,EAAAn5B,IACA+1C,EAAA5c,EAAAn5B,KAAA,QAIAm5B,KAAA4c,IACAC,EAAA/jD,KAAAknC,GACA4c,EAAA5c,IAAA,MAIA,OAAA6c,GAUA3B,EAAAn4B,OAAA,SAAAk6B,GACApwC,KAAAqwC,eAAAD,EAAAr6B,aAQAs4B,EAAA5sD,UAAA4uD,eAAA,SAAAt6B,GACA,GAAAA,EAAA,CAQA,IAAAod,EAAAnzB,KAAA8vC,uBAAA/5B,GACA,IAAA5F,EAAA,EAAApqB,OAAAotC,EAAAnzB,KAAA2vC,uBAAA,CAKA,KAAA3vC,KAAAsuC,WAAAzuC,YAAAG,KAAAuuC,SACAvuC,KAAAsuC,WAAAv4C,YAAAiK,KAAAsuC,WAAAzuC,WAIA,QAAArd,EAAA,EAAAC,EAAA0wC,EAAAzwC,OAA2CF,EAAAC,IAAQD,EAAA,CACnD,IAAAmc,EAAAvJ,SAAAC,cAAA,MACAsJ,EAAA2xC,UAAAnd,EAAA3wC,GACAwd,KAAAsuC,WAAAz4C,YAAA8I,GAIA,IAAAw0B,EAAAzwC,QAAAsd,KAAA2vC,sBAAAjtD,OAAA,EACAsd,KAAArB,QAAA4xC,UAAA3pC,IAAA,gBACG,IAAA5G,KAAA2vC,sBAAAjtD,QAAAywC,EAAAzwC,OAAA,GACHsd,KAAArB,QAAA4xC,UAAA1zC,OAAA,gBAGA,IAAA8X,EAAAwe,EAAAzwC,OAAA,IAAAX,EAAA,EAAA8E,QAAAkvB,EAAAy6B,OACAxwC,KAAA4vC,kBAAAj7B,IACA3U,KAAArB,QAAApJ,MAAAi5C,QAAA75B,EAAA,UACA3U,KAAA4vC,iBAAAj7B,GAGA3U,KAAA2vC,sBAAAxc,EACAnzB,KAAAywC,aAAA16B,SAtCA/V,KAAA4vC,mBACA5vC,KAAArB,QAAApJ,MAAAi5C,QAAA,OACAxuC,KAAA4vC,kBAAA,IA4CAvB,EAAA5sD,UAAAgvD,aAAA,SAAA16B,GAEA,IAAAsd,EAWA58B,EAAAi6C,EAAAC,EAVAH,EAAAz6B,EAAAy6B,MACAI,EAAA5wC,KAAA6vC,cAEA,IAAAxc,KAAAud,EACAvd,KAAAmd,IACAvU,EAAA,EAAAv8B,WAAAkxC,EAAAvd,WACAud,EAAAvd,IAKA,IAAAsd,KAAAH,EAAA,CACA,IAAAK,EAAAL,EAAAG,GACAE,aAAAC,cACA9wC,KAAAuuC,QAAA14C,YAAAg7C,GACAD,EAAAD,GAAAE,GAEAF,KAAAC,KACAn6C,EAAA,IAAAs6C,OACAC,IAAAL,EACA,KAAAE,EACAH,EAAAj6C,IAEAi6C,EAAAt7C,SAAAC,cAAA,MACA47C,KAAAJ,EACAH,EAAA76C,YAAAY,IAEAuJ,KAAAuuC,QAAA14C,YAAA66C,GACAE,EAAAD,GAAAD,GAIA1wC,KAAAuuC,QAAAh5C,MAAAi5C,QAAAzsD,EAAA,EAAA8E,QAAA2pD,GAAA,WASAnC,EAAA5sD,UAAA+tD,aAAA,SAAAl9B,GACAA,EAAA/D,iBACAvO,KAAAkxC,iBAOA7C,EAAA5sD,UAAAyvD,cAAA,WACAlxC,KAAArB,QAAA4xC,UAAAY,OAAA,gBACAnxC,KAAAyuC,WACAxS,EAAA,EAAA78B,YAAAY,KAAAgvC,eAAAhvC,KAAAkvC,QAEAjT,EAAA,EAAA78B,YAAAY,KAAAkvC,OAAAlvC,KAAAgvC,gBAEAhvC,KAAAyuC,YAAAzuC,KAAAyuC,YASAJ,EAAA5sD,UAAA2vD,eAAA,WACA,OAAApxC,KAAA2uC,cASAN,EAAA5sD,UAAA4vD,eAAA,SAAAzC,GACA5uC,KAAA2uC,eAAAC,IAGA5uC,KAAA2uC,aAAAC,EACA5uC,KAAArB,QAAA4xC,UAAAY,OAAA,qBACAvC,GAAA5uC,KAAAyuC,YACAzuC,KAAAkxC,kBAYA7C,EAAA5sD,UAAA6vD,aAAA,SAAA5C,GACA1uC,KAAA2uC,cAAA3uC,KAAAyuC,aAAAC,GAGA1uC,KAAAkxC,iBAUA7C,EAAA5sD,UAAA8vD,aAAA,WACA,OAAAvxC,KAAAyuC,YAEA,IAAA/a,EAAA,UCzWA8d,EAAA,SAAAtwC,GAEA,IAAAG,EAAAH,MAEA2tC,OAAAtjD,IAAA8V,EAAAwtC,UAAAxtC,EAAAwtC,UAAA,YAEAI,OAAA1jD,IAAA8V,EAAA4tC,MAAA5tC,EAAA4tC,MAAA,IAMAjvC,KAAAkvC,OAAA,KAEA,iBAAAD,GACAjvC,KAAAkvC,OAAA95C,SAAAC,cAAA,QACA2K,KAAAkvC,OAAAL,UAAA,aACA7uC,KAAAkvC,OAAA55C,YAAA25C,IAEAjvC,KAAAkvC,OAAAD,EACAjvC,KAAAkvC,OAAAqB,UAAA3pC,IAAA,eAGA,IAAAkoC,EAAAztC,EAAAytC,SAAAztC,EAAAytC,SAAA,iBAEAM,EAAAh6C,SAAAC,cAAA,UACA+5C,EAAAP,YAAA,SACAO,EAAAC,aAAA,iBACAD,EAAAE,MAAAR,EACAM,EAAAv5C,YAAAmK,KAAAkvC,QAEAlB,EAAA,EAAAliD,OAAAsjD,EAAAG,EAAA,EAAAp4C,MACAq6C,EAAA/vD,UAAA+tD,aAAAxvC,MAEA,IAAAyvC,EAAAZ,EAAA,IAAAa,EAAA,EAAAr8B,mBAAA,IACAq8B,EAAA,EAAAn8B,cACA5U,EAAAvJ,SAAAC,cAAA,OACAsJ,EAAAkwC,UAAAY,EACA9wC,EAAA9I,YAAAu5C,GAEA,IAAAl5B,EAAA7U,EAAA6U,OAAA7U,EAAA6U,OAAAs7B,EAAAt7B,OAEAlW,KAAAyxC,gBAAApwC,EAAAqwC,WAAArwC,EAAAqwC,gBAAAnmD,EAEA6iD,EAAA9nD,KAAA0Z,MACArB,UACAuX,SACAtrB,OAAAyW,EAAAzW,SAOAoV,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,IAMAppC,KAAA4xC,eAAArmD,IAAA8V,EAAAwwC,UAAAxwC,EAAAwwC,SAMA7xC,KAAAy4B,eAAAltC,EAEAyU,KAAA4xC,WACA5xC,KAAArB,QAAA4xC,UAAA3pC,IAAA8oC,EAAA,EAAAv8B,eAKAzP,EAAA,EAAApiB,SAAAkwD,EAAApD,GAOAoD,EAAA/vD,UAAA+tD,aAAA,SAAAl9B,GACAA,EAAA/D,sBACAhjB,IAAAyU,KAAAyxC,gBACAzxC,KAAAyxC,kBAEAzxC,KAAA8xC,eAQAN,EAAA/vD,UAAAqwD,YAAA,WACA,IACAC,EADA/xC,KAAA+tC,SACAiE,UACAD,QAKAxmD,IAAAwmD,EAAAjZ,gBACA94B,KAAA2xC,UAAA,EACAI,EAAAtJ,SACA3gD,SAAA,EACAshD,SAAAppC,KAAA2xC,UACAtI,SAAA,EAAAx3B,UAGAkgC,EAAAvY,YAAA,KAYAgY,EAAAt7B,OAAA,SAAAk6B,GACA,IAAAr6B,EAAAq6B,EAAAr6B,WACA,GAAAA,EAAA,CAGA,IAAAjuB,EAAAiuB,EAAAk6B,UAAAnoD,SACA,GAAAA,GAAAkY,KAAAy4B,UAAA,CACA,IAAA7rC,EAAA,UAAA9E,EAAA,OACA,GAAAkY,KAAA4xC,UAAA,CACA,IAAAtyB,EAAAtf,KAAArB,QAAA4xC,UAAAjxB,SAAAowB,EAAA,EAAAv8B,cACAmM,GAAA,IAAAx3B,EAEOw3B,GAAA,IAAAx3B,GACPkY,KAAArB,QAAA4xC,UAAA1zC,OAAA6yC,EAAA,EAAAv8B,cAFAnT,KAAArB,QAAA4xC,UAAA3pC,IAAA8oC,EAAA,EAAAv8B,cAKAnT,KAAAkvC,OAAA35C,MAAA08C,YAAArlD,EACAoT,KAAAkvC,OAAA35C,MAAA28C,gBAAAtlD,EACAoT,KAAAkvC,OAAA35C,MAAA3I,YAEAoT,KAAAy4B,UAAA3wC,IAEA,IAAAsG,EAAA,EChJA+jD,EAAA,SAAAjxC,GAEA,IAAAG,EAAAH,MAEA2tC,OAAAtjD,IAAA8V,EAAAwtC,UAAAxtC,EAAAwtC,UAAA,UAEAjyB,OAAArxB,IAAA8V,EAAAub,MAAAvb,EAAAub,MAAA,EAEAw1B,OAAA7mD,IAAA8V,EAAA+wC,YAAA/wC,EAAA+wC,YAAA,IACAC,OAAA9mD,IAAA8V,EAAAgxC,aAAAhxC,EAAAgxC,aAAA,IAEAC,OAAA/mD,IAAA8V,EAAAixC,eACAjxC,EAAAixC,eAAA,UACAC,OAAAhnD,IAAA8V,EAAAkxC,gBACAlxC,EAAAkxC,gBAAA,WAEAC,EAAAp9C,SAAAC,cAAA,UACAm9C,EAAA3D,YAAA,MACA2D,EAAAnD,aAAA,iBACAmD,EAAAlD,MAAAgD,EACAE,EAAA38C,YACA,iBAAAu8C,EAAAh9C,SAAAq9C,eAAAL,MAGApE,EAAA,EAAAliD,OAAA0mD,EAAAjD,EAAA,EAAAp4C,MACAg7C,EAAA1wD,UAAA+tD,aAAAt/B,KAAAlQ,KAAA4c,IAEA,IAAA81B,EAAAt9C,SAAAC,cAAA,UACAq9C,EAAA7D,YAAA,OACA6D,EAAArD,aAAA,iBACAqD,EAAApD,MAAAiD,EACAG,EAAA78C,YACA,iBAAAw8C,EAAAj9C,SAAAq9C,eAAAJ,MAGArE,EAAA,EAAAliD,OAAA4mD,EAAAnD,EAAA,EAAAp4C,MACAg7C,EAAA1wD,UAAA+tD,aAAAt/B,KAAAlQ,MAAA4c,IAEA,IAAA6yB,EAAAZ,EAAA,IAAAa,EAAA,EAAAr8B,mBAAA,IACAq8B,EAAA,EAAAn8B,cACA5U,EAAAvJ,SAAAC,cAAA,OACAsJ,EAAAkwC,UAAAY,EACA9wC,EAAA9I,YAAA28C,GACA7zC,EAAA9I,YAAA68C,GAEAtE,EAAA9nD,KAAA0Z,MACArB,UACA/T,OAAAyW,EAAAzW,SAOAoV,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,KAIA1lC,EAAA,EAAApiB,SAAA6wD,EAAA/D,GAQA+D,EAAA1wD,UAAA+tD,aAAA,SAAA5yB,EAAAtK,GACAA,EAAA/D,iBACAvO,KAAA2yC,aAAA/1B,IAQAu1B,EAAA1wD,UAAAkxD,aAAA,SAAA/1B,GACA,IACAm1B,EADA/xC,KAAA+tC,SACAiE,UACA,GAAAD,EAAA,CAKA,IAAAjH,EAAAiH,EAAA1wB,gBACA,GAAAypB,EAAA,CACA,IAAA8H,EAAAb,EAAA3J,oBAAA0C,EAAAluB,GACA5c,KAAA2xC,UAAA,GACAI,EAAAhI,gBACAgI,EAAA9H,mBAEA8H,EAAAtJ,SACA5gD,WAAA+qD,EACAxJ,SAAAppC,KAAA2xC,UACAtI,SAAA,EAAAx3B,WAGAkgC,EAAA/E,cAAA4F,MAIA,IAAA7xB,EAAA,ECnHA8xB,GAeAC,SAAA,SAAA5xC,GAEA,IAAAG,EAAAH,MAEA6xC,EAAA,IAAAC,EAAA,EAkBA,YAhBAznD,IAAA8V,EAAA0f,MAAA1f,EAAA0f,OAEAgyB,EAAA9mD,KAAA,IAAA80B,EAAA1f,EAAA4xC,oBAGA1nD,IAAA8V,EAAAjT,QAAAiT,EAAAjT,SAEA2kD,EAAA9mD,KAAA,IAAAmC,EAAAiT,EAAA6xC,sBAGA3nD,IAAA8V,EAAAqyB,aACAryB,EAAAqyB,cAEAqf,EAAA9mD,KAAA,IAAAynC,EAAAryB,EAAA8xC,qBAGAJ,IAGA7wD,EAAA,2EC3BAkxD,EAAA,SAAA76B,EAAAgb,EAAAryB,GACAmyC,EAAA,EAAA/sD,KAAA0Z,MAEA,IAAAqB,EAAAH,MAKAlB,KAAAuY,YAMAvY,KAAAuzB,QAQAvzB,KAAAszC,YAAA,KAQAtzC,KAAA5T,IAAA,GAMA4T,KAAAuzC,iBAAAhoD,IAAA8V,EAAA0zB,WACA,IAAA1zB,EAAA0zB,WAOA/0B,KAAAwzC,sBAIA9vC,EAAA,EAAApiB,SAAA8xD,EAAAC,EAAA,GAMAD,EAAA3xD,UAAAg0B,QAAA,WACAzV,KAAAqL,cAAAkkC,EAAA,EAAAt4C,SAOAm8C,EAAA3xD,UAAA62B,OAAA,WACA,OAAAtY,KAAA5T,IAAA,IAAA4T,KAAAuY,WASA66B,EAAA3xD,UAAAgyD,eAAA,WACA,IAAAzzC,KAAAszC,YAEA,OAAAtzC,KAEA,IAAAo1B,EAAAp1B,KAAAszC,YAMA,GACA,GAAAle,EAAA/f,YAAAq+B,EAAA,EAAAj7C,OACA,OAAA28B,EAEAA,IAAAke,kBACGle,GAGH,OAAAp1B,MAOAozC,EAAA3xD,UAAAkyD,oBAAA,WACA,GAAA3zC,KAAAszC,YAAA,CAIA,IAAAle,EAAAp1B,KAAAszC,YACAziC,EAAA7Q,KAEA,GACA,GAAAo1B,EAAA/f,YAAAq+B,EAAA,EAAAj7C,OAAA,CAIA28B,EAAAke,YAAA,KACA,MACKle,EAAA/f,YAAAq+B,EAAA,EAAAl7C,QAGLqY,EAAAukB,EACKA,EAAA/f,YAAAq+B,EAAA,EAAAn7C,KAGLsY,EAAAyiC,YAAAle,EAAAke,YAEAziC,EAAAukB,EAEAA,EAAAvkB,EAAAyiC,kBACGle,KAQHge,EAAA3xD,UAAAmyD,aAAA,WACA,OAAA5zC,KAAAuY,WAOA66B,EAAA3xD,UAAA4zB,SAAA,WACA,OAAArV,KAAAuzB,OAMA6f,EAAA3xD,UAAA2yC,SAAA,SAAAb,GACAvzB,KAAAuzB,QACAvzB,KAAAyV,WAUA29B,EAAA3xD,UAAAumC,KAAA,aAQAorB,EAAA3xD,UAAAoyD,SAAA,SAAAtX,EAAAuX,GACA,IAAA9zC,KAAAuzC,YACA,SAGA,IAAA5pD,EAAAqW,KAAAwzC,kBAAAjX,GACA,GAAA5yC,GAGG,QAAAA,EACH,cAHAA,EAAAmqD,EACA9zC,KAAAwzC,kBAAAjX,GAAA5yC,EAKA,IAAAizB,EAAAk3B,EAAAnqD,EAAA,OACA,OAAAizB,GAAA5c,KAAAuzC,YACA,EAEAlK,EAAA,EAAAz3B,OAAAgL,EAAA5c,KAAAuzC,cAUAH,EAAA3xD,UAAAsyD,aAAA,SAAAxX,GACA,QAAAv8B,KAAAuzC,cAGA,IAAAvzC,KAAAwzC,kBAAAjX,IAOA6W,EAAA3xD,UAAAuyD,cAAA,SAAAzX,GACAv8B,KAAAuzC,cACAvzC,KAAAwzC,kBAAAjX,IAAA,IAGA,IAAA0X,EAAA,iBCnNAC,EAAA,SAAA37B,EAAAgb,EAAAyd,EAAAmD,EAAAC,EAAAlzC,GAEA+yC,EAAA3tD,KAAA0Z,KAAAuY,EAAAgb,EAAAryB,GAMAlB,KAAAq0C,aAAAF,EAQAn0C,KAAAs0C,KAAAtD,EAMAhxC,KAAAg+B,OAAA,IAAA+S,MACA,OAAAoD,IACAn0C,KAAAg+B,OAAAmW,eAOAn0C,KAAAu0C,mBAAA,KAMAv0C,KAAAw0C,kBAAAJ,GAIA1wC,EAAA,EAAApiB,SAAA4yD,EAAAD,GAMAC,EAAAzyD,UAAAgxB,gBAAA,WACAzS,KAAAuzB,OAAAmgB,EAAA,EAAAl7C,UACAwH,KAAAy0C,iBACAz0C,KAAAg+B,OAAAkW,EAAAQ,iBAEA10C,KAAAszC,aACAtzC,KAAAszC,YAAAtvB,UAEAhkB,KAAAuzB,MAAAmgB,EAAA,EAAA/6C,MACAqH,KAAAyV,UACAw+B,EAAAxyD,UAAAgxB,gBAAAnsB,KAAA0Z,OASAk0C,EAAAzyD,UAAAy3C,SAAA,WACA,OAAAl5B,KAAAg+B,QAOAkW,EAAAzyD,UAAA62B,OAAA,WACA,OAAAtY,KAAAs0C,MASAJ,EAAAzyD,UAAAkzD,kBAAA,WACA30C,KAAAuzB,MAAAmgB,EAAA,EAAAl8C,MACAwI,KAAAy0C,iBACAz0C,KAAAg+B,OAAAkW,EAAAQ,gBACA10C,KAAAyV,WASAy+B,EAAAzyD,UAAAmzD,iBAAA,WACA50C,KAAAg+B,OAAA6W,cAAA70C,KAAAg+B,OAAA8W,cACA90C,KAAAuzB,MAAAmgB,EAAA,EAAAj7C,OAEAuH,KAAAuzB,MAAAmgB,EAAA,EAAAh7C,MAEAsH,KAAAy0C,iBACAz0C,KAAAyV,WAQAy+B,EAAAzyD,UAAAumC,KAAA,WACAhoB,KAAAuzB,OAAAmgB,EAAA,EAAAl8C,QACAwI,KAAAuzB,MAAAmgB,EAAA,EAAAn7C,KACAyH,KAAAg+B,OAAA,IAAA+S,MACA,OAAA/wC,KAAAq0C,eACAr0C,KAAAg+B,OAAAmW,YAAAn0C,KAAAq0C,eAGAr0C,KAAAuzB,OAAAmgB,EAAA,EAAAn7C,OACAyH,KAAAuzB,MAAAmgB,EAAA,EAAAl7C,QACAwH,KAAAyV,UACAzV,KAAAu0C,oBACAvG,EAAA,EAAA9hD,WAAA8T,KAAAg+B,OAAAuR,EAAA,EAAA/3C,MACAwI,KAAA20C,kBAAA30C,MACAguC,EAAA,EAAA9hD,WAAA8T,KAAAg+B,OAAAuR,EAAA,EAAA53C,KACAqI,KAAA40C,iBAAA50C,OAEAA,KAAAw0C,kBAAAx0C,UAAAs0C,QAUAJ,EAAAzyD,UAAAgzD,eAAA,WACAz0C,KAAAu0C,mBAAAxsC,QAAAimC,EAAA,EAAAljD,eACAkV,KAAAu0C,mBAAA,MAQAL,EAAAQ,cAAA,WACA,IAAAK,EAAA9Y,EAAA,EAAAlnC,sBAAA,KAGA,OAFAggD,EAAAhY,UAAA,gBACAgY,EAAAC,SAAA,SACAD,EAAAtjD,QAEA,IAAAwjD,EAAA,gCCxKAC,GAeAC,0BAAA,SAAApsC,EAAAqsC,EACA7L,EAAAE,GAEA,IAAAH,EAAA+L,EAAA,EAAAzoD,UAAA28C,EAAA6L,EAAArsC,GAGAygC,EACA6L,EAAA,EAAA/xC,mBAAA8xC,EAAA3L,EAAAF,GAEA+L,EAAAF,EAAA/wC,wBACA9Y,IAAA+pD,IACA9L,GAAA8L,GAEA,IAAAC,EAAAxsC,EAAA1E,wBACA9Y,IAAAgqD,IACA/L,GAAA+L,GAOA,IAAAC,EAAAzsC,EAAA5E,YACA,IAAAqxC,GAAAvrC,EAAA,EAAA/lB,mBAAAsxD,EAAAlM,GAAA,CACA,IAAAmM,EACAJ,EAAA,EAAA/xC,mBAAAyF,EAAAygC,EAAAF,GACAE,EACAkM,SAAAD,MAAA,IACAjM,GAAAiM,GAIA,OAAAjM,GAeAmM,kBAAA,SAAAC,EAAAC,EAAA/xD,EAAAC,GACA,IAAA+xD,EAAAhyD,EAAA8xD,EAAAG,EAAAhyD,EAAA8xD,EACAx1C,EAAApd,KAAAgf,KAAA6zC,IAAAC,KACA,OAAA9yD,KAAAyuC,MAAA5tC,EAAAgyD,EAAAz1C,GAAApd,KAAAyuC,MAAA3tC,EAAAgyD,EAAA11C,KAsBA6V,OAAA,SAAAhiB,EAAAiB,EAAA2gC,EACA0T,EAAAgM,EAAA/L,EAAAuM,EACAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAzkD,EAAAsqC,EAAA,EAAAlnC,sBAAA9R,KAAAyuC,MAAAoE,EAAA5hC,GACAjR,KAAAyuC,MAAAoE,EAAA3gC,IAEA,OAAA+gD,EAAAxzD,OACA,OAAAiP,EAAAF,OAGAE,EAAArD,MAAAwnC,KAEA,IAAAugB,EAAApsC,EAAA,EAAA1nB,cACA2zD,EAAAnuC,QAAA,SAAAipC,EAAAxuD,EAAA6Z,GACA4N,EAAA,EAAAjkB,OAAAqwD,EAAArF,EAAA1uD,UAGA,IAAAg0D,EAAArsC,EAAA,EAAAnjB,SAAAuvD,GACAE,EAAAtsC,EAAA,EAAAljB,UAAAsvD,GACAG,EAAAva,EAAA,EAAAlnC,sBACA9R,KAAAyuC,MAAAoE,EAAAwgB,EAAA9M,GACAvmD,KAAAyuC,MAAAoE,EAAAygB,EAAA/M,IAEAiN,EAAA3gB,EAAA0T,EAEA0M,EAAAnuC,QAAA,SAAAipC,EAAAxuD,EAAA6Z,GACA,IAAAq6C,EAAA1F,EAAA1uD,OAAA,GAAA+zD,EAAA,GACAM,IAAA3F,EAAA1uD,OAAA,GAAA+zD,EAAA,IACAO,EAAA3sC,EAAA,EAAAnjB,SAAAkqD,EAAA1uD,QACAu0D,EAAA5sC,EAAA,EAAAljB,UAAAiqD,EAAA1uD,QAEAk0D,EAAAjgD,UACAy6C,EAAAv6C,MACA0/C,IACAnF,EAAAv6C,MAAAvC,MAAA,EAAAiiD,EAAAnF,EAAAv6C,MAAAtB,OAAA,EAAAghD,EACAO,EAAAD,EAAAE,EAAAF,EACAG,EAAAH,EAAAI,EAAAJ,KAGA,IAAAK,EAAA7sC,EAAA,EAAAvjB,WAAAsvD,GA0GA,OAxGAC,EAAAc,eAAAhvC,QAAA,SAAAivC,EAAAx0D,EAAA6Z,GAqBA,IAAAnB,EAAA87C,EAAA97C,OAAAtQ,EAAAosD,EAAApsD,OACApC,EAAA0S,EAAA,MAAAtS,EAAAsS,EAAA,MACAzS,EAAAyS,EAAA,MAAArS,EAAAqS,EAAA,MACAxS,EAAAwS,EAAA,MAAApS,EAAAoS,EAAA,MACA+7C,GAAArsD,EAAA,MAAAksD,EAAA,IAAArN,EACAyN,IAAAtsD,EAAA,MAAAksD,EAAA,IAAArN,EACA0N,GAAAvsD,EAAA,MAAAksD,EAAA,IAAArN,EACArtB,IAAAxxB,EAAA,MAAAksD,EAAA,IAAArN,EACA2N,GAAAxsD,EAAA,MAAAksD,EAAA,IAAArN,EACAptB,IAAAzxB,EAAA,MAAAksD,EAAA,IAAArN,EAKA4N,EAAA7uD,EAAA8uD,EAAA1uD,EACAJ,EAAA,EACAI,EAAA,EAMA,IAAA2uD,IALA9uD,GAAA4uD,EACAxuD,GAAAyuD,EAKA,IAAAH,EAAAF,IAJAvuD,GAAA2uD,EACAvuD,GAAAwuD,EAIA,IAAAF,EAAAH,IACA,IAAAxuD,EAAAI,EAAAuzB,EAAA86B,IACA,IAAAxuD,EAAAI,EAAAuzB,EAAA66B,IAEAM,EAAAh3C,EAAA,EAAAhH,kBAAA+9C,GACA,GAAAC,EAAA,CAIA7lD,EAAA8lD,OACA9lD,EAAAirC,YACA,IAAAgZ,GAAAqB,EAAAE,EAAAC,GAAA,EAAAvB,GAAAqB,EAAA96B,EAAAC,GAAA,EACAq7B,EAAAxC,EAAAS,kBAAAC,EAAAC,EAAAoB,EAAAC,GACAS,EAAAzC,EAAAS,kBAAAC,EAAAC,EAAAsB,EAAA/6B,GACAw7B,EAAA1C,EAAAS,kBAAAC,EAAAC,EAAAuB,EAAA/6B,GAEA1qB,EAAAkmD,OAAAF,EAAA,GAAAA,EAAA,IACAhmD,EAAAmrC,OAAA4a,EAAA,GAAAA,EAAA,IACA/lD,EAAAmrC,OAAA8a,EAAA,GAAAA,EAAA,IACAjmD,EAAAmmD,OAEAnmD,EAAA/E,UACA4qD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAP,EAAAC,GAEAvlD,EAAApD,UAAA8nD,EAAA,GAAAgB,EACAhB,EAAA,GAAAiB,GAEA3lD,EAAArD,MAAAk7C,EAAA1T,GACA0T,EAAA1T,GAEAnkC,EAAA4E,UAAAigD,EAAA/kD,OAAA,KACAE,EAAAomD,aAGA3B,IACAzkD,EAAA8lD,OAEA9lD,EAAAiqC,YAAA,QACAjqC,EAAAqrC,UAAA,EAEAiZ,EAAAc,eAAAhvC,QAAA,SAAAivC,EAAAx0D,EAAA6Z,GACA,IAAAzR,EAAAosD,EAAApsD,OACAqsD,GAAArsD,EAAA,MAAAksD,EAAA,IAAArN,EACAyN,IAAAtsD,EAAA,MAAAksD,EAAA,IAAArN,EACA0N,GAAAvsD,EAAA,MAAAksD,EAAA,IAAArN,EACArtB,IAAAxxB,EAAA,MAAAksD,EAAA,IAAArN,EACA2N,GAAAxsD,EAAA,MAAAksD,EAAA,IAAArN,EACAptB,IAAAzxB,EAAA,MAAAksD,EAAA,IAAArN,EAEA93C,EAAAirC,YACAjrC,EAAAkmD,OAAAV,EAAA/6B,GACAzqB,EAAAmrC,OAAAma,EAAAC,GACAvlD,EAAAmrC,OAAAsa,EAAA/6B,GACA1qB,EAAAsrC,YACAtrC,EAAAkpC,WAGAlpC,EAAAomD,WAEApmD,EAAAF,SAEAumD,EAAA,EC9NAC,EAAA,SAAAlvC,EAAAqsC,EAAAY,EACAkC,EAAAC,GAMAn4C,KAAAo4C,YAAArvC,EAMA/I,KAAAq4C,YAAAjD,EAGA,IAAAkD,KACAC,EAAAlD,EAAA,EAAA5rC,aAAAzJ,KAAAq4C,YAAAr4C,KAAAo4C,aAOAp4C,KAAAw4C,cAAA,SAAAzqD,GACA,IAAA3B,EAAA2B,EAAA,OAAAA,EAAA,GAIA,OAHAuqD,EAAAlsD,KACAksD,EAAAlsD,GAAAmsD,EAAAxqD,IAEAuqD,EAAAlsD,IAOA4T,KAAAy4C,iBAAAP,EAMAl4C,KAAA04C,uBAAAP,IAMAn4C,KAAA24C,cAOA34C,KAAA44C,iBAAA,EAMA54C,KAAA64C,kBAAA74C,KAAAo4C,YAAAn0C,cACAi0C,KACAl4C,KAAAo4C,YAAAj0C,aACA8F,EAAA,EAAAnjB,SAAAoxD,IACAjuC,EAAA,EAAAnjB,SAAAkZ,KAAAo4C,YAAAj0C,aAMAnE,KAAA84C,kBAAA94C,KAAAo4C,YAAAj0C,YACA8F,EAAA,EAAAnjB,SAAAkZ,KAAAo4C,YAAAj0C,aAAA,KAMAnE,KAAA+4C,kBAAA/4C,KAAAq4C,YAAAl0C,YACA8F,EAAA,EAAAnjB,SAAAkZ,KAAAq4C,YAAAl0C,aAAA,KAEA,IAAA60C,EAAA/uC,EAAA,EAAAvjB,WAAAsvD,GACAiD,EAAAhvC,EAAA,EAAAxjB,YAAAuvD,GACAkD,EAAAjvC,EAAA,EAAAzjB,eAAAwvD,GACAmD,EAAAlvC,EAAA,EAAA1jB,cAAAyvD,GACAoD,EAAAp5C,KAAAw4C,cAAAQ,GACAK,EAAAr5C,KAAAw4C,cAAAS,GACAK,EAAAt5C,KAAAw4C,cAAAU,GACAK,EAAAv5C,KAAAw4C,cAAAW,GAQA,GANAn5C,KAAAw5C,SACAR,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EACA71C,EAAA,EAAA3iB,qCAEAif,KAAA44C,gBAAA,CACA,IAAAa,EAAAx0D,IACA+a,KAAA24C,WAAA5wC,QAAA,SAAAivC,EAAAx0D,EAAA6Z,GACAo9C,EAAAx2D,KAAAC,IAAAu2D,EACAzC,EAAA97C,OAAA,MAAA87C,EAAA97C,OAAA,MAAA87C,EAAA97C,OAAA,SAKA8E,KAAA24C,WAAA5wC,QAAA,SAAAivC,GACA,GAAA/zD,KAAAK,IAAA0zD,EAAA97C,OAAA,MAAA87C,EAAA97C,OAAA,MACA87C,EAAA97C,OAAA,OAAAu+C,EAAAz5C,KAAA84C,kBAAA,GACA,IAAAY,IAAA1C,EAAA97C,OAAA,MAAA87C,EAAA97C,OAAA,QACA87C,EAAA97C,OAAA,MAAA87C,EAAA97C,OAAA,QACA87C,EAAA97C,OAAA,MAAA87C,EAAA97C,OAAA,QACAw+C,EAAA,MAAAD,EAAAz5C,KAAA84C,kBAAA,IACAY,EAAA,OAAA15C,KAAA84C,mBAEAY,EAAA,MAAAD,EAAAz5C,KAAA84C,kBAAA,IACAY,EAAA,OAAA15C,KAAA84C,mBAEAY,EAAA,MAAAD,EAAAz5C,KAAA84C,kBAAA,IACAY,EAAA,OAAA15C,KAAA84C,mBAMA,IAAA91D,EAAAC,KAAAC,IACAw2D,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAz2D,KAAAK,IACAo2D,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA12D,EAAAgd,KAAA84C,kBAAA,IACA9B,EAAA97C,OAAAw+C,KAGK15C,MAGLs4C,MAcAL,EAAAx2D,UAAAk4D,aAAA,SAAA9rD,EAAAC,EAAAC,EACA6rD,EAAAC,EAAAC,GACA95C,KAAA24C,WAAA1sD,MACAiP,QAAA0+C,EAAAC,EAAAC,GACAlvD,QAAAiD,EAAAC,EAAAC,MAqBAkqD,EAAAx2D,UAAA+3D,SAAA,SAAA3rD,EAAAC,EAAAC,EAAAC,EACA4rD,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAAhwC,EAAA,EAAA7nB,gBAAAw3D,EAAAC,EAAAC,EAAAC,IACAG,EAAAl6C,KAAA84C,kBACA7uC,EAAA,EAAAnjB,SAAAmzD,GAAAj6C,KAAA84C,kBAAA,KACAqB,EAA2Cn6C,KAAA,kBAI3Co6C,EAAAp6C,KAAAo4C,YAAAn0C,YACAi2C,EAAA,IAAAA,EAAA,EAEAG,GAAA,EAEA,GAAAL,EAAA,GACA,GAAAh6C,KAAAq4C,YAAA3zC,YAAA1E,KAAA+4C,kBAAA,CACA,IAAAuB,EAAArwC,EAAA,EAAA7nB,gBAAAyL,EAAAC,EAAAC,EAAAC,IAGAqsD,GADApwC,EAAA,EAAAnjB,SAAAwzD,GAAAt6C,KAAA+4C,kBAEAr1C,EAAA,EAAA1iB,wCAEAo5D,GAAAp6C,KAAAo4C,YAAA1zC,YAAAw1C,IACAG,GACAH,EAAAx2C,EAAA,EAAA1iB,wCAIA,GAAAq5D,IAAAr6C,KAAAy4C,kBACAxuC,EAAA,EAAA9gB,WAAA8wD,EAAAj6C,KAAAy4C,kBADA,CAOA,KAAA4B,GACA3E,SAAAkE,EAAA,KAAAlE,SAAAkE,EAAA,KACAlE,SAAAmE,EAAA,KAAAnE,SAAAmE,EAAA,KACAnE,SAAAoE,EAAA,KAAApE,SAAAoE,EAAA,KACApE,SAAAqE,EAAA,KAAArE,SAAAqE,EAAA,MACA,KAAAC,EAAA,GAGA,OAFAK,GAAA,EAOA,GAAAL,EAAA,GACA,IAAAK,EAAA,CACA,IAGAr2D,EAHA4D,IAAAiG,EAAA,GAAAE,EAAA,OAAAF,EAAA,GAAAE,EAAA,OACAwsD,EAAAv6C,KAAAw4C,cAAA5wD,GAGA,GAAAwyD,EAIAp2D,GAFAwc,EAAA,EAAA9F,OAAAk/C,EAAA,GAAAO,GACA35C,EAAA,EAAA9F,OAAAo/C,EAAA,GAAAK,IAAA,EAEA35C,EAAA,EAAA9F,OAAA6/C,EAAA,GAAAJ,QAEAn2D,GAAA41D,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEA,IAAAt2D,GAAA21D,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEAF,EADAr2D,IAAAC,IACA+b,KAAA04C,uBAEA,GAAA2B,EAAA,CACA,GAAAp3D,KAAA2W,IAAA/L,EAAA,GAAAE,EAAA,KAAA9K,KAAA2W,IAAA/L,EAAA,GAAAE,EAAA,KAEA,IAAAysD,IAAA1sD,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA0sD,EAAAz6C,KAAAw4C,cAAAgC,GACAE,IAAA1sD,EAAA,GAAAH,EAAA,OAAAG,EAAA,GAAAH,EAAA,OACA8sD,EAAA36C,KAAAw4C,cAAAkC,GAEA16C,KAAAw5C,SACA3rD,EAAAC,EAAA0sD,EAAAE,EAAAd,EAAAC,EAAAY,EAAAE,EAAAX,EAAA,GACAh6C,KAAAw5C,SACAkB,EAAAF,EAAAzsD,EAAAC,EAAA2sD,EAAAF,EAAAX,EAAAC,EAAAC,EAAA,OACO,CAEP,IAAAY,IAAA/sD,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA+sD,EAAA76C,KAAAw4C,cAAAoC,GACAE,IAAA/sD,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA+sD,EAAA/6C,KAAAw4C,cAAAsC,GAEA96C,KAAAw5C,SACA3rD,EAAA+sD,EAAAE,EAAA9sD,EAAA4rD,EAAAiB,EAAAE,EAAAhB,EAAAC,EAAA,GACAh6C,KAAAw5C,SACAoB,EAAA9sD,EAAAC,EAAA+sD,EAAAD,EAAAhB,EAAAC,EAAAiB,EAAAf,EAAA,GAEA,QAIA,GAAAI,EAAA,CACA,IAAAp6C,KAAA64C,kBACA,OAEA74C,KAAA44C,iBAAA,EAGA54C,KAAA25C,aAAA9rD,EAAAE,EAAAC,EAAA4rD,EAAAE,EAAAC,GACA/5C,KAAA25C,aAAA9rD,EAAAC,EAAAC,EAAA6rD,EAAAC,EAAAC,KASA7B,EAAAx2D,UAAAu5D,sBAAA,WACA,IAAA14D,EAAA2nB,EAAA,EAAA1nB,cASA,OAPAyd,KAAA24C,WAAA5wC,QAAA,SAAAivC,EAAAx0D,EAAA6Z,GACA,IAAA20C,EAAAgG,EAAA97C,OACA+O,EAAA,EAAAtnB,iBAAAL,EAAA0uD,EAAA,IACA/mC,EAAA,EAAAtnB,iBAAAL,EAAA0uD,EAAA,IACA/mC,EAAA,EAAAtnB,iBAAAL,EAAA0uD,EAAA,MAGA1uD,GAOA21D,EAAAx2D,UAAAs1D,aAAA,WACA,OAAA/2C,KAAA24C,YAEA,IAAAsC,EAAA,ECtSAC,EAAA,SAAAnyC,EAAAoyC,EACA/F,EAAAgG,EAAA7iC,EAAA8iC,EACAvlB,EAAAqgB,EAAAmF,EACAC,EAAAnF,GACAnC,EAAA3tD,KAAA0Z,KAAAuY,EAAAm7B,EAAA,EAAAn7C,MAMAyH,KAAAw7C,kBAAAjwD,IAAA6qD,KAMAp2C,KAAAy7C,YAAA3lB,EAMA91B,KAAA07C,QAAAvF,EAMAn2C,KAAAi6B,QAAA,KAMAj6B,KAAA27C,gBAAAR,EAMAn7C,KAAA47C,gBAAAR,EAMAp7C,KAAA67C,kBAAAR,GAAA9iC,EAMAvY,KAAA87C,gBAMA97C,KAAA+7C,qBAAA,KAMA/7C,KAAAg8C,SAAA,EAEA,IAAAhG,EAAAoF,EAAAj6B,mBAAAnhB,KAAA67C,mBACAI,EAAAj8C,KAAA47C,gBAAAz3C,YACA+zC,EAAAl4C,KAAA27C,gBAAAx3C,YAEA+3C,EAAAD,EACAhyC,EAAA,EAAA/gB,gBAAA8sD,EAAAiG,GAAAjG,EAEA,OAAA/rC,EAAA,EAAAtjB,QAAAu1D,GAAA,CAOA,IAAAC,EAAApzC,EAAA5E,YACAg4C,IAIAjE,EAHAA,EAGAjuC,EAAA,EAAA/gB,gBACAgvD,EAAAiE,GAHAA,GAOA,IAAA1S,EAAA2R,EAAA/5B,cACArhB,KAAA67C,kBAAA,IAEAtS,EAAAt/B,EAAA,EAAAjjB,UAAAk1D,GACA1S,EAAAwO,EAAA7C,0BACApsC,EAAAqsC,EAAA7L,EAAAE,GAEA,IAAAiM,SAAAlM,OAAA,EAGAxpC,KAAAuzB,MAAAmgB,EAAA,EAAAh7C,UAHA,CAOA,IAAA0jD,OAAA7wD,IAAAgwD,EACAA,EAAA73C,EAAA,EAAAzjB,4CAUA,GAJA+f,KAAAq8C,eAAA,IAAApB,EACAlyC,EAAAqsC,EAAA8G,EAAAhE,EACA1O,EAAA4S,GAEA,IAAAp8C,KAAAq8C,eAAAtF,eAAAr0D,OAAA,CAMAsd,KAAAg8C,SAAAb,EAAAn5B,kBAAAwnB,GACA,IAAAgM,EAAAx1C,KAAAq8C,eAAArB,wBAaA,GAXA9C,IACAnvC,EAAA9E,YACAuxC,EAAA,GAAAh1C,EAAA,EAAA3H,MACA28C,EAAA,GAAA0C,EAAA,GAAAA,EAAA,IACA1C,EAAA,GAAAh1C,EAAA,EAAA3H,MACA28C,EAAA,GAAA0C,EAAA,GAAAA,EAAA,KAEA1C,EAAAvrC,EAAA,EAAA/gB,gBAAAssD,EAAA0C,IAIAjuC,EAAA,EAAAtjB,QAAA6uD,GAEG,CAIH,IAHA,IAAA8G,EAAAnB,EAAA9hC,0BACAm8B,EAAAx1C,KAAAg8C,UAEAO,EAAAD,EAAAt5D,KAAqCu5D,GAAAD,EAAAj5D,KAA0Bk5D,IAC/D,QAAAC,EAAAF,EAAAl5D,KAAuCo5D,GAAAF,EAAA/4D,KAA0Bi5D,IAAA,CACjE,IAAApnB,EAAAkmB,EAAAt7C,KAAAg8C,SAAAO,EAAAC,EAAA1mB,GACAV,GACAp1B,KAAA87C,aAAA7vD,KAAAmpC,GAKA,IAAAp1B,KAAA87C,aAAAp5D,SACAsd,KAAAuzB,MAAAmgB,EAAA,EAAAh7C,YAfAsH,KAAAuzB,MAAAmgB,EAAA,EAAAh7C,WAnBAsH,KAAAuzB,MAAAmgB,EAAA,EAAAh7C,YAzCAsH,KAAAuzB,MAAAmgB,EAAA,EAAAh7C,OAgFAgL,EAAA,EAAApiB,SAAA45D,EAAAjH,GAMAiH,EAAAz5D,UAAAgxB,gBAAA,WACAzS,KAAAuzB,OAAAmgB,EAAA,EAAAl7C,SACAwH,KAAAy8C,mBAEAxI,EAAAxyD,UAAAgxB,gBAAAnsB,KAAA0Z,OAQAk7C,EAAAz5D,UAAAy3C,SAAA,WACA,OAAAl5B,KAAAi6B,SAOAihB,EAAAz5D,UAAAi7D,WAAA,WACA,IAAAxG,KAWA,GAVAl2C,KAAA87C,aAAA/zC,QAAA,SAAAqtB,EAAA5yC,EAAA6Z,GACA+4B,KAAA/f,YAAAq+B,EAAA,EAAAj7C,QACAy9C,EAAAjqD,MACA3J,OAAA0d,KAAA27C,gBAAAx6B,mBAAAiU,EAAA7c,WACA9hB,MAAA2+B,EAAA8D,cAGGl5B,MACHA,KAAA87C,aAAAp5D,OAAA,EAEA,IAAAwzD,EAAAxzD,OACAsd,KAAAuzB,MAAAmgB,EAAA,EAAAl8C,UACG,CACH,IAAA2gB,EAAAnY,KAAA67C,kBAAA,GACA9zD,EAAAiY,KAAA47C,gBAAAl6B,YAAAvJ,GACAjkB,EAAA,iBAAAnM,MAAA,GACAoN,EAAA,iBAAApN,MAAA,GACA0hD,EAAAzpC,KAAA47C,gBAAAv6B,cAAAlJ,GACAqxB,EAAAxpC,KAAA27C,gBAAAt6B,cAAArhB,KAAAg8C,UAEAhG,EAAAh2C,KAAA47C,gBAAAz6B,mBACAnhB,KAAA67C,mBACA77C,KAAAi6B,QAAA+d,EAAA9hC,OAAAhiB,EAAAiB,EAAA6K,KAAAy7C,YACAjS,EAAAxpC,KAAA27C,gBAAAx3C,YACAslC,EAAAuM,EAAAh2C,KAAAq8C,eAAAnG,EACAl2C,KAAA07C,QAAA17C,KAAAw7C,cAEAx7C,KAAAuzB,MAAAmgB,EAAA,EAAAj7C,OAEAuH,KAAAyV,WAOAylC,EAAAz5D,UAAAumC,KAAA,WACA,GAAAhoB,KAAAuzB,OAAAmgB,EAAA,EAAAn7C,KAAA,CACAyH,KAAAuzB,MAAAmgB,EAAA,EAAAl7C,QACAwH,KAAAyV,UAEA,IAAAknC,EAAA,EAEA38C,KAAA+7C,wBACA/7C,KAAA87C,aAAA/zC,QAAA,SAAAqtB,EAAA5yC,EAAA6Z,GACA,IAIAugD,EAJArpB,EAAA6B,EAAA/f,WACAke,GAAAmgB,EAAA,EAAAn7C,MAAAg7B,GAAAmgB,EAAA,EAAAl7C,UACAmkD,IAGAC,EAAA5O,EAAA,EAAAliD,OAAAspC,EAAAma,EAAA,EAAAt4C,OACA,SAAAhJ,GACA,IAAAslC,EAAA6B,EAAA/f,WACAke,GAAAmgB,EAAA,EAAAj7C,QACA86B,GAAAmgB,EAAA,EAAAl8C,OACA+7B,GAAAmgB,EAAA,EAAAh7C,QACAs1C,EAAA,EAAAljD,cAAA8xD,GAEA,MADAD,IAEA38C,KAAAy8C,mBACAz8C,KAAA08C,gBAGa18C,MACbA,KAAA+7C,qBAAA9vD,KAAA2wD,KAEK58C,MAELA,KAAA87C,aAAA/zC,QAAA,SAAAqtB,EAAA5yC,EAAA6Z,GACA+4B,EAAA/f,YACAq+B,EAAA,EAAAn7C,MACA68B,EAAApN,SAIA,IAAA20B,GACA1P,WAAAjtC,KAAA08C,WAAAxsC,KAAAlQ,MAAA,KASAk7C,EAAAz5D,UAAAg7D,iBAAA,WACAz8C,KAAA+7C,qBAAAh0C,QAAAimC,EAAA,EAAAljD,eACAkV,KAAA+7C,qBAAA,MAEA,IAAAc,EAAA,kBC5SAC,GAQAC,mBAAA,SAAA9+B,EAAAnZ,GACA,IAAAk4C,EAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,UACA,gBAOA5kC,EAAAud,EAAAx0B,GACA,OAAAiX,EAGA0F,EAAAC,QAAA8+B,EAAAzkC,EAAA,GAAA7B,YACAwH,QAAA++B,EAAA1kC,EAAA,GAAA7B,YACAwH,QAAAg/B,EAAA,WAEA,QADA3kC,EAAA,MACA7B,aAEAwH,QAAAi/B,EAAA,WACA,IAAAhlC,EAAAI,EAAA,GACA6kC,EAAAt4C,EAAAwU,iBAAAnB,GAGA,OAFA0H,EAAA,EAAAp4B,OAAA21D,EAAA,KACAA,EAAAr2D,YAAAwxB,EAAA,IACA7B,kBAbA,IA0BA2mC,oBAAA,SAAAC,EAAAx4C,GAGA,IAFA,IAAA5C,EAAAo7C,EAAA56D,OACA66D,EAAA,IAAA7wD,MAAAwV,GACA1f,EAAA,EAAiBA,EAAA0f,IAAS1f,EAC1B+6D,EAAA/6D,GAAAs6D,EAAAC,mBACAO,EAAA96D,GAAAsiB,GAEA,OAAAg4C,EAAAU,2BAAAD,IAQAC,2BAAA,SAAAD,GACA,WAAAA,EAAA76D,OACA66D,EAAA,GAEA,SAOAhlC,EAAAud,EAAAx0B,GACA,GAAAiX,EAEO,CACP,IAAA1hB,EAAA0rB,EAAA,EAAA9J,KAAAF,GACAlb,EAAAmD,EAAA,EAAA9F,OAAA7D,EAAA0mD,EAAA76D,QACA,OAAA66D,EAAAlgD,GAAAkb,EAAAud,EAAAx0B,MAaAm8C,oBAAA,SAAAllC,EAAAud,EAAAx0B,KASAo8C,UAAA,SAAAC,GACA,IAAAC,KACAC,EAAA,sBAAkC3mC,KAAAymC,GAClC,GAAAE,EAAA,CAEA,IAEAllC,EAFAmlC,EAAAD,EAAA,GAAAE,WAAA,GACAC,EAAAH,EAAA,GAAAE,WAAA,GAEA,IAAAplC,EAAAmlC,EAAkCnlC,GAAAqlC,IAA0BrlC,EAC5DilC,EAAA3xD,KAAA0xD,EAAAz/B,QAAA2/B,EAAA,GAAA/kC,OAAAC,aAAAJ,KAEA,OAAAilC,EAGA,GADAC,IAAA,kBAAkC3mC,KAAAymC,GAClC,CAGA,IADA,IAAAM,EAAAn/C,SAAA++C,EAAA,OACAr7D,EAAAsc,SAAA++C,EAAA,OAAwCr7D,GAAAy7D,EAAWz7D,IACnDo7D,EAAA3xD,KAAA0xD,EAAAz/B,QAAA2/B,EAAA,GAAAr7D,EAAAk0B,aAEA,OAAAknC,EAGA,OADAA,EAAA3xD,KAAA0xD,GACAC,IAEAM,EAAA,UCrGAC,GAnBAC,cAAA,gBAQAC,YAAA,cAOAC,cAAA,iBCRAC,EAAA,SAAAl9C,GAEAm9C,EAAA,EAAAl4D,KAAA0Z,MACAmzB,aAAA9xB,EAAA8xB,aACAtc,UAAAxV,EAAAwV,UACAv0B,OAAA+e,EAAA/e,OACA+wC,KAAAhyB,EAAAgyB,KACAmB,OAAAnzB,EAAAmzB,OACAlzB,WAAAD,EAAAC,WACAiyB,MAAAlyB,EAAAkyB,MACAzuB,SAAAzD,EAAAyD,SACA4vB,eAAArzB,EAAAqzB,eACA1R,MAAA3hB,EAAA2hB,MACA+R,WAAA1zB,EAAA0zB,aAOA/0B,KAAAo0C,iBAAA/yC,EAAA+yC,iBAMAp0C,KAAAy+C,gBAAAz+C,KAAA0+C,qBACA1+C,KAAA0+C,qBAAAxuC,KAAAlQ,MACAk+C,EAAAT,oBAMAz9C,KAAA49C,KAAA,KAEAv8C,EAAAu8C,KACA59C,KAAA2+C,QAAAt9C,EAAAu8C,MACGv8C,EAAAs8C,KACH39C,KAAA4+C,OAAAv9C,EAAAs8C,KAEAt8C,EAAAo9C,iBACAz+C,KAAA6+C,mBAAAx9C,EAAAo9C,iBAOAz+C,KAAA8+C,qBAIAp7C,EAAA,EAAApiB,SAAAi9D,EAAAC,EAAA,GAOAD,EAAA98D,UAAAi9D,qBAOAH,EAAA98D,UAAAs9D,oBAAA,WACA,OAAA/+C,KAAAo0C,kBASAmK,EAAA98D,UAAAu9D,mBAAA,WACA,OAAAh/C,KAAAy+C,iBAWAF,EAAA98D,UAAAw9D,QAAA,WACA,OAAAj/C,KAAA49C,MASAW,EAAA98D,UAAAy9D,iBAAA,SAAA5sC,GACA,IAGAlnB,EAHAgqC,EAAgC9iB,EAAA,OAChC6V,EAAAzkB,EAAA,EAAA5hB,OAAAszC,GACA+pB,EAAA/pB,EAAA/f,WAEA8pC,GAAAzL,EAAA,EAAAl7C,SACAwH,KAAA8+C,iBAAA32B,IAAA,EACA/8B,EAAA+yD,EAAAC,eACGj2B,KAAAnoB,KAAA8+C,0BACH9+C,KAAA8+C,iBAAA32B,GACA/8B,EAAA+zD,GAAAzL,EAAA,EAAAl8C,MAAA2mD,EAAAG,cACAa,GAAAzL,EAAA,EAAAj7C,QAAA0mD,GAAAzL,EAAA,EAAA/6C,MACAwlD,EAAAE,iBAAA9yD,QAEAA,GAAAH,GACA4U,KAAAqL,cAAA,IAAAmzC,EAAA,EAAAlzC,MAAAlgB,EAAAgqC,KAUAmpB,EAAA98D,UAAA29D,oBAAA,SAAAhL,GACAp0C,KAAA20B,UAAA/oC,QACAoU,KAAAo0C,mBACAp0C,KAAAyV,WAUA8oC,EAAA98D,UAAAo9D,mBAAA,SAAAJ,EAAAY,GACAr/C,KAAAy+C,kBACAz+C,KAAA20B,UAAA2qB,0BACA,IAAAD,EACAr/C,KAAA21B,OAAA0pB,GAEAr/C,KAAAyV,WAUA8oC,EAAA98D,UAAAm9D,OAAA,SAAAjB,GACA,IAAAC,EAAA59C,KAAA49C,KAAAM,EAAAR,UAAAC,GACA39C,KAAA6+C,mBAAA7+C,KAAA0+C,qBACA1+C,KAAA0+C,qBAAAxuC,KAAAlQ,MACAk+C,EAAAb,oBAAAO,EAAA59C,KAAA8E,UAAA64C,IASAY,EAAA98D,UAAAk9D,QAAA,SAAAf,GACA59C,KAAA49C,OACA,IAAAxxD,EAAAwxD,EAAA5kC,KAAA,MACAhZ,KAAA6+C,mBAAA7+C,KAAA0+C,qBACA1+C,KAAA0+C,qBAAAxuC,KAAAlQ,MACAk+C,EAAAb,oBAAAO,EAAA59C,KAAA8E,UAAA1Y,IAOAmyD,EAAA98D,UAAA+0C,QAAA,SAAAre,EAAAr0B,EAAAC,GACA,IAAAsxC,EAAA9S,EAAA,EAAAlK,UAAAF,EAAAr0B,EAAAC,GACAic,KAAA20B,UAAA5N,YAAAsO,IACAr1B,KAAA20B,UAAApyB,IAAA8yB,IAGA,IAAAkqB,EAAA,UCnLAC,EAAA,SAAAn+C,GAEAk+C,EAAAj5D,KAAA0Z,MACAmzB,aAAA9xB,EAAA8xB,aACAtc,UAAAxV,EAAAwV,UACAv0B,OAAA+e,EAAA/e,OACA+wC,KAAAhyB,EAAAgyB,KACAmB,OAAAnzB,EAAAmzB,OACAlzB,WAAAD,EAAAC,WACAiyB,MAAAlyB,EAAAkyB,MACAzuB,SAAAzD,EAAAyD,SACAsvC,iBAAA/yC,EAAA+yC,iBACA/yC,EAAA+yC,iBAAAoL,EAAAC,wBACA/qB,eAAArzB,EAAAqzB,eACA+pB,gBAAAp9C,EAAAo9C,gBACAd,IAAAt8C,EAAAs8C,IACAC,KAAAv8C,EAAAu8C,KACA56B,MAAA3hB,EAAA2hB,MACA+R,WAAA1zB,EAAA0zB,aAOA/0B,KAAAm0C,iBACA5oD,IAAA8V,EAAA8yC,YAAA9yC,EAAA8yC,YAAA,KAOAn0C,KAAA0/C,eAAAn0D,IAAA8V,EAAAq+C,UACAr+C,EAAAq+C,UAAAzK,EAMAj1C,KAAA2/C,0BAMA3/C,KAAA4/C,yBAMA5/C,KAAA6/C,4BAAAx+C,EAAAy+C,2BAMA9/C,KAAA+/C,0BAAA,GAGAr8C,EAAA,EAAApiB,SAAAk+D,EAAAD,GAMAC,EAAA/9D,UAAAmlC,eAAA,WACA,IAAAljB,EAAA,EAAApjB,2BACA,OAAAi/D,EAAA99D,UAAAmlC,eAAAtgC,KAAA0Z,MAEA,GAAAA,KAAA20B,UAAA/N,iBACA,SAEA,QAAAx6B,KAAA4T,KAAA2/C,uBACA,GAAA3/C,KAAA2/C,uBAAAvzD,GAAAw6B,iBACA,SAIA,UAOA44B,EAAA/9D,UAAAuzC,YAAA,SAAA1zB,EAAA2zB,GACA,GAAAvxB,EAAA,EAAApjB,2BAAA,CAIA,IAAA0/D,EAAAhgD,KAAAk1B,0BAAA5zB,GAGA,QAAAi7B,KADAv8B,KAAA20B,UAAAK,YAAAh1B,KAAA20B,WAAAqrB,EAAA/qB,MACAj1B,KAAA2/C,uBAAA,CACA,IAAAhrB,EAAA30B,KAAA2/C,uBAAApjB,GACA5H,EAAAK,YAAAL,GAAAqrB,EAAA/qB,YARAsqB,EAAA99D,UAAAuzC,YAAA1uC,KAAA0Z,KAAAsB,EAAA2zB,IAgBAuqB,EAAA/9D,UAAAi0C,UAAA,SAAAp0B,GACA,OAAAoC,EAAA,EAAApjB,4BACA0f,KAAA+zB,iBAAAzyB,IACA+zC,EAAA,EAAA9rC,WAAAvJ,KAAA+zB,gBAAAzyB,GACA,EAEAtB,KAAAigD,qBASAT,EAAA/9D,UAAAw+D,kBAAA,WACA,UAOAT,EAAA/9D,UAAAm0C,UAAA,SAAAt0B,GACA,QAAAoC,EAAA,EAAApjB,4BACA0f,KAAA+zB,iBAAAzyB,IACA+zC,EAAA,EAAA9rC,WAAAvJ,KAAA+zB,gBAAAzyB,KAGAi+C,EAAA99D,UAAAm0C,UAAAtvC,KAAA0Z,KAAAsB,IAQAk+C,EAAA/9D,UAAAu0C,yBAAA,SAAA10B,GACA,IAAAoC,EAAA,EAAApjB,2BACA,OAAAi/D,EAAA99D,UAAAu0C,yBAAA1vC,KAAA0Z,KAAAsB,GAEA,IAAA40B,EAAAl2B,KAAA+zB,gBACA,IAAA/zB,KAAA8E,UACAoxB,IAAAmf,EAAA,EAAA9rC,WAAA2sB,EAAA50B,GAEG,CACH,IAAA4+C,EAAAx8C,EAAA,EAAA5hB,OAAAwf,GAAAoV,WAKA,OAJAwpC,KAAAlgD,KAAA4/C,wBACA5/C,KAAA4/C,sBAAAM,GACAC,EAAA,EAAAr9B,iBAAAxhB,IAE4CtB,KAAA4/C,sBAAAM,GAP5C,OAAAlgD,KAAA8E,UAeA06C,EAAA/9D,UAAAyzC,0BAAA,SAAA5zB,GACA,IAAAoC,EAAA,EAAApjB,2BACA,OAAAi/D,EAAA99D,UAAAyzC,0BAAA5uC,KAAA0Z,KAAAsB,GAEA,IAAA40B,EAAAl2B,KAAA+zB,gBACA,IAAAmC,GAAAmf,EAAA,EAAA9rC,WAAA2sB,EAAA50B,GACA,OAAAtB,KAAA20B,UAEA,IAAAurB,EAAAx8C,EAAA,EAAA5hB,OAAAwf,GAAAoV,WAIA,OAHAwpC,KAAAlgD,KAAA2/C,yBACA3/C,KAAA2/C,uBAAAO,GAAA,IAAAE,EAAA,EAAApgD,KAAA20B,UAAApO,gBAEAvmB,KAAA2/C,uBAAAO,IAeAV,EAAA/9D,UAAA4+D,YAAA,SAAAloC,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,EAAAlV,GACA,IAAAmsB,GAAAJ,EAAAr0B,EAAAC,GACAu8D,EAAAtgD,KAAAu2B,+BACAhe,EAAAjX,GACAi/C,EAAAD,EACAtgD,KAAAy+C,gBAAA6B,EAAAxqB,EAAAx0B,QAAA/V,EACA6pC,EAAA,IAAAp1B,KAAA0/C,UACAnnC,OACAhtB,IAAAg1D,EAAA7M,EAAA,EAAAn7C,KAAAm7C,EAAA,EAAAh7C,WACAnN,IAAAg1D,IAAA,GACAvgD,KAAAm0C,YACAn0C,KAAAo0C,iBACAp0C,KAAA80B,aAIA,OAHAM,EAAAhpC,MACA4hD,EAAA,EAAAliD,OAAAspC,EAAAma,EAAA,EAAAt4C,OACA+I,KAAAk/C,iBAAAl/C,MACAo1B,GAOAoqB,EAAA/9D,UAAAo0C,QAAA,SAAA1d,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,GACA,IAAAoI,EAAwD1J,KAAA+zB,gBACxD,GAAArwB,EAAA,EAAApjB,4BACAopB,GAAApI,IACA+zC,EAAA,EAAA9rC,WAAAG,EAAApI,GAEG,CACH,IAEA8zB,EAFA5hB,EAAAxT,KAAAk1B,0BAAA5zB,GACAiX,GAAAJ,EAAAr0B,EAAAC,GAEAsxC,EAAA9S,EAAA,EAAAjK,OAAAC,GACA/E,EAAAuT,YAAAsO,KACAD,EAAiC5hB,EAAAjR,IAAA8yB,IAEjC,IAAAjpC,EAAA4T,KAAAsY,SACA,GAAA8c,KAAAhpC,OACA,OAAAgpC,EAEA,IAAA+lB,EAAAn7C,KAAAg2B,yBAAAtsB,GACA0xC,EAAAp7C,KAAAg2B,yBAAA10B,GACA+5C,EACAr7C,KAAAu2B,+BAAAhe,EAAAjX,GACAk/C,EAAA,IAAA3D,EACAnzC,EAAAyxC,EACA75C,EAAA85C,EACA7iC,EAAA8iC,EAAAr7C,KAAAo2B,kBAAAN,GACA91B,KAAAigD,oBACA,SAAA9nC,EAAAr0B,EAAAC,EAAA+xC,GACA,OAAA91B,KAAAygD,gBAAAtoC,EAAAr0B,EAAAC,EAAA+xC,EAAApsB,IACWwG,KAAAlQ,WAAA6/C,4BACX7/C,KAAA+/C,0BAUA,OATAS,EAAAp0D,MAEAgpC,GACAorB,EAAAlN,YAAAle,EACAorB,EAAA7M,sBACAngC,EAAA0K,QAAAmX,EAAAmrB,IAEAhtC,EAAA3mB,IAAAwoC,EAAAmrB,GAEAA,EAnCA,OAAAxgD,KAAAygD,gBAAAtoC,EAAAr0B,EAAAC,EAAA+xC,EAAApsB,GAAApI,IAkDAk+C,EAAA/9D,UAAAg/D,gBAAA,SAAAtoC,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,GACA,IAAA8zB,EAAA,KACAC,EAAA9S,EAAA,EAAAlK,UAAAF,EAAAr0B,EAAAC,GACAqI,EAAA4T,KAAAsY,SACA,GAAAtY,KAAA20B,UAAA5N,YAAAsO,IAKA,IADAD,EAAAp1B,KAAA20B,UAAApyB,IAAA8yB,IACAjpC,OAAA,CAIA,IAAAknD,EAAAle,EACAA,EAAAp1B,KAAAqgD,YAAAloC,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,EAAAlV,GAGAknD,EAAAj+B,YAAAq+B,EAAA,EAAAn7C,KAEA68B,EAAAke,0BAEAle,EAAAke,cAEAle,EAAAue,sBACA3zC,KAAA20B,UAAAzW,QAAAmX,EAAAD,SAnBAA,EAAAp1B,KAAAqgD,YAAAloC,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,EAAAlV,GACA4T,KAAA20B,UAAA9nC,IAAAwoC,EAAAD,GAqBA,OAAAA,GASAoqB,EAAA/9D,UAAAi/D,2BAAA,SAAAxqC,GACA,GAAAxS,EAAA,EAAApjB,4BACA0f,KAAA+/C,0BAAA7pC,EADA,CAKA,QAAAqmB,KADAv8B,KAAA+/C,yBAAA7pC,EACAlW,KAAA2/C,uBACA3/C,KAAA2/C,uBAAApjB,GAAA3wC,QAEAoU,KAAAyV,YAgBA+pC,EAAA/9D,UAAAk/D,yBAAA,SAAAr/C,EAAAshB,GACA,GAAAlf,EAAA,EAAApjB,2BAAA,CACA,IAAAsjC,EAAAyxB,EAAA,EAAA9yC,IAAAjB,GACA,GAAAsiB,EAAA,CACA,IAAAs8B,EAAAx8C,EAAA,EAAA5hB,OAAA8hC,GAAAlN,WACAwpC,KAAAlgD,KAAA4/C,wBACA5/C,KAAA4/C,sBAAAM,GAAAt9B,MAWA48B,EAAAC,wBAAA,SAAAmB,EAAA5P,GACA4P,EAAA1nB,WAAA8X,OAEA,IAAA6P,EAAA,EC1VAC,EAAA,SAAA5/C,GACA,IAAAG,EAAAH,MACAI,OAAA/V,IAAA8V,EAAAC,WACAD,EAAAC,WAAA,YAEAwD,OAAAvZ,IAAA8V,EAAAyD,SAAAzD,EAAAyD,SACAq7C,EAAA,EAAAx8B,WACArhC,OAAA69D,EAAA,EAAAj9B,qBAAA5hB,GACA0e,QAAA3e,EAAA2e,QACAN,QAAAre,EAAAqe,QACAa,SAAAlf,EAAAkf,WAGAsgC,EAAAv6D,KAAA0Z,MACAmzB,aAAA9xB,EAAA8xB,aACAtc,UAAAxV,EAAAwV,UACAs9B,YAAA9yC,EAAA8yC,YACA9gB,KAAAhyB,EAAAgyB,KACAmB,OAAAnzB,EAAAmzB,OACAlzB,aACAw+C,2BAAAz+C,EAAAy+C,2BACAh7C,WACAsvC,iBAAA/yC,EAAA+yC,iBACA1f,eAAArzB,EAAAqzB,eACA+pB,gBAAAp9C,EAAAo9C,gBACAd,IAAAt8C,EAAAs8C,IACAC,KAAAv8C,EAAAu8C,KACA56B,WAAAz3B,IAAA8V,EAAA2hB,OAAA3hB,EAAA2hB,MACA+R,WAAA1zB,EAAA0zB,cAKArxB,EAAA,EAAApiB,SAAAw/D,EAAAD,GACA,IAAAE,EAAA,EChDAC,EAAA,SAAA9/C,GAEA,IAEAiyB,EAFA9xB,EAAAH,MAIAiyB,OADA5nC,IAAA8V,EAAA8xB,aACA9xB,EAAA8xB,cAEA6tB,EAAAC,aAGA,IAAA9M,OAAA5oD,IAAA8V,EAAA8yC,YACA9yC,EAAA8yC,YAAA,YAEAwJ,OAAApyD,IAAA8V,EAAAs8C,IACAt8C,EAAAs8C,IAAA,uDAEAoD,EAAAz6D,KAAA0Z,MACAmzB,eACAtc,UAAAxV,EAAAwV,UACAs9B,cACA3f,YAAAjpC,IAAA8V,EAAAmzB,QAAAnzB,EAAAmzB,OACAxU,aAAAz0B,IAAA8V,EAAA2e,QAAA3e,EAAA2e,QAAA,GACA8/B,2BAAAz+C,EAAAy+C,2BACA1L,iBAAA/yC,EAAA+yC,iBACAuJ,MACA36B,MAAA3hB,EAAA2hB,SAKAtf,EAAA,EAAApiB,SAAA0/D,EAAAD,GAUAC,EAAAC,YAAA,2FAGA/+D,EAAA,8CC5CAg/D,EAAA,SAAAC,EAAAC,EAAAC,GAMArhD,KAAAshD,OAAAH,EAMAnhD,KAAAuhD,aAAAH,EAMAphD,KAAAwhD,OAAAH,EAMArhD,KAAAq6B,WAMAr6B,KAAA26B,OAAA,EAMA36B,KAAAyhD,iBAAA,GAOAP,EAAAz/D,UAAAgb,MAAA,WACAuD,KAAAq6B,QAAA33C,OAAA,EACAsd,KAAA26B,OAAA,EACA36B,KAAAyhD,iBAAA,GAQAP,EAAAz/D,UAAA2mC,OAAA,SAAAtkC,EAAAC,GACAic,KAAAq6B,QAAApuC,KAAAnI,EAAAC,EAAAglD,KAAAC,QAOAkY,EAAAz/D,UAAAgE,IAAA,WACA,GAAAua,KAAAq6B,QAAA33C,OAAA,EAGA,SAEA,IAAA2+D,EAAAtY,KAAAC,MAAAhpC,KAAAwhD,OACAE,EAAA1hD,KAAAq6B,QAAA33C,OAAA,EACA,GAAAsd,KAAAq6B,QAAAqnB,EAAA,GAAAL,EAGA,SAKA,IADA,IAAAM,EAAAD,EAAA,EACAC,EAAA,GAAA3hD,KAAAq6B,QAAAsnB,EAAA,GAAAN,GACAM,GAAA,EAGA,IAAAvY,EAAAppC,KAAAq6B,QAAAqnB,EAAA,GAAA1hD,KAAAq6B,QAAAsnB,EAAA,GAIA,GAAAvY,EAAA,OACA,SAGA,IAAAplD,EAAAgc,KAAAq6B,QAAAqnB,GAAA1hD,KAAAq6B,QAAAsnB,GACA19D,EAAA+b,KAAAq6B,QAAAqnB,EAAA,GAAA1hD,KAAAq6B,QAAAsnB,EAAA,GAGA,OAFA3hD,KAAA26B,OAAA13C,KAAA6d,MAAA7c,EAAAD,GACAgc,KAAAyhD,iBAAAx+D,KAAAgf,KAAAje,IAAAC,KAAAmlD,EACAppC,KAAAyhD,iBAAAzhD,KAAAuhD,cAOAL,EAAAz/D,UAAAmgE,YAAA,WACA,OAAA5hD,KAAAuhD,aAAAvhD,KAAAyhD,kBAAAzhD,KAAAshD,QAOAJ,EAAAz/D,UAAA+5C,SAAA,WACA,OAAAx7B,KAAA26B,QAEA,IAAAknB,EAAA,iCCrHAxmD,GAHAymD,OAAA,iBCqBAC,EAAA,SAAA1gD,GAEAjG,EAAA,EAAA9U,KAAA0Z,MAMAA,KAAA4tC,KAAA,KAEA5tC,KAAAgiD,WAAA,GAKAhiD,KAAAiiD,YAAA5gD,EAAA4gD,aAIAv+C,EAAA,EAAApiB,SAAAygE,EAAA3mD,EAAA,GASA2mD,EAAAtgE,UAAAygE,UAAA,WACA,OACuBliD,KAAAuC,IAAAlH,EAAAymD,SAUvBC,EAAAtgE,UAAAssD,OAAA,WACA,OAAA/tC,KAAA4tC,MAUAmU,EAAAtgE,UAAAugE,UAAA,SAAAG,GACAniD,KAAAnT,IAAAwO,EAAAymD,OAAAK,IAUAJ,EAAAtgE,UAAA0yB,OAAA,SAAAD,GACAlU,KAAA4tC,KAAA15B,GASA6tC,EAAAK,IAAA,SAAArQ,EAAAn1B,EAAAylC,GACA,IAAAxX,EAAAkH,EAAA/qD,YACA,GAAA6jD,EAAA,CACA,IAAAjjD,EAAAmqD,EAAA5G,iBACAN,EAAA,GAAAjuB,EAAA,GAAAiuB,EAAA,GAAAjuB,EAAA,KACAylC,EACAtQ,EAAAtJ,SACAW,SAAAiZ,EACAhZ,SAAA,EAAAt3B,OACAnqB,WAGAmqD,EAAAlJ,UAAAjhD,KAYAm6D,EAAA3zD,OAAA,SAAA2jD,EAAAjqD,EAAA4zB,EAAA2mC,GACAv6D,EAAAiqD,EAAA1G,kBAAAvjD,EAAA,GACAi6D,EAAAO,yBACAvQ,EAAAjqD,EAAA4zB,EAAA2mC,IAUAN,EAAAO,yBAAA,SAAAvQ,EAAAjqD,EAAA4zB,EAAA2mC,GACA,QAAA92D,IAAAzD,EAAA,CACA,IAAAy6D,EAAAxQ,EAAAjZ,cACA+R,EAAAkH,EAAA/qD,iBACAuE,IAAAg3D,GAAA1X,GAAAwX,EAAA,EACAtQ,EAAAtJ,SACA3gD,WACA+mB,OAAA6M,EACA0tB,SAAAiZ,EACAhZ,SAAA,EAAAx3B,UAGAkgC,EAAA3jD,OAAAtG,EAAA4zB,KAoBAqmC,EAAAhhC,KAAA,SAAAgxB,EAAAlqD,EAAA6zB,EAAA2mC,EAAA3/B,GACA76B,EAAAkqD,EAAA3J,oBAAAvgD,EAAA,EAAA66B,GACAq/B,EAAAS,uBACAzQ,EAAAlqD,EAAA6zB,EAAA2mC,IAUAN,EAAAU,YAAA,SAAA1Q,EAAAn1B,EAAAlB,EAAA2mC,GACA,IAAAvX,EAAAiH,EAAA1wB,gBACAx5B,EAAAkqD,EAAA3J,oBAAA0C,EAAAluB,EAAA,GAEA,QAAArxB,IAAA1D,EAAA,CACA,IAAA+3B,EAAAmyB,EAAAzwB,iBACAz5B,EAAA2Y,EAAA,EAAA3H,MACAhR,EACAkqD,EAAA3a,oBAAAxX,IAAAl9B,OAAA,GACAqvD,EAAA5a,oBAAAvX,EAAA,IAMA,GAAAlE,QAAAnwB,IAAA1D,OAAAijD,EAAA,CACA,IAAAD,EAAAkH,EAAA/qD,YACAY,EAAAmqD,EAAAvH,oBAAA3iD,EAAA6zB,GACA9zB,EAAAmqD,EAAA5G,gBAAAvjD,GAEA8zB,IACA7zB,EAAAgjD,EAAA,GAAAC,EAAAljD,EAAA,KACAC,EAAAijD,IACAjjD,EAAAgjD,EAAA,GAAAC,EAAAljD,EAAA,KACAC,EAAAijD,IAIAiX,EAAAS,uBACAzQ,EAAAlqD,EAAA6zB,EAAA2mC,IAUAN,EAAAS,uBAAA,SAAAzQ,EAAAlqD,EAAA6zB,EAAA2mC,GACA,GAAAx6D,EAAA,CACA,IAAAijD,EAAAiH,EAAA1wB,gBACAwpB,EAAAkH,EAAA/qD,YACA,QAAAuE,IAAAu/C,GAAAD,GACAhjD,IAAAijD,GAAAuX,EACAtQ,EAAAtJ,SACA5gD,aACAgnB,OAAA6M,EACA0tB,SAAAiZ,EACAhZ,SAAA,EAAAx3B,cAEK,CACL,GAAA6J,EAAA,CACA,IAAA9zB,EAAAmqD,EAAAvH,oBAAA3iD,EAAA6zB,GACAq2B,EAAAlJ,UAAAjhD,GAEAmqD,EAAA/E,cAAAnlD,MAIA,IAAA66D,EAAA,EClOAC,EAAA,SAAAzhD,GAEA,IAAAG,EAAAH,MAMAlB,KAAA4iD,OAAAvhD,EAAAub,MAAAvb,EAAAub,MAAA,EAEA8lC,EAAAp8D,KAAA0Z,MACAiiD,YAAAU,EAAAV,cAOAjiD,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,KAIA1lC,EAAA,EAAApiB,SAAAqhE,EAAAD,GAWAC,EAAAV,YAAA,SAAAY,GACA,IAAAC,GAAA,EACAjd,EAAAgd,EAAAl9B,cACA,GAAAk9B,EAAAz3D,MAAA23D,EAAA,EAAA3rD,SAAA,CACA,IAAA8c,EAAA2uC,EAAA3uC,IACArF,EAAAg0C,EAAA1+D,WACAy4B,EAAAipB,EAAAmd,UAAAhjD,KAAA4iD,OAAA5iD,KAAA4iD,OACA7Q,EAAA79B,EAAA89B,UACA0Q,EAAAD,YACA1Q,EAAAn1B,EAAA/N,EAAA7O,KAAA2xC,WACAkR,EAAAt0C,iBACAu0C,GAAA,EAEA,OAAAA,GAEA,IAAAG,EAAA,0CCzDAC,GAWAC,WAAA,SAAAN,GACA,IAAAl9B,EAAAk9B,EAAAl9B,cACA,OACAA,EAAAy9B,UACAz9B,EAAA09B,SAAA19B,EAAA29B,WACA39B,EAAAq9B,UAYAO,iBAAA,SAAAV,GACA,IAAAl9B,EAAAk9B,EAAAl9B,cACA,OACAA,EAAAy9B,UACAz9B,EAAA09B,SAAA19B,EAAA29B,UACA39B,EAAAq9B,WAYAE,EAAAM,OAAAC,EAAA,EAAAp5C,KAUA64C,EAAAQ,MAAA,SAAAb,GACA,OAAAA,EAAAz3D,MAAA23D,EAAA,EAAA5rD,OAaA+rD,EAAAS,kBAAA,SAAAd,GACA,IAAAl9B,EAAAk9B,EAAAl9B,cACA,UAAAA,EAAAypB,UACArT,EAAA,EAAAhvB,QAAAgvB,EAAA,EAAA/uB,KAAA2Y,EAAA29B,UAYAJ,EAAAU,MAAAH,EAAA,EAAAn5C,MAWA44C,EAAAW,YAAA,SAAAhB,GACA,qBAAAA,EAAAz3D,MAWA83D,EAAAY,YAAA,SAAAjB,GACA,OAAAA,EAAAz3D,MAAA23D,EAAA,EAAAl3C,aAWAq3C,EAAAa,YAAA,SAAAlB,GACA,OAAAA,EAAAz3D,MAAA23D,EAAA,EAAA3rD,UAYA8rD,EAAAc,eAAA,SAAAnB,GACA,IAAAl9B,EAAAk9B,EAAAl9B,cACA,OACAA,EAAAy9B,UACAz9B,EAAA09B,SAAA19B,EAAA29B,WACA39B,EAAAq9B,UAaAE,EAAAe,wBAAA,SAAApB,GACA,IAAAl9B,EAAAk9B,EAAAl9B,cACA,OAAAA,EAAAy9B,SACArnB,EAAA,EAAA/uB,IAAA2Y,EAAA09B,QAAA19B,EAAA29B,WACA39B,EAAAq9B,UAYAE,EAAAgB,aAAA,SAAArB,GACA,IAAAl9B,EAAAk9B,EAAAl9B,cACA,OACAA,EAAAy9B,UACAz9B,EAAA09B,SAAA19B,EAAA29B,UACA39B,EAAAq9B,UAYAE,EAAAiB,kBAAA,SAAAtB,GACA,IACAuB,EADAvB,EAAAl9B,cAAA/6B,OACAw5D,QACA,MACA,UAAAA,GACA,WAAAA,GACA,aAAAA,GAWAlB,EAAAmB,UAAA,SAAAxB,GAGA,OAFAhjC,EAAA,EAAAp4B,OAAAo7D,EAAAt9B,aAAA,IAEuC,WAAAA,aAAA++B,aAavCpB,EAAAqB,cAAA,SAAA1B,GACA,IAAAt9B,EAAAs9B,EAAAt9B,aACA,OAAAA,EAAAi/B,WAAA,IAAAj/B,EAAA6pB,QAEA,IAAAqV,EAAA,kBC1MAC,EAAA,SAAAxjD,GAEA,IAAAG,EAAAH,MAEA+gD,EAAA5gD,EAAA4gD,YACA5gD,EAAA4gD,YAAAyC,EAAAzC,YAEAS,EAAAp8D,KAAA0Z,MACAiiD,gBAOAjiD,KAAA2kD,iBAAAtjD,EAAAujD,gBACAvjD,EAAAujD,gBAAAF,EAAAE,gBAMA5kD,KAAA6kD,iBAAAxjD,EAAAyjD,gBACAzjD,EAAAyjD,gBAAAJ,EAAAI,gBAMA9kD,KAAA+kD,iBAAA1jD,EAAA2jD,gBACA3jD,EAAA2jD,gBAAAN,EAAAM,gBAMAhlD,KAAAilD,eAAA5jD,EAAA6jD,cACA7jD,EAAA6jD,cAAAR,EAAAQ,cAMAllD,KAAAmlD,wBAAA,EAMAnlD,KAAAolD,oBAMAplD,KAAAqlD,mBAIA3hD,EAAA,EAAApiB,SAAAojE,EAAAhC,GAOAgC,EAAAY,SAAA,SAAAC,GAIA,IAHA,IAAA7iE,EAAA6iE,EAAA7iE,OACA8iE,EAAA,EACAC,EAAA,EACAjjE,EAAA,EAAiBA,EAAAE,EAAYF,IAC7BgjE,GAAAD,EAAA/iE,GAAAgjE,QACAC,GAAAF,EAAA/iE,GAAAijE,QAEA,OAAAD,EAAA9iE,EAAA+iE,EAAA/iE,IAUAgiE,EAAAjjE,UAAAikE,wBAAA,SAAA7C,GACA,IAAAz3D,EAAAy3D,EAAAz3D,KACA,OAAAA,IAAA23D,EAAA,EAAA92C,aACA7gB,IAAA23D,EAAA,EAAAh3C,aACA3gB,IAAA23D,EAAA,EAAA72C,WAQAw4C,EAAAjjE,UAAAkkE,uBAAA,SAAA9C,GACA,GAAA7iD,KAAA0lD,wBAAA7C,GAAA,CACA,IAAAvwC,EAAAuwC,EAAAt9B,aAEAgX,EAAAjqB,EAAAszC,UAAAlvC,WACAmsC,EAAAz3D,MAAA23D,EAAA,EAAA72C,iBACAlM,KAAAolD,iBAAA7oB,GACKsmB,EAAAz3D,MACL23D,EAAA,EAAA92C,YACAjM,KAAAolD,iBAAA7oB,GAAAjqB,EACKiqB,KAAAv8B,KAAAolD,mBAELplD,KAAAolD,iBAAA7oB,GAAAjqB,GAEAtS,KAAAqlD,eAAAtjE,EAAA,EAAAuZ,UAAA0E,KAAAolD,oBASAV,EAAAI,gBAAAphD,EAAA,EAAA7hB,aAQA6iE,EAAAQ,cAAAzB,EAAA,EAAAn5C,MAQAo6C,EAAAE,gBAAAnB,EAAA,EAAAn5C,MAOAo6C,EAAAM,gBAAAthD,EAAA,EAAA7hB,aAYA6iE,EAAAzC,YAAA,SAAAY,GACA,KAAAA,aAAAgD,EAAA,GACA,SAGA,IAAA/C,GAAA,EAEA,GADA9iD,KAAA2lD,uBAAA9C,GACA7iD,KAAAmlD,wBACA,GAAAtC,EAAAz3D,MAAA23D,EAAA,EAAAh3C,YACA/L,KAAA6kD,iBAAAhC,QACK,GAAAA,EAAAz3D,MAAA23D,EAAA,EAAA72C,UAAA,CACL,IAAA45C,EAAA9lD,KAAAilD,eAAApC,GACA7iD,KAAAmlD,uBAAAW,GAAA9lD,KAAAqlD,eAAA3iE,OAAA,QAGA,GAAAmgE,EAAAz3D,MAAA23D,EAAA,EAAA92C,YAAA,CACA,IAAA85C,EAAA/lD,KAAA2kD,iBAAA9B,GACA7iD,KAAAmlD,uBAAAY,EACAjD,EAAA9iD,KAAAgmD,gBAAAD,QACKlD,EAAAz3D,MAAA23D,EAAA,EAAA/2C,aACLhM,KAAA+kD,iBAAAlC,GAGA,OAAAC,GAiBA4B,EAAAjjE,UAAAukE,gBAAA,SAAAD,GACA,OAAAA,GAEA,IAAAE,EAAA,EC1MAC,EAAA,SAAAhlD,GAEA+kD,EAAA3/D,KAAA0Z,MACA4kD,gBAAAsB,EAAAvB,iBACAG,gBAAAoB,EAAArB,iBACAK,cAAAgB,EAAAjB,iBAGA,IAAA5jD,EAAAH,MAMAlB,KAAAmmD,SAAA9kD,EAAA+kD,QAKApmD,KAAAqmD,aAAA,KAKArmD,KAAAsmD,mBAMAtmD,KAAAumD,WAAAllD,EAAAmlD,UACAnlD,EAAAmlD,UAAA/B,EAAAT,eAMAhkD,KAAAymD,YAAA,GAIA/iD,EAAA,EAAApiB,SAAA4kE,EAAAD,GAQAC,EAAArB,iBAAA,SAAAhC,GACA,IAAAwC,EAAArlD,KAAAqlD,eACAC,EACAW,EAAAX,SAAAD,GACA,GAAAA,EAAA3iE,QAAAsd,KAAAsmD,oBAIA,GAHAtmD,KAAAmmD,UACAnmD,KAAAmmD,SAAA/9B,OAAAk9B,EAAA,GAAAA,EAAA,IAEAtlD,KAAAqmD,aAAA,CACA,IAAA78D,EAAAwW,KAAAqmD,aAAA,GAAAf,EAAA,GACA77D,EAAA67D,EAAA,GAAAtlD,KAAAqmD,aAAA,GAEAtU,EADA8Q,EAAA3uC,IACA89B,UACA/B,EAAA8B,EAAA18B,WACAztB,GAAA4B,EAAAC,GACAi9D,EAAA,EAAAp4D,MAAA1G,EAAAqoD,EAAApoD,YACA6+D,EAAA,EAAAt4D,OAAAxG,EAAAqoD,EAAAnoD,UACA4+D,EAAA,EAAA9/C,IAAAhf,EAAAqoD,EAAAroD,QACAA,EAAAmqD,EAAA5G,gBAAAvjD,GACAmqD,EAAAlJ,UAAAjhD,SAEGoY,KAAAmmD,UAGHnmD,KAAAmmD,SAAA1pD,QAEAuD,KAAAqmD,aAAAf,EACAtlD,KAAAsmD,mBAAAjB,EAAA3iE,QAUAwjE,EAAAjB,eAAA,SAAApC,GACA,IAAA3uC,EAAA2uC,EAAA3uC,IACA69B,EAAA79B,EAAA89B,UACA,OAAAhyC,KAAAqlD,eAAA3iE,OAAA,CACA,IAAAsd,KAAAymD,YAAAzmD,KAAAmmD,UAAAnmD,KAAAmmD,SAAA1gE,MAAA,CACA,IAAA4a,EAAAL,KAAAmmD,SAAAvE,cACAvzD,EAAA2R,KAAAmmD,SAAA3qB,WACA5zC,EAA6CmqD,EAAA/qD,YAC7C2/D,EAAAzyC,EAAA0yC,uBAAAh/D,GACAgnB,EAAAsF,EAAA+xB,wBACA0gB,EAAA,GAAAtmD,EAAApd,KAAAgF,IAAAoG,GACAs4D,EAAA,GAAAtmD,EAAApd,KAAAkF,IAAAkG,KAEA0jD,EAAAtJ,SACA7gD,OAAAmqD,EAAA5G,gBAAAv8B,GACAw6B,SAAA,IACAC,SAAA,EAAAx3B,UAIA,OADAkgC,EAAAlI,QAAAC,EAAA,EAAAxrC,aAAA,IACA,EAQA,OANA0B,KAAAmmD,UAGAnmD,KAAAmmD,SAAA1pD,QAEAuD,KAAAqmD,aAAA,MACA,GAWAH,EAAAvB,iBAAA,SAAA9B,GACA,GAAA7iD,KAAAqlD,eAAA3iE,OAAA,GAAAsd,KAAAumD,WAAA1D,GAAA,CACA,IACA9Q,EADA8Q,EAAA3uC,IACA89B,UAeA,OAdAhyC,KAAAqmD,aAAA,KACArmD,KAAAmlD,wBACApT,EAAAlI,QAAAC,EAAA,EAAAxrC,YAAA,GAGAyzC,EAAAhI,gBACAgI,EAAAlJ,UAAAga,EAAA9sC,WAAAk6B,UAAAroD,QAEAoY,KAAAmmD,UACAnmD,KAAAmmD,SAAA1pD,QAIAuD,KAAAymD,WAAAzmD,KAAAqlD,eAAA3iE,OAAA,GACA,EAEA,UAQAwjE,EAAAzkE,UAAAukE,gBAAAvC,EAAA,EAAAn5C,MACA,IAAAu8C,EAAA,UCtJAC,EAAA,SAAA5lD,GAEA,IAAAG,EAAAH,MAEA+kD,EAAA3/D,KAAA0Z,MACA4kD,gBAAAkC,EAAAnC,iBACAG,gBAAAgC,EAAAjC,iBACAK,cAAA4B,EAAA7B,iBAOAjlD,KAAAumD,WAAAllD,EAAAmlD,UACAnlD,EAAAmlD,UAAA/B,EAAAlB,iBAMAvjD,KAAA+mD,gBAAAx7D,EAMAyU,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,KAGA1lC,EAAA,EAAApiB,SAAAwlE,EAAAb,GAQAa,EAAAjC,iBAAA,SAAAhC,GACA,GAAA4B,EAAAJ,UAAAxB,GAAA,CAIA,IAAA3uC,EAAA2uC,EAAA3uC,IACA69B,EAAA79B,EAAA89B,UACA,GAAAD,EAAAzG,iBAAAxjD,WAAA2lD,EAAA,EAAA3oB,QAAA,CAGA,IAAA/8B,EAAAmsB,EAAA7qB,UACA7D,EAAAq9D,EAAA9c,MACA9gB,EACAhiC,KAAA6d,MAAA/Y,EAAA,KAAAvC,EAAA,GAAAA,EAAA,GAAAuC,EAAA,MACA,QAAAwD,IAAAyU,KAAA+mD,WAAA,CACA,IAAAnqC,EAAAqI,EAAAjlB,KAAA+mD,WACAj/D,EAAAiqD,EAAAjZ,cACA4pB,EAAAJ,yBACAvQ,EAAAjqD,EAAA80B,GAEA5c,KAAA+mD,WAAA9hC,KAUA6hC,EAAA7B,eAAA,SAAApC,GACA,IAAA4B,EAAAJ,UAAAxB,GACA,SAGA,IACA9Q,EADA8Q,EAAA3uC,IACA89B,UACAD,EAAAlI,QAAAC,EAAA,EAAAxrC,aAAA,GACA,IAAAxW,EAAAiqD,EAAAjZ,cAGA,OAFA4pB,EAAAt0D,OAAA2jD,EAAAjqD,OACAyD,EAAAyU,KAAA2xC,YACA,GAUAmV,EAAAnC,iBAAA,SAAA9B,GACA,QAAA4B,EAAAJ,UAAAxB,QAIA4B,EAAAd,kBAAAd,KACA7iD,KAAAumD,WAAA1D,MACAA,EAAA3uC,IACA89B,UAAAnI,QAAAC,EAAA,EAAAxrC,YAAA,GACA0B,KAAA+mD,gBAAAx7D,GACA,KAUAu7D,EAAArlE,UAAAukE,gBAAAvC,EAAA,EAAAn5C,MACA,IAAA08C,EAAA,iCCxHAC,EAAA,SAAApY,GAMA7uC,KAAA49B,UAAA,KAMA59B,KAAAknD,SAA4C9xD,SAAAC,cAAA,OAC5C2K,KAAAknD,SAAA3xD,MAAAG,SAAA,WACAsK,KAAAknD,SAAArY,UAAA,UAAAA,EAMA7uC,KAAA4tC,KAAA,KAMA5tC,KAAAmnD,YAAA,KAMAnnD,KAAAonD,UAAA,MAIA1jD,EAAA,EAAApiB,SAAA2lE,EAAAI,EAAA,GAMAJ,EAAAxlE,UAAAgxB,gBAAA,WACAzS,KAAAmU,OAAA,OAOA8yC,EAAAxlE,UAAA25C,QAAA,WACA,IAAAksB,EAAAtnD,KAAAmnD,YACAI,EAAAvnD,KAAAonD,UAEA7xD,EAAAyK,KAAAknD,SAAA3xD,MACAA,EAAAI,KAAA1S,KAAAC,IAAAokE,EAAA,GAAAC,EAAA,IAFA,KAGAhyD,EAAAiyD,IAAAvkE,KAAAC,IAAAokE,EAAA,GAAAC,EAAA,IAHA,KAIAhyD,EAAArB,MAAAjR,KAAA2W,IAAA2tD,EAAA,GAAAD,EAAA,IAJA,KAKA/xD,EAAAJ,OAAAlS,KAAA2W,IAAA2tD,EAAA,GAAAD,EAAA,IALA,MAYAL,EAAAxlE,UAAA0yB,OAAA,SAAAD,GACA,GAAAlU,KAAA4tC,KAAA,CACA5tC,KAAA4tC,KAAA6Z,sBAAA1xD,YAAAiK,KAAAknD,UACA,IAAA3xD,EAAAyK,KAAAknD,SAAA3xD,MACAA,EAAAI,KAAAJ,EAAAiyD,IAAAjyD,EAAArB,MAAAqB,EAAAJ,OAAA,UAEA6K,KAAA4tC,KAAA15B,EACAlU,KAAA4tC,MACA5tC,KAAA4tC,KAAA6Z,sBAAA5xD,YAAAmK,KAAAknD,WASAD,EAAAxlE,UAAAimE,UAAA,SAAAJ,EAAAC,GACAvnD,KAAAmnD,YAAAG,EACAtnD,KAAAonD,UAAAG,EACAvnD,KAAA2nD,yBACA3nD,KAAAo7B,WAOA6rB,EAAAxlE,UAAAkmE,uBAAA,WACA,IAAAL,EAAAtnD,KAAAmnD,YACAI,EAAAvnD,KAAAonD,UAOA/kE,GALAilE,GACAA,EAAA,GAAAC,EAAA,IACAA,GACAA,EAAA,GAAAD,EAAA,KAEApzC,IAAAlU,KAAA4tC,KAAA3H,uBAAAjmC,KAAA4tC,MAEAvrD,EAAA,GAAAA,EAAA,GAAAuB,QACAoc,KAAA49B,UAGA59B,KAAA49B,UAAAxiB,gBAAA/4B,IAFA2d,KAAA49B,UAAA,IAAA4F,EAAA,GAAAnhD,KAUA4kE,EAAAxlE,UAAA48C,YAAA,WACA,OAAAr+B,KAAA49B,WAEA,IAAAgqB,EAAA,EC1GAC,EAAA,SAAA3mD,GAEA+kD,EAAA3/D,KAAA0Z,MACA4kD,gBAAAiD,EAAAlD,iBACAG,gBAAA+C,EAAAhD,iBACAK,cAAA2C,EAAA5C,iBAGA,IAAA5jD,EAAAH,MAMAlB,KAAA8nD,KAAA,IAAAF,EAAAvmD,EAAAwtC,WAAA,cAMA7uC,KAAA+nD,cAAAx8D,IAAA8V,EAAAiuB,QAAAjuB,EAAAiuB,QAAA,GAMAtvB,KAAAmnD,YAAA,KAMAnnD,KAAAumD,WAAAllD,EAAAmlD,UACAnlD,EAAAmlD,UAAA/B,EAAAjB,OAMAxjD,KAAAgoD,iBAAA3mD,EAAA4mD,gBACA5mD,EAAA4mD,gBAAAJ,EAAAK,wBAGAxkD,EAAA,EAAApiB,SAAAumE,EAAA5B,GAaA4B,EAAAK,uBAAA,SAAArF,EAAAyE,EAAAC,GACA,IAAArzD,EAAAqzD,EAAA,GAAAD,EAAA,GACAnyD,EAAAoyD,EAAA,GAAAD,EAAA,GACA,OAAApzD,IAAAiB,KAAA6K,KAAA+nD,UASAF,EAAAhD,iBAAA,SAAAhC,GACA4B,EAAAJ,UAAAxB,KAIA7iD,KAAA8nD,KAAAJ,UAAA1nD,KAAAmnD,YAAAtE,EAAA9c,OAEA/lC,KAAAqL,cAAA,IAAAw8C,EAAAv8C,MAAAu8C,EAAAM,WAAAC,QACAvF,EAAA1+D,WAAA0+D,MASAgF,EAAApmE,UAAA48C,YAAA,WACA,OAAAr+B,KAAA8nD,KAAAzpB,eAUAwpB,EAAApmE,UAAA4mE,SAAA3kD,EAAA,EAAA7hB,aASAgmE,EAAA5C,eAAA,SAAApC,GACA,OAAA4B,EAAAJ,UAAAxB,KAIA7iD,KAAA8nD,KAAA3zC,OAAA,MAEAnU,KAAAgoD,iBAAAnF,EACA7iD,KAAAmnD,YAAAtE,EAAA9c,SACA/lC,KAAAqoD,SAAAxF,GACA7iD,KAAAqL,cAAA,IAAAw8C,EAAAv8C,MAAAu8C,EAAAM,WAAAG,OACAzF,EAAA1+D,WAAA0+D,MAEA,IAUAgF,EAAAlD,iBAAA,SAAA9B,GACA,QAAA4B,EAAAJ,UAAAxB,QAIA4B,EAAAd,kBAAAd,KACA7iD,KAAAumD,WAAA1D,MACA7iD,KAAAmnD,YAAAtE,EAAA9c,MACA/lC,KAAA8nD,KAAA3zC,OAAA0uC,EAAA3uC,KACAlU,KAAA8nD,KAAAJ,UAAA1nD,KAAAmnD,YAAAnnD,KAAAmnD,aACAnnD,KAAAqL,cAAA,IAAAw8C,EAAAv8C,MAAAu8C,EAAAM,WAAAI,SACA1F,EAAA1+D,WAAA0+D,KACA,KAWAgF,EAAAM,YAMAI,SAAA,WAOAH,QAAA,UAOAE,OAAA,UAgBAT,EAAAv8C,MAAA,SAAAlgB,EAAAjH,EAAA0+D,GACA2F,EAAA,EAAAliE,KAAA0Z,KAAA5U,GAQA4U,KAAA7b,aAOA6b,KAAA6iD,mBAGAn/C,EAAA,EAAApiB,SAAAumE,EAAAv8C,MAAAk9C,EAAA,GACA,IAAAC,EAAA,ECnNAC,EAAA,SAAAxnD,GACA,IAAAG,EAAAH,MAEAslD,EAAAnlD,EAAAmlD,UACAnlD,EAAAmlD,UAAA/B,EAAAP,aAMAlkD,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,IAMAppC,KAAA2oD,UAAAp9D,IAAA8V,EAAAunD,KAAAvnD,EAAAunD,IAEAH,EAAAniE,KAAA0Z,MACAwmD,YACA3X,UAAAxtC,EAAAwtC,WAAA,iBAKAnrC,EAAA,EAAApiB,SAAAonE,EAAAD,GAMAC,EAAAjnE,UAAA4mE,SAAA,WACA,IAAAn0C,EAAAlU,KAAA+tC,SAEAgE,EAAiC79B,EAAA89B,UAEjCjqD,EAAiCmsB,EAAA7qB,UAEjC/G,EAAA0d,KAAAq+B,cAAAl6B,YAEA,GAAAnE,KAAA2oD,KAAA,CACA,IAAAE,EAAA9W,EAAAtG,gBAAA1jD,GACA+gE,EAAA7+C,EAAA,EAAA7kB,+BACA8uB,EAAA0yC,uBAAA38C,EAAA,EAAA1jB,cAAAjE,IACA4xB,EAAA0yC,uBAAA38C,EAAA,EAAAxjB,YAAAnE,MACAymE,EAAAhX,EAAAlG,uBAAAid,EAAA/gE,GAEAkiB,EAAA,EAAA1gB,gBAAAs/D,EAAA,EAAAE,GACAzmE,EAAAumE,EAGA,IAAAhhE,EAAAkqD,EAAA3J,oBACA2J,EAAAlG,uBAAAvpD,EAAAyF,IAEAH,EAAAqiB,EAAA,EAAAjjB,UAAA1E,GACAsF,EAAAmqD,EAAA5G,gBAAAvjD,GAEAmqD,EAAAtJ,SACA5gD,aACAD,SACAwhD,SAAAppC,KAAA2xC,UACAtI,SAAA,EAAAx3B,WAIA,IAAAm3C,EAAA,SC1EAC,GANArkE,KAAA,GACAskE,GAAA,GACArkE,MAAA,GACAskE,KAAA,ICgBAC,EAAA,SAAAloD,GAEAwhD,EAAAp8D,KAAA0Z,MACAiiD,YAAAmH,EAAAnH,cAGA,IAAA5gD,EAAAH,MAOAlB,KAAAqpD,kBAAA,SAAAxG,GACA,OAAA4B,EAAAT,eAAAnB,IACA4B,EAAAN,kBAAAtB,IAOA7iD,KAAAumD,gBAAAh7D,IAAA8V,EAAAmlD,UACAnlD,EAAAmlD,UAAAxmD,KAAAqpD,kBAMArpD,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,IAMAppC,KAAAspD,iBAAA/9D,IAAA8V,EAAAkoD,WACAloD,EAAAkoD,WAAA,KAIA7lD,EAAA,EAAApiB,SAAA8nE,EAAA1G,GAWA0G,EAAAnH,YAAA,SAAAY,GACA,IAAAC,GAAA,EACA,GAAAD,EAAAz3D,MAAAmkD,EAAA,EAAA93C,QAAA,CACA,IACA+xD,EADA3G,EAAAl9B,cACA6jC,QACA,GAAAxpD,KAAAumD,WAAA1D,KACA2G,GAAAP,EAAAE,MACAK,GAAAP,EAAArkE,MACA4kE,GAAAP,EAAApkE,OACA2kE,GAAAP,EAAAC,IAAA,CACA,IACAnX,EADA8Q,EAAA3uC,IACA89B,UACAyX,EAAA1X,EAAA1wB,gBAAArhB,KAAAspD,YACA9/D,EAAA,EAAAC,EAAA,EACA+/D,GAAAP,EAAAE,KACA1/D,GAAAggE,EACOD,GAAAP,EAAArkE,KACP4E,GAAAigE,EACOD,GAAAP,EAAApkE,MACP2E,EAAAigE,EAEAhgE,EAAAggE,EAEA,IAAA7sC,GAAApzB,EAAAC,GACAi9D,EAAA,EAAAt4D,OAAAwuB,EAAAm1B,EAAAjZ,eACA4pB,EAAAN,IAAArQ,EAAAn1B,EAAA5c,KAAA2xC,WACAkR,EAAAt0C,iBACAu0C,GAAA,GAGA,OAAAA,GAEA,IAAA4G,EAAA,ECrFAC,EAAA,SAAAzoD,GAEAwhD,EAAAp8D,KAAA0Z,MACAiiD,YAAA0H,EAAA1H,cAGA,IAAA5gD,EAAAH,MAMAlB,KAAAumD,WAAAllD,EAAAmlD,UAAAnlD,EAAAmlD,UACA/B,EAAAN,kBAMAnkD,KAAA4iD,OAAAvhD,EAAAub,MAAAvb,EAAAub,MAAA,EAMA5c,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,KAIA1lC,EAAA,EAAApiB,SAAAqoE,EAAAjH,GAYAiH,EAAA1H,YAAA,SAAAY,GACA,IAAAC,GAAA,EACA,GAAAD,EAAAz3D,MAAAmkD,EAAA,EAAA93C,SACAorD,EAAAz3D,MAAAmkD,EAAA,EAAA73C,SAAA,CACA,IACAihB,EADAkqC,EAAAl9B,cACAhN,SACA,GAAA3Y,KAAAumD,WAAA1D,KACAlqC,GAAA,IAAAolC,WAAA,IAAAplC,GAAA,IAAAolC,WAAA,KACA,IAAA7pC,EAAA2uC,EAAA3uC,IACA0I,EAAAjE,GAAA,IAAAolC,WAAA,GAAA/9C,KAAA4iD,QAAA5iD,KAAA4iD,OACA7Q,EAAA79B,EAAA89B,UACA0Q,EAAAD,YACA1Q,EAAAn1B,OAAArxB,EAAAyU,KAAA2xC,WACAkR,EAAAt0C,iBACAu0C,GAAA,GAGA,OAAAA,GAEA,IAAA8G,EAAA,ECjEAC,EAAA,SAAA3oD,GAEAwhD,EAAAp8D,KAAA0Z,MACAiiD,YAAA4H,EAAA5H,cAGA,IAAA5gD,EAAAH,MAMAlB,KAAA4iD,OAAA,EAMA5iD,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,IAMAppC,KAAA8pD,cAAAv+D,IAAA8V,EAAA0oD,QAAA1oD,EAAA0oD,QAAA,GAMA/pD,KAAAgqD,gBAAAz+D,IAAA8V,EAAA4oD,WAAA5oD,EAAA4oD,UAMAjqD,KAAAkqD,qBAAA7oD,EAAA+mC,sBAAA,EAMApoC,KAAAmqD,YAAA,KAMAnqD,KAAAoqD,gBAAA7+D,EAMAyU,KAAAqqD,gBAAA9+D,EAMAyU,KAAAsqD,WAAA/+D,EAOAyU,KAAAuqD,kBAAA,IAKAvqD,KAAAwqD,wBAAAj/D,EAOAyU,KAAAyqD,sBAAA,IAOAzqD,KAAA0qD,oBAAA,KAIAhnD,EAAA,EAAApiB,SAAAuoE,EAAAnH,GAWAmH,EAAA5H,YAAA,SAAAY,GACA,IAAAz3D,EAAAy3D,EAAAz3D,KACA,GAAAA,IAAAmkD,EAAA,EAAAj3C,OAAAlN,IAAAmkD,EAAA,EAAAv3C,WACA,SAGA6qD,EAAAt0C,iBAEA,IASAqO,EATA1I,EAAA2uC,EAAA3uC,IACAy2C,EAAyC9H,EAAA,cAyBzC,GAvBA7iD,KAAAgqD,aACAhqD,KAAAmqD,YAAAtH,EAAA1+D,YAMA0+D,EAAAz3D,MAAAmkD,EAAA,EAAAj3C,OACAskB,EAAA+tC,EAAAlhE,OACAsyC,EAAA,EAAAlvB,SACA89C,EAAAC,YAAAC,WAAAC,kBACAluC,GAAAmf,EAAA,EAAA9uB,oBAEA09C,EAAAC,YAAAC,WAAAE,iBACAnuC,GAAA,KAEGimC,EAAAz3D,MAAAmkD,EAAA,EAAAv3C,aACH4kB,GAAA+tC,EAAAK,YACAjvB,EAAA,EAAAjvB,SACA8P,GAAA,IAIA,IAAAA,EACA,SAGA,IAAAosB,EAAAD,KAAAC,MAYA,QAVAz9C,IAAAyU,KAAAoqD,aACApqD,KAAAoqD,WAAAphB,KAGAhpC,KAAAsqD,OAAAthB,EAAAhpC,KAAAoqD,WAAApqD,KAAAuqD,qBACAvqD,KAAAsqD,MAAArnE,KAAA2W,IAAAgjB,GAAA,EACAitC,EAAAoB,MAAAC,SACArB,EAAAoB,MAAA3yD,OAGA0H,KAAAsqD,QAAAT,EAAAoB,MAAAC,SAAA,CACA,IAAAnZ,EAAA79B,EAAA89B,UACAhyC,KAAAwqD,mBACAW,aAAAnrD,KAAAwqD,oBAEAzY,EAAAlI,QAAAC,EAAA,EAAAxrC,YAAA,GAEA0B,KAAAwqD,mBAAAvd,WAAAjtC,KAAAorD,0BAAAl7C,KAAAlQ,WAAAuqD,mBACA,IAAA1iE,EAAAkqD,EAAA1wB,gBAAAp+B,KAAAgW,IAAA,EAAA2jB,EAAA5c,KAAAyqD,uBACA71C,EAAAm9B,EAAA3a,mBACAviB,EAAAk9B,EAAA5a,mBACAk0B,EAAA,EAQA,GAPAxjE,EAAA+sB,GACA/sB,EAAA5E,KAAAK,IAAAuE,EAAA+sB,EAAA5U,KAAA0qD,qBACAW,EAAA,GACKxjE,EAAAgtB,IACLhtB,EAAA5E,KAAAC,IAAA2E,EAAAgtB,EAAA7U,KAAA0qD,qBACAW,GAAA,GAEArrD,KAAAmqD,YAAA,CACA,IAAAviE,EAAAmqD,EAAAvH,oBAAA3iD,EAAAmY,KAAAmqD,aACApY,EAAAlJ,UAAAkJ,EAAA5G,gBAAAvjD,IA6BA,OA3BAmqD,EAAA/E,cAAAnlD,GAEA,IAAAwjE,GAAArrD,KAAAkqD,sBACAnY,EAAAtJ,SACA5gD,WAAAkqD,EAAA3J,oBAAAvgD,EAAA+0B,EAAA,QACAysB,SAAA,EAAAx3B,QACAhD,OAAA7O,KAAAmqD,YACA/gB,SAAAppC,KAAA2xC,YAIA0Z,EAAA,EACAtZ,EAAAtJ,SACA5gD,WAAA+sB,EACAy0B,SAAA,EAAAx3B,QACAhD,OAAA7O,KAAAmqD,YACA/gB,SAAA,MAEKiiB,EAAA,GACLtZ,EAAAtJ,SACA5gD,WAAAgtB,EACAw0B,SAAA,EAAAx3B,QACAhD,OAAA7O,KAAAmqD,YACA/gB,SAAA,MAGAppC,KAAAoqD,WAAAphB,GACA,EAGAhpC,KAAA4iD,QAAAhmC,EAEA,IAAA0uC,EAAAroE,KAAAK,IAAA0c,KAAA8pD,UAAA9gB,EAAAhpC,KAAAoqD,YAAA,GAKA,OAHAe,aAAAnrD,KAAAqqD,YACArqD,KAAAqqD,WAAApd,WAAAjtC,KAAAurD,iBAAAr7C,KAAAlQ,KAAAkU,GAAAo3C,IAEA,GAOAzB,EAAApoE,UAAA2pE,0BAAA,WACAprD,KAAAwqD,wBAAAj/D,EACAyU,KAAA+tC,SAAAiE,UACAnI,QAAAC,EAAA,EAAAxrC,aAAA,IAQAurD,EAAApoE,UAAA8pE,iBAAA,SAAAr3C,GACA,IAAA69B,EAAA79B,EAAA89B,UACAD,EAAAhI,gBACAgI,EAAA9H,mBAEA,IAAA/J,EAAAx8B,EAAA,EAAA/iB,wBACAi8B,EAAApc,EAAA,EAAA3H,MAAAmH,KAAA4iD,QAAA1iB,KACAwiB,EAAAD,YAAA1Q,GAAAn1B,EAAA5c,KAAAmqD,YACAnqD,KAAA2xC,WACA3xC,KAAAsqD,WAAA/+D,EACAyU,KAAA4iD,OAAA,EACA5iD,KAAAmqD,YAAA,KACAnqD,KAAAoqD,gBAAA7+D,EACAyU,KAAAqqD,gBAAA9+D,GAUAs+D,EAAApoE,UAAA+pE,eAAA,SAAAvB,GACAjqD,KAAAgqD,WAAAC,EACAA,IACAjqD,KAAAmqD,YAAA,OASAN,EAAAoB,OACAC,SAAA,WACA5yD,MAAA,SAEA,IAAAmzD,EAAA,EC5QAC,EAAA,SAAAxqD,GAEA+kD,EAAA3/D,KAAA0Z,MACA4kD,gBAAA8G,EAAA/G,iBACAG,gBAAA4G,EAAA7G,iBACAK,cAAAwG,EAAAzG,iBAGA,IAAA5jD,EAAAH,MAMAlB,KAAA86B,QAAA,KAMA96B,KAAA+mD,gBAAAx7D,EAMAyU,KAAA2rD,WAAA,EAMA3rD,KAAA4rD,eAAA,EAMA5rD,KAAA6rD,gBAAAtgE,IAAA8V,EAAAyqD,UAAAzqD,EAAAyqD,UAAA,GAMA9rD,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,KAIA1lC,EAAA,EAAApiB,SAAAoqE,EAAAzF,GAQAyF,EAAA7G,iBAAA,SAAAhC,GACA,IAAAkJ,EAAA,EAEAC,EAAAhsD,KAAAqlD,eAAA,GACA4G,EAAAjsD,KAAAqlD,eAAA,GAGAh3D,EAAApL,KAAA6d,MACAmrD,EAAAxG,QAAAuG,EAAAvG,QACAwG,EAAAzG,QAAAwG,EAAAxG,SAEA,QAAAj6D,IAAAyU,KAAA+mD,WAAA,CACA,IAAAnqC,EAAAvuB,EAAA2R,KAAA+mD,WACA/mD,KAAA4rD,gBAAAhvC,GACA5c,KAAA2rD,WACA1oE,KAAA2W,IAAAoG,KAAA4rD,gBAAA5rD,KAAA6rD,aACA7rD,KAAA2rD,WAAA,GAEAI,EAAAnvC,EAEA5c,KAAA+mD,WAAA14D,EAEA,IAAA6lB,EAAA2uC,EAAA3uC,IACA69B,EAAA79B,EAAA89B,UACA,GAAAD,EAAAzG,iBAAAxjD,WAAA2lD,EAAA,EAAA3oB,QAAA,CAOA,IAAAonC,EAAAh4C,EAAAi4C,cAAAC,wBACA9G,EAAAW,EAAAX,SAAAtlD,KAAAqlD,gBAMA,GALAC,EAAA,IAAA4G,EAAAv2D,KACA2vD,EAAA,IAAA4G,EAAA1E,IACAxnD,KAAA86B,QAAA5mB,EAAA+xB,uBAAAqf,GAGAtlD,KAAA2rD,UAAA,CACA,IAAA7jE,EAAAiqD,EAAAjZ,cACA5kB,EAAAgC,SACAwsC,EAAAJ,yBAAAvQ,EACAjqD,EAAAikE,EAAA/rD,KAAA86B,YAWA4wB,EAAAzG,eAAA,SAAApC,GACA,GAAA7iD,KAAAqlD,eAAA3iE,OAAA,GACA,IACAqvD,EADA8Q,EAAA3uC,IACA89B,UAEA,GADAD,EAAAlI,QAAAC,EAAA,EAAAxrC,aAAA,GACA0B,KAAA2rD,UAAA,CACA,IAAA7jE,EAAAiqD,EAAAjZ,cACA4pB,EAAAt0D,OACA2jD,EAAAjqD,EAAAkY,KAAA86B,QAAA96B,KAAA2xC,WAEA,SAEA,UAWA+Z,EAAA/G,iBAAA,SAAA9B,GACA,GAAA7iD,KAAAqlD,eAAA3iE,QAAA,GACA,IAAAwxB,EAAA2uC,EAAA3uC,IAQA,OAPAlU,KAAA86B,QAAA,KACA96B,KAAA+mD,gBAAAx7D,EACAyU,KAAA2rD,WAAA,EACA3rD,KAAA4rD,eAAA,EACA5rD,KAAAmlD,wBACAjxC,EAAA89B,UAAAnI,QAAAC,EAAA,EAAAxrC,YAAA,IAEA,EAEA,UAQAotD,EAAAjqE,UAAAukE,gBAAAvC,EAAA,EAAAn5C,MACA,IAAA+hD,EAAA,EC1JAC,EAAA,SAAAprD,GAEA+kD,EAAA3/D,KAAA0Z,MACA4kD,gBAAA0H,EAAA3H,iBACAG,gBAAAwH,EAAAzH,iBACAK,cAAAoH,EAAArH,iBAGA,IAAA5jD,EAAAH,MAMAlB,KAAAkqD,qBAAA7oD,EAAA+mC,sBAAA,EAMApoC,KAAA86B,QAAA,KAMA96B,KAAA2xC,eAAApmD,IAAA8V,EAAA+nC,SAAA/nC,EAAA+nC,SAAA,IAMAppC,KAAAusD,mBAAAhhE,EAMAyU,KAAAwsD,gBAAA,GAIA9oD,EAAA,EAAApiB,SAAAgrE,EAAArG,GAQAqG,EAAAzH,iBAAA,SAAAhC,GACA,IAAA4J,EAAA,EAEAT,EAAAhsD,KAAAqlD,eAAA,GACA4G,EAAAjsD,KAAAqlD,eAAA,GACArhE,EAAAgoE,EAAAxG,QAAAyG,EAAAzG,QACAvhE,EAAA+nE,EAAAvG,QAAAwG,EAAAxG,QAGAplD,EAAApd,KAAAgf,KAAAje,IAAAC,UAEAsH,IAAAyU,KAAAusD,gBACAE,EAAAzsD,KAAAusD,cAAAlsD,GAEAL,KAAAusD,cAAAlsD,EAGA,IAAA6T,EAAA2uC,EAAA3uC,IACA69B,EAAA79B,EAAA89B,UACAnqD,EAAAkqD,EAAA1wB,gBACAxM,EAAAk9B,EAAA5a,mBACAviB,EAAAm9B,EAAA3a,mBACAwb,EAAA/qD,EAAA4kE,EACA7Z,EAAA/9B,GACA43C,EAAA53C,EAAAhtB,EACA+qD,EAAA/9B,GACG+9B,EAAAh+B,IACH63C,EAAA73C,EAAA/sB,EACA+qD,EAAAh+B,GAGA,GAAA63C,IACAzsD,KAAAwsD,gBAAAC,GAIA,IAAAP,EAAAh4C,EAAAi4C,cAAAC,wBACA9G,EAAAW,EAAAX,SAAAtlD,KAAAqlD,gBACAC,EAAA,IAAA4G,EAAAv2D,KACA2vD,EAAA,IAAA4G,EAAA1E,IACAxnD,KAAA86B,QAAA5mB,EAAA+xB,uBAAAqf,GAGApxC,EAAAgC,SACAwsC,EAAAF,uBAAAzQ,EAAAa,EAAA5yC,KAAA86B,UAUAwxB,EAAArH,eAAA,SAAApC,GACA,GAAA7iD,KAAAqlD,eAAA3iE,OAAA,GACA,IACAqvD,EADA8Q,EAAA3uC,IACA89B,UACAD,EAAAlI,QAAAC,EAAA,EAAAxrC,aAAA,GACA,IAAAzW,EAAAkqD,EAAA1wB,gBACA,GAAArhB,KAAAkqD,sBACAriE,EAAAkqD,EAAA3a,oBACAvvC,EAAAkqD,EAAA5a,mBAAA,CAIA,IAAA56B,EAAAyD,KAAAwsD,gBAAA,EACA9J,EAAA3hC,KAAAgxB,EAAAlqD,EACAmY,KAAA86B,QAAA96B,KAAA2xC,UAAAp1C,GAEA,SAEA,UAWA+vD,EAAA3H,iBAAA,SAAA9B,GACA,GAAA7iD,KAAAqlD,eAAA3iE,QAAA,GACA,IAAAwxB,EAAA2uC,EAAA3uC,IAOA,OANAlU,KAAA86B,QAAA,KACA96B,KAAAusD,mBAAAhhE,EACAyU,KAAAwsD,gBAAA,EACAxsD,KAAAmlD,wBACAjxC,EAAA89B,UAAAnI,QAAAC,EAAA,EAAAxrC,YAAA,IAEA,EAEA,UAQAguD,EAAA7qE,UAAAukE,gBAAAvC,EAAA,EAAAn5C,MACA,IAAAoiD,EAAA,EC9JAC,IA0BA7Z,SAAA,SAAA5xC,GAEA,IAAAG,EAAAH,MAEA0rD,EAAA,IAAA5Z,EAAA,EAEAoT,EAAA,IAAAvE,GAAA,cAgEA,YA9DAt2D,IAAA8V,EAAAwrD,oBACAxrD,EAAAwrD,qBAEAD,EAAA3gE,KAAA,IAAA+6D,SAGAz7D,IAAA8V,EAAAyrD,iBACAzrD,EAAAyrD,kBAEAF,EAAA3gE,KAAA,IAAAg3D,GACArmC,MAAAvb,EAAA0rD,UACA3jB,SAAA/nC,EAAA2rD,sBAIAzhE,IAAA8V,EAAA4rD,SAAA5rD,EAAA4rD,UAEAL,EAAA3gE,KAAA,IAAA46D,GACAT,mBAIA76D,IAAA8V,EAAA6rD,aAAA7rD,EAAA6rD,cAGAN,EAAA3gE,KAAA,IAAAogE,SAGA9gE,IAAA8V,EAAA8rD,WAAA9rD,EAAA8rD,YAEAP,EAAA3gE,KAAA,IAAAygE,GACAtkB,oBAAA/mC,EAAA+mC,oBACAgB,SAAA/nC,EAAA2rD,sBAIAzhE,IAAA8V,EAAA+rD,UAAA/rD,EAAA+rD,YAEAR,EAAA3gE,KAAA,IAAAy9D,GACAkD,EAAA3gE,KAAA,IAAA29D,GACAhtC,MAAAvb,EAAA0rD,UACA3jB,SAAA/nC,EAAA2rD,uBAIAzhE,IAAA8V,EAAAgsD,gBACAhsD,EAAAgsD,iBAEAT,EAAA3gE,KAAA,IAAAw/D,GACArjB,oBAAA/mC,EAAA+mC,oBACAgB,SAAA/nC,EAAA2rD,sBAIAzhE,IAAA8V,EAAAisD,eACAjsD,EAAAisD,gBAEAV,EAAA3gE,KAAA,IAAA+8D,GACA5f,SAAA/nC,EAAA2rD,gBAIAJ,IAGA1qE,EAAA,8DCpGAqrE,EAAA,SAAAlnC,GAEAmnC,EAAA,EAAAlnE,KAAA0Z,KAAAqmB,IAIA3b,EAAA,EAAAppB,SAAAisE,EAAAC,EAAA,GAMAD,EAAA9rE,UAAAuzC,YAAA,SAAAC,GAEA,IADA,IAAAG,EAAA1C,EACA1yB,KAAA4mB,qBAEA8L,GADA0C,EAAAp1B,KAAAsnB,YACA/O,UAAA,GAAA7B,cACAue,KAAAvC,GAAApT,SAAA8V,EAAA7c,aAGAvY,KAAAgQ,MAAAgU,WASAupC,EAAA9rE,UAAA69D,mBAAA,WACA,OAAAt/C,KAAA6mB,WAAA,CAGA,IAAAz6B,EAAA4T,KAAAwnB,eAEArP,EADAs1C,EAAA,EAAAj1C,QAAApsB,GACA,GACA4T,KAAA+H,QAAA,SAAAqtB,GACAA,EAAA7c,UAAA,KAAAJ,IACAnY,KAAAnD,OAAA4wD,EAAA,EAAAn1C,OAAA8c,EAAA7c,YACA6c,EAAApR,YAEGhkB,QAEH9d,EAAA,kCCtCAA,EAAA,GAJAqvB,MAAA,QACAG,OAAA,mDCDAg8C,EAAA,SAAA/qD,GAEA,IAAA0rB,EAAA3jB,EAAA,EAAAvpB,QAAAupB,EAAA,EAAAvpB,QAAAuyB,MAAA,iBAKA1T,KAAA2tD,QAAA,mDAAAt/B,EACA,gBAAA1rB,EAAA,gBAUA3C,KAAA2C,OAEA3C,KAAA4tD,KAAA,kBAIAljD,EAAA,EAAAppB,SAAAosE,EAAA7rD,OACA3f,EAAA,qFChBA2rE,EAAA,SAAA3sD,GACA,IAAAG,EAAAH,MAGA0S,EAAA3I,EAAA,EAAApQ,UAAsCwG,UAEtCuS,EAAAre,aACAqe,EAAAk6C,oBACAl6C,EAAAm6C,4BACAn6C,EAAAo6C,uBACAC,EAAA,EAAA3nE,KAAA0Z,KAAgE,GAMhEA,KAAAkuD,gBAAA3iE,IAAA8V,EAAA8sD,WAAA9sD,EAAA8sD,UAMAnuD,KAAAouD,mBAAA7iE,IAAA8V,EAAAysD,aACAzsD,EAAAysD,aAAA,IAOA9tD,KAAAquD,OAAA,KAOAruD,KAAAsuD,oBAAA/iE,EAEAyU,KAAAuuD,SAAAltD,EAAA9L,OAMAyK,KAAAwuD,2BAAAjjE,IAAA8V,EAAA0sD,sBACA1sD,EAAA0sD,qBAMA/tD,KAAAyuD,6BAAAljE,IAAA8V,EAAA2sD,wBACA3sD,EAAA2sD,uBAMAhuD,KAAA0uD,YAAArtD,EAAAstD,YAAAC,EAAA,EAAAl9C,OAOA1R,KAAA5U,KAAAyjE,EAAA,EAAAn9C,QAIAhH,EAAA,EAAAppB,SAAAusE,EAAAI,EAAA,GAMAJ,EAAApsE,UAAAqtE,aAAA,WACA,OAAA9uD,KAAAkuD,YAOAL,EAAApsE,UAAAstE,aAAA,SAAAZ,GACAnuD,KAAAkuD,WAAAC,GAOAN,EAAApsE,UAAAutE,gBAAA,WACA,OAAAhvD,KAAAouD,eAQAP,EAAApsE,UAAAwtE,eAAA,WACA,OACmDjvD,KAAAuC,IAAAsrD,EAAAv9C,UAAA4+C,eAWnDrB,EAAApsE,UAAA0zB,UAUA04C,EAAApsE,UAAA0tE,SAAA,WACA,OAAAnvD,KAAAquD,QASAR,EAAApsE,UAAA2tE,iBAAA,WACA,OAAApvD,KAAAsuD,gBAQAT,EAAApsE,UAAA4tE,wBAAA,WACA,OAAArvD,KAAAwuD,uBAQAX,EAAApsE,UAAA6tE,0BAAA,WACA,OAAAtvD,KAAAyuD,yBAQAZ,EAAApsE,UAAA8tE,eAAA,SAAAC,GACAxvD,KAAAnT,IAAAghE,EAAAv9C,UAAA4+C,aAAAM,IAeA3B,EAAApsE,UAAA8sE,SAAA,SAAAh5D,GACAyK,KAAAquD,YAAA9iE,IAAAgK,IAAAk6D,EAAA,EAAAtwB,gBACAn/B,KAAAsuD,eAAA,OAAA/4D,OACAhK,EAAAkkE,EAAA,EAAA1wB,eAAA/+B,KAAAquD,QACAruD,KAAAyV,WAOAo4C,EAAApsE,UAAAiuE,cAAA,WACA,OAAA1vD,KAAA0uD,aAQAb,EAAAv9C,WACA4+C,aAAA,eAEAhtE,EAAA,6DCpNAytE,GAJAC,QAAA,UACAC,2BAAA,kCCeAC,EAAA,SAAA5uD,GACA,IAAAG,EAAAH,MAEA0S,EAAA7xB,EAAA,EAAA8Y,UAAsCwG,UAEtCuS,EAAAm8C,eACAn8C,EAAAo8C,uBACA9f,EAAA,EAAA5pD,KAAA0Z,KAAiE,GAEjEA,KAAAiwD,gBAAA1kE,IAAA8V,EAAA0uD,QAAA1uD,EAAA0uD,QAAA,GACA/vD,KAAAkwD,+BAAA3kE,IAAA8V,EAAA2uD,wBACA3uD,EAAA2uD,wBAOAhwD,KAAA5U,KAAA+kE,EAAA,EAAA3+C,MAIA9N,EAAA,EAAApiB,SAAAwuE,EAAA5f,EAAA,GASA4f,EAAAruE,UAAA2uE,WAAA,WACA,OACoBpwD,KAAAuC,IAAAotD,EAAAC,UAWpBE,EAAAruE,UAAA0zB,UASA26C,EAAAruE,UAAAwuE,WAAA,SAAAF,GACA/vD,KAAAnT,IAAA8iE,EAAAC,QAAAG,IAUAD,EAAAruE,UAAA4uE,0BAAA,WACA,OACqBrwD,KAAAuC,IAAAotD,EAAAE,6BAWrBC,EAAAruE,UAAAyuE,0BAAA,SAAAF,GACAhwD,KAAAnT,IACA8iE,EAAAE,2BAAAG,IAEA9tE,EAAA,kHC3FAouE,GANA3gE,aAAA,cACA4gE,KAAA,OACAC,KAAA,OACAC,IAAA,OCNAC,KAUAA,EAAAC,SAAAv7D,SAAAw7D,eAAAC,eAAA,YAQAH,EAAAI,gBAAA,SAAAC,EAAAC,GACA,OAAAN,EAAAC,SAAAG,gBAAAC,EAAAC,IAYAN,EAAAO,kBAAA,SAAAtxD,EAAAuxD,GACA,OAAAR,EAAAS,mBAAAxxD,EAAAuxD,MAAAl4C,KAAA,KAaA03C,EAAAS,mBAAA,SAAAxxD,EAAAuxD,EAAAE,GASA,IAAA33D,EARA,GAAAkG,EAAA0xD,UAAAC,KAAAC,oBACA5xD,EAAA0xD,UAAAC,KAAAE,UACAN,EACAE,EAAAnlE,KAAA6sB,OAAAnZ,EAAA8xD,WAAAvzC,QAAA,qBAEAkzC,EAAAnlE,KAAA0T,EAAA8xD,gBAIA,IAAAh4D,EAAAkG,EAAA+xD,WAA6Bj4D,EAAGA,IAAAk4D,YAChCjB,EAAAS,mBAAA13D,EAAAy3D,EAAAE,GAGA,OAAAA,GAQAV,EAAAkB,WAAA,SAAAluE,GACA,OAAAA,aAAAmuE,UAQAnB,EAAAlhC,OAAA,SAAA9rC,GACA,OAAAA,aAAA4tE,MAUAZ,EAAAoB,eAAA,SAAAnyD,EAAAoxD,EAAAnD,GACA,OAAAjuD,EAAAmyD,eAAAf,EAAAnD,IAAA,IAUA8C,EAAAqB,eAAA,SAAApyD,EAAAoxD,EAAAnD,EAAAlqE,GACAic,EAAAoyD,eAAAhB,EAAAnD,EAAAlqE,IAUAgtE,EAAAsB,MAAA,SAAAC,GACA,WAAAC,WAAAC,gBAAAF,EAAA,oBAaAvB,EAAA0B,kBAAA,SAAAC,EAAAjsE,GACA,gBAKAuZ,EAAA2yD,GACA,IAAA5uE,EAAA2uE,EAAA/rE,KAAAF,EAAAuZ,EAAA2yD,GACA,QAAA/mE,IAAA7H,EAAA,CACA,IAAAysB,EACAmiD,IAAA5vE,OAAA,GACA6vE,EAAA,EAAAvsE,OAAAmqB,EAAAzsB,MAeAgtE,EAAA8B,gBAAA,SAAAH,EAAAjsE,GACA,gBAKAuZ,EAAA2yD,GACA,IAAA5uE,EAAA2uE,EAAA/rE,UAAAiF,IAAAnF,IAAA4Z,KACAL,EAAA2yD,QACA/mE,IAAA7H,GACA4uE,IAAA5vE,OAAA,GACAuJ,KAAAvI,KAcAgtE,EAAA+B,aAAA,SAAAJ,EAAAjsE,GACA,gBAKAuZ,EAAA2yD,GACA,IAAA5uE,EAAA2uE,EAAA/rE,UAAAiF,IAAAnF,IAAA4Z,KACAL,EAAA2yD,QACA/mE,IAAA7H,IACA4uE,IAAA5vE,OAAA,GAAAgB,KAeAgtE,EAAAgC,yBAAA,SAAAL,EAAAM,EAAAvsE,GACA,gBAKAuZ,EAAA2yD,GACA,IAAA5uE,EAAA2uE,EAAA/rE,UAAAiF,IAAAnF,IAAA4Z,KACAL,EAAA2yD,GACA,QAAA/mE,IAAA7H,EAAA,CACA,IAAA0X,EACAk3D,IAAA5vE,OAAA,GACA2Y,OAAA9P,IAAAonE,EACAA,EAAAhzD,EAAAizD,WAEAv3D,KAAAD,EACAA,EAAAC,GAEAD,EAAAC,OAEApP,KAAAvI,MAcAgtE,EAAAmC,yBAAA,SAAAR,EAAAM,EAAAvsE,GACA,gBAKAuZ,EAAA2yD,GACA,IAAA5uE,EAAA2uE,EAAA/rE,UAAAiF,IAAAnF,IAAA4Z,KACAL,EAAA2yD,QACA/mE,IAAA7H,IAEA4uE,IAAA5vE,OAAA,QACA6I,IAAAonE,EACAA,EAAAhzD,EAAAizD,WACAlvE,KAgBAgtE,EAAAoC,kBAAA,SAAAC,EAAA3sE,GACA,gBAAAuZ,EAAAjc,EAAA4uE,GACAS,EAAAzsE,UAAAiF,IAAAnF,IAAA4Z,KACAL,EAAAjc,EAAA4uE,GACAA,IAAA5vE,OAAA,GACAid,KACA9J,YAAA8J,KAkBA+wD,EAAAsC,oBAAA,SAAAD,EAAA3sE,GACA,IAAA6sE,EAAAC,EACA,gBAAAvzD,EAAAjc,EAAA4uE,GACA,QAAA/mE,IAAA0nE,EAAA,CACAA,KACA,IAAAE,KACAA,EAAAxzD,EAAAizD,WAAAG,EACAE,EAAAtzD,EAAAoxD,cAAAoC,EACAD,EAAAxC,EAAA0C,sBAAAzzD,EAAAizD,WAEAlC,EAAA2C,UAAAJ,EAAAC,EAAAxvE,EAAA4uE,KAkBA5B,EAAA0C,sBAAA,SAAAE,EAAAC,GACA,IAAAC,EAAAF,EACA,gBAOA5vE,EAAA4uE,EAAAgB,GACA,IACA3zD,EADA2yD,IAAA5vE,OAAA,GACAid,KACA8zD,EAAAD,OACAjoE,IAAAkoE,IACAA,EAAAH,GAEA,IAAAvC,EAAAwC,EAIA,YAHAhoE,IAAAgoE,IACAxC,EAAApxD,EAAAoxD,cAEAL,EAAAI,gBAAAC,EAAsE,KAatEL,EAAAgD,6BAAAhD,EAAA0C,wBAeA1C,EAAAiD,aAAA,SAAAv4D,EAAAw4D,GAGA,IAFA,IAAAlxE,EAAAkxE,EAAAlxE,OACAmxE,EAAA,IAAAnnE,MAAAhK,GACAF,EAAA,EAAiBA,EAAAE,IAAYF,EAC7BqxE,EAAArxE,GAAA4Y,EAAAw4D,EAAApxE,IAEA,OAAAqxE,GAcAnD,EAAAoD,gBAAA,SAAAC,EAAAC,EAAAC,GAIA,IACAzxE,EAAAC,EADAyxE,OAAA3oE,IAAA0oE,OAEA,IAAAzxE,EAAA,EAAAC,EAAAsxE,EAAArxE,OAAwCF,EAAAC,IAAQD,EAChD0xE,EAAAH,EAAAvxE,IAAAwxE,EAEA,OAAAE,GAYAxD,EAAAyD,UAAA,SAAAC,EAAAz0D,EAAA2yD,EAAAlsE,GACA,IAAAqT,EACA,IAAAA,EAAAkG,EAAA00D,kBAAkC56D,EAAGA,IAAA66D,mBAAA,CACrC,IAAAC,EAAAH,EAAA36D,EAAAs3D,cACA,QAAAxlE,IAAAgpE,EAAA,CACA,IAAAC,EAAAD,EAAA96D,EAAAm5D,gBACArnE,IAAAipE,GACAA,EAAAluE,KAAAF,EAAAqT,EAAA64D,MAkBA5B,EAAA+D,gBAAA,SACAr5D,EAAAg5D,EAAAz0D,EAAA2yD,EAAAlsE,GAGA,OAFAksE,EAAArmE,KAAAmP,GACAs1D,EAAAyD,UAAAC,EAAAz0D,EAAA2yD,EAAAlsE,GACAksE,EAAAtiD,OA0BA0gD,EAAA2C,UAAA,SACAJ,EAAAC,EAAA33D,EAAA+2D,EAAAoC,EAAAtuE,GAGA,IAFA,IACA1C,EAAAic,EADAjd,QAAA6I,IAAAmpE,IAAAn5D,GAAA7Y,OAEAF,EAAA,EAAiBA,EAAAE,IAAYF,OAE7B+I,KADA7H,EAAA6X,EAAA/Y,UAIA+I,KAFAoU,EAAAuzD,EAAA5sE,KAAAF,EAAA1C,EAAA4uE,OACA/mE,IAAAmpE,IAAAlyE,QAAA+I,KAEA0nE,EAAAtzD,EAAAoxD,cAAApxD,EAAAizD,WACAtsE,KAAAF,EAAAuZ,EAAAjc,EAAA4uE,IA8BA5B,EAAAiE,oBAAA,SAAAv5D,EACA63D,EAAAC,EAAA33D,EAAA+2D,EAAAoC,EAAAtuE,GAIA,OAHAksE,EAAArmE,KAAAmP,GACAs1D,EAAA2C,UACAJ,EAAAC,EAAA33D,EAAA+2D,EAAAoC,EAAAtuE,GACAksE,EAAAtiD,OAEA,IAAAiiD,EAAA,ECzfA2C,GAcAC,gBAAA,SAAAlX,EAAA3/B,EAAA82C,EAAAC,GACA,gBAOAzyE,EAAAuF,EAAAyZ,GACA,IAAA0zD,EAAA,IAAAC,eACAD,EAAAE,KAAA,MACA,mBAAAvX,IAAAr7D,EAAAuF,EAAAyZ,GAAAq8C,GACA,GACA3/B,EAAAzc,WAAA+uD,EAAA3gE,eACAqlE,EAAAG,aAAA,eAMAH,EAAAI,OAAA,SAAA9iD,GAEA,IAAA0iD,EAAAK,QAAAL,EAAAK,QAAA,KAAAL,EAAAK,OAAA,KACA,IAEAn6D,EAFA9P,EAAA4yB,EAAAzc,UAGAnW,GAAAklE,EAAAC,MACAnlE,GAAAklE,EAAAE,KACAt1D,EAAA85D,EAAAM,aACWlqE,GAAAklE,EAAAG,KACXv1D,EAAA85D,EAAAO,eAEAr6D,EAAA+2D,EAAAD,MAAAgD,EAAAM,eAEWlqE,GAAAklE,EAAA3gE,eACXuL,EAA4C85D,EAAA,UAE5C95D,EACA45D,EAAAxuE,KAAA0Z,KAAAge,EAAAw3C,aAAAt6D,GACiBu6D,kBAAAn0D,IACjB0c,EAAA03C,eAAAx6D,GAAA8iB,EAAA23C,iBAEAZ,EAAAzuE,KAAA0Z,WAGA+0D,EAAAzuE,KAAA0Z,OAEOkQ,KAAAlQ,MAIPg1D,EAAAY,QAAA,WACAb,EAAAzuE,KAAA0Z,OACOkQ,KAAAlQ,MACPg1D,EAAAa,SAeAb,IAAA,SAAArX,EAAA3/B,GACA,OAAA42C,EAAAC,gBAAAlX,EAAA3/B,EAMA,SAAA83C,EAAAC,GACA/1D,KAAAg2D,YAAAF,IACOpyD,EAAA,EAAA7hB,gBAEPo0E,EAAA,UCjGAC,GAUA3tC,IAAA,SAAAjmC,EAAAuF,GACA,SAAA5C,oBAYAojC,KAAA,SAAA/lC,EAAAuF,GACA,OAAAvF,IAUA8yC,KAAA,SAAAtwB,GACA,gBAMAxiB,EAAAuF,GACA,IAAAswB,EAAArT,EAAAkd,kBAAAn6B,GACAuxB,EAAAtU,EAAAuU,0BAAA/2B,EAAA61B,GAEA8P,KAEA1P,GAAAJ,EAAA,KACA,IAAAI,EAAA,GAAAa,EAAAp2B,KAAyCu1B,EAAA,IAAAa,EAAA/1B,OACzCk1B,EAAA,GACA,IAAAA,EAAA,GAAAa,EAAAh2B,KAA2Cm1B,EAAA,IAAAa,EAAA71B,OAC3Cg1B,EAAA,GACA0P,EAAAh8B,KAAA6Y,EAAAqc,mBAAA5I,IAGA,OAAA0P,KAGAkuC,EAAA,0BCxBAC,GAzBAC,WAAA,aAOAC,cAAA,gBAOAp/D,MAAA,QAQAq/D,cAAA,yBCGAC,EAAA,SAAAt1D,GAEA,IAAAG,EAAAH,MAEAu1D,EAAA,EAAAnwE,KAAA0Z,MACAmzB,aAAA9xB,EAAA8xB,aACAE,KAAAhyB,EAAAgyB,KACA/xB,gBAAA/V,EACAgoC,QAAA,EAAA3Z,MACAoJ,WAAAz3B,IAAA8V,EAAA2hB,OAAA3hB,EAAA2hB,QAOAhjB,KAAA02D,QAAAhzD,EAAA,EAAA7hB,aAMAme,KAAA22D,QAAAt1D,EAAA2c,OAMAhe,KAAA42D,eAAArrE,GAAA8V,EAAAw1D,UAAAx1D,EAAAw1D,SAMA72D,KAAA82D,KAAAz1D,EAAAs8C,SAEApyD,IAAA8V,EAAA01D,OACA/2D,KAAA02D,QAAAr1D,EAAA01D,YACGxrE,IAAAyU,KAAA82D,OACHj3C,EAAA,EAAAp4B,OAAAuY,KAAA22D,QAAA,GAEA32D,KAAA02D,QAAAT,EAAAjB,IAAAh1D,KAAA82D,KAAkF92D,KAAA,UAOlFA,KAAAg3D,eAAAzrE,IAAA8V,EAAA41D,SAAA51D,EAAA41D,SACAd,EAAA5tC,IAEA,IA+CAyqB,EAAA8iB,EA/CAoB,OACA3rE,IAAA8V,EAAA61D,iBAAA71D,EAAA61D,gBAMAl3D,KAAAm3D,eAAAD,EAAA,IAAApuC,EAAA,OAMA9oB,KAAAo3D,oBAAA,IAAAtuC,EAAA,EAMA9oB,KAAAq3D,yBAOAr3D,KAAAs3D,YAOAt3D,KAAAu3D,iBAMAv3D,KAAAw3D,sBAMAx3D,KAAAy3D,oBAAA,KAGAp2D,EAAAy0D,oBAAA4B,EAAA,EAEA5B,GADA9iB,EAAA3xC,EAAAy0D,UACA1lD,WACG1jB,MAAAkQ,QAAAyE,EAAAy0D,YACHA,EAAAz0D,EAAAy0D,UAEAoB,QAAA3rE,IAAAynD,IACAA,EAAA,IAAA0kB,EAAA,EAAA5B,SAEAvqE,IAAAuqE,GACA91D,KAAA23D,oBAAA7B,QAEAvqE,IAAAynD,GACAhzC,KAAA43D,wBAAA5kB,IAKAtvC,EAAA,EAAApiB,SAAAk1E,EAAAC,EAAA,GAYAD,EAAA/0E,UAAAo2E,WAAA,SAAA/4B,GACA9+B,KAAA83D,mBAAAh5B,GACA9+B,KAAAyV,WASA+gD,EAAA/0E,UAAAq2E,mBAAA,SAAAh5B,GACA,IAAAi5B,EAAAr0D,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WAEA,GAAA1W,KAAAg4D,YAAAD,EAAAj5B,GAAA,CAIA9+B,KAAAi4D,mBAAAF,EAAAj5B,GAEA,IAAA79B,EAAA69B,EAAAT,cACA,GAAAp9B,EAAA,CACA,IAAA3e,EAAA2e,EAAAkD,YACAnE,KAAAm3D,gBACAn3D,KAAAm3D,eAAApvC,OAAAzlC,EAAAw8C,QAGA9+B,KAAAq3D,sBAAAU,GAAAj5B,EAGA9+B,KAAAqL,cACA,IAAAmrD,EAAAlrD,MAAA8qD,EAAAC,WAAAv3B,MASA03B,EAAA/0E,UAAAw2E,mBAAA,SAAAF,EAAAj5B,GACA9+B,KAAAw3D,mBAAAO,IACA/pB,EAAA,EAAAliD,OAAAgzC,EAAAyQ,EAAA,EAAAt4C,OACA+I,KAAAk4D,qBAAAl4D,MACAguC,EAAA,EAAAliD,OAAAgzC,EAAAq5B,EAAA,EAAA3sD,eACAxL,KAAAk4D,qBAAAl4D,QAYAw2D,EAAA/0E,UAAAu2E,YAAA,SAAAD,EAAAj5B,GACA,IAAAs5B,GAAA,EACA77B,EAAAuC,EAAAu5B,QAYA,YAXA9sE,IAAAgxC,EACAA,EAAA7lB,aAAA1W,KAAAs3D,SAGAc,GAAA,EAFAp4D,KAAAs3D,SAAA/6B,EAAA7lB,YAAAooB,GAKAjf,EAAA,EAAAp4B,SAAAswE,KAAA/3D,KAAAu3D,eACA,IACAv3D,KAAAu3D,cAAAQ,GAAAj5B,GAEAs5B,GASA5B,EAAA/0E,UAAAu0E,YAAA,SAAAF,GACA91D,KAAA23D,oBAAA7B,GACA91D,KAAAyV,WASA+gD,EAAA/0E,UAAAk2E,oBAAA,SAAA7B,GACA,IAAAiC,EAAAv1E,EAAAE,EAAAo8C,EAEA7W,KACAqwC,KACAC,KAEA,IAAA/1E,EAAA,EAAAE,EAAAozE,EAAApzE,OAAuCF,EAAAE,EAAYF,IACnDs8C,EAAAg3B,EAAAtzE,GACAu1E,EAAAr0D,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACA1W,KAAAg4D,YAAAD,EAAAj5B,IACAw5B,EAAArsE,KAAA6yC,GAIA,IAAAt8C,EAAA,EAAAE,EAAA41E,EAAA51E,OAA0CF,EAAAE,EAAYF,IAAA,CACtDs8C,EAAAw5B,EAAA91E,GACAu1E,EAAAr0D,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACA1W,KAAAi4D,mBAAAF,EAAAj5B,GAEA,IAAA79B,EAAA69B,EAAAT,cACA,GAAAp9B,EAAA,CACA,IAAA3e,EAAA2e,EAAAkD,YACA8jB,EAAAh8B,KAAA3J,GACAi2E,EAAAtsE,KAAA6yC,QAEA9+B,KAAAq3D,sBAAAU,GAAAj5B,EAOA,IAJA9+B,KAAAm3D,gBACAn3D,KAAAm3D,eAAAnvC,KAAAC,EAAAswC,GAGA/1E,EAAA,EAAAE,EAAA41E,EAAA51E,OAA0CF,EAAAE,EAAYF,IACtDwd,KAAAqL,cAAA,IAAAmrD,EAAAlrD,MACA8qD,EAAAC,WAAAiC,EAAA91E,MASAg0E,EAAA/0E,UAAAm2E,wBAAA,SAAA5kB,GACA,IAAAwlB,GAAA,EACAxqB,EAAA,EAAAliD,OAAAkU,KAAAo2D,EAAAC,WACA,SAAA5rE,GACA+tE,IACAA,GAAA,EACAxlB,EAAA/mD,KAAAxB,EAAAq0C,SACA05B,GAAA,KAGAxqB,EAAA,EAAAliD,OAAAkU,KAAAo2D,EAAAG,cACA,SAAA9rE,GACA+tE,IACAA,GAAA,EACAxlB,EAAAn2C,OAAApS,EAAAq0C,SACA05B,GAAA,KAGAxqB,EAAA,EAAAliD,OAAAknD,EAAAylB,EAAA,EAAA9nD,IACA,SAAAlmB,GACA+tE,IACAA,GAAA,EACAx4D,KAAA63D,WAAgDptE,EAAA,SAChD+tE,GAAA,IAEOx4D,MACPguC,EAAA,EAAAliD,OAAAknD,EAAAylB,EAAA,EAAA3nD,OACA,SAAArmB,GACA+tE,IACAA,GAAA,EACAx4D,KAAA04D,cAAmDjuE,EAAA,SACnD+tE,GAAA,IAEOx4D,MACPA,KAAAy3D,oBAAAzkB,GASAwjB,EAAA/0E,UAAAmK,MAAA,SAAA+sE,GACA,GAAAA,EAAA,CACA,QAAAC,KAAA54D,KAAAw3D,mBAAA,CACAx3D,KAAAw3D,mBAAAoB,GACA7wD,QAAAimC,EAAA,EAAAljD,eAEAkV,KAAAy3D,sBACAz3D,KAAAw3D,sBACAx3D,KAAAs3D,YACAt3D,KAAAu3D,uBAGA,GAAAv3D,KAAAm3D,eAEA,QAAA56B,KADAv8B,KAAAm3D,eAAApvD,QAAA/H,KAAA64D,sBAAA74D,MACAA,KAAAq3D,sBACAr3D,KAAA64D,sBAAA74D,KAAAq3D,sBAAA96B,IAIAv8B,KAAAy3D,qBACAz3D,KAAAy3D,oBAAA7rE,QAGAoU,KAAAm3D,gBACAn3D,KAAAm3D,eAAAvrE,QAEAoU,KAAAo3D,oBAAAxrE,QACAoU,KAAAq3D,yBAEA,IAAAyB,EAAA,IAAAtC,EAAAlrD,MAAA8qD,EAAAl/D,OACA8I,KAAAqL,cAAAytD,GACA94D,KAAAyV,WAgBA+gD,EAAA/0E,UAAAs3E,eAAA,SAAA5yE,EAAAC,GACA,OAAA4Z,KAAAm3D,eACAn3D,KAAAm3D,eAAApvD,QAAA5hB,EAAAC,GACG4Z,KAAAy3D,oBACHz3D,KAAAy3D,oBAAA1vD,QAAA5hB,EAAAC,QADG,GAmBHowE,EAAA/0E,UAAAu3E,iCAAA,SAAA70E,EAAAgC,EAAAC,GACA,IAAA9D,GAAA6B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,OAAA6b,KAAAi5D,uBAAA32E,EAAA,SAAAw8C,GAEA,OADAA,EAAAT,cACA6G,qBAAA/gD,GACAgC,EAAAG,KAAAF,EAAA04C,QAEA,KA2BA03B,EAAA/0E,UAAAw3E,uBAAA,SAAA32E,EAAA6D,EAAAC,GACA,OAAA4Z,KAAAm3D,eACAn3D,KAAAm3D,eAAAxuC,gBAAArmC,EAAA6D,EAAAC,GACG4Z,KAAAy3D,oBACHz3D,KAAAy3D,oBAAA1vD,QAAA5hB,EAAAC,QADG,GAuBHowE,EAAA/0E,UAAAy3E,iCAAA,SAAA52E,EAAA6D,EAAAC,GACA,OAAA4Z,KAAAi5D,uBAAA32E,EAMA,SAAAw8C,GAEA,GADAA,EAAAT,cACAqD,iBAAAp/C,GAAA,CACA,IAAAk1B,EAAArxB,EAAAG,KAAAF,EAAA04C,GACA,GAAAtnB,EACA,OAAAA,MAcAg/C,EAAA/0E,UAAA03E,sBAAA,WACA,OAAAn5D,KAAAy3D,qBASAjB,EAAA/0E,UAAA23E,YAAA,WACA,IAAAtD,EAUA,OATA91D,KAAAy3D,oBACA3B,EAAA91D,KAAAy3D,oBAAArnD,WACGpQ,KAAAm3D,iBACHrB,EAAA91D,KAAAm3D,eAAA7uC,SACA+wC,EAAA,EAAAxyE,QAAAmZ,KAAAq3D,wBACA9E,EAAA,EAAAvsE,OACA8vE,EAAAuD,EAAA,EAAA/9D,UAAA0E,KAAAq3D,yBAGuC,GAUvCb,EAAA/0E,UAAA63E,wBAAA,SAAAn1E,GACA,IAAA2xE,KAIA,OAHA91D,KAAAg5D,iCAAA70E,EAAA,SAAA26C,GACAg3B,EAAA7pE,KAAA6yC,KAEAg3B,GAeAU,EAAA/0E,UAAA83E,oBAAA,SAAAj3E,GACA,OAAA0d,KAAAm3D,eAAA3uC,YAAAlmC,IAgBAk0E,EAAA/0E,UAAA+3E,8BAAA,SAAAr1E,EAAAs1E,GAQA,IAAA31E,EAAAK,EAAA,GACAJ,EAAAI,EAAA,GACAu1E,EAAA,KACA/5B,GAAAY,SACAH,EAAAn7C,IACA3C,IAAA2C,kBACAylD,EAAA+uB,GAAAhW,EAAA,EAAAp5C,KAyBA,OAxBArK,KAAAm3D,eAAAxuC,gBAAArmC,EAIA,SAAAw8C,GACA,GAAA4L,EAAA5L,GAAA,CACA,IAAA79B,EAAA69B,EAAAT,cACAs7B,EAAAv5B,EAGA,IAFAA,EAAAn/B,EAAAmgC,eACAt9C,EAAAC,EAAA47C,EAAAS,IACAu5B,EAAA,CACAD,EAAA56B,EAKA,IAAA86B,EAAA32E,KAAAgf,KAAAm+B,GACA99C,EAAA,GAAAwB,EAAA81E,EACAt3E,EAAA,GAAAyB,EAAA61E,EACAt3E,EAAA,GAAAwB,EAAA81E,EACAt3E,EAAA,GAAAyB,EAAA61E,MAIAF,GAcAlD,EAAA/0E,UAAA0iB,UAAA,SAAAphB,GACA,OAAAid,KAAAm3D,eAAAhzD,UAAAphB,IAaAyzE,EAAA/0E,UAAAo4E,eAAA,SAAAt9B,GACA,IAAAuC,EAAA9+B,KAAAs3D,SAAA/6B,EAAA7lB,YACA,YAAAnrB,IAAAuzC,IAAA,MAUA03B,EAAA/0E,UAAAq4E,UAAA,WACA,OAAA95D,KAAA22D,SAOAH,EAAA/0E,UAAAs4E,YAAA,WACA,OAAA/5D,KAAA42D,WAOAJ,EAAA/0E,UAAA6/B,eAAA,aASAk1C,EAAA/0E,UAAAu4E,OAAA,WACA,OAAAh6D,KAAA82D,MAQAN,EAAA/0E,UAAAy2E,qBAAA,SAAA5lD,GACA,IAAAwsB,EAAsCxsB,EAAA,OACtCylD,EAAAr0D,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACAzV,EAAA69B,EAAAT,cACA,GAAAp9B,EAOG,CACH,IAAA3e,EAAA2e,EAAAkD,YACA4zD,KAAA/3D,KAAAq3D,8BACAr3D,KAAAq3D,sBAAAU,GACA/3D,KAAAm3D,gBACAn3D,KAAAm3D,eAAApvC,OAAAzlC,EAAAw8C,IAGA9+B,KAAAm3D,gBACAn3D,KAAAm3D,eAAA/uC,OAAA9lC,EAAAw8C,QAfAi5B,KAAA/3D,KAAAq3D,wBACAr3D,KAAAm3D,gBACAn3D,KAAAm3D,eAAAt6D,OAAAiiC,GAEA9+B,KAAAq3D,sBAAAU,GAAAj5B,GAeA,IAAAvC,EAAAuC,EAAAu5B,QACA,QAAA9sE,IAAAgxC,EAAA,CACA,IAAA09B,EAAA19B,EAAA7lB,WACAqhD,KAAA/3D,KAAAu3D,sBACAv3D,KAAAu3D,cAAAQ,GACA/3D,KAAAs3D,SAAA2C,GAAAn7B,GAEA9+B,KAAAs3D,SAAA2C,KAAAn7B,IACA9+B,KAAAk6D,mBAAAp7B,GACA9+B,KAAAs3D,SAAA2C,GAAAn7B,QAIAi5B,KAAA/3D,KAAAu3D,gBACAv3D,KAAAk6D,mBAAAp7B,GACA9+B,KAAAu3D,cAAAQ,GAAAj5B,GAGA9+B,KAAAyV,UACAzV,KAAAqL,cAAA,IAAAmrD,EAAAlrD,MACA8qD,EAAAE,cAAAx3B,KAOA03B,EAAA/0E,UAAAoF,QAAA,WACA,OAAAmZ,KAAAm3D,eAAAtwE,WACAwyE,EAAA,EAAAxyE,QAAAmZ,KAAAq3D,wBASAb,EAAA/0E,UAAA04E,aAAA,SACA73E,EAAAuF,EAAAyZ,GACA,IAEA9e,EAAAC,EAFA23E,EAAAp6D,KAAAo3D,oBACAiD,EAAAr6D,KAAAg3D,UAAA10E,EAAAuF,GAEA,IAAArF,EAAA,EAAAC,EAAA43E,EAAA33E,OAAwCF,EAAAC,IAAQD,EAAA,CAChD,IAAA83E,EAAAD,EAAA73E,GACA43E,EAAAzxC,gBAAA2xC,EAKA,SAAAl/D,GACA,OAAA6O,EAAA,EAAA5lB,eAAA+W,EAAA9Y,OAAAg4E,OAGAt6D,KAAA02D,QAAApwE,KAAA0Z,KAAAs6D,EAAAzyE,EAAAyZ,GACA84D,EAAAryC,OAAAuyC,GAA+Ch4E,OAAAg4E,EAAA12E,aAW/C4yE,EAAA/0E,UAAA84E,mBAAA,SAAAj4E,GACA,IACAP,EADAq4E,EAAAp6D,KAAAo3D,oBAEAgD,EAAAzxC,gBAAArmC,EAAA,SAAA8Y,GACA,GAAA6O,EAAA,EAAAlkB,OAAAqV,EAAA9Y,UAEA,OADAP,EAAAqZ,GACA,IAGArZ,GACAq4E,EAAAv9D,OAAA9a,IAYAy0E,EAAA/0E,UAAAi3E,cAAA,SAAA55B,GACA,IAAAi5B,EAAAr0D,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACAqhD,KAAA/3D,KAAAq3D,6BACAr3D,KAAAq3D,sBAAAU,GAEA/3D,KAAAm3D,gBACAn3D,KAAAm3D,eAAAt6D,OAAAiiC,GAGA9+B,KAAA64D,sBAAA/5B,GACA9+B,KAAAyV,WASA+gD,EAAA/0E,UAAAo3E,sBAAA,SAAA/5B,GACA,IAAAi5B,EAAAr0D,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACA1W,KAAAw3D,mBAAAO,GAAAhwD,QAAAimC,EAAA,EAAAljD,sBACAkV,KAAAw3D,mBAAAO,GACA,IAAAx7B,EAAAuC,EAAAu5B,aACA9sE,IAAAgxC,SACAv8B,KAAAs3D,SAAA/6B,EAAA7lB,mBAEA1W,KAAAu3D,cAAAQ,GAEA/3D,KAAAqL,cAAA,IAAAmrD,EAAAlrD,MACA8qD,EAAAG,cAAAz3B,KAWA03B,EAAA/0E,UAAAy4E,mBAAA,SAAAp7B,GACA,IAAA07B,GAAA,EACA,QAAAj+B,KAAAv8B,KAAAs3D,SACA,GAAAt3D,KAAAs3D,SAAA/6B,KAAAuC,EAAA,QACA9+B,KAAAs3D,SAAA/6B,GACAi+B,GAAA,EACA,MAGA,OAAAA,GAUAhE,EAAA/0E,UAAAg5E,UAAA,SAAA1D,GACA/2D,KAAA02D,QAAAK,GAeAP,EAAAlrD,MAAA,SAAAlgB,EAAAsvE,GAEAlS,EAAA,EAAAliE,KAAA0Z,KAAA5U,GAOA4U,KAAA8+B,QAAA47B,GAGAh3D,EAAA,EAAApiB,SAAAk1E,EAAAlrD,MAAAk9C,EAAA,GACAtmE,EAAA,4GC/1BAqtD,GAVAvjC,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBCNAouD,EAAA,SAAAC,EAAAC,GAIA76D,KAAA46D,aAOA56D,KAAA86D,SAAAD,GAQAF,EAAAl5E,UAAAs5E,UAAA,WACA,OAAAr5E,OAAAmK,KAAAmU,KAAA86D,WASAH,EAAAl5E,UAAAu5E,mBAAA,SAAA5vD,GACA,OAAApL,KAAA86D,SAAA1vD,IAEA,IAAA6vD,EAAA,ECAAC,EAAA,SAAAN,GACA,IAAAC,GACAM,UAAAn7D,KAAAm7D,UACAC,UAAAp7D,KAAAo7D,UACAC,QAAAr7D,KAAAq7D,QACAC,UAAAt7D,KAAAs7D,UACAC,SAAAv7D,KAAAu7D,UAEAN,EAAA30E,KAAA0Z,KAAA46D,EAAAC,GAMA76D,KAAAw7D,WAAAZ,EAAAY,WAMAx7D,KAAAy7D,gBAGA/3D,EAAA,EAAApiB,SAAA45E,EAAAD,GAOAC,EAAAQ,WAAA,EAOAR,EAAAS,aAAA,QASAT,EAAAU,WAAA,GA2BAV,EAAAz5E,UAAAo6E,2BAAA,SAAAC,GAGA,IAFA,IAEAxiE,EAFAyiE,EAAA/7D,KAAAy7D,YACA33E,EAAAg4E,EAAAtW,QAAAzhE,EAAA+3E,EAAArW,QACAjjE,EAAA,EAAA2X,EAAA4hE,EAAAr5E,OAAoCF,EAAA2X,IAAAb,EAAAyiE,EAAAv5E,IAAuBA,IAAA,CAE3D,IAAAwB,EAAAf,KAAA2W,IAAA9V,EAAAwV,EAAA,IAAArV,EAAAhB,KAAA2W,IAAA7V,EAAAuV,EAAA,IACA,GAAAtV,GAAAk3E,EAAAU,YACA33E,GAAAi3E,EAAAU,WACA,SAGA,UAYAV,EAAAc,aAAA,SAAAF,EAAAlB,GACA,IAAA3sE,EAAA2sE,EAAAqB,WAAAH,KAGAI,EAAAjuE,EAAAsgB,eAUA,OATAtgB,EAAAsgB,eAAA,WACAutD,EAAAvtD,iBACA2tD,KAGAjuE,EAAA23D,UAAAsV,EAAAQ,WACAztE,EAAAu2D,WAAA,EACAv2D,EAAAq2D,YAAA4W,EAAAS,aAEA1tE,GASAitE,EAAAz5E,UAAA05E,UAAA,SAAAW,GACA,IAAA97D,KAAA67D,2BAAAC,GAAA,CAGAZ,EAAAQ,WAAAhlD,aAAA1W,KAAAw7D,YACAx7D,KAAAm8D,OAAAL,GAEA,IAAA7tE,EAAAitE,EAAAc,aAAAF,EAAA97D,KAAA46D,YACA56D,KAAAw7D,WAAAN,EAAAQ,WAAAhlD,YAAAolD,EACA97D,KAAA46D,WAAAwB,KAAAnuE,EAAA6tE,KAUAZ,EAAAz5E,UAAA25E,UAAA,SAAAU,GACA,IAAA97D,KAAA67D,2BAAAC,GAAA,CACA,IAAA7tE,EAAAitE,EAAAc,aAAAF,EAAA97D,KAAA46D,YACA56D,KAAA46D,WAAAyB,KAAApuE,EAAA6tE,KAUAZ,EAAAz5E,UAAA45E,QAAA,SAAAS,GACA,IAAA97D,KAAA67D,2BAAAC,GAAA,CACA,IAAA/uC,EAAA/sB,KAAAw7D,WAAAN,EAAAQ,WAAAhlD,YAEA,GAAAqW,KAAAqiB,SAAA0sB,EAAA1sB,OAAA,CACA,IAAAnhD,EAAAitE,EAAAc,aAAAF,EAAA97D,KAAA46D,YACA56D,KAAA46D,WAAA0B,GAAAruE,EAAA6tE,GACA97D,KAAAu8D,kBAWArB,EAAAz5E,UAAA65E,UAAA,SAAAQ,GACA,IAAA97D,KAAA67D,2BAAAC,GAAA,CACA,IAAA7tE,EAAAitE,EAAAc,aAAAF,EAAA97D,KAAA46D,YACA56D,KAAA46D,WAAA4B,UAAAvuE,EAAA6tE,KAUAZ,EAAAz5E,UAAA85E,SAAA,SAAAO,GACA,IAAA97D,KAAA67D,2BAAAC,GAAA,CACA,IAAA7tE,EAAAitE,EAAAc,aAAAF,EAAA97D,KAAA46D,YACA56D,KAAA46D,WAAA6B,SAAAxuE,EAAA6tE,KAUAZ,EAAAz5E,UAAA06E,OAAA,SAAAL,GACA,IAAA7tE,EAAAitE,EAAAc,aAAAF,EAAA97D,KAAA46D,YACA56D,KAAA46D,WAAAuB,OAAAluE,EAAA6tE,GACA97D,KAAAu8D,gBAOArB,EAAAz5E,UAAA86E,aAAA,kBACAv8D,KAAAw7D,WAAAN,EAAAQ,WAAAhlD,aAEA,IAAAgmD,EAAA,EChNAC,EAAA,SAAA/B,GACA,IAAAC,GACA+B,cAAA58D,KAAA68D,cACAC,cAAA98D,KAAA+8D,cACAC,YAAAh9D,KAAAi9D,YACAC,aAAAl9D,KAAAm9D,aACAC,cAAAp9D,KAAAq9D,cACAC,gBAAAt9D,KAAAu9D,gBACAC,oBAAAx9D,KAAAy9D,oBACAC,qBAAA19D,KAAA29D,sBAEA1C,EAAA30E,KAAA0Z,KAAA46D,EAAAC,GAMA76D,KAAAw7D,WAAAZ,EAAAY,WAMAx7D,KAAA49D,eACA,GACA,cACA,QACA,MACA,UAIAl6D,EAAA,EAAApiB,SAAAq7E,EAAA1B,GAWA0B,EAAAl7E,UAAAo8E,cAAA,SAAA/B,GACA,IAAA7tE,EAAA6tE,EAMA,MALA,iBAAAA,EAAAxX,eACAr2D,EAAA+R,KAAA46D,WAAAqB,WAAAH,MACAxX,YAAAtkD,KAAA49D,cAAA9B,EAAAxX,cAGAr2D,GAQA0uE,EAAAl7E,UAAAq8E,QAAA,SAAAlY,UACA5lD,KAAAw7D,WAAA5V,EAAAlvC,aASAimD,EAAAl7E,UAAAo7E,cAAA,SAAAf,GACA97D,KAAAw7D,WAAAM,EAAAlW,UAAAlvC,YAAAolD,EACA,IAAA7tE,EAAA+R,KAAA69D,cAAA/B,GACA97D,KAAA46D,WAAAwB,KAAAnuE,EAAA6tE,IASAa,EAAAl7E,UAAAs7E,cAAA,SAAAjB,GACA,IAAA7tE,EAAA+R,KAAA69D,cAAA/B,GACA97D,KAAA46D,WAAAyB,KAAApuE,EAAA6tE,IASAa,EAAAl7E,UAAAw7E,YAAA,SAAAnB,GACA,IAAA7tE,EAAA+R,KAAA69D,cAAA/B,GACA97D,KAAA46D,WAAA0B,GAAAruE,EAAA6tE,GACA97D,KAAA89D,QAAAhC,EAAAlW,YASA+W,EAAAl7E,UAAA07E,aAAA,SAAArB,GACA,IAAA7tE,EAAA+R,KAAA69D,cAAA/B,GACA97D,KAAA46D,WAAA6B,SAAAxuE,EAAA6tE,IASAa,EAAAl7E,UAAA47E,cAAA,SAAAvB,GACA,IAAA7tE,EAAA+R,KAAA69D,cAAA/B,GACA97D,KAAA46D,WAAA4B,UAAAvuE,EAAA6tE,IASAa,EAAAl7E,UAAA87E,gBAAA,SAAAzB,GACA,IAAA7tE,EAAA+R,KAAA69D,cAAA/B,GACA97D,KAAA46D,WAAAuB,OAAAluE,EAAA6tE,GACA97D,KAAA89D,QAAAhC,EAAAlW,YASA+W,EAAAl7E,UAAAk8E,qBAAA,SAAA7B,GACA,IAAA7tE,EAAA+R,KAAA46D,WAAAmD,UAAA,qBACAjC,KACA97D,KAAA46D,WAAAvvD,cAAApd,IASA0uE,EAAAl7E,UAAAg8E,oBAAA,SAAA3B,GACA,IAAA7tE,EAAA+R,KAAA46D,WAAAmD,UAAA,oBACAjC,KACA97D,KAAA46D,WAAAvvD,cAAApd,IAEA,IAAA+vE,EAAA,EC1JAC,EAAA,SAAArD,GACA,IAAAC,GACAqD,YAAAl+D,KAAAm+D,YACAC,YAAAp+D,KAAA6jD,YACAwa,UAAAr+D,KAAAs+D,UACAC,WAAAv+D,KAAAw+D,WACAC,YAAAz+D,KAAA0+D,YACAC,cAAA3+D,KAAA4+D,cACAC,kBAAA7+D,KAAA8+D,kBACAC,mBAAA/+D,KAAAg/D,oBAEA/D,EAAA30E,KAAA0Z,KAAA46D,EAAAC,IAGAn3D,EAAA,EAAApiB,SAAA28E,EAAAhD,GAQAgD,EAAAx8E,UAAA08E,YAAA,SAAArC,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IASAmC,EAAAx8E,UAAAoiE,YAAA,SAAAiY,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IASAmC,EAAAx8E,UAAA68E,UAAA,SAAAxC,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IASAmC,EAAAx8E,UAAA+8E,WAAA,SAAA1C,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IASAmC,EAAAx8E,UAAAi9E,YAAA,SAAA5C,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IASAmC,EAAAx8E,UAAAm9E,cAAA,SAAA9C,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IASAmC,EAAAx8E,UAAAu9E,mBAAA,SAAAlD,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IASAmC,EAAAx8E,UAAAq9E,kBAAA,SAAAhD,GACA97D,KAAA46D,WAAAqE,gBAAAnD,IAEA,IAAAoD,EAAA,UCvFAC,EAAA,SAAA/zE,EAAAu6B,EAAAy5C,GACA5W,EAAA,EAAAliE,KAAA0Z,KAAA5U,GAMA4U,KAAA2lB,gBAEA,IAAA05C,EAAAD,MAKAp/D,KAAAs/D,QAAAt/D,KAAAu/D,YAAAF,GAKAr/D,KAAAw/D,SAAAx/D,KAAAy/D,aAAAJ,EAAAr/D,KAAAs/D,SAOAt/D,KAAA0/D,QAAA,YAAAL,KAAA,QAKAr/D,KAAA2/D,WAAA,eAAAN,KAAA,WAKAr/D,KAAA+xC,KAAA,SAAAstB,IAAA,UAKAr/D,KAAA4/D,OAAA,WAAAP,IAAA,YAKAr/D,KAAA6/D,QAAA,YAAAR,IAAA,UAKAr/D,KAAA8/D,QAAA,YAAAT,IAAA,UAKAr/D,KAAAwlD,QAAA,YAAA6Z,IAAA,UAKAr/D,KAAAylD,QAAA,YAAA4Z,IAAA,UAKAr/D,KAAAsjD,QAAA,YAAA+b,KAAA,QAKAr/D,KAAAojD,OAAA,WAAAic,KAAA,OAKAr/D,KAAAgjD,SAAA,aAAAqc,KAAA,SAKAr/D,KAAAqjD,QAAA,YAAAgc,KAAA,QAKAr/D,KAAAovC,OAAA,WAAAiwB,IAAA,SAKAr/D,KAAA+/D,cAAA,kBAAAV,EACAA,EAAA,mBAQAr/D,KAAA4lD,UAAA,cAAAyZ,IAAA,YAKAr/D,KAAA9L,MAAA,UAAAmrE,IAAA,QAKAr/D,KAAA7K,OAAA,WAAAkqE,IAAA,SAKAr/D,KAAAggE,MAAA,UAAAX,IAAA,QAKAr/D,KAAAigE,MAAA,UAAAZ,IAAA,QAKAr/D,KAAAskD,YAAA,gBAAA+a,IAAA,eAKAr/D,KAAAkgE,YAAA,gBAAAb,IAAA,cAKAr/D,KAAAwkD,UAAA,cAAA6a,KAAA,UAGA15C,EAAApX,iBACAvO,KAAAuO,eAAA,WACAoX,EAAApX,oBAKA7K,EAAA,EAAApiB,SAAA69E,EAAA3W,EAAA,GAQA2W,EAAA19E,UAAA89E,YAAA,SAAAF,GAsBA,IAAAC,EACA,GAAAD,EAAAC,SAAAH,EAAAgB,YACAb,EAAAD,EAAAC,aAEA,OAAAD,EAAAe,OACA,OAAAd,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,QAAAA,EAAA,EAGA,OAAAA,GAUAH,EAAA19E,UAAAg+E,aAAA,SAAAJ,EAAAC,GASA,OALAD,EAAAG,SACAH,EAAAG,SAEAF,EAAA,MAUAH,EAAAgB,aAAA,EAMA,WACA,IACA,IAAAE,EAAA,IAAAC,WAAA,SAAsChB,QAAA,IACtCH,EAAAgB,YAAA,IAAAE,EAAAf,QACG,MAAArxE,KAJH,GAQA,IAAAsyE,EAAA,UCxOAC,EAAA,SAAA5F,EAAA6F,GACA,IAAA5F,GACA6F,WAAA1gE,KAAA0gE,WACAC,UAAA3gE,KAAA2gE,UACAC,SAAA5gE,KAAA4gE,SACAC,YAAA7gE,KAAA6gE,aAEA5F,EAAA30E,KAAA0Z,KAAA46D,EAAAC,GAMA76D,KAAAw7D,WAAAZ,EAAAY,WAMAx7D,KAAAygE,cAMAzgE,KAAA8gE,mBAAAv1E,EAMAyU,KAAA+gE,YAAA,EAMA/gE,KAAAghE,cAAAz1E,GAGAmY,EAAA,EAAApiB,SAAAk/E,EAAAvF,GASAuF,EAAAS,cAAA,KAOAT,EAAAU,oBAAA,IAOAV,EAAA7E,aAAA,QAQA6E,EAAA/+E,UAAA0/E,gBAAA,SAAAC,GACA,OAAAphE,KAAA8gE,gBAAAM,EAAAC,YASAb,EAAA/+E,UAAA6/E,iBAAA,SAAAF,GACA,IAAAG,EAAA7/E,OAAAmK,KAAAmU,KAAAw7D,YAAA94E,QACA,IAAA6+E,GAAA,IAAAA,GACA7E,EAAAhB,WAAAhlD,aAAA1W,KAAAw7D,cACAx7D,KAAA8gE,cAAAM,EAAAC,WACArhE,KAAAwhE,2BASAhB,EAAA/+E,UAAAggF,sBAAA,SAAAC,GACAA,EAAAld,YACAxkD,KAAA8gE,mBAAAv1E,EACAyU,KAAA2hE,qBAQAnB,EAAA/+E,UAAAkgF,iBAAA,WACA3hE,KAAAghE,SAAA/zB,WACAjtC,KAAA4hE,wBAAA1xD,KAAAlQ,MACAwgE,EAAAU,sBAOAV,EAAA/+E,UAAAmgF,wBAAA,WACA5hE,KAAA+gE,YAAA,EACA/gE,KAAAghE,cAAAz1E,GAOAi1E,EAAA/+E,UAAA+/E,uBAAA,gBACAj2E,IAAAyU,KAAAghE,UACA7V,aAAAnrD,KAAAghE,WAWAR,EAAA/+E,UAAAogF,gBAAA,SAAAh8B,EAAAu7B,GACA,IAAAnzE,EAAA+R,KAAA46D,WAAAqB,WAAAp2B,EAAAu7B,GAyBA,OArBAnzE,EAAA23D,UAAAwb,EAAAC,WAAA,EAGApzE,EAAAyxE,SAAA,EACAzxE,EAAA0xE,YAAA,EACA1xE,EAAA2xE,OAAA5/D,KAAA+gE,YACA9yE,EAAAmhD,OAAA,EACAnhD,EAAAqxE,QAAA,EACArxE,EAAAiG,MAAAktE,EAAAU,eAAAV,EAAAW,SAAA,EACA9zE,EAAAkH,OAAAisE,EAAAY,eAAAZ,EAAAa,SAAA,EACAh0E,EAAAuxE,SAAA4B,EAAAc,aAAAd,EAAAe,OAAA,GACAl0E,EAAAu2D,UAAAxkD,KAAAmhE,gBAAAC,GACAnzE,EAAAq2D,YAAAkc,EAAA7E,aAIA1tE,EAAAu3D,QAAA4b,EAAA5b,QACAv3D,EAAAw3D,QAAA2b,EAAA3b,QACAx3D,EAAA4xE,QAAAuB,EAAAvB,QACA5xE,EAAA6xE,QAAAsB,EAAAtB,QAEA7xE,GASAuyE,EAAA/+E,UAAA2gF,gBAAA,SAAAtG,EAAAuG,GACA,IAMA7/E,EAAAyjE,EANAqc,EAAA51E,MAAAjL,UAAAmC,MAAA0C,KACAw1E,EAAAyG,gBACAhB,EAAAe,EAAA5/E,OACA,SAAA6rB,IACAutD,EAAAvtD,iBAGA,IAAA/rB,EAAA,EAAaA,EAAA++E,IAAW/+E,GACxByjE,EAAAjmD,KAAA6hE,gBAAA/F,EAAAwG,EAAA9/E,KAEA+rB,iBACA8zD,EAAA/7E,KAAA0Z,KAAA87D,EAAA7V,IAWAua,EAAA/+E,UAAA+gF,WAAA,SAAAC,EAAAC,GAGA,IAFA,IAAAvoE,EAAAsoE,EAAA//E,OAEAF,EAAA,EAAiBA,EAAA2X,EAAO3X,IAExB,GADAigF,EAAAjgF,GACA6+E,aAAAqB,EACA,SAGA,UAeAlC,EAAA/+E,UAAAkhF,eAAA,SAAA7G,GACA,IAAA2G,EAAA3G,EAAAwG,QAGAz2E,EAAAnK,OAAAmK,KAAAmU,KAAAw7D,YACA+F,EAAA11E,EAAAnJ,OACA,GAAA6+E,GAAAkB,EAAA//E,OAAA,CACA,IACAF,EAAA4J,EAAA1I,EADAsK,KAEA,IAAAxL,EAAA,EAAeA,EAAA++E,IAAW/+E,EAC1B4J,EAAAP,EAAArJ,GACAkB,EAAAsc,KAAAw7D,WAAApvE,GAIAA,GAAAswE,EAAAhB,YACA17D,KAAAwiE,WAAAC,EAAAr2E,EAAA,IACA4B,EAAA/B,KAAAvI,EAAAklE,KAGA,IAAApmE,EAAA,EAAeA,EAAAwL,EAAAtL,SAAcF,EAC7Bwd,KAAA4iE,WAAA9G,EAAA9tE,EAAAxL,MAYAg+E,EAAA/+E,UAAAi/E,WAAA,SAAA5E,GACA97D,KAAA2iE,eAAA7G,GACA97D,KAAAshE,iBAAAxF,EAAAyG,eAAA,IACAviE,KAAA6iE,iBAAA/G,GACA97D,KAAA+gE,cACA/gE,KAAAoiE,gBAAAtG,EAAA97D,KAAA8iE,YASAtC,EAAA/+E,UAAAqhF,UAAA,SAAAj9B,EAAA67B,GACA1hE,KAAAw7D,WAAAkG,EAAA9b,YACAh7D,OAAA82E,EAAA92E,OACAg+D,IAAA8Y,EACAqB,UAAArB,EAAA92E,QAEAoV,KAAA46D,WAAAoI,KAAAtB,EAAA77B,GACA7lC,KAAA46D,WAAAqI,MAAAvB,EAAA77B,GACA7lC,KAAA46D,WAAAwB,KAAAsF,EAAA77B,IASA26B,EAAA/+E,UAAAk/E,UAAA,SAAA7E,GACAA,EAAAvtD,iBACAvO,KAAAoiE,gBAAAtG,EAAA97D,KAAAkjE,eASA1C,EAAA/+E,UAAAyhF,aAAA,SAAAr9B,EAAA67B,GACA,IAAApvD,EAAAovD,EACAzb,EAAAjmD,KAAAw7D,WAAAlpD,EAAAszC,WAEA,GAAAK,EAAA,CAGA,IAAAkd,EAAAld,EAAA2C,IACAma,EAAA9c,EAAA8c,UACA/iE,KAAA46D,WAAAyB,KAAA/pD,EAAAuzB,GACAs9B,GAAAJ,IAAAzwD,EAAA1nB,SACAu4E,EAAApD,cAAAztD,EAAA1nB,OACA0nB,EAAAytD,cAAAgD,EAEAI,EAAAv4E,OAAAm4E,EACAzwD,EAAA1nB,QACAoV,KAAA46D,WAAA6B,SAAA0G,EAAAt9B,GACA7lC,KAAA46D,WAAA4B,UAAAlqD,EAAAuzB,KAGAvzB,EAAA1nB,OAAAm4E,EACAzwD,EAAAytD,cAAA,KACA//D,KAAA4iE,WAAA/8B,EAAAvzB,KAGA2zC,EAAA2C,IAAAt2C,EACA2zC,EAAA8c,UAAAzwD,EAAA1nB,SAUA41E,EAAA/+E,UAAAm/E,SAAA,SAAA9E,GACA97D,KAAA6iE,iBAAA/G,GACA97D,KAAAoiE,gBAAAtG,EAAA97D,KAAAojE,SASA5C,EAAA/+E,UAAA2hF,OAAA,SAAAv9B,EAAA67B,GACA1hE,KAAA46D,WAAA0B,GAAAoF,EAAA77B,GACA7lC,KAAA46D,WAAAhS,IAAA8Y,EAAA77B,GACA7lC,KAAA46D,WAAAyI,MAAA3B,EAAA77B,GACA7lC,KAAAsjE,gBAAA5B,IAUAlB,EAAA/+E,UAAAo/E,YAAA,SAAA/E,GACA97D,KAAAoiE,gBAAAtG,EAAA97D,KAAA4iE,aASApC,EAAA/+E,UAAAmhF,WAAA,SAAA/8B,EAAA67B,GACA1hE,KAAA46D,WAAAuB,OAAAuF,EAAA77B,GACA7lC,KAAA46D,WAAAhS,IAAA8Y,EAAA77B,GACA7lC,KAAA46D,WAAAyI,MAAA3B,EAAA77B,GACA7lC,KAAAsjE,gBAAA5B,IAQAlB,EAAA/+E,UAAA6hF,gBAAA,SAAA5B,UACA1hE,KAAAw7D,WAAAkG,EAAA9b,WACA5lD,KAAAyhE,sBAAAC,IAUAlB,EAAA/+E,UAAAohF,iBAAA,SAAA/G,GACA,IAAAC,EAAA/7D,KAAAygE,YAAAhF,YACAniE,EAAAwiE,EAAAyG,eAAA,GAEA,GAAAviE,KAAAmhE,gBAAA7nE,GAAA,CAEA,IAAAiqE,GAAAjqE,EAAAksD,QAAAlsD,EAAAmsD,SACAsW,EAAA9vE,KAAAs3E,GAEAt2B,WAAA,WAEA98B,EAAA,EAAAtT,OAAAk/D,EAAAwH,IACK/C,EAAAS,iBAGL,IAAAuC,EAAA,EChZAC,EAAA,SAAA9kE,GACA00C,EAAA,EAAA/sD,KAAA0Z,MAOAA,KAAAknD,SAAAvoD,EAMAqB,KAAAw7D,cAMAx7D,KAAA0jE,aAMA1jE,KAAA2jE,oBAEA3jE,KAAA4jE,mBAGAlgE,EAAA,EAAApiB,SAAAmiF,EAAApwB,EAAA,GAOAowB,EAAAhiF,UAAAmiF,gBAAA,WACA,GAAA7nC,EAAA,EAAAtuB,QACAzN,KAAA6jE,eAAA,aAAA3E,EAAAl/D,YACG,GAAA+7B,EAAA,EAAAruB,UACH1N,KAAA6jE,eAAA,SAAA7F,EAAAh+D,WACG,CACH,IAAAygE,EAAA,IAAA/D,EAAA18D,MACAA,KAAA6jE,eAAA,QAAApD,GAEA1kC,EAAA,EAAAvuB,OACAxN,KAAA6jE,eAAA,QACA,IAAAL,EAAAxjE,KAAAygE,IAKAzgE,KAAA8jE,aAUAL,EAAAhiF,UAAAoiF,eAAA,SAAAjW,EAAA1yD,GACA,IAAA4b,EAAA5b,EACA6oE,EAAAjtD,EAAAikD,YAEAgJ,IACAA,EAAAh8D,QAAA,SAAA9Z,GACA,IAAA+1E,EAAAltD,EAAAkkD,mBAAA/sE,GAEA+1E,IACAhkE,KAAA0jE,UAAAz1E,GAAA+1E,EAAA9zD,KAAA4G,KAEK9W,MACLA,KAAA2jE,iBAAA13E,KAAA6qB,KASA2sD,EAAAhiF,UAAAqiF,UAAA,WAGA,IAFA,IACAG,EADA9pE,EAAA6F,KAAA2jE,iBAAAjhF,OAEAF,EAAA,EAAiBA,EAAA2X,EAAO3X,IACxByhF,EAAAjkE,KAAA2jE,iBAAAnhF,GACAwd,KAAAkkE,WAAAD,EAAAlJ,cASA0I,EAAAhiF,UAAA0iF,YAAA,WAGA,IAFA,IACAF,EADA9pE,EAAA6F,KAAA2jE,iBAAAjhF,OAEAF,EAAA,EAAiBA,EAAA2X,EAAO3X,IACxByhF,EAAAjkE,KAAA2jE,iBAAAnhF,GACAwd,KAAAokE,cAAAH,EAAAlJ,cAUA0I,EAAAhiF,UAAA4iF,cAAA,SAAAvI,GACA,IAAA1wE,EAAA0wE,EAAA1wE,KACA44E,EAAAhkE,KAAA0jE,UAAAt4E,GACA44E,GACAA,EAAAlI,IAUA2H,EAAAhiF,UAAAyiF,WAAA,SAAAl2B,GACAA,EAAAjmC,QAAA,SAAAu8D,GACAC,EAAA,EAAAz4E,OAAAkU,KAAAknD,SAAAod,EAAAtkE,KAAAqkE,cAAArkE,OACGA,OASHyjE,EAAAhiF,UAAA2iF,cAAA,SAAAp2B,GACAA,EAAAjmC,QAAA,SAAA9Z,GACAs2E,EAAA,EAAAp4E,SAAA6T,KAAAknD,SAAAj5D,EAAA+R,KAAAqkE,cAAArkE,OACGA,OAaHyjE,EAAAhiF,UAAAw6E,WAAA,SAAA3pD,EAAAwpD,GAEA,IADA,IAAoB/uC,EAApBy3C,KACAhiF,EAAA,EAAAC,EAAAghF,EAAAgB,YAAA/hF,OAA2EF,EAAAC,EAAQD,IAEnFgiF,EADAz3C,EAAA02C,EAAAgB,YAAAjiF,GAAA,IACA8vB,EAAAya,IAAA+uC,EAAA/uC,IAAA02C,EAAAgB,YAAAjiF,GAAA,GAGA,OAAAgiF,GAYAf,EAAAhiF,UAAA26E,KAAA,SAAA1/D,EAAA4V,GACAtS,KAAA0kE,UAAAn1B,EAAAtjC,YAAAvP,EAAA4V,IASAmxD,EAAAhiF,UAAA46E,KAAA,SAAA3/D,EAAA4V,GACAtS,KAAA0kE,UAAAn1B,EAAAvjC,YAAAtP,EAAA4V,IASAmxD,EAAAhiF,UAAA66E,GAAA,SAAA5/D,EAAA4V,GACAtS,KAAA0kE,UAAAn1B,EAAArjC,UAAAxP,EAAA4V,IASAmxD,EAAAhiF,UAAAwhF,MAAA,SAAAvmE,EAAA4V,GACA5V,EAAAgjE,SAAA,EACA1/D,KAAA0kE,UAAAn1B,EAAAljC,aAAA3P,EAAA4V,IASAmxD,EAAAhiF,UAAA4hF,MAAA,SAAA3mE,EAAA4V,GACA5V,EAAAgjE,SAAA,EACA1/D,KAAA0kE,UAAAn1B,EAAAjjC,aAAA5P,EAAA4V,IASAmxD,EAAAhiF,UAAAuhF,KAAA,SAAAtmE,EAAA4V,GACA5V,EAAAgjE,SAAA,EACA1/D,KAAA0kE,UAAAn1B,EAAApjC,YAAAzP,EAAA4V,IASAmxD,EAAAhiF,UAAAmnE,IAAA,SAAAlsD,EAAA4V,GACA5V,EAAAgjE,SAAA,EACA1/D,KAAA0kE,UAAAn1B,EAAAnjC,WAAA1P,EAAA4V,IASAmxD,EAAAhiF,UAAA06E,OAAA,SAAAz/D,EAAA4V,GACAtS,KAAA0kE,UAAAn1B,EAAAhjC,cAAA7P,EAAA4V,IASAmxD,EAAAhiF,UAAAg7E,SAAA,SAAA//D,EAAA4V,GACAtS,KAAA4oD,IAAAlsD,EAAA4V,GACAtS,KAAA2kE,UAAAjoE,EAAA9R,OAAA8R,EAAAqjE,gBACA//D,KAAAqjE,MAAA3mE,EAAA4V,IAUAmxD,EAAAhiF,UAAA+6E,UAAA,SAAA9/D,EAAA4V,GACAtS,KAAAgjE,KAAAtmE,EAAA4V,GACAtS,KAAA2kE,UAAAjoE,EAAA9R,OAAA8R,EAAAqjE,gBACA//D,KAAAijE,MAAAvmE,EAAA4V,IAYAmxD,EAAAhiF,UAAAkjF,UAAA,SAAAC,EAAAC,GACA,SAAAD,IAAAC,IAGAD,EAAAtlD,SAAAulD,IAcApB,EAAAhiF,UAAAs8E,UAAA,SAAA+G,EAAApoE,EAAA4V,GACA,WAAAiuD,EAAAuE,EAAAxyD,EAAA5V,IAUA+mE,EAAAhiF,UAAAijF,UAAA,SAAAI,EAAApoE,EAAA4V,GACA,IAAArkB,EAAA+R,KAAA+9D,UAAA+G,EAAApoE,EAAA4V,GACAtS,KAAAqL,cAAApd,IASAw1E,EAAAhiF,UAAAw9E,gBAAA,SAAA3sD,GACA,IAAArkB,EAAA+R,KAAA+9D,UAAAzrD,EAAAlnB,KAAAknB,KACAtS,KAAAqL,cAAApd,IAWAw1E,EAAAhiF,UAAAsjF,eAAA,SAAA35D,EAAAkH,GAGA,OAFAtS,KAAA+9D,UACA3yD,EAAAsxD,EAAAV,aAAA1pD,EAAAtS,MAAAsS,IAQAmxD,EAAAhiF,UAAAgxB,gBAAA,WACAzS,KAAAmkE,cACA9wB,EAAA,EAAA5xD,UAAAgxB,gBAAAnsB,KAAA0Z,OAQAyjE,EAAAgB,cAEA,eACA,kBACA,cACA,gBACA,cACA,cACA,cACA,cACA,eACA,cACA,gBACA,eACA,aACA,uBAEA,cAEA,gBACA,YACA,aACA,eACA,YACA,YACA,mBACA,kBACA,iBAEA,YACA,gBACA,uBACA,YAEA,IAAAO,EAAA,ECzaAC,EAAA,SAAA/wD,EAAAgxD,GAEA7xB,EAAA,EAAA/sD,KAAA0Z,MAOAA,KAAA4tC,KAAA15B,EAMAlU,KAAAmlE,gBAAA,EAMAnlE,KAAAolE,WAAA,EAMAplE,KAAAqlE,qBAMArlE,KAAAslE,eAAAJ,EACAA,EAAAnpC,EAAA,EAAA9uB,mBAAA8uB,EAAA,EAAA9uB,mBAQAjN,KAAAulE,MAAA,KAEA,IAAA5mE,EAAAqB,KAAA4tC,KAAAue,cAMAnsD,KAAAwlE,gBAAA,EAMAxlE,KAAAylE,mBASAzlE,KAAA0lE,qBAAA,IAAAV,EAAArmE,GASAqB,KAAA2lE,6BAAA,KAMA3lE,KAAA4lE,wBAAArB,EAAA,EAAAz4E,OAAAkU,KAAA0lE,qBACAn2B,EAAAtjC,YACAjM,KAAA6lE,mBAAA7lE,MAMAA,KAAA8lE,oBAAAvB,EAAA,EAAAz4E,OAAAkU,KAAA0lE,qBACAn2B,EAAAvjC,YACAhM,KAAA+lE,YAAA/lE,OAIA0D,EAAA,EAAApiB,SAAA2jF,EAAA5xB,EAAA,GAOA4xB,EAAAxjF,UAAAukF,cAAA,SAAAzgD,GACA,IAAA0gD,EAAA,IAAApgB,EAAA,EACA9C,EAAA,EAAA5rD,MAAA6I,KAAA4tC,KAAAroB,GACAvlB,KAAAqL,cAAA46D,GACA,IAAAjmE,KAAAmlE,iBAEAha,aAAAnrD,KAAAmlE,iBACAnlE,KAAAmlE,gBAAA,EACAc,EAAA,IAAApgB,EAAA,EACA9C,EAAA,EAAA3rD,SAAA4I,KAAA4tC,KAAAroB,GACAvlB,KAAAqL,cAAA46D,IAGAjmE,KAAAmlE,gBAAAl4B,WAAA,WACAjtC,KAAAmlE,gBAAA,EACA,IAAAc,EAAA,IAAApgB,EAAA,EACA9C,EAAA,EAAAl3C,YAAA7L,KAAA4tC,KAAAroB,GACAvlB,KAAAqL,cAAA46D,IACK/1D,KAAAlQ,MAAA,MAWLilE,EAAAxjF,UAAAykF,sBAAA,SAAA3gD,GACA,IAAAjT,EAAAiT,EAEAjT,EAAAlnB,MAAA23D,EAAA,EAAA72C,WACAoG,EAAAlnB,MAAA23D,EAAA,EAAAx2C,qBACAvM,KAAAylE,gBAAAnzD,EAAAszC,WACGtzC,EAAAlnB,MAAA23D,EAAA,EAAA92C,cACHjM,KAAAylE,gBAAAnzD,EAAAszC,YAAA,GAEA5lD,KAAAwlE,gBAAA9jF,OAAAmK,KAAAmU,KAAAylE,iBAAA/iF,QAQAuiF,EAAAxjF,UAAA0kF,iBAAA,SAAA5gD,GACAvlB,KAAAkmE,sBAAA3gD,GACA,IAAA0gD,EAAA,IAAApgB,EAAA,EACA9C,EAAA,EAAA72C,UAAAlM,KAAA4tC,KAAAroB,GACAvlB,KAAAqL,cAAA46D,GAQAA,EAAA33D,oBAAAtO,KAAAolE,YAAAplE,KAAAomE,qBAAA7gD,IACAvlB,KAAAgmE,cAAAhmE,KAAAulE,OAGA,IAAAvlE,KAAAwlE,kBACAxlE,KAAAqlE,kBAAAt9D,QAAAw8D,EAAA,EAAAz5E,eACAkV,KAAAqlE,kBAAA3iF,OAAA,EACAsd,KAAAolE,WAAA,EACAplE,KAAAulE,MAAA,KACAvlE,KAAA2lE,6BAAA3hD,UACAhkB,KAAA2lE,6BAAA,OAUAV,EAAAxjF,UAAA2kF,qBAAA,SAAA7gD,GACA,WAAAA,EAAA6pB,QAQA61B,EAAAxjF,UAAAokF,mBAAA,SAAAtgD,GACAvlB,KAAAkmE,sBAAA3gD,GACA,IAAA0gD,EAAA,IAAApgB,EAAA,EACA9C,EAAA,EAAA92C,YAAAjM,KAAA4tC,KAAAroB,GACAvlB,KAAAqL,cAAA46D,GAEAjmE,KAAAulE,MAAAhgD,EAEA,IAAAvlB,KAAAqlE,kBAAA3iF,SAKAsd,KAAA2lE,6BACA,IAAAX,EAAA5vE,UAEA4K,KAAAqlE,kBAAAp5E,KACAs4E,EAAA,EAAAz4E,OAAAkU,KAAA2lE,6BACA5iB,EAAA,EAAA/2C,YACAhM,KAAAqmE,mBAAArmE,MACAukE,EAAA,EAAAz4E,OAAAkU,KAAA2lE,6BACA5iB,EAAA,EAAA72C,UACAlM,KAAAmmE,iBAAAnmE,MAcAukE,EAAA,EAAAz4E,OAAAkU,KAAA0lE,qBACA3iB,EAAA,EAAAx2C,cACAvM,KAAAmmE,iBAAAnmE,SAUAilE,EAAAxjF,UAAA4kF,mBAAA,SAAA9gD,GAIA,GAAAvlB,KAAAsmE,UAAA/gD,GAAA,CACAvlB,KAAAolE,WAAA,EACA,IAAAa,EAAA,IAAApgB,EAAA,EACA9C,EAAA,EAAAh3C,YAAA/L,KAAA4tC,KAAAroB,EACAvlB,KAAAolE,WACAplE,KAAAqL,cAAA46D,GAOA1gD,EAAAhX,kBAUA02D,EAAAxjF,UAAAskF,YAAA,SAAAxgD,GACA,IAAA2gB,KAAAlmC,KAAAulE,QAAAvlE,KAAAsmE,UAAA/gD,IACAvlB,KAAAqL,cAAA,IAAAw6C,EAAA,EACAtgC,EAAAn6B,KAAA4U,KAAA4tC,KAAAroB,EAAA2gB,KASA++B,EAAAxjF,UAAA6kF,UAAA,SAAA/gD,GACA,OAAAtiC,KAAA2W,IAAA2rB,EAAAigC,QAAAxlD,KAAAulE,MAAA/f,SAAAxlD,KAAAslE,gBACAriF,KAAA2W,IAAA2rB,EAAAkgC,QAAAzlD,KAAAulE,MAAA9f,SAAAzlD,KAAAslE,gBAOAL,EAAAxjF,UAAAgxB,gBAAA,WACAzS,KAAA8lE,sBACAvB,EAAA,EAAAz5E,cAAAkV,KAAA8lE,qBACA9lE,KAAA8lE,oBAAA,MAEA9lE,KAAA4lE,0BACArB,EAAA,EAAAz5E,cAAAkV,KAAA4lE,yBACA5lE,KAAA4lE,wBAAA,MAGA5lE,KAAAqlE,kBAAAt9D,QAAAw8D,EAAA,EAAAz5E,eACAkV,KAAAqlE,kBAAA3iF,OAAA,EAEAsd,KAAA2lE,+BACA3lE,KAAA2lE,6BAAA3hD,UACAhkB,KAAA2lE,6BAAA,MAEA3lE,KAAA0lE,uBACA1lE,KAAA0lE,qBAAA1hD,UACAhkB,KAAA0lE,qBAAA,MAEAryB,EAAA,EAAA5xD,UAAAgxB,gBAAAnsB,KAAA0Z,OAEA,IAAAumE,EAAA,kBCvTAC,GANAC,WAAA,aACAC,KAAA,OACAC,OAAA,SACAC,KAAA,sDCWAC,EAAA,SAAAC,EAAAC,GAMA/mE,KAAAgnE,kBAAAF,EAMA9mE,KAAAinE,aAAAF,EAMA/mE,KAAAknE,aAMAlnE,KAAAmnE,eAMAnnE,KAAAonE,oBASAP,EAAAtvE,KAAAtS,IAMA4hF,EAAAplF,UAAAmK,MAAA,WACAoU,KAAAknE,UAAAxkF,OAAA,EACAsd,KAAAmnE,YAAAzkF,OAAA,EACAX,EAAA,EAAA6J,MAAAoU,KAAAonE,kBAQAP,EAAAplF,UAAA4lF,QAAA,WACA,IAAAC,EAAAtnE,KAAAknE,UACAK,EAAAvnE,KAAAmnE,YACAxoE,EAAA2oE,EAAA,GACA,GAAAA,EAAA5kF,QACA4kF,EAAA5kF,OAAA,EACA6kF,EAAA7kF,OAAA,IAEA4kF,EAAA,GAAAA,EAAAt3D,MACAu3D,EAAA,GAAAA,EAAAv3D,MACAhQ,KAAAwnE,QAAA,IAEA,IAAAC,EAAAznE,KAAAinE,aAAAtoE,GAEA,cADAqB,KAAAonE,gBAAAK,GACA9oE,GASAkoE,EAAAplF,UAAAimF,QAAA,SAAA/oE,GACAkhB,EAAA,EAAAp4B,SAAAuY,KAAAinE,aAAAtoE,KAAAqB,KAAAonE,iBACA,IACA,IAAAO,EAAA3nE,KAAAgnE,kBAAAroE,GACA,OAAAgpE,GAAAd,EAAAtvE,OACAyI,KAAAknE,UAAAj7E,KAAA0S,GACAqB,KAAAmnE,YAAAl7E,KAAA07E,GACA3nE,KAAAonE,gBAAApnE,KAAAinE,aAAAtoE,KAAA,EACAqB,KAAA4nE,UAAA,EAAA5nE,KAAAknE,UAAAxkF,OAAA,IACA,IASAmkF,EAAAplF,UAAAolC,SAAA,WACA,OAAA7mB,KAAAknE,UAAAxkF,QAUAmkF,EAAAplF,UAAAomF,mBAAA,SAAAxqE,GACA,SAAAA,EAAA,GAUAwpE,EAAAplF,UAAAqmF,oBAAA,SAAAzqE,GACA,SAAAA,EAAA,GAUAwpE,EAAAplF,UAAAsmF,gBAAA,SAAA1qE,GACA,OAAAA,EAAA,MAQAwpE,EAAAplF,UAAAumF,SAAA,WACA,IAAAxlF,EACA,IAAAA,GAAAwd,KAAAknE,UAAAxkF,QAAA,KAA4CF,GAAA,EAAQA,IACpDwd,KAAAwnE,QAAAhlF,IAQAqkF,EAAAplF,UAAAoF,QAAA,WACA,WAAAmZ,KAAAknE,UAAAxkF,QAQAmkF,EAAAplF,UAAAwmF,YAAA,SAAA77E,GACA,OAAAA,KAAA4T,KAAAonE,iBAQAP,EAAAplF,UAAAymF,SAAA,SAAAvpE,GACA,OAAAqB,KAAAioE,YAAAjoE,KAAAinE,aAAAtoE,KAQAkoE,EAAAplF,UAAA+lF,QAAA,SAAAnqE,GAQA,IAPA,IAAAiqE,EAAAtnE,KAAAknE,UACAK,EAAAvnE,KAAAmnE,YACA5F,EAAA+F,EAAA5kF,OACAic,EAAA2oE,EAAAjqE,GACAsqE,EAAAJ,EAAAlqE,GACA8qE,EAAA9qE,EAEAA,EAAAkkE,GAAA,IACA,IAAA6G,EAAApoE,KAAA6nE,mBAAAxqE,GACAgrE,EAAAroE,KAAA8nE,oBAAAzqE,GAEAirE,EAAAD,EAAA9G,GACAgG,EAAAc,GAAAd,EAAAa,GACAC,EAAAD,EAEAd,EAAAjqE,GAAAiqE,EAAAgB,GACAf,EAAAlqE,GAAAkqE,EAAAe,GACAjrE,EAAAirE,EAGAhB,EAAAjqE,GAAAsB,EACA4oE,EAAAlqE,GAAAsqE,EACA3nE,KAAA4nE,UAAAO,EAAA9qE,IASAwpE,EAAAplF,UAAAmmF,UAAA,SAAAO,EAAA9qE,GAMA,IALA,IAAAiqE,EAAAtnE,KAAAknE,UACAK,EAAAvnE,KAAAmnE,YACAxoE,EAAA2oE,EAAAjqE,GACAsqE,EAAAJ,EAAAlqE,GAEAA,EAAA8qE,GAAA,CACA,IAAAI,EAAAvoE,KAAA+nE,gBAAA1qE,GACA,KAAAkqE,EAAAgB,GAAAZ,GAKA,MAJAL,EAAAjqE,GAAAiqE,EAAAiB,GACAhB,EAAAlqE,GAAAkqE,EAAAgB,GACAlrE,EAAAkrE,EAKAjB,EAAAjqE,GAAAsB,EACA4oE,EAAAlqE,GAAAsqE,GAOAd,EAAAplF,UAAA+mF,aAAA,WACA,IAKA7pE,EAAAnc,EAAAmlF,EALAb,EAAA9mE,KAAAgnE,kBACAM,EAAAtnE,KAAAknE,UACAK,EAAAvnE,KAAAmnE,YACA9pE,EAAA,EACA5D,EAAA6tE,EAAA5kF,OAEA,IAAAF,EAAA,EAAaA,EAAAiX,IAAOjX,GAEpBmlF,EAAAb,EADAnoE,EAAA2oE,EAAA9kF,MAEAqkF,EAAAtvE,YACAyI,KAAAonE,gBAAApnE,KAAAinE,aAAAtoE,KAEA4oE,EAAAlqE,GAAAsqE,EACAL,EAAAjqE,KAAAsB,GAGA2oE,EAAA5kF,OAAA2a,EACAkqE,EAAA7kF,OAAA2a,EACA2C,KAAAgoE,YAEA,IAAAS,EAAA,ECjQAC,EAAA,SAAAC,EAAAC,GAEAH,EAAAniF,KACA0Z,KAKA,SAAArB,GACA,OAAAgqE,EAAAxlF,MAAA,KAAAwb,IAMA,SAAAA,GACA,OAAkCA,EAAA,GAAA2Z,WAOlCtY,KAAA6oE,oBAAAD,EAMA5oE,KAAA8oE,cAAA,EAMA9oE,KAAA+oE,sBAIArlE,EAAA,EAAApiB,SAAAonF,EAAAD,GAMAC,EAAAjnF,UAAAimF,QAAA,SAAA/oE,GACA,IAAAqqE,EAAAP,EAAAhnF,UAAAimF,QAAAphF,KAAA0Z,KAAArB,GACA,GAAAqqE,EAAA,CACA,IAAA5zC,EAAAz2B,EAAA,GACA4lE,EAAA,EAAAz4E,OAAAspC,EAAA6zC,EAAA,EAAAhyE,OACA+I,KAAAk/C,iBAAAl/C,MAEA,OAAAgpE,GAOAN,EAAAjnF,UAAAynF,gBAAA,WACA,OAAAlpE,KAAA8oE,eAQAJ,EAAAjnF,UAAAy9D,iBAAA,SAAA5sC,GACA,IAAA8iB,EAAgC9iB,EAAA,OAChCihB,EAAA6B,EAAA/f,WACA,GAAAke,IAAAmgB,EAAA,EAAAj7C,QAAA86B,IAAAmgB,EAAA,EAAAl8C,OACA+7B,IAAAmgB,EAAA,EAAAh7C,OAAA66B,IAAAmgB,EAAA,EAAA/6C,MAAA,CACA4rE,EAAA,EAAAp4E,SAAAipC,EAAA6zC,EAAA,EAAAhyE,OACA+I,KAAAk/C,iBAAAl/C,MACA,IAAAmpE,EAAA/zC,EAAA9c,SACA6wD,KAAAnpE,KAAA+oE,2BACA/oE,KAAA+oE,kBAAAI,KACAnpE,KAAA8oE,eAEA9oE,KAAA6oE,wBASAH,EAAAjnF,UAAA2nF,cAAA,SAAAC,EAAAC,GAIA,IAHA,IAEA/1C,EAAA6B,EAAA+zC,EAFAI,EAAA,EACAC,GAAA,EAEAxpE,KAAA8oE,cAAAO,GAAAE,EAAAD,GACAtpE,KAAA6mB,WAAA,GAEAsiD,GADA/zC,EAA8Bp1B,KAAAqnE,UAAA,IAC9B/uD,UACAib,EAAA6B,EAAA/f,cACAq+B,EAAA,EAAA/6C,MACA6wE,GAAA,EACKj2C,IAAAmgB,EAAA,EAAAn7C,MAAA4wE,KAAAnpE,KAAA+oE,oBACL/oE,KAAA+oE,kBAAAI,IAAA,IACAnpE,KAAA8oE,gBACAS,EACAn0C,EAAApN,QAGA,IAAAuhD,GAAAC,GAGAxpE,KAAA6oE,uBAGA,IAAAY,EAAA,yDCxGAC,EAAA,SAAAxoE,GAEA,IAAAG,EAAAH,MACA0S,EACA7xB,EAAA,EAAA8Y,UAAyBwG,UACzBuS,EAAA+1D,OAEA,IAAAA,EAAAtoE,EAAAsoE,OAEAC,EAAA,EAAAtjF,KAAA0Z,KAAA4T,GAMA5T,KAAA6pE,uBAMA7pE,KAAA8pE,iBAEAvF,EAAA,EAAAz4E,OAAAkU,KACA5E,EAAA,EAAA0P,mBAAA4+D,EAAAp5D,UAAAy5D,QACA/pE,KAAAgqE,qBAAAhqE,MAEA2pE,EACAj9E,MAAAkQ,QAAA+sE,GACAA,EAAA,IAAA32B,EAAA,EAAA22B,EAAA/lF,SAAoDgsB,QAAA,KAEpDiQ,EAAA,EAAAp4B,OAAAkiF,aAAA32B,EAAA,EACA,IACA22B,KAGAA,EAAA,IAAA32B,EAAA,OAAAznD,GAA6CqkB,QAAA,IAG7C5P,KAAAiqE,UAAAN,IAIAjmE,EAAA,EAAApiB,SAAAooF,EAAAE,EAAA,GAMAF,EAAAjoF,UAAAyoF,mBAAA,WACAlqE,KAAAyV,WAQAi0D,EAAAjoF,UAAAuoF,qBAAA,SAAA13D,GACAtS,KAAA6pE,oBAAA9hE,QAAAw8D,EAAA,EAAAz5E,eACAkV,KAAA6pE,oBAAAnnF,OAAA,EAEA,IAAAinF,EAAA3pE,KAAAmqE,YAOA,QAAA5tC,KANAv8B,KAAA6pE,oBAAA59E,KACAs4E,EAAA,EAAAz4E,OAAA69E,EAAAlR,EAAA,EAAA9nD,IACA3Q,KAAAoqE,iBAAApqE,MACAukE,EAAA,EAAAz4E,OAAA69E,EAAAlR,EAAA,EAAA3nD,OACA9Q,KAAAqqE,oBAAArqE,OAEAA,KAAA8pE,cACA9pE,KAAA8pE,cAAAvtC,GAAAx0B,QAAAw8D,EAAA,EAAAz5E,eAEA/I,EAAA,EAAA6J,MAAAoU,KAAA8pE,eAEA,IACAtnF,EAAAC,EAAAo0C,EADAyzC,EAAAX,EAAAv5D,WAEA,IAAA5tB,EAAA,EAAAC,EAAA6nF,EAAA5nF,OAAsCF,EAAAC,EAAQD,IAC9Cq0C,EAAAyzC,EAAA9nF,GACAwd,KAAA8pE,cAAApmE,EAAA,EAAA5hB,OAAA+0C,GAAAngB,aACA6tD,EAAA,EAAAz4E,OAAA+qC,EAAAshC,EAAA,EAAA3sD,eACAxL,KAAAkqE,mBAAAlqE,MACAukE,EAAA,EAAAz4E,OAAA+qC,EAAAoyC,EAAA,EAAAhyE,OACA+I,KAAAkqE,mBAAAlqE,OAIAA,KAAAyV,WAQAi0D,EAAAjoF,UAAA2oF,iBAAA,SAAAG,GACA,IAAA1zC,EAAuC0zC,EAAA,QACvCn+E,EAAAsX,EAAA,EAAA5hB,OAAA+0C,GAAAngB,WACA1W,KAAA8pE,cAAA19E,IACAm4E,EAAA,EAAAz4E,OAAA+qC,EAAAshC,EAAA,EAAA3sD,eACAxL,KAAAkqE,mBAAAlqE,MACAukE,EAAA,EAAAz4E,OAAA+qC,EAAAoyC,EAAA,EAAAhyE,OACA+I,KAAAkqE,mBAAAlqE,OAEAA,KAAAyV,WAQAi0D,EAAAjoF,UAAA4oF,oBAAA,SAAAE,GACA,IAAA1zC,EAAuC0zC,EAAA,QACvCn+E,EAAAsX,EAAA,EAAA5hB,OAAA+0C,GAAAngB,WACA1W,KAAA8pE,cAAA19E,GAAA2b,QAAAw8D,EAAA,EAAAz5E,sBACAkV,KAAA8pE,cAAA19E,GACA4T,KAAAyV,WAYAi0D,EAAAjoF,UAAA0oF,UAAA,WACA,OAC8CnqE,KAAAuC,IAC9CmnE,EAAAp5D,UAAAy5D,SAaAL,EAAAjoF,UAAAwoF,UAAA,SAAAN,GACA3pE,KAAAnT,IAAA68E,EAAAp5D,UAAAy5D,OAAAJ,IAOAD,EAAAjoF,UAAAqzB,eAAA,SAAArF,GACA,IAAAU,OAAA5kB,IAAAkkB,OAIA,OAHAzP,KAAAmqE,YAAApiE,QAAA,SAAA8uB,GACAA,EAAA/hB,eAAA3E,KAEAA,GAOAu5D,EAAAjoF,UAAAszB,oBAAA,SAAAC,GACA,IAAAC,OAAA1pB,IAAAypB,OAEAw1D,EAAAv1D,EAAAvyB,OAEAsd,KAAAmqE,YAAApiE,QAAA,SAAA8uB,GACAA,EAAA9hB,oBAAAE,KAGA,IACAzyB,EAAAC,EAAAiyB,EADA+1D,EAAAzqE,KAAAkV,gBAEA,IAAA1yB,EAAAgoF,EAAA/nF,EAAAwyB,EAAAvyB,OAAmCF,EAAAC,EAAQD,KAC3CkyB,EAAAO,EAAAzyB,IACAgU,SAAAi0E,EAAAj0E,QACAke,EAAAC,QAAAD,EAAAC,SAAA81D,EAAA91D,QACAD,EAAAG,cAAA5xB,KAAAC,IACAwxB,EAAAG,cAAA41D,EAAA51D,eACAH,EAAAE,cAAA3xB,KAAAK,IACAoxB,EAAAE,cAAA61D,EAAA71D,oBACArpB,IAAAk/E,EAAAnoF,cACAiJ,IAAAmpB,EAAApyB,OACAoyB,EAAApyB,OAAA2nB,EAAA,EAAA/gB,gBACAwrB,EAAApyB,OAAAmoF,EAAAnoF,QAEAoyB,EAAApyB,OAAAmoF,EAAAnoF,QAKA,OAAA2yB,GAOAy0D,EAAAjoF,UAAA2zB,eAAA,WACA,OAAAs1D,EAAA,EAAA9wD,OAOA8vD,EAAAp5D,WACAy5D,OAAA,UAEA,IAAAY,EAAA,ECjOAC,GAJAC,aAAA,eACAC,eAAA,kBCNAC,IAOAC,uBAOAC,sBAAA,WACA,OAAAF,GAAAC,qBASAE,yBAOAC,wBAAA,WACA,OAAAJ,GAAAG,uBASAE,SAAA,SAAAhgF,EAAAigF,GAEA,OAAAjgF,GACA,KAAAw/E,EAAAC,aACAE,GAAAC,oBACA/+E,KAAoD,GACpD,MAEA,KAAA2+E,EAAAE,eACAC,GAAAG,sBACAj/E,KAAsD,GACtD,MAEA,QACA,UAAA4V,MAAA,4BAAAzW,KAWAkgF,iBAAA,SAAAlgF,EAAAmgF,GACA,QAAA/oF,EAAA,EAAAC,EAAA8oF,EAAA7oF,OAAsCF,EAAAC,IAAQD,EAC9CuoF,GAAAK,SAAAhgF,EAAAmgF,EAAA/oF,MAGAgpF,GAAA,GC/DAC,IAJAr+D,OAAA,SACAO,MAAA,0BCkCA+9D,GAAA,SAAArqE,GAEAjG,EAAA,EAAA9U,KAAA0Z,MAEA,IAAA2rE,EAAAD,GAAAE,sBAAAvqE,GAMArB,KAAA6rE,8BACAtgF,IAAA8V,EAAAyqE,yBACAzqE,EAAAyqE,wBAMA9rE,KAAA+rE,gCACAxgF,IAAA8V,EAAA2qE,2BACA3qE,EAAA2qE,0BAMAhsE,KAAAy7C,iBAAAlwD,IAAA8V,EAAAy0B,WACAz0B,EAAAy0B,WAAAiG,EAAA,EAAA9uB,mBAMAjN,KAAAisE,OAAAN,EAAAn7B,MAMAxwC,KAAAksE,mBAKAlsE,KAAAmsE,gBAAA,WACAnsE,KAAAksE,wBAAA3gF,EACAyU,KAAAosE,aAAA9lF,KAAA0Z,KAAA+oC,KAAAC,QACG94B,KAAAlQ,MAMHA,KAAAqsE,4BAAAC,GAAA,EAAA3qF,SAMAqe,KAAAusE,4BAAAD,GAAA,EAAA3qF,SAMAqe,KAAAwsE,YAAA,EAMAxsE,KAAAysE,YAAA,KAOAzsE,KAAA0sE,gBAAA,KAMA1sE,KAAA2sE,yBAAA,KAMA3sE,KAAA4sE,uBAAA,KAMA5sE,KAAA6sE,gCAAA,KAMA7sE,KAAA8sE,UAAA13E,SAAAC,cAAA,OACA2K,KAAA8sE,UAAAj+B,UAAA,eAAA9S,EAAA,EAAAvuB,MAAA,gBACAxN,KAAA8sE,UAAAv3E,MAAAG,SAAA,WACAsK,KAAA8sE,UAAAv3E,MAAAw3E,SAAA,SACA/sE,KAAA8sE,UAAAv3E,MAAArB,MAAA,OACA8L,KAAA8sE,UAAAv3E,MAAAJ,OAAA,OAEA6K,KAAA8sE,UAAAv3E,MAAAy3E,cAAA,OACAhtE,KAAA8sE,UAAAv3E,MAAA03E,YAAA,OAMAjtE,KAAAktE,kBAAA93E,SAAAC,cAAA,OACA2K,KAAAktE,kBAAAr+B,UAAA,sBACA7uC,KAAA8sE,UAAAj3E,YAAAmK,KAAAktE,mBAMAltE,KAAAmtE,2BAAA/3E,SAAAC,cAAA,OACA2K,KAAAmtE,2BAAAt+B,UAAA,gCAWA,IAVA,IAAAu+B,GACAnE,EAAA,EAAA9xE,MACA8xE,EAAA,EAAA7xE,SACA6xE,EAAA,EAAArxE,UACAqxE,EAAA,EAAA9wE,WACA8wE,EAAA,EAAAhxE,cACA8qD,EAAA,EAAA92C,YACAg9D,EAAA,EAAAjxE,WACAixE,EAAA,EAAA3wE,OAEA9V,EAAA,EAAAC,EAAA2qF,EAAA1qF,OAA4CF,EAAAC,IAAQD,EACpD+hF,EAAA,EAAAz4E,OAAAkU,KAAAmtE,2BAAAC,EAAA5qF,GACAgmE,EAAA,EAAAh6C,iBASA,QAAApiB,KAPA4T,KAAA8sE,UAAAj3E,YAAAmK,KAAAmtE,4BAMAntE,KAAAqtE,wBAAA,IAAA9G,EAAAvmE,KAAAqB,EAAA6jE,eACAniB,EAAA,EACAwhB,EAAA,EAAAz4E,OAAAkU,KAAAqtE,wBAAAtqB,EAAA,EAAA32D,GACA4T,KAAAstE,sBAAAttE,MAOAA,KAAAutE,qBAAA5B,EAAA6B,oBAMAxtE,KAAAytE,gBAAA,KAEAlJ,EAAA,EAAAz4E,OAAAkU,KAAA8sE,UAAA7D,EAAA,EAAA3wE,MACA0H,KAAA0tE,mBAAA1tE,MACAukE,EAAA,EAAAz4E,OAAAkU,KAAA8sE,UAAA7D,EAAA,EAAAjxE,WACAgI,KAAA0tE,mBAAA1tE,MAMAA,KAAA+yC,SAAA44B,EAAA54B,UAAA,IAAAC,EAAA,EAMAhzC,KAAA4sD,aAAA+e,EAAA/e,cAAA,IAAA5Z,EAAA,EAMAhzC,KAAA2tE,UAAAhC,EAAAiC,SAOA5tE,KAAA6tE,mBAMA7tE,KAAAi+B,UAAA0tC,EAAAmC,kBAAA,OAAA9tE,KAAA8sE,UAAA9sE,MAMAA,KAAA+tE,cAMA/tE,KAAAguE,OAAA,KAMAhuE,KAAAiuE,wBAMAjuE,KAAAkuE,WAAA,IAAAzE,EACAzpE,KAAAmuE,gBAAAj+D,KAAAlQ,MACAA,KAAAouE,kBAAAl+D,KAAAlQ,OAOAA,KAAAquE,uBAEA9J,EAAA,EAAAz4E,OACAkU,KAAA5E,EAAA,EAAA0P,mBAAA07D,EAAAC,YACAzmE,KAAAsuE,yBAAAtuE,MACAukE,EAAA,EAAAz4E,OAAAkU,KAAA5E,EAAA,EAAA0P,mBAAA07D,EAAAI,MACA5mE,KAAAuuE,mBAAAvuE,MACAukE,EAAA,EAAAz4E,OAAAkU,KAAA5E,EAAA,EAAA0P,mBAAA07D,EAAAE,MACA1mE,KAAAwuE,mBAAAxuE,MACAukE,EAAA,EAAAz4E,OAAAkU,KAAA5E,EAAA,EAAA0P,mBAAA07D,EAAAG,QACA3mE,KAAAyuE,qBAAAzuE,MAIAA,KAAA4K,cAAA+gE,EAAApwE,QAEAyE,KAAA+yC,SAAAhrC,QAKA,SAAAqmC,GACAA,EAAAj6B,OAAAnU,OACOA,MAEPukE,EAAA,EAAAz4E,OAAAkU,KAAA+yC,SAAA0lB,EAAA,EAAA9nD,IAIA,SAAA2B,GACAA,EAAA3T,QAAAwV,OAAAnU,OACOA,MAEPukE,EAAA,EAAAz4E,OAAAkU,KAAA+yC,SAAA0lB,EAAA,EAAA3nD,OAIA,SAAAwB,GACAA,EAAA3T,QAAAwV,OAAA,OACOnU,MAEPA,KAAA4sD,aAAA7kD,QAKA,SAAA26C,GACAA,EAAAvuC,OAAAnU,OACOA,MAEPukE,EAAA,EAAAz4E,OAAAkU,KAAA4sD,aAAA6L,EAAA,EAAA9nD,IAIA,SAAA2B,GACAA,EAAA3T,QAAAwV,OAAAnU,OACOA,MAEPukE,EAAA,EAAAz4E,OAAAkU,KAAA4sD,aAAA6L,EAAA,EAAA3nD,OAIA,SAAAwB,GACAA,EAAA3T,QAAAwV,OAAA,OACOnU,MAEPA,KAAA2tE,UAAA5lE,QAAA/H,KAAA0uE,oBAAA1uE,MAEAukE,EAAA,EAAAz4E,OAAAkU,KAAA2tE,UAAAlV,EAAA,EAAA9nD,IAIA,SAAA2B,GACAtS,KAAA0uE,oBAAuDp8D,EAAA,UAChDtS,MAEPukE,EAAA,EAAAz4E,OAAAkU,KAAA2tE,UAAAlV,EAAA,EAAA3nD,OAIA,SAAAwB,GACA,IACAiqB,EAD4CjqB,EAAA,QAC5C+lD,aACA9sE,IAAAgxC,UACAv8B,KAAA6tE,gBAAAtxC,EAAA7lB,YAEApE,EAAA3T,QAAAwV,OAAA,OACOnU,OAIP0D,EAAA,EAAApiB,SAAAoqF,GAAAtwE,EAAA,GAQAswE,GAAAjqF,UAAAktF,WAAA,SAAAvgC,GACApuC,KAAA4uE,cAAA3iF,KAAAmiD,IASAs9B,GAAAjqF,UAAAotF,eAAA,SAAAnsB,GACA1iD,KAAA8uE,kBAAA7iF,KAAAy2D,IAWAgpB,GAAAjqF,UAAAstF,SAAA,SAAAl4C,GACA72B,KAAAgvE,gBAAA7E,YACAl+E,KAAA4qC,IASA60C,GAAAjqF,UAAAwtF,WAAA,SAAAC,GACAlvE,KAAAmvE,cAAAljF,KAAAijF,IASAxD,GAAAjqF,UAAAitF,oBAAA,SAAAQ,GACA,IAAA3yC,EAAA2yC,EAAA7W,aACA9sE,IAAAgxC,IACAv8B,KAAA6tE,gBAAAtxC,EAAA7lB,YAAAw4D,GAEAA,EAAA/6D,OAAAnU,OAQA0rE,GAAAjqF,UAAAgxB,gBAAA,WACAzS,KAAAqtE,wBAAArpD,UACAugD,EAAA,EAAAp4E,SAAA6T,KAAA8sE,UAAA7D,EAAA,EAAA3wE,MACA0H,KAAA0tE,mBAAA1tE,MACAukE,EAAA,EAAAp4E,SAAA6T,KAAA8sE,UAAA7D,EAAA,EAAAjxE,WACAgI,KAAA0tE,mBAAA1tE,WACAzU,IAAAyU,KAAA+tE,gBACAx5E,OAAA7I,oBAAAu9E,EAAA,EAAA/wE,OACA8H,KAAA+tE,eAAA,GACA/tE,KAAA+tE,mBAAAxiF,GAEAyU,KAAAksE,qBACAhiC,qBAAAlqC,KAAAksE,oBACAlsE,KAAAksE,wBAAA3gF,GAEAyU,KAAA8tC,UAAA,MACA1yC,EAAA,EAAA3Z,UAAAgxB,gBAAAnsB,KAAA0Z,OAuBA0rE,GAAAjqF,UAAA2tF,sBAAA,SAAArpC,EAAA5/C,EAAA+a,GACA,GAAAlB,KAAAysE,YAAA,CAGA,IAAAtoF,EAAA6b,KAAAimC,uBAAAF,GAEAspC,OAAA9jF,KADA2V,OAAA3V,IAAA2V,QACAmuE,aACAnuE,EAAAmuE,aAAArvE,KAAAysE,YAAA32C,WAAA,EACAw5C,OAAA/jF,IAAA2V,EAAAouE,YACApuE,EAAAouE,YAAA7rB,EAAA,EAAAp5C,KACA,OAAArK,KAAAi+B,UAAAtK,2BACAxvC,EAAA6b,KAAAysE,YAAA4C,EAAAlpF,EAAA,KACAmpF,EAAA,QAYA5D,GAAAjqF,UAAA8tF,mBAAA,SAAAxpC,EAAA7kC,GACA,IAAA40D,EAAA,KAOA,OANA91D,KAAAovE,sBAAArpC,EAAA,SAAAjH,GACAg3B,IACAA,MAEAA,EAAA7pE,KAAA6yC,IACG59B,GACH40D,GA2BA4V,GAAAjqF,UAAA+tF,oBAAA,SAAAzpC,EAAA5/C,EAAAC,EAAAqpF,EAAAC,GACA,GAAA1vE,KAAAysE,YAAA,CAGA,IAAA7yC,OAAAruC,IAAAnF,IAAA,KACAkpF,OAAA/jF,IAAAkkF,EACAA,EAAAhsB,EAAA,EAAAp5C,KACAslE,OAAApkF,IAAAmkF,IAAA,KACA,OAAA1vE,KAAAi+B,UAAAuxC,oBACAzpC,EAAA/lC,KAAAysE,YAAAtmF,EAAAyzC,EACA01C,EAAAK,KAaAjE,GAAAjqF,UAAAmuF,kBAAA,SAAA7pC,EAAA7kC,GACA,IAAAlB,KAAAysE,YACA,SAEA,IAAAtoF,EAAA6b,KAAAimC,uBAAAF,GAEAupC,OAAA/jF,KADA2V,OAAA3V,IAAA2V,QACAouE,YACApuE,EAAAouE,YAAA7rB,EAAA,EAAAp5C,KACAglE,OAAA9jF,IAAA2V,EAAAmuE,aACAnuE,EAAAmuE,aAAArvE,KAAAysE,YAAA32C,WAAA,EACA,OAAA91B,KAAAi+B,UAAA4xC,uBACA1rF,EAAA6b,KAAAysE,YAAA4C,EAAAC,EAAA,OAUA5D,GAAAjqF,UAAAquF,mBAAA,SAAAx9D,GACA,OAAAtS,KAAAimC,uBAAAjmC,KAAAgmC,cAAA1zB,KAUAo5D,GAAAjqF,UAAAukD,cAAA,SAAA1zB,GACA,IAAA45C,EAAAlsD,KAAA8sE,UAAA1gB,wBACA2jB,EAAAz9D,EAAAiwD,eAAAjwD,EAAAiwD,eAAA,GAAAjwD,EACA,OACAy9D,EAAAvqB,QAAA0G,EAAAv2D,KACAo6E,EAAAtqB,QAAAyG,EAAA1E,MAcAkkB,GAAAjqF,UAAAuuF,UAAA,WACA,OACwChwE,KAAAuC,IAAAikE,EAAAG,SAYxC+E,GAAAjqF,UAAAwuF,iBAAA,WACA,IAAArlF,EAAAoV,KAAAgwE,YACA,YAAAzkF,IAAAX,EACA,iBAAAA,EACAwK,SAAA+4C,eAAAvjD,GACAA,EAEA,MAYA8gF,GAAAjqF,UAAAwkD,uBAAA,SAAAF,GACA,IAAAhwB,EAAA/V,KAAAysE,YACA,OAAA12D,EAGAu2D,GAAA,EAAAnpF,MAAA4yB,EAAAm6D,2BAAAnqC,EAAAniD,SAFA,MAaA8nF,GAAAjqF,UAAAmtF,YAAA,WACA,OAAA5uE,KAAA+yC,UAUA24B,GAAAjqF,UAAA0tF,YAAA,WACA,OAAAnvE,KAAA2tE,WAYAjC,GAAAjqF,UAAA0uF,eAAA,SAAA5zC,GACA,IAAA2yC,EAAAlvE,KAAA6tE,gBAAAtxC,EAAA7lB,YACA,YAAAnrB,IAAA2jF,IAAA,MAYAxD,GAAAjqF,UAAAqtF,gBAAA,WACA,OAAA9uE,KAAA4sD,cAUA8e,GAAAjqF,UAAAutF,cAAA,WACA,OAC8BhvE,KAAAuC,IAAAikE,EAAAC,aAU9BiF,GAAAjqF,UAAA0oF,UAAA,WAEA,OADAnqE,KAAAgvE,gBAAA7E,aAYAuB,GAAAjqF,UAAAmlE,uBAAA,SAAAziE,GACA,IAAA4xB,EAAA/V,KAAAysE,YACA,OAAA12D,EAGAu2D,GAAA,EAAAnpF,MAAA4yB,EAAAq6D,2BACAjsF,EAAAP,MAAA,MAHA,MAYA8nF,GAAAjqF,UAAA88C,YAAA,WACA,OAAAv+B,KAAAi+B,WAUAytC,GAAAjqF,UAAA4H,QAAA,WACA,OACiC2W,KAAAuC,IAAAikE,EAAAE,OAYjCgF,GAAAjqF,UAAAuwD,QAAA,WACA,OACuBhyC,KAAAuC,IAAAikE,EAAAI,OAUvB8E,GAAAjqF,UAAA0qE,YAAA,WACA,OAAAnsD,KAAA8sE,WAWApB,GAAAjqF,UAAAgmE,oBAAA,WACA,OAAAznD,KAAAktE,mBAWAxB,GAAAjqF,UAAAwsD,6BAAA,WACA,OAAAjuC,KAAAmtE,4BAWAzB,GAAAjqF,UAAA0sF,gBAAA,SAAA/4C,EAAAi7C,EAAAC,EAAAC,GAGA,IAAAx6D,EAAA/V,KAAAysE,YACA,KAAA12D,GAAAs6D,KAAAt6D,EAAAy6D,aACA,OAAA/H,EAAAlxE,KAEA,IAAAwe,EAAAy6D,YAAAH,GAAAj7C,EAAA9c,UACA,OAAAmwD,EAAAlxE,KAQA,IAAA/N,EAAA8mF,EAAA,GAAAv6D,EAAA06D,MAAA,GACAhnF,EAAA6mF,EAAA,GAAAv6D,EAAA06D,MAAA,GACA,aAAAxtF,KAAAkW,IAAAo3E,GACAttF,KAAAgf,KAAAzY,IAAAC,KAAA8mF,GAQA7E,GAAAjqF,UAAAisF,mBAAA,SAAA7nC,EAAAjzB,GACA,IAAAxnB,EAAAwnB,GAAAizB,EAAAz6C,KACAy3D,EAAA,IAAA6tB,EAAA,EAAAtlF,EAAA4U,KAAA6lC,GACA7lC,KAAAstE,sBAAAzqB,IAOA6oB,GAAAjqF,UAAA6rF,sBAAA,SAAAzqB,GACA,GAAA7iD,KAAAysE,YAAA,CAKAzsE,KAAAguE,OAAAnrB,EAAA1+D,WACA0+D,EAAA9sC,WAAA/V,KAAAysE,YACA,IACAjqF,EADAmuF,EAAA3wE,KAAA8uE,kBAAA1+D,WAEA,QAAApQ,KAAAqL,cAAAw3C,GACA,IAAArgE,EAAAmuF,EAAAjuF,OAAA,EAA0CF,GAAA,EAAQA,IAAA,CAClD,IAAAkgE,EAAAiuB,EAAAnuF,GACA,GAAAkgE,EAAAR,YAIA,IADAQ,EAAAT,YAAAY,GAEA,SAUA6oB,GAAAjqF,UAAAmvF,iBAAA,WAEA,IAAA76D,EAAA/V,KAAAysE,YAWAoE,EAAA7wE,KAAAkuE,WACA,IAAA2C,EAAAhqF,UAAA,CACA,IAAAwiF,EAAA,GACAC,EAAAD,EACA,GAAAtzD,EAAA,CACA,IAAA+6D,EAAA/6D,EAAAg7D,UACAD,EAAAhnC,EAAA,EAAAzrC,aACAgrE,EAAArpE,KAAA6rE,yBAAA,IACAvC,EAAA,GAEAwH,EAAAhnC,EAAA,EAAAxrC,eACA+qE,EAAArpE,KAAA+rE,2BAAA,IACAzC,EAAA,GAGAuH,EAAA3H,kBAAAG,IACAwH,EAAArI,eACAqI,EAAAzH,cAAAC,EAAAC,IAIA,IACA9mF,EAAAC,EADAuuF,EAAAhxE,KAAAiuE,qBAEA,IAAAzrF,EAAA,EAAAC,EAAAuuF,EAAAtuF,OAA8CF,EAAAC,IAAQD,EACtDwuF,EAAAxuF,GAAAwd,KAAA+V,GAEAi7D,EAAAtuF,OAAA,GAOAgpF,GAAAjqF,UAAA+sF,mBAAA,WACAxuE,KAAAkW,UAOAw1D,GAAAjqF,UAAAgtF,qBAAA,WAMA,IAAAwC,EAKA,GAJAjxE,KAAAgwE,cACAiB,EAAAjxE,KAAAiwE,oBAGAjwE,KAAAytE,gBAAA,CACA,QAAAjrF,EAAA,EAAAC,EAAAud,KAAAytE,gBAAA/qF,OAAqDF,EAAAC,IAAQD,EAC7D+hF,EAAA,EAAAz5E,cAAAkV,KAAAytE,gBAAAjrF,IAEAwd,KAAAytE,gBAAA,KAGA,GAAAwD,EAQG,CACHA,EAAAp7E,YAAAmK,KAAA8sE,WAEA,IAAAU,EAAAxtE,KAAAutE,qBACAvtE,KAAAutE,qBAAA0D,EACAjxE,KAAAytE,iBACAlJ,EAAA,EAAAz4E,OAAA0hF,EAAAvE,EAAA,EAAAxxE,QACAuI,KAAA0tE,mBAAA1tE,MACAukE,EAAA,EAAAz4E,OAAA0hF,EAAAvE,EAAA,EAAAvxE,SACAsI,KAAA0tE,mBAAA1tE,OAGAA,KAAA+tE,gBACA/tE,KAAA+tE,cAAA/tE,KAAAkxE,WAAAhhE,KAAAlQ,MACAzL,OAAAvI,iBAAAi9E,EAAA,EAAA/wE,OACA8H,KAAA+tE,eAAA,SAtBA/tE,KAAAi+B,UAAAkzC,uBACAl1C,EAAA,EAAAv8B,WAAAM,KAAA8sE,gBACAvhF,IAAAyU,KAAA+tE,gBACAx5E,OAAA7I,oBAAAu9E,EAAA,EAAA/wE,OACA8H,KAAA+tE,eAAA,GACA/tE,KAAA+tE,mBAAAxiF,GAqBAyU,KAAAkxE,cASAxF,GAAAjqF,UAAA2sF,kBAAA,WACApuE,KAAAkW,UAOAw1D,GAAAjqF,UAAA2vF,2BAAA,WACApxE,KAAAkW,UAOAw1D,GAAAjqF,UAAA8sF,mBAAA,WACAvuE,KAAA2sE,2BACApI,EAAA,EAAAz5E,cAAAkV,KAAA2sE,0BACA3sE,KAAA2sE,yBAAA,MAEA3sE,KAAA4sE,yBACArI,EAAA,EAAAz5E,cAAAkV,KAAA4sE,wBACA5sE,KAAA4sE,uBAAA,MAEA,IAAA76B,EAAA/xC,KAAAgyC,UACAD,IACA/xC,KAAA8sE,UAAAz9B,aAAA,YAAA3rC,EAAA,EAAA5hB,OAAAiwD,IACA/xC,KAAA2sE,yBAAApI,EAAA,EAAAz4E,OACAimD,EAAAomB,EAAA,EAAA3sD,eACAxL,KAAAoxE,2BAAApxE,MACAA,KAAA4sE,uBAAArI,EAAA,EAAAz4E,OACAimD,EAAAk3B,EAAA,EAAAhyE,OACA+I,KAAAoxE,2BAAApxE,OAEAA,KAAAkW,UAOAw1D,GAAAjqF,UAAA6sF,yBAAA,WACAtuE,KAAA6sE,kCACA7sE,KAAA6sE,gCAAA9kE,QAAAw8D,EAAA,EAAAz5E,eACAkV,KAAA6sE,gCAAA,MAEA,IAAAwE,EAAArxE,KAAAgvE,gBACAqC,IACArxE,KAAA6sE,iCACAtI,EAAA,EAAAz4E,OACAulF,EAAAlZ,EAAA,EAAA3sD,eACAxL,KAAAkW,OAAAlW,MACAukE,EAAA,EAAAz4E,OACAulF,EAAApI,EAAA,EAAAhyE,OACA+I,KAAAkW,OAAAlW,QAGAA,KAAAkW,UAOAw1D,GAAAjqF,UAAA6vF,WAAA,WACA,QAAAtxE,KAAAysE,aAQAf,GAAAjqF,UAAA8vF,WAAA,WACAvxE,KAAAksE,oBACAhiC,qBAAAlqC,KAAAksE,oBAEAlsE,KAAAmsE,mBAQAT,GAAAjqF,UAAAy0B,OAAA,gBACA3qB,IAAAyU,KAAAksE,qBACAlsE,KAAAksE,mBAAAthC,sBACA5qC,KAAAmsE,mBAYAT,GAAAjqF,UAAA+vF,cAAA,SAAApjC,GACA,OAAApuC,KAAA4uE,cAAA/xE,OAAAuxC,IAWAs9B,GAAAjqF,UAAAgwF,kBAAA,SAAA/uB,GACA,OAAA1iD,KAAA8uE,kBAAAjyE,OAAA6lD,IAWAgpB,GAAAjqF,UAAAiwF,YAAA,SAAA76C,GAEA,OADA72B,KAAAgvE,gBAAA7E,YACAttE,OAAAg6B,IAWA60C,GAAAjqF,UAAAkwF,cAAA,SAAAzC,GACA,OAAAlvE,KAAAmvE,cAAAtyE,OAAAqyE,IAQAxD,GAAAjqF,UAAA2qF,aAAA,SAAAt4B,GACA,IAAAtxD,EAAAC,EAAAwtD,EAEAloD,EAAAiY,KAAA3W,UACA0oD,EAAA/xC,KAAAgyC,UACA1vD,EAAA2nB,EAAA,EAAA1nB,cACAqvF,EAAA5xE,KAAAysE,YAEA12D,EAAA,KACA,QAAAxqB,IAAAxD,GAAA05B,GAAA,EAAAhI,QAAA1xB,IAAAgqD,KAAAnJ,QAAA,CACA,IAAAmoC,EAAAh/B,EAAAxG,SAAAvrC,KAAAysE,YAAAzsE,KAAAysE,YAAAsE,eAAAxlF,GACAyqB,EAAAhW,KAAAgvE,gBAAAj6D,sBACAkB,KACA,IAAAzzB,EAAA,EAAAC,EAAAuzB,EAAAtzB,OAA6CF,EAAAC,IAAQD,EACrDyzB,EAAAvS,EAAA,EAAA5hB,OAAAk0B,EAAAxzB,GAAAq0C,QAAA7gB,EAAAxzB,GAGA,IAAAoF,GADAqoD,EAAA8B,EAAA18B,YACAztB,OACAiqF,EAAA5hC,EAAApoD,WAAAmY,KAAAy7C,YACA7zD,EAAA,GAAA3E,KAAAyuC,MAAA9pC,EAAA,GAAAiqF,KACAjqF,EAAA,GAAA3E,KAAAyuC,MAAA9pC,EAAA,GAAAiqF,KACA97D,GACA0yB,SAAA,EACA2nC,2BAAApwE,KAAAqsE,4BACA/pF,SACAmuF,MAAAzwE,KAAAguE,OAAAhuE,KAAAguE,OAAApmF,EACAyV,MAAA2C,KAAAwsE,cACAv2D,cACAD,mBACAw6B,MAAAzuD,EAAA,EAAA8Y,UAA+BmF,KAAAisE,QAC/Bn2C,WAAA91B,KAAAy7C,YACAy0B,2BAAAlwE,KAAAusE,4BACAyE,uBACAjpF,OACA+pF,mBAAA9xE,KAAAquE,oBACAwC,UAAA7wE,KAAAkuE,WACAp6B,OACA7e,aACAgb,YACA8gC,YACAP,gBAYA,GARAz6D,IACAA,EAAAzzB,OAAA2nB,EAAA,EAAAtiB,kBAAAsoD,EAAAroD,OACAqoD,EAAApoD,WAAAooD,EAAAnoD,SAAAiuB,EAAAhuB,KAAAzF,IAGA0d,KAAAysE,YAAA12D,EACA/V,KAAAi+B,UAAA8zC,YAAAh8D,GAEAA,EAAA,CAOA,GANAA,EAAA0yB,SACAzoC,KAAAkW,SAEAxpB,MAAAjL,UAAAwK,KAAA9I,MACA6c,KAAAiuE,qBAAAl4D,EAAAi7D,qBAEAY,IACA5xE,KAAA0sE,kBACAziE,EAAA,EAAApjB,QAAAmZ,KAAA0sE,mBACAziE,EAAA,EAAAlkB,OAAAgwB,EAAAzzB,OAAA0d,KAAA0sE,oBAEA1sE,KAAAqL,cACA,IAAA2mE,EAAA,EAAA9jC,EAAA,EAAAtW,UAAA53B,KAAA4xE,IACA5xE,KAAA0sE,gBAAAziE,EAAA,EAAA/kB,oBAAA8a,KAAA0sE,kBAIA1sE,KAAA0sE,kBACA32D,EAAAg7D,UAAAjnC,EAAA,EAAAzrC,aACA0X,EAAAg7D,UAAAjnC,EAAA,EAAAxrC,eACA2L,EAAA,EAAAlkB,OAAAgwB,EAAAzzB,OAAA0d,KAAA0sE,mBAGA1sE,KAAAqL,cACA,IAAA2mE,EAAA,EAAA9jC,EAAA,EAAArW,QAAA73B,KAAA+V,IACA9L,EAAA,EAAAtmB,MAAAoyB,EAAAzzB,OAAA0d,KAAA0sE,kBAIA1sE,KAAAqL,cACA,IAAA2mE,EAAA,EAAA9jC,EAAA,EAAAvW,WAAA33B,KAAA+V,IAEAk3B,WAAAjtC,KAAA4wE,iBAAA1gE,KAAAlQ,MAAA,IAYA0rE,GAAAjqF,UAAAwwF,cAAA,SAAAZ,GACArxE,KAAAnT,IAAA25E,EAAAC,WAAA4K,IAUA3F,GAAAjqF,UAAAywF,QAAA,SAAAnqF,GACAiY,KAAAnT,IAAA25E,EAAAE,KAAA3+E,IAWA2jF,GAAAjqF,UAAAqsD,UAAA,SAAAljD,GACAoV,KAAAnT,IAAA25E,EAAAG,OAAA/7E,IAUA8gF,GAAAjqF,UAAA0wF,QAAA,SAAApgC,GACA/xC,KAAAnT,IAAA25E,EAAAI,KAAA70B,IAOA25B,GAAAjqF,UAAA2wF,YAAA,SAAAtzC,GACA,IAAAuzC,EAAA3uE,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACA1W,KAAAquE,oBAAAgE,IAAA,EACAryE,KAAAkW,UASAw1D,GAAAjqF,UAAAyvF,WAAA,WACA,IAAAD,EAAAjxE,KAAAiwE,mBAEA,GAAAgB,EAEG,CACH,IAAAqB,EAAAzzE,iBAAAoyE,GACAjxE,KAAAkyE,SACAjB,EAAAryE,YACA2zE,WAAAD,EAAA,iBACAC,WAAAD,EAAA,aACAC,WAAAD,EAAA,cACAC,WAAAD,EAAA,kBACArB,EAAAn7E,aACAy8E,WAAAD,EAAA,gBACAC,WAAAD,EAAA,YACAC,WAAAD,EAAA,eACAC,WAAAD,EAAA,0BAbAtyE,KAAAkyE,aAAA3mF,IAsBAmgF,GAAAjqF,UAAA+wF,cAAA,SAAA1zC,GACA,IAAAuzC,EAAA3uE,EAAA,EAAA5hB,OAAAg9C,GAAApoB,kBACA1W,KAAAquE,oBAAAgE,GACAryE,KAAAkW,UAQAw1D,GAAA+G,wBACAhH,GAAAr+D,OACAq+D,GAAA99D,OAQA+9D,GAAAgH,SAAA,y+CA4BAhH,GAAAE,sBAAA,SAAAvqE,GAKA,IAAAmsE,EAAA,UACAjiF,IAAA8V,EAAAmsE,sBACAA,EAAA,iBAAAnsE,EAAAmsE,oBACAp4E,SAAA+4C,eAAA9sC,EAAAmsE,qBACAnsE,EAAAmsE,qBAMA,IAAAjyE,KAEAi1C,KACA,QAAAjlD,IAAA8V,EAAAgyB,MACA,kBAAAhyB,EAAAgyB,MAAAhyB,EAAAgyB,KACAmd,EAAAk7B,GAAAgH,UAAA,8BACG,CACH,IAAAr/C,EAAAhyB,EAAAgyB,KACA,iBAAAA,EACAmd,EAAAnd,GAAA,GACKA,aAAAyd,YACLN,EAAA9sC,EAAA,EAAA5hB,OAAAuxC,GAAA3c,YAAA2c,EACKA,IACLxT,EAAA,EAAAp4B,OAAA,iBAAA4rC,EAAA4d,KAAA,IACApxB,EAAA,EAAAp4B,OAAA,iBAAA4rC,EAAA2d,IAAA,IACAR,EAAAnd,EAAA2d,KAAA3d,EAAA4d,MAIA,IAYA0hC,EAoBA7E,EAhCAuD,EAAAhwE,EAAAsoE,kBAAAgB,EACAtpE,EAAAsoE,OAAA,IAAAgB,GAA2ChB,OAAAtoE,EAAAsoE,SAC3CpuE,EAAAirE,EAAAC,YAAA4K,EAEA91E,EAAAirE,EAAAG,QAAAtlE,EAAAzW,OAEA2Q,EAAAirE,EAAAI,WAAAr7E,IAAA8V,EAAA0wC,KACA1wC,EAAA0wC,KAAA,IAAA6gC,EAAA,OAOArnF,IAAA8V,EAAA68B,UACAxxC,MAAAkQ,QAAAyE,EAAA68B,UACAy0C,EAAAtxE,EAAA68B,SACK,iBAAA78B,EAAA68B,SACLy0C,GAAAtxE,EAAA68B,UAEAre,EAAA,EAAAp4B,QAAA,MAEAkrF,EAAAtmF,QAA0D,YAC1DsmF,IAAA9pD,OAAA6iD,GAAA+G,0BAGAE,EAAAjH,GAAA+G,uBAQA,IAgBA1/B,EAWA6Z,EAWAghB,EAtCAiF,EAAArH,GAAAP,wBACA6H,EAAA,QAAAtwF,EAAA,EAAAC,EAAAkwF,EAAAjwF,OAAmDF,EAAAC,IAAQD,EAE3D,IADA,IAAAuwF,EAAAJ,EAAAnwF,GACAwX,EAAA,EAAAoH,EAAAyxE,EAAAnwF,OAAmDsX,EAAAoH,IAAQpH,EAAA,CAC3D,IAAAg5E,EAAAH,EAAA74E,GACA,GAAAg5E,EAAA,QAAAD,GAAA,CACAjF,EAAAkF,EACA,MAAAF,GAKA,IAAAhF,EACA,UAAAjsE,MAAA,8CAAA8wE,EAAA35D,KAAA,OAsCA,YAlCAztB,IAAA8V,EAAA0xC,WACArmD,MAAAkQ,QAAAyE,EAAA0xC,UACAA,EAAA,IAAAC,EAAA,EAAA3xC,EAAA0xC,SAAAnvD,UAEAi8B,EAAA,EAAAp4B,OAAA4Z,EAAA0xC,oBAAAC,EAAA,EACA,IACAD,EAAA1xC,EAAA0xC,gBAKAxnD,IAAA8V,EAAAurD,eACAlgE,MAAAkQ,QAAAyE,EAAAurD,cACAA,EAAA,IAAA5Z,EAAA,EAAA3xC,EAAAurD,aAAAhpE,UAEAi8B,EAAA,EAAAp4B,OAAA4Z,EAAAurD,wBAAA5Z,EAAA,EACA,IACA4Z,EAAAvrD,EAAAurD,oBAKArhE,IAAA8V,EAAAusE,SACAlhF,MAAAkQ,QAAAyE,EAAAusE,UACAA,EAAA,IAAA56B,EAAA,EAAA3xC,EAAAusE,SAAAhqF,UAEAi8B,EAAA,EAAAp4B,OAAA4Z,EAAAusE,oBAAA56B,EAAA,EACA,IACA46B,EAAAvsE,EAAAusE,UAGAA,EAAA,IAAA56B,EAAA,GAIAD,WACA6Z,eACA4gB,sBACAh9B,QACAo9B,WACAE,oBACAvyE,WAIA,IAAA03E,GAAA,qBCh8CAC,GAAA,SAAA5wF,EAAAuF,EAAAiuC,EAAAvC,GAEA8f,EAAA,EAAA/sD,KAAA0Z,MAMAA,KAAA1d,SAMA0d,KAAAy7C,YAAA3lB,EAMA91B,KAAAnY,aAMAmY,KAAAuzB,SAIA7vB,EAAA,EAAApiB,SAAA4xF,GAAA7/B,EAAA,GAMA6/B,GAAAzxF,UAAAg0B,QAAA,WACAzV,KAAAqL,cAAA49D,EAAA,EAAAhyE,SAOAi8E,GAAAzxF,UAAA0iB,UAAA,WACA,OAAAnE,KAAA1d,QAQA4wF,GAAAzxF,UAAAy3C,SAAA,aAMAg6C,GAAAzxF,UAAA0xF,cAAA,WACA,OAAAnzE,KAAAy7C,aAOAy3B,GAAAzxF,UAAA4/B,cAAA,WACA,OAA2BrhB,KAAA,YAO3BkzE,GAAAzxF,UAAA4zB,SAAA,WACA,OAAArV,KAAAuzB,OAQA2/C,GAAAzxF,UAAAumC,KAAA,aACA,IAAAorD,GAAA,YCpFAC,GAAA,SAAA/wF,EAAAuF,EAAAiuC,EAAArkC,EAAA6hF,GAOAtzE,KAAA02D,aAAAnrE,IAAA+nF,IAAA,KAEA,IAAA//C,OAAAhoC,IAAA+nF,EACA53C,GAAA,EAAAnjC,KAAAmjC,GAAA,EAAAjjC,OAEA26E,GAAA9sF,KAAA0Z,KAAA1d,EAAAuF,EAAAiuC,EAAAvC,GAMAvzB,KAAAi6B,QAAAxoC,EAMAuO,KAAAuzE,OAAA,MAIA7vE,EAAA,EAAApiB,SAAA+xF,GAAAD,IAOAC,GAAA5xF,UAAA+xF,SAAA,WACA,OAAAxzE,KAAAuzE,QASAF,GAAA5xF,UAAAgyF,YAAA,SAAAC,GACAA,GACA1zE,KAAAuzE,OAAAG,EACA1zE,KAAAuzB,MAAAmI,GAAA,EAAAlkC,OAEAwI,KAAAuzB,MAAAmI,GAAA,EAAAjjC,OAEAuH,KAAAyV,WAOA49D,GAAA5xF,UAAAumC,KAAA,WACAhoB,KAAAuzB,OAAAmI,GAAA,EAAAnjC,OACAyH,KAAAuzB,MAAAmI,GAAA,EAAAljC,QACAwH,KAAAyV,UACAzV,KAAA02D,QAAA12D,KAAAyzE,YAAAvjE,KAAAlQ,SAQAqzE,GAAA5xF,UAAAy3C,SAAA,WACA,OAAAl5B,KAAAi6B,SAEA,IAAA05C,GAAA,8BC3EAC,GAAA,SACAxoF,EAAAyoF,EAAApuD,EAAAquD,EACAC,GAEAvrB,EAAA,EAAAliE,KAAA0Z,KAAA5U,GAOA4U,KAAAg0E,cAAAH,EAOA7zE,KAAA+V,WAAA0P,EAQAzlB,KAAArO,QAAAmiF,EAQA9zE,KAAAi0E,UAAAF,GAIArwE,EAAA,EAAApiB,SAAAsyF,GAAAprB,EAAA,GACA,IAAA0rB,GAAA,uDC5CAC,GAAA,aAWAA,GAAA1yF,UAAA2yF,WAAA,SAAAnzE,EAAA69B,EAAAZ,KAQAi2C,GAAA1yF,UAAA4yF,aAAA,SAAApzE,KAQAkzE,GAAA1yF,UAAA8sE,SAAA,SAAAh5D,KAOA4+E,GAAA1yF,UAAA6yF,WAAA,SAAAC,EAAAz1C,KAOAq1C,GAAA1yF,UAAA+yF,YAAA,SAAA11C,EAAAvpC,KAQA4+E,GAAA1yF,UAAAgzF,uBAAA,SAAAC,EAAA51C,KAQAq1C,GAAA1yF,UAAAkzF,eAAA,SAAAC,EAAA91C,KAQAq1C,GAAA1yF,UAAAozF,oBAAA,SAAAC,EAAAh2C,KAQAq1C,GAAA1yF,UAAAszF,eAAA,SAAAC,EAAAl2C,KAOAq1C,GAAA1yF,UAAAwzF,iBAAA,SAAAC,EAAAp2C,KAOAq1C,GAAA1yF,UAAA0zF,UAAA,SAAAC,EAAAt2C,KAQAq1C,GAAA1yF,UAAA4zF,YAAA,SAAAC,EAAAx2C,KAOAq1C,GAAA1yF,UAAA8zF,SAAA,SAAAt0E,EAAA69B,KAOAq1C,GAAA1yF,UAAA+zF,mBAAA,SAAAz4C,EAAAnB,KAOAu4C,GAAA1yF,UAAAg0F,cAAA,SAAAC,EAAAC,KAOAxB,GAAA1yF,UAAAm0F,aAAA,SAAAC,EAAAF,KACA,IAAAG,GAAA,GClGAC,GAAA,SAAApkF,EAAAmkC,EAAAxzC,EAAAsK,EAAAopF,GACAF,GAAAxvF,KAAA0Z,MAMAA,KAAAi2E,SAAAtkF,EAMAqO,KAAAy7C,YAAA3lB,EAMA91B,KAAA6C,QAAAvgB,EAMA0d,KAAAk2E,WAAAtpF,EAMAoT,KAAAm2E,cAAAH,EAMAh2E,KAAAo2E,kBAAA,KAMAp2E,KAAAq2E,oBAAA,KAMAr2E,KAAAs2E,kBAAA,KAMAt2E,KAAAu2E,WAAA,KAMAv2E,KAAAw2E,aAAA,KAMAx2E,KAAAg+B,OAAA,KAMAh+B,KAAAy2E,cAAA,EAMAz2E,KAAA02E,cAAA,EAMA12E,KAAA22E,aAAA,EAMA32E,KAAA42E,cAAA,EAMA52E,KAAA62E,cAAA,EAMA72E,KAAA82E,cAAA,EAMA92E,KAAA+2E,sBAAA,EAMA/2E,KAAAg3E,eAAA,EAMAh3E,KAAAi3E,YAAA,EAMAj3E,KAAAk3E,mBAAA,EAMAl3E,KAAAm3E,YAAA,EAMAn3E,KAAAm+B,MAAA,GAMAn+B,KAAAo3E,aAAA,EAMAp3E,KAAAq3E,aAAA,EAMAr3E,KAAAs3E,qBAAA,EAMAt3E,KAAAu3E,cAAA,EAMAv3E,KAAAw3E,WAAA,EAMAx3E,KAAAy3E,eAAA,KAMAz3E,KAAA03E,iBAAA,KAMA13E,KAAA23E,WAAA,KAMA33E,KAAA43E,qBAMA53E,KAAA63E,mBAAAvL,GAAA,EAAA3qF,UAIA+hB,EAAA,EAAApiB,SAAAy0F,GAAAD,IAUAC,GAAAt0F,UAAAq2F,YAAA,SAAAvyF,EAAAC,EAAAC,EAAAC,GACA,GAAAsa,KAAAg+B,OAAA,CAGA,IAAA+5C,EAAAC,GAAA,EAAAtpE,YACAnpB,EAAAC,EAAAC,EAAA,EAAAua,KAAAk2E,WACAl2E,KAAA43E,mBACAjmF,EAAAqO,KAAAi2E,SACAgC,EAAAj4E,KAAA63E,mBACA/gF,EAAAnF,EAAAoF,YACA,GAAAiJ,KAAA42E,gBACAjlF,EAAAoF,YAAAD,EAAAkJ,KAAA42E,eAEA,IAIAp0F,EAAAC,EAJAqF,EAAAkY,KAAAg3E,eAKA,IAJAh3E,KAAA+2E,uBACAjvF,GAAAkY,KAAAm2E,eAGA3zF,EAAA,EAAAC,EAAAs1F,EAAAr1F,OAA2CF,EAAAC,EAAQD,GAAA,GACnD,IAAAsB,EAAAi0F,EAAAv1F,GAAAwd,KAAAy2E,cACA1yF,EAAAg0F,EAAAv1F,EAAA,GAAAwd,KAAA02E,cAKA,GAJA12E,KAAAk3E,oBACApzF,EAAAb,KAAAyuC,MAAA5tC,GACAC,EAAAd,KAAAyuC,MAAA3tC,IAEA,IAAA+D,GAAA,GAAAkY,KAAAi3E,YAAA,CACA,IAAA9pC,EAAArpD,EAAAkc,KAAAy2E,cACArpC,EAAArpD,EAAAic,KAAA02E,cACApK,GAAA,EAAA99E,QAAAypF,EACA9qC,EAAAC,EACAptC,KAAAi3E,YAAAj3E,KAAAi3E,YACAnvF,GACAqlD,GAAAC,GACAz7C,EAAAqF,aAAA7T,MAAAwO,EAAAsmF,GAEAtmF,EAAA4E,UAAAyJ,KAAAg+B,OAAAh+B,KAAA62E,cAAA72E,KAAA82E,cACA92E,KAAAm3E,YAAAn3E,KAAA22E,aAAA7yF,EAAAC,EACAic,KAAAm3E,YAAAn3E,KAAA22E,cAEA,IAAA7uF,GAAA,GAAAkY,KAAAi3E,aACAtlF,EAAAqF,aAAA,aAEA,GAAAgJ,KAAA42E,gBACAjlF,EAAAoF,YAAAD,KAYAi/E,GAAAt0F,UAAAy2F,UAAA,SAAA3yF,EAAAC,EAAAC,EAAAC,GACA,GAAAsa,KAAA23E,YAAA,KAAA33E,KAAAm+B,MAAA,CAGAn+B,KAAAy3E,gBACAz3E,KAAAm4E,qBAAAn4E,KAAAy3E,gBAEAz3E,KAAA03E,kBACA13E,KAAAo4E,uBAAAp4E,KAAA03E,kBAEA13E,KAAAq4E,qBAAAr4E,KAAA23E,YACA,IAAAI,EAAAC,GAAA,EAAAtpE,YACAnpB,EAAAC,EAAAC,EAAAC,EAAAsa,KAAAk2E,WACAl2E,KAAA43E,mBACAjmF,EAAAqO,KAAAi2E,SACAnuF,EAAAkY,KAAAu3E,cAIA,IAHAv3E,KAAAs3E,sBACAxvF,GAAAkY,KAAAm2E,eAEQ3wF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAA5B,EAAAi0F,EAAAvyF,GAAAwa,KAAAo3E,aACArzF,EAAAg0F,EAAAvyF,EAAA,GAAAwa,KAAAq3E,aACA,OAAAvvF,GAAA,GAAAkY,KAAAw3E,WAAA,CACA,IAAAS,EAAA3L,GAAA,EAAA99E,QAAAwR,KAAA63E,mBACA/zF,EAAAC,EACAic,KAAAw3E,WAAAx3E,KAAAw3E,WACA1vF,GACAhE,GAAAC,GACA4N,EAAAqF,aAAA7T,MAAAwO,EAAAsmF,GAEAj4E,KAAA03E,kBACA/lF,EAAA2mF,WAAAt4E,KAAAm+B,MAAAr6C,EAAAC,GAEAic,KAAAy3E,gBACA9lF,EAAA4mF,SAAAv4E,KAAAm+B,MAAAr6C,EAAAC,GAGA,IAAA+D,GAAA,GAAAkY,KAAAw3E,YACA7lF,EAAAqF,aAAA,eAcA++E,GAAAt0F,UAAA+2F,cAAA,SAAAjzF,EAAAC,EAAAC,EAAAC,EAAA+yF,GACA,IAAA9mF,EAAAqO,KAAAi2E,SACA8B,EAAAC,GAAA,EAAAtpE,YACAnpB,EAAAC,EAAAC,EAAAC,EAAAsa,KAAAk2E,WACAl2E,KAAA43E,mBACAjmF,EAAAkmD,OAAAkgC,EAAA,GAAAA,EAAA,IACA,IAAAr1F,EAAAq1F,EAAAr1F,OACA+1F,IACA/1F,GAAA,GAEA,QAAAF,EAAA,EAAiBA,EAAAE,EAAYF,GAAA,EAC7BmP,EAAAmrC,OAAAi7C,EAAAv1F,GAAAu1F,EAAAv1F,EAAA,IAKA,OAHAi2F,GACA9mF,EAAAsrC,YAEAx3C,GAYAswF,GAAAt0F,UAAAi3F,WAAA,SAAAnzF,EAAAC,EAAA05B,EAAAx5B,GACA,IAAAlD,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EACvCgD,EAAAwa,KAAAw4E,cACAjzF,EAAAC,EAAA05B,EAAA18B,GAAAkD,GAAA,GAEA,OAAAF,GAYAuwF,GAAAt0F,UAAA6yF,WAAA,SAAArzE,GACA,GAAAgJ,EAAA,EAAA9gB,WAAA6W,KAAA6C,QAAA5B,EAAAkD,aAAA,CAGA,GAAAnE,KAAAu2E,YAAAv2E,KAAAw2E,aAAA,CACAx2E,KAAAu2E,YACAv2E,KAAAm4E,qBAAAn4E,KAAAu2E,YAEAv2E,KAAAw2E,cACAx2E,KAAAo4E,uBAAAp4E,KAAAw2E,cAEA,IAAAuB,EAAA/2C,GAAA,EAAAtyB,YACAzN,EAAAjB,KAAAk2E,WAAAl2E,KAAA43E,mBACA5zF,EAAA+zF,EAAA,GAAAA,EAAA,GACA9zF,EAAA8zF,EAAA,GAAAA,EAAA,GACAh4E,EAAA9c,KAAAgf,KAAAje,IAAAC,KACA0N,EAAAqO,KAAAi2E,SACAtkF,EAAAirC,YACAjrC,EAAAkrC,IACAk7C,EAAA,GAAAA,EAAA,GAAAh4E,EAAA,IAAA9c,KAAAsX,IACAyF,KAAAu2E,YACA5kF,EAAAyoC,OAEAp6B,KAAAw2E,cACA7kF,EAAAkpC,SAGA,KAAA76B,KAAAm+B,OACAn+B,KAAAk4E,UAAAj3E,EAAAja,YAAA,SAaA+uF,GAAAt0F,UAAA8sE,SAAA,SAAAh5D,GACAyK,KAAAw1E,mBAAAjgF,EAAA8lC,UAAA9lC,EAAAkmC,aACAz7B,KAAAy1E,cAAAlgF,EAAA2jC,YACAl5B,KAAA41E,aAAArgF,EAAA+oC,YAYAy3C,GAAAt0F,UAAA4yF,aAAA,SAAApzE,GAEA,OADAA,EAAAM,WAEA,KAAAC,GAAA,EAAA5P,MACAoO,KAAAm1E,UAA8C,GAC9C,MACA,KAAA3zE,GAAA,EAAA3P,YACAmO,KAAA20E,eAAwD,GACxD,MACA,KAAAnzE,GAAA,EAAAzP,QACAiO,KAAAq1E,YAAkD,GAClD,MACA,KAAA7zE,GAAA,EAAAxP,YACAgO,KAAA+0E,eAAwD,GACxD,MACA,KAAAvzE,GAAA,EAAAvP,kBACA+N,KAAA60E,oBAAkE,GAClE,MACA,KAAArzE,GAAA,EAAAtP,cACA8N,KAAAi1E,iBAA4D,GAC5D,MACA,KAAAzzE,GAAA,EAAArP,oBACA6N,KAAAy0E,uBAAwE,GACxE,MACA,KAAAjzE,GAAA,EAAApP,OACA4N,KAAAs0E,WAAgD,KAkBhDyB,GAAAt0F,UAAA+yF,YAAA,SAAA11C,EAAAvpC,GACA,IAAA0L,EAAA1L,EAAAkpC,qBAAAlpC,CAAAupC,GACA79B,GACAgJ,EAAA,EAAA9gB,WAAA6W,KAAA6C,QAAA5B,EAAAkD,eAGAnE,KAAAuuD,SAAAh5D,GACAyK,KAAAq0E,aAAApzE,KAWA80E,GAAAt0F,UAAAgzF,uBAAA,SAAAxzE,GACA,IACAze,EAAAC,EADAkf,EAAAV,EAAA03E,qBAEA,IAAAn2F,EAAA,EAAAC,EAAAkf,EAAAjf,OAAqCF,EAAAC,IAAQD,EAC7Cwd,KAAAq0E,aAAA1yE,EAAAnf,KAYAuzF,GAAAt0F,UAAA0zF,UAAA,SAAAl0E,GACA,IAAA1b,EAAA0b,EAAAsZ,qBACA70B,EAAAub,EAAAia,YACAlb,KAAAg+B,QACAh+B,KAAA83E,YAAAvyF,EAAA,EAAAA,EAAA7C,OAAAgD,GAEA,KAAAsa,KAAAm+B,OACAn+B,KAAAk4E,UAAA3yF,EAAA,EAAAA,EAAA7C,OAAAgD,IAYAqwF,GAAAt0F,UAAAszF,eAAA,SAAA9zE,GACA,IAAA1b,EAAA0b,EAAAsZ,qBACA70B,EAAAub,EAAAia,YACAlb,KAAAg+B,QACAh+B,KAAA83E,YAAAvyF,EAAA,EAAAA,EAAA7C,OAAAgD,GAEA,KAAAsa,KAAAm+B,OACAn+B,KAAAk4E,UAAA3yF,EAAA,EAAAA,EAAA7C,OAAAgD,IAYAqwF,GAAAt0F,UAAAkzF,eAAA,SAAA1zE,GACA,GAAAgJ,EAAA,EAAA9gB,WAAA6W,KAAA6C,QAAA5B,EAAAkD,aAAA,CAGA,GAAAnE,KAAAw2E,aAAA,CACAx2E,KAAAo4E,uBAAAp4E,KAAAw2E,cACA,IAAA7kF,EAAAqO,KAAAi2E,SACA1wF,EAAA0b,EAAAsZ,qBACA5oB,EAAAirC,YACA58B,KAAAw4E,cAAAjzF,EAAA,EAAAA,EAAA7C,OACAue,EAAAia,aAAA,GACAvpB,EAAAkpC,SAEA,QAAA76B,KAAAm+B,MAAA,CACA,IAAAy6C,EAAA33E,EAAA43E,kBACA74E,KAAAk4E,UAAAU,EAAA,UAaA7C,GAAAt0F,UAAAozF,oBAAA,SAAA5zE,GACA,IAAA63E,EAAA73E,EAAAkD,YACA,GAAA8F,EAAA,EAAA9gB,WAAA6W,KAAA6C,QAAAi2E,GAAA,CAGA,GAAA94E,KAAAw2E,aAAA,CACAx2E,KAAAo4E,uBAAAp4E,KAAAw2E,cACA,IAMAh0F,EAAAC,EANAkP,EAAAqO,KAAAi2E,SACA1wF,EAAA0b,EAAAsZ,qBACA/0B,EAAA,EACA05B,EAAAje,EAAA0iC,UACAj+C,EAAAub,EAAAia,YAGA,IAFAvpB,EAAAirC,YAEAp6C,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAAiCF,EAAAC,IAAQD,EACzCgD,EAAAwa,KAAAw4E,cACAjzF,EAAAC,EAAA05B,EAAA18B,GAAAkD,GAAA,GAEAiM,EAAAkpC,SAEA,QAAA76B,KAAAm+B,MAAA,CACA,IAAA46C,EAAA93E,EAAA+3E,mBACAh5E,KAAAk4E,UAAAa,EAAA,EAAAA,EAAAr2F,OAAA,MAYAqzF,GAAAt0F,UAAA4zF,YAAA,SAAAp0E,GACA,GAAAgJ,EAAA,EAAA9gB,WAAA6W,KAAA6C,QAAA5B,EAAAkD,aAAA,CAGA,GAAAnE,KAAAw2E,cAAAx2E,KAAAu2E,WAAA,CACAv2E,KAAAu2E,YACAv2E,KAAAm4E,qBAAAn4E,KAAAu2E,YAEAv2E,KAAAw2E,cACAx2E,KAAAo4E,uBAAAp4E,KAAAw2E,cAEA,IAAA7kF,EAAAqO,KAAAi2E,SACAtkF,EAAAirC,YACA58B,KAAA04E,WAAAz3E,EAAAwiC,6BACA,EAAAxiC,EAAA0iC,UAAA1iC,EAAAia,aACAlb,KAAAu2E,YACA5kF,EAAAyoC,OAEAp6B,KAAAw2E,cACA7kF,EAAAkpC,SAGA,QAAA76B,KAAAm+B,MAAA,CACA,IAAA86C,EAAAh4E,EAAA2iC,uBACA5jC,KAAAk4E,UAAAe,EAAA,UAWAlD,GAAAt0F,UAAAwzF,iBAAA,SAAAh0E,GACA,GAAAgJ,EAAA,EAAA9gB,WAAA6W,KAAA6C,QAAA5B,EAAAkD,aAAA,CAGA,GAAAnE,KAAAw2E,cAAAx2E,KAAAu2E,WAAA,CACAv2E,KAAAu2E,YACAv2E,KAAAm4E,qBAAAn4E,KAAAu2E,YAEAv2E,KAAAw2E,cACAx2E,KAAAo4E,uBAAAp4E,KAAAw2E,cAEA,IAKAh0F,EAAAC,EALAkP,EAAAqO,KAAAi2E,SACA1wF,EAAA0b,EAAAwiC,6BACAj+C,EAAA,EACA45B,EAAAne,EAAAi4E,WACAxzF,EAAAub,EAAAia,YAGA,IADAvpB,EAAAirC,YACAp6C,EAAA,EAAAC,EAAA28B,EAAA18B,OAAkCF,EAAAC,IAAQD,EAAA,CAC1C,IAAA08B,EAAAE,EAAA58B,GACAgD,EAAAwa,KAAA04E,WAAAnzF,EAAAC,EAAA05B,EAAAx5B,GAEAsa,KAAAu2E,YACA5kF,EAAAyoC,OAEAp6B,KAAAw2E,cACA7kF,EAAAkpC,SAGA,QAAA76B,KAAAm+B,MAAA,CACA,IAAAg7C,EAAAl4E,EAAAm4E,wBACAp5E,KAAAk4E,UAAAiB,EAAA,EAAAA,EAAAz2F,OAAA,MASAqzF,GAAAt0F,UAAA02F,qBAAA,SAAAkB,GACA,IAAA1nF,EAAAqO,KAAAi2E,SACAqD,EAAAt5E,KAAAo2E,kBACAkD,EAMAA,EAAAv8C,WAAAs8C,EAAAt8C,YACAu8C,EAAAv8C,UAAAprC,EAAAorC,UAAAs8C,EAAAt8C,YANAprC,EAAAorC,UAAAs8C,EAAAt8C,UACA/8B,KAAAo2E,mBACAr5C,UAAAs8C,EAAAt8C,aAcAg5C,GAAAt0F,UAAA22F,uBAAA,SAAAmB,GACA,IAAA5nF,EAAAqO,KAAAi2E,SACAuD,EAAAx5E,KAAAq2E,oBACAmD,GAoBAA,EAAAtwD,SAAAqwD,EAAArwD,UACAswD,EAAAtwD,QAAAv3B,EAAAu3B,QAAAqwD,EAAArwD,SAEA6S,EAAA,EAAA5uB,mBACAgD,EAAA,EAAApqB,OACAyzF,EAAApwD,SAAAmwD,EAAAnwD,WACAz3B,EAAA0b,YAAAmsE,EAAApwD,SAAAmwD,EAAAnwD,UAEAowD,EAAAlwD,gBAAAiwD,EAAAjwD,iBACAkwD,EAAAlwD,eAAA33B,EAAA23B,eACAiwD,EAAAjwD,iBAGAkwD,EAAAhwD,UAAA+vD,EAAA/vD,WACAgwD,EAAAhwD,SAAA73B,EAAA63B,SAAA+vD,EAAA/vD,UAEAgwD,EAAAx8C,WAAAu8C,EAAAv8C,YACAw8C,EAAAx8C,UAAArrC,EAAAqrC,UAAAu8C,EAAAv8C,WAEAw8C,EAAA9vD,YAAA6vD,EAAA7vD,aACA8vD,EAAA9vD,WAAA/3B,EAAA+3B,WACA6vD,EAAA7vD,YAEA8vD,EAAA59C,aAAA29C,EAAA39C,cACA49C,EAAA59C,YAAAjqC,EAAAiqC,YACA29C,EAAA39C,eA5CAjqC,EAAAu3B,QAAAqwD,EAAArwD,QACA6S,EAAA,EAAA5uB,mBACAxb,EAAA0b,YAAAksE,EAAAnwD,UACAz3B,EAAA23B,eAAAiwD,EAAAjwD,gBAEA33B,EAAA63B,SAAA+vD,EAAA/vD,SACA73B,EAAAqrC,UAAAu8C,EAAAv8C,UACArrC,EAAA+3B,WAAA6vD,EAAA7vD,WACA/3B,EAAAiqC,YAAA29C,EAAA39C,YACA57B,KAAAq2E,qBACAntD,QAAAqwD,EAAArwD,QACAE,SAAAmwD,EAAAnwD,SACAE,eAAAiwD,EAAAjwD,eACAE,SAAA+vD,EAAA/vD,SACAwT,UAAAu8C,EAAAv8C,UACAtT,WAAA6vD,EAAA7vD,WACAkS,YAAA29C,EAAA39C,eAsCAm6C,GAAAt0F,UAAA42F,qBAAA,SAAAoB,GACA,IAAA9nF,EAAAqO,KAAAi2E,SACAyD,EAAA15E,KAAAs2E,kBACAqD,EAAAF,EAAAE,UACAF,EAAAE,UAAAC,GAAA,EAAA9mF,iBACA4mF,GAUAA,EAAA9lF,MAAA6lF,EAAA7lF,OACA8lF,EAAA9lF,KAAAjC,EAAAiC,KAAA6lF,EAAA7lF,MAEA8lF,EAAAC,eACAD,EAAAC,aAEAD,EAAAG,cAAAJ,EAAAI,eACAH,EAAAG,aAAAloF,EAAAkoF,aACAJ,EAAAI,gBAjBAloF,EAAAiC,KAAA6lF,EAAA7lF,KACAjC,EAAAgoF,YACAhoF,EAAAkoF,aAAAJ,EAAAI,aACA75E,KAAAs2E,mBACA1iF,KAAA6lF,EAAA7lF,KACA+lF,YACAE,aAAAJ,EAAAI,gBAyBA9D,GAAAt0F,UAAA+zF,mBAAA,SAAAz4C,EAAAnB,GACA,GAAAmB,EAEG,CACH,IAAA+8C,EAAA/8C,EAAAlT,WACA7pB,KAAAu2E,YACAx5C,UAAAjB,GAAA,EAAAjkB,YAAAiiE,GACAF,GAAA,EAAArnF,wBALAyN,KAAAu2E,WAAA,KAQA,GAAA36C,EAEG,CACH,IAAAm+C,EAAAn+C,EAAA/R,WACAmwD,EAAAp+C,EAAA9R,aACAmwD,EAAAr+C,EAAA7R,cACAmwD,EAAAt+C,EAAA5R,oBACAmwD,EAAAv+C,EAAA3R,cACAmwD,EAAAx+C,EAAA90C,WACAuzF,EAAAz+C,EAAA1R,gBACAlqB,KAAAw2E,cACAttD,aAAA39B,IAAAyuF,EACAA,EAAAJ,GAAA,EAAApnF,eACA42B,SAAA6wD,GACAL,GAAA,EAAAnnF,gBACA62B,eAAA4wD,GACAN,GAAA,EAAAlnF,sBACA82B,cAAAj+B,IAAA4uF,EACAA,EAAAP,GAAA,EAAAjnF,gBACAqqC,UAAAh9B,KAAAy7C,kBAAAlwD,IAAA6uF,EACAA,EAAAR,GAAA,EAAA3mF,kBACAy2B,gBAAAn+B,IAAA8uF,EACAA,EAAAT,GAAA,EAAAhnF,kBACAgpC,YAAAE,GAAA,EAAAjkB,YAAAkiE,GACAH,GAAA,EAAA/mF,0BAvBAmN,KAAAw2E,aAAA,MAoCAT,GAAAt0F,UAAAg0F,cAAA,SAAAC,GACA,GAAAA,EAEG,CACH,IAAA4E,EAAA5E,EAAAz8C,YAEAshD,EAAA7E,EAAAx8C,SAAA,GACAshD,EAAA9E,EAAAt0D,YACAua,EAAA+5C,EAAArsF,UACA2W,KAAAy2E,cAAA6D,EAAA,GACAt6E,KAAA02E,cAAA4D,EAAA,GACAt6E,KAAA22E,aAAAh7C,EAAA,GACA37B,KAAAg+B,OAAAu8C,EACAv6E,KAAA42E,cAAAlB,EAAA3+C,aACA/2B,KAAA62E,cAAA2D,EAAA,GACAx6E,KAAA82E,cAAA0D,EAAA,GACAx6E,KAAA+2E,qBAAArB,EAAA78C,oBACA74B,KAAAg3E,eAAAtB,EAAA58C,cACA94B,KAAAi3E,YAAAvB,EAAA38C,WAAA/4B,KAAAy7C,YACAz7C,KAAAk3E,kBAAAxB,EAAA18C,iBACAh5B,KAAAm3E,YAAAx7C,EAAA,QAlBA37B,KAAAg+B,OAAA,MA8BA+3C,GAAAt0F,UAAAm0F,aAAA,SAAAC,GACA,GAAAA,EAEG,CACH,IAAA4E,EAAA5E,EAAAx6C,UACA,GAAAo/C,EAEK,CACL,IAAAC,EAAAD,EAAA5wD,WACA7pB,KAAAy3E,gBACA16C,UAAAjB,GAAA,EAAAjkB,YAAA6iE,GACAd,GAAA,EAAArnF,wBALAyN,KAAAy3E,eAAA,KAQA,IAAAkD,EAAA9E,EAAAp6C,YACA,GAAAk/C,EAEK,CACL,IAAAC,EAAAD,EAAA9wD,WACAgxD,EAAAF,EAAA7wD,aACAgxD,EAAAH,EAAA5wD,cACAgxD,EAAAJ,EAAA3wD,oBACAgxD,EAAAL,EAAA1wD,cACAgxD,EAAAN,EAAA7zF,WACAo0F,EAAAP,EAAAzwD,gBACAlqB,KAAA03E,kBACAxuD,aAAA39B,IAAAsvF,EACAA,EAAAjB,GAAA,EAAApnF,eACA42B,SAAA0xD,GACAlB,GAAA,EAAAnnF,gBACA62B,eAAAyxD,GACAnB,GAAA,EAAAlnF,sBACA82B,cAAAj+B,IAAAyvF,EACAA,EAAApB,GAAA,EAAAjnF,gBACAqqC,eAAAzxC,IAAA0vF,EACAA,EAAArB,GAAA,EAAA3mF,iBACAy2B,gBAAAn+B,IAAA2vF,EACAA,EAAAtB,GAAA,EAAAhnF,kBACAgpC,YAAAE,GAAA,EAAAjkB,YAAA+iE,GACAhB,GAAA,EAAA/mF,0BAvBAmN,KAAA03E,iBAAA,KA0BA,IAAAyD,EAAAtF,EAAAuF,UACAC,EAAAxF,EAAAyF,aACAC,EAAA1F,EAAA2F,aACAC,EAAA5F,EAAAh9C,oBACA6iD,EAAA7F,EAAA/8C,cACA6iD,EAAA9F,EAAA98C,WACA6iD,EAAA/F,EAAAv3C,UACAu9C,EAAAhG,EAAAiG,eACAC,EAAAlG,EAAAmG,kBACAh8E,KAAA23E,YACA/jF,UAAArI,IAAA4vF,EACAA,EAAAvB,GAAA,EAAAtnF,YACAqnF,eAAApuF,IAAAswF,EACAA,EAAAjC,GAAA,EAAA9mF,iBACA+mF,kBAAAtuF,IAAAwwF,EACAA,EAAAnC,GAAA,EAAA7mF,qBAEAiN,KAAAm+B,WAAA5yC,IAAAqwF,IAAA,GACA57E,KAAAo3E,kBACA7rF,IAAA8vF,EAAAr7E,KAAAy7C,YAAA4/B,EAAA,EACAr7E,KAAAq3E,kBACA9rF,IAAAgwF,EAAAv7E,KAAAy7C,YAAA8/B,EAAA,EACAv7E,KAAAs3E,yBAAA/rF,IAAAkwF,KACAz7E,KAAAu3E,mBAAAhsF,IAAAmwF,IAAA,EACA17E,KAAAw3E,WAAAx3E,KAAAy7C,kBAAAlwD,IAAAowF,EACAA,EAAA,QAjEA37E,KAAAm+B,MAAA,IAoEA,IAAA89C,GAAA,YC57BAC,GAAA,SAAArlD,GAEAslD,GAAA,EAAA71F,KAAA0Z,MAMAA,KAAAo8E,OAAAvlD,GAKAnzB,EAAA,EAAApiB,SAAA46F,GAAAC,GAAA,GAaAD,GAAAz6F,UAAAkyC,2BAAAjwB,EAAA,EAAA7hB,aAQAq6F,GAAAz6F,UAAAouF,uBAAApsB,EAAA,EAAAn5C,MAcA4xE,GAAAz6F,UAAA46F,uBAAA,SAAAnhF,EAAAoG,EAAAg7E,GACA,gBAMAv7D,EAAA3H,GAOA,OAAAle,EAAAi6B,kBAAA7zB,EAAAyf,EAAA3H,EANA,SAAAgc,GACAknD,EAAAv7D,KACAu7D,EAAAv7D,OAEAu7D,EAAAv7D,GAAAqU,EAAA7c,UAAA7B,YAAA0e,MAUA8mD,GAAAz6F,UAAA86F,SAAA,WACA,OAAAv8E,KAAAo8E,QASAF,GAAAz6F,UAAA+6F,mBAAA,SAAAlqE,GACkCA,EAAA,OAClC+C,aAAAqmB,GAAA,EAAAjjC,QACAuH,KAAAy8E,2BAaAP,GAAAz6F,UAAAi7F,UAAA,SAAAjmF,GACA,IAAAkmF,EAAAlmF,EAAA4e,WAUA,OATAsnE,GAAAjhD,GAAA,EAAAjjC,QACAkkF,GAAAjhD,GAAA,EAAAlkC,OACA+sE,EAAA,EAAAz4E,OAAA2K,EAAAwyE,EAAA,EAAAhyE,OACA+I,KAAAw8E,mBAAAx8E,MAEA28E,GAAAjhD,GAAA,EAAAnjC,OACA9B,EAAAuxB,OACA20D,EAAAlmF,EAAA4e,YAEAsnE,GAAAjhD,GAAA,EAAAjjC,QAOAyjF,GAAAz6F,UAAAg7F,wBAAA,WACA,IAAA5lD,EAAA72B,KAAAu8E,WACA1lD,EAAAI,cAAAJ,EAAAzhB,kBAAAs1D,EAAA,EAAA9wD,OACA5Z,KAAAyV,WAUAymE,GAAAz6F,UAAAm7F,oBAAA,SAAA7mE,EAAA8mE,GACA,GAAAA,EAAAj2D,iBAAA,CAMA,IAAAk2D,EAAA,SAAAD,EAAA3oE,EAAA6B,GACA,IAAAs6D,EAAA3sE,EAAA,EAAA5hB,OAAA+6F,GAAAnmE,WACA25D,KAAAt6D,EAAAkf,WACA4nD,EAAA7nD,YAAAjf,EAAAk6B,UAAA3uC,WACAyU,EAAAkf,UAAAo7C,KAEKngE,KAAA,KAAA2sE,GAEL9mE,EAAAi7D,oBAAA/kF,KACyC,KAWzCiwF,GAAAz6F,UAAAs7F,YAAA,SAAAhnE,EAAA7a,GACA,IAAAm4B,EAAAn4B,EAAA44B,eACAvoC,IAAA8nC,IACA,iBAAAA,EACAtd,EAAAy6B,MAAAnd,GAAA,GACKA,IACLxT,EAAA,EAAAp4B,OAAA,iBAAA4rC,EAAA4d,KAAA,IACApxB,EAAA,EAAAp4B,OAAA,iBAAA4rC,EAAA2d,IAAA,IACAj7B,EAAAy6B,MAAAnd,EAAA2d,KAAA3d,EAAA4d,QAaAirC,GAAAz6F,UAAAu7F,gBAAA,SAAA/nD,EAAA4nD,EAAA1kE,EAAAiB,GAEA,IAAAi3D,EAAA3sE,EAAA,EAAA5hB,OAAA+6F,GAAAnmE,WACAgc,EAAAva,EAAAzB,WACA25D,KAAAp7C,EACAvC,KAAAuC,EAAAo7C,GACAp7C,EAAAo7C,GAAA39C,GAAA1sC,OAAAozB,GAEA6b,EAAAo7C,GAAA39C,GAAAtZ,GAGA6b,EAAAo7C,MACAp7C,EAAAo7C,GAAA39C,GAAAtZ,IAyBA8iE,GAAAz6F,UAAAw7F,kBAAA,SACAlnE,EAAA8mE,EAAA/3E,EAAAgxB,EAAAx0B,EAAAhf,EACA46F,EAAAntB,EAAAotB,EAAA/2F,GACA,IAAAiqF,EAAA3sE,EAAA,EAAA5hB,OAAA+6F,GAAAnmE,WACA25D,KAAAt6D,EAAAy6D,cACAz6D,EAAAy6D,YAAAH,OAEA,IAGAj7C,EAAAhc,EAAAm3D,EAAAzsF,EAAAC,EAAAo0B,EAHAq4D,EAAAz6D,EAAAy6D,YAAAH,GACAQ,EAAA96D,EAAA86D,UAGA,IAAA14D,EAFArT,EAAAoU,aAEmBf,GAAA+kE,IAAe/kE,EAGlC,IAFAiB,EAAAtU,EAAAuU,0BAAA/2B,EAAA61B,EAAAiB,GACAm3D,EAAAzrE,EAAAuc,cAAAlJ,GACAr0B,EAAAs1B,EAAAp2B,KAA4Bc,GAAAs1B,EAAA/1B,OAAqBS,EACjD,IAAAC,EAAAq1B,EAAAh2B,KAA8BW,GAAAq1B,EAAA71B,OAAqBQ,EACnDm5F,EAAA/kE,GAAA43C,IACA36B,EAAAynD,EAAAhnD,QAAA1d,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,IACA+T,YAAAq+B,EAAA,EAAAn7C,OACAi4E,EAAAp7C,EAAA9c,WAAA,EACAu4D,EAAA5I,YAAA7yC,EAAA9c,WACAu4D,EAAAnJ,SAAAtyC,EAAAi7C,EACAvrE,EAAA8c,mBAAAwT,EAAA7c,WAAAg4D,UAGAhlF,IAAA4xF,GACAA,EAAA72F,KAAAF,EAAAgvC,IAGAynD,EAAArmD,QAAAre,EAAAr0B,EAAAC,EAAAud,IAMA,IAAA87E,GAAA,GCvPAC,GAAA,SAAAxmD,GAEAumD,GAAA92F,KAAA0Z,KAAA62B,GAMA72B,KAAAs9E,mBAMAt9E,KAAAk2E,WAAA5J,GAAA,EAAA3qF,UAIA+hB,EAAA,EAAApiB,SAAA+7F,GAAAD,IASAC,GAAA57F,UAAAq2D,KAAA,SAAAnmD,EAAAokB,EAAAzzB,GACA,IAAAwzC,EAAA/f,EAAA+f,WACA5hC,EAAA6hB,EAAAhuB,KAAA,GAAA+tC,EACA3gC,EAAA4gB,EAAAhuB,KAAA,GAAA+tC,EACAhuC,EAAAiuB,EAAAk6B,UAAAnoD,SACAy1F,EAAAtzE,EAAA,EAAAvjB,WAA4D,GAC5D82F,EAAAvzE,EAAA,EAAAxjB,YAA8D,GAC9Dg3F,EAAAxzE,EAAA,EAAAzjB,eAAoE,GACpEk3F,EAAAzzE,EAAA,EAAA1jB,cAAkE,GAElE+lF,GAAA,EAAAnpF,MAAA4yB,EAAAq6D,2BAAAmN,GACAjR,GAAA,EAAAnpF,MAAA4yB,EAAAq6D,2BAAAoN,GACAlR,GAAA,EAAAnpF,MAAA4yB,EAAAq6D,2BAAAqN,GACAnR,GAAA,EAAAnpF,MAAA4yB,EAAAq6D,2BAAAsN,GAEA/rF,EAAA8lD,OACAmiC,GAAA,EAAA1jF,eAAAvE,GAAA7J,EAAAoM,EAAA,EAAAiB,EAAA,GACAxD,EAAAirC,YACAjrC,EAAAkmD,OAAA0lC,EAAA,GAAAznD,EAAAynD,EAAA,GAAAznD,GACAnkC,EAAAmrC,OAAA0gD,EAAA,GAAA1nD,EAAA0nD,EAAA,GAAA1nD,GACAnkC,EAAAmrC,OAAA2gD,EAAA,GAAA3nD,EAAA2nD,EAAA,GAAA3nD,GACAnkC,EAAAmrC,OAAA4gD,EAAA,GAAA5nD,EAAA4nD,EAAA,GAAA5nD,GACAnkC,EAAAmmD,OACA8hC,GAAA,EAAA1jF,eAAAvE,EAAA7J,EAAAoM,EAAA,EAAAiB,EAAA,IAWAkoF,GAAA57F,UAAAk8F,sBAAA,SAAAvyF,EAAAuG,EAAAokB,EAAA6nE,GACA,IAAA/mD,EAAA72B,KAAAu8E,WACA,GAAA1lD,EAAAlkB,YAAAvnB,GAAA,CACA,IAAA8I,EAAA6hB,EAAAhuB,KAAA,GAAAguB,EAAA+f,WACA3gC,EAAA4gB,EAAAhuB,KAAA,GAAAguB,EAAA+f,WACAhuC,EAAAiuB,EAAAk6B,UAAAnoD,SACA8xF,GAAA,EAAA1jF,eAAAvE,GAAA7J,EAAAoM,EAAA,EAAAiB,EAAA,GACA,IAAAvI,OAAArB,IAAAqyF,EACAA,EAAA59E,KAAAyJ,aAAAsM,EAAA,GACAG,EAAA,IAAA+lE,GACAtqF,EAAAokB,EAAA+f,WAAA/f,EAAAzzB,OAAAsK,EACAmpB,EAAAk6B,UAAAnoD,UACA+1F,EAAA,IAAA3J,GAAA9oF,EAAA8qB,EAAAH,EACApkB,EAAA,MACAklC,EAAAxrB,cAAAwyE,GACAjE,GAAA,EAAA1jF,eAAAvE,EAAA7J,EAAAoM,EAAA,EAAAiB,EAAA,KAcAkoF,GAAA57F,UAAAq8F,yBAAA,SAAA35F,EAAA4xB,EAAA5vB,EAAAyzC,GAIA,OAHA55B,KAAA2zB,2BACAxvC,EAAA4xB,EAAA,EAAA0tC,EAAA,EAAAp5C,KAAArK,MAGA7Z,EAAAG,KAAAszC,EAAA55B,KAAAu8E,WAAA,WAEA,GAYAc,GAAA57F,UAAAs8F,YAAA,SAAApsF,EAAAokB,EAAArB,EAAAkpE,GACA59E,KAAA29E,sBAAAK,GAAA,EAAAtmE,YAAA/lB,EACAokB,EAAA6nE,IAUAP,GAAA57F,UAAAw8F,WAAA,SAAAtsF,EAAAokB,EAAA6nE,GACA59E,KAAA29E,sBAAAK,GAAA,EAAApoE,WAAAjkB,EACAokB,EAAA6nE,IAUAP,GAAA57F,UAAAy8F,oBAAA,SAAAvsF,EAAAokB,EAAA6nE,GACA59E,KAAA29E,sBAAAK,GAAA,EAAArmE,OAAAhmB,EACAokB,EAAA6nE,IAUAP,GAAA57F,UAAAgoB,aAAA,SAAAsM,EAAA5f,GACA,IAAA85C,EAAAl6B,EAAAk6B,UACAna,EAAA/f,EAAA+f,WACArnC,EAAAqnC,EAAA/f,EAAAhuB,KAAA,KACA2G,EAAAonC,EAAA/f,EAAAhuB,KAAA,KACA4G,EAAAmnC,EAAAma,EAAApoD,WACA+G,GAAAD,EACAN,GAAA4hD,EAAAnoD,SACA+G,GAAAohD,EAAAroD,OAAA,GAAAuO,EACArH,GAAAmhD,EAAAroD,OAAA,GACA,OAAA0kF,GAAA,EAAA99E,QAAAwR,KAAAk2E,WAAAznF,EAAAC,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAC,IAUAuuF,GAAA57F,UAAA08F,aAAA,SAAApoE,EAAArB,EAAA/iB,KAQA0rF,GAAA57F,UAAA28F,aAAA,SAAAroE,EAAArB,KACA,IAAA2pE,GAAA,GCjLAC,GAAA,SAAAznD,GAEAwnD,GAAA/3F,KAAA0Z,KAAA62B,GAMA72B,KAAAu+E,iCAAAjS,GAAA,EAAA3qF,SAMAqe,KAAAw+E,kBAAA,MAIA96E,EAAA,EAAApiB,SAAAg9F,GAAAD,IAMAC,GAAA78F,UAAA08F,aAAA,SAAApoE,EAAArB,EAAA/iB,GAEAqO,KAAAi+E,WAAAtsF,EAAAokB,GAEA,IAAAtf,EAAAuJ,KAAAk5B,WACA,GAAAziC,EAAA,CAGA,IAAAnU,EAAAoyB,EAAApyB,OACAm8F,OAAAlzF,IAAAjJ,IACA2nB,EAAA,EAAA5lB,eAAA/B,EAAAyzB,EAAAzzB,SACA2nB,EAAA,EAAA9gB,WAAA7G,EAAAyzB,EAAAzzB,QACAm8F,GACAz+E,KAAA83C,KAAAnmD,EAAAokB,EAA0D,GAG1D,IAAA2oE,EAAA1+E,KAAA2+E,oBAIA7nF,EAAAnF,EAAAoF,YACApF,EAAAoF,YAAA2d,EAAAle,QAIA,IAAAxS,EAAA06F,EAAA,GACAz6F,EAAAy6F,EAAA,GACAE,EAAAnoF,EAAAvC,MAAAwqF,EAAA,GACAG,EAAApoF,EAAAtB,OAAAupF,EAAA,GACA/sF,EAAA4E,UAAAE,EAAA,KAAAA,EAAAvC,OAAAuC,EAAAtB,OACAlS,KAAAyuC,MAAA1tC,GAAAf,KAAAyuC,MAAAztC,GAAAhB,KAAAyuC,MAAAktD,GAAA37F,KAAAyuC,MAAAmtD,IACAltF,EAAAoF,YAAAD,EAEA2nF,GACA9sF,EAAAomD,UAIA/3C,KAAA+9E,YAAApsF,EAAAokB,EAAArB,IAQA4pE,GAAA78F,UAAAy3C,SAAA,aAOAolD,GAAA78F,UAAAk9F,kBAAA,aAMAL,GAAA78F,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GACA,IAAA/C,EAAA72B,KAAAu8E,WACArhF,EAAA27B,EAAA1hB,YACAttB,EAAAkuB,EAAAk6B,UAAApoD,WACAC,EAAAiuB,EAAAk6B,UAAAnoD,SACAgqF,EAAA/7D,EAAA+7D,mBACA,OAAA52E,EAAAy4B,2BACAxvC,EAAA0D,EAAAC,EAAAunF,EAAAyC,EAKA,SAAAhzC,GACA,OAAA34C,EAAAG,KAAAszC,EAAAkF,EAAAjI,MAQAynD,GAAA78F,UAAAq8F,yBAAA,SAAA35F,EAAA4xB,EAAA5vB,EAAAyzC,GACA,GAAA55B,KAAAk5B,WAAA,CAIA,GAAAl5B,KAAAu8E,WAAApnE,YAAAwe,6BAAAjwB,EAAA,EAAA7hB,aAGA,OAAAw8F,GAAA58F,UAAAq8F,yBAAA36F,MAAA6c,KAAA/E,WAEA,IAAA8qC,EAAAumC,GAAA,EAAAnpF,MAAA6c,KAAAu+E,iCAAAp6F,EAAAP,SACA8iE,GAAA,EAAAp4D,MAAAy3C,EAAAhwB,EAAAk6B,UAAApoD,WAAAmY,KAAAs9E,oBAEAt9E,KAAAw+E,oBACAx+E,KAAAw+E,kBAAAviD,EAAA,EAAAlnC,sBAAA,MAGAiL,KAAAw+E,kBAAAM,UAAA,SACA9+E,KAAAw+E,kBAAAjoF,UAAAyJ,KAAAk5B,WAAA6M,EAAA,GAAAA,EAAA,gBAEA,IAAAg5C,EAAA/+E,KAAAw+E,kBAAAQ,aAAA,SAAAtiF,KACA,OAAAqiF,EAAA,KACA54F,EAAAG,KAAAszC,EAAA55B,KAAAu8E,WAAAwC,QAEA,IAIA,IAAAE,GAAA,GC9HAC,GAAA,SAAAC,GAEAF,GAAA34F,KAAA0Z,KAAAm/E,GAMAn/E,KAAAg+B,OAAA,KAMAh+B,KAAAo/E,gBAAA9S,GAAA,EAAA3qF,SAKAqe,KAAAq/E,oBAMAr/E,KAAAs/E,gBAAA,MAIA57E,EAAA,EAAApiB,SAAA49F,GAAAD,IASAC,GAAA,iBAAA9zF,EAAAyrC,GACA,OAAAzrC,IAAAqgF,GAAAr+D,SAAAypB,EAAAt1B,YAAA4uD,GAAA,EAAA5+C,OACAslB,EAAAt1B,YAAA4uD,GAAA,EAAAz+C,QACiC,EAAAg+C,kBAAA6vB,GAAA,EAAAhuE,QAUjC2tE,GAAA,gBAAAM,EAAA3oD,GACA,IAAAqH,EAAA,IAAAghD,GAA+E,GAC/E,GAAAroD,EAAAt1B,YAAA4uD,GAAA,EAAAz+C,OAEA,IADA,IAAA+tE,EAAAjU,GAAAL,0BACA3oF,EAAA,EAAAC,EAAAg9F,EAAA/8F,OAA2CF,EAAAC,IAAQD,EAAA,CACnD,IAAAwwF,EAA2DyM,EAAAj9F,GAC3DwwF,IAAAkM,IAAAlM,EAAA,QAAAvH,GAAAr+D,OAAAypB,IACAqH,EAAAwhD,kBAAA1M,EAAA,OAAAwM,EAAA3oD,IAIA,OAAAqH,GAOAghD,GAAAz9F,UAAAy3C,SAAA,WACA,OAAAl5B,KAAAg+B,OAAAh+B,KAAAg+B,OAAA9E,WAAA,MAOAgmD,GAAAz9F,UAAAk9F,kBAAA,WACA,OAAA3+E,KAAAo/E,iBAOAF,GAAAz9F,UAAA28F,aAAA,SAAAroE,EAAArB,GAEA,IAMAje,EANAq/B,EAAA/f,EAAA+f,WACA/tC,EAAAguB,EAAAhuB,KACAkoD,EAAAl6B,EAAAk6B,UACA0vC,EAAA1vC,EAAAroD,OACAg4F,EAAA3vC,EAAApoD,WAIAg4F,EAD6C7/E,KAAAu8E,WAC7CpnE,YAEA27D,EAAA/6D,EAAAg7D,UAEA+O,EAAA/pE,EAAAzzB,OAMA,QALAiJ,IAAAmpB,EAAApyB,SACAw9F,EAAA71E,EAAA,EAAA/gB,gBACA42F,EAAAprE,EAAApyB,UAGAwuF,EAAAhnC,EAAA,EAAAzrC,aAAAyyE,EAAAhnC,EAAA,EAAAxrC,eACA2L,EAAA,EAAApjB,QAAAi5F,GAAA,CACA,IAAAx+E,EAAA2uC,EAAA3uC,WACA,IAAAoC,EAAA,EAAApjB,2BAAA,CACA,IAAAopB,EAAAm2E,EAAA9rD,gBACArqB,IACApI,EAAAoI,GAGA,IAAAq2E,EAAA//E,KAAAs/E,gBACA,GAAAS,EAAA,CACA,IAAApuF,EAAAouF,EAAApuF,QACAquF,EAAsDj+F,EAAA,EAAA8Y,UAAuBkb,GAC7EhuB,MACAkiB,EAAA,EAAAnjB,SAAAg5F,GAAAF,EACA31E,EAAA,EAAAljB,UAAA+4F,GAAAF,GAEA3vC,UAA4CluD,EAAA,EAAA8Y,UAAuBkb,EAAAk6B,WACnEnoD,SAAA,MAGAm4F,EAAAv+F,OAAAmK,KAAAm0F,EAAAlO,oBAAAx0E,QACAyiF,EAAA3B,aAAA4B,EAAAtrE,KACAqrE,EAAAG,oBACA/vE,EAAA,EAAApqB,OAAAk6F,EAAAjgF,KAAAq/E,oBACA1tF,EAAAF,OAAAyC,MAAA8rF,EAAAj4F,KAAA,GAAA+tC,EACAnkC,EAAAF,OAAA0D,OAAA6qF,EAAAj4F,KAAA,GAAA+tC,EACAiqD,EAAA5B,aAAA6B,EAAAtrE,EAAA/iB,GACAqO,KAAAg+B,OAAA,IAAA21C,GAAAmM,EAAAF,EAAA9pD,EAAAnkC,EAAAF,QACAuO,KAAAq/E,iBAAAY,OAEK,CAGL,GAFAxpF,EAAAopF,EAAA3mD,SACA4mD,EAAAF,EAAA9pD,EAAAx0B,GAEAtB,KAAA08E,UAAAjmF,KAEAuJ,KAAAg+B,OAAAvnC,IAMA,GAAAuJ,KAAAg+B,OAAA,CAEA,IAAAmiD,GADA1pF,EAAAuJ,KAAAg+B,QACA75B,YACAi8E,EAAA3pF,EAAA4qB,gBACAg/D,EAAA5pF,EAAA08E,gBACA7kF,EAAAwnC,EAAAsqD,GACAR,EAAAS,GACAzzF,EAAA0/E,GAAA,EAAA99E,QAAAwR,KAAAo/E,gBACAtpD,EAAA/tC,EAAA,KAAA+tC,EAAA/tC,EAAA,KACAuG,IACA,EACA+xF,GAAAF,EAAA,GAAAR,EAAA,IAAAS,EACAC,GAAAV,EAAA,GAAAQ,EAAA,IAAAC,GACA9T,GAAA,EAAA99E,QAAAwR,KAAAu+E,iCACAzoD,EAAA/tC,EAAA,KAAA6E,EAAA,GAAAkpC,EAAA/tC,EAAA,KAAA6E,EAAA,GACAkpC,EAAA8pD,GAAA9pD,EAAA8pD,EACA,GACAD,EAAA,IAAAA,EAAA,IAEA3/E,KAAA+8E,YAAAhnE,EAAA8pE,GACA7/E,KAAAs9E,mBAAA8C,EAAAtqD,EAAAuqD,EAGA,QAAArgF,KAAAg+B,QAOAkhD,GAAAz9F,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GACA,OAAA55B,KAAAs/E,gBACAt/E,KAAAs/E,gBAAA3rD,2BAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GAEAqlD,GAAAx9F,UAAAkyC,2BAAArtC,KAAA0Z,KAAA7b,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,IAQAslD,GAAAz9F,UAAAi+F,kBAAA,SAAAxhD,GACAl+B,KAAAs/E,gBAAAphD,GAEA,IAAAoiD,GAAA,uCC9MAC,GAAA,WAMAvgF,KAAAqC,UAMArC,KAAAwgF,WAAA,EAMAxgF,KAAAygF,cAAA,IAUAF,GAAAjoE,OAAA,SAAA04B,EAAAmD,EAAA59B,GAEA,OAAA49B,EAAA,IAAAnD,EAAA,KADAz6B,EAAAknB,GAAA,EAAAhnB,SAAAF,GAAA,SAQAgqE,GAAA9+F,UAAAmK,MAAA,WACAoU,KAAAqC,UACArC,KAAAwgF,WAAA,GAOAD,GAAA9+F,UAAAi/F,OAAA,WACA,GAAA1gF,KAAAwgF,WAAAxgF,KAAAygF,cAAA,CACA,IACAr0F,EAAAu0F,EADAn+F,EAAA,EAEA,IAAA4J,KAAA4T,KAAAqC,OACAs+E,EAAA3gF,KAAAqC,OAAAjW,GACA,MAAA5J,MAAAm+F,EAAAhuE,uBACA3S,KAAAqC,OAAAjW,KACA4T,KAAAwgF,cAaAD,GAAA9+F,UAAA8gB,IAAA,SAAAyuC,EAAAmD,EAAA59B,GACA,IAAAnqB,EAAAm0F,GAAAjoE,OAAA04B,EAAAmD,EAAA59B,GACA,OAAAnqB,KAAA4T,KAAAqC,OAAArC,KAAAqC,OAAAjW,GAAA,MAUAm0F,GAAA9+F,UAAAoL,IAAA,SAAAmkD,EAAAmD,EAAA59B,EAAAoqE,GACA,IAAAv0F,EAAAm0F,GAAAjoE,OAAA04B,EAAAmD,EAAA59B,GACAvW,KAAAqC,OAAAjW,GAAAu0F,IACA3gF,KAAAwgF,YAWAD,GAAA9+F,UAAAywF,QAAA,SAAA0O,GACA5gF,KAAAygF,cAAAG,EACA5gF,KAAA0gF,UAEA,IAAAG,GAAA,GCtGAC,MAMAA,GAAAC,eAAA,IAAAF,GACA,IAAAG,GAAA,GCWAC,GAAA,SAAArc,EAAA1wD,GAEAmzC,GAAA,EAAA/gE,KAAA0Z,MAOAA,KAAA4tC,KAAA15B,EAMAlU,KAAAkhF,mBAMAlhF,KAAAmhF,4BAIAz9E,EAAA,EAAApiB,SAAA2/F,GAAA55B,GAAA,GAOA45B,GAAAx/F,UAAA2/F,oBAAA,SAAArrE,GACA,IAAAk6B,EAAAl6B,EAAAk6B,UACAmgC,EAAAr6D,EAAAq6D,2BACAF,EAAAn6D,EAAAm6D,2BAEA5D,GAAA,EAAA99E,QAAA4hF,EACAr6D,EAAAhuB,KAAA,KAAAguB,EAAAhuB,KAAA,KACA,EAAAkoD,EAAApoD,YAAA,EAAAooD,EAAApoD,YACAooD,EAAAnoD,UACAmoD,EAAAroD,OAAA,IAAAqoD,EAAAroD,OAAA,IAEA0kF,GAAA,EAAAv9E,OACAu9E,GAAA,EAAAn+E,aAAA+hF,EAAAE,KAOA6Q,GAAAx/F,UAAA0vF,qBAAA,WACA,QAAA/kF,KAAA4T,KAAAkhF,gBACAlhF,KAAAqhF,0BAAAj1F,GAAA43B,WAUAi9D,GAAAK,iBAAA,SAAAptE,EAAA6B,GACAirE,GAAAD,eACAL,UAmBAO,GAAAx/F,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,EACA01C,EAAAK,GACA,IAAAn4D,EACAy4B,EAAAl6B,EAAAk6B,UACA2vC,EAAA3vC,EAAApoD,WAOA,SAAA8rC,EAAAmL,EAAAjI,GACA,IAAAzqC,EAAAsX,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACAb,EAAAE,EAAAE,YAAAvS,EAAA,EAAA5hB,OAAA+0C,IAAAhhB,QACA,KAAAzpB,KAAA2pB,EAAA+7D,qBAAAj8D,EACA,OAAA1vB,EAAAG,KAAAszC,EAAAkF,EAAAjpB,EAAAghB,EAAA,MAIA,IAAAv1B,EAAA2uC,EAAA3uC,WAEAigF,EAAAp9F,EACA,GAAAmd,EAAA2C,WAAA,CACA,IAAAgf,EAAA3hB,EAAA6C,YACAgf,EAAAlZ,EAAA,EAAAnjB,SAAAm8B,GACAn/B,EAAAK,EAAA,GACA,GAAAL,EAAAm/B,EAAA,IAAAn/B,EAAAm/B,EAAA,GAEAs+D,GAAAz9F,EAAAq/B,EADAlgC,KAAAiW,MAAA+pB,EAAA,GAAAn/B,GAAAq/B,GACAh/B,EAAA,IAIA,IAEA3B,EAFAyzB,EAAAF,EAAAC,iBAGA,IAAAxzB,EAFAyzB,EAAAvzB,OAEA,EAAyBF,GAAA,IAAQA,EAAA,CACjC,IAAAkyB,EAAAuB,EAAAzzB,GACAq0C,EAAAniB,EAAAmiB,MACA,GAAAqZ,GAAA,EAAAz7B,oBAAAC,EAAAkrE,IACAtQ,EAAAhpF,KAAAqpF,EAAA94C,GAAA,CACA,IAAA2qD,EAAAxhF,KAAAyhF,iBAAA5qD,GAMA,GALAA,EAAA1hB,cACAqC,EAAAgqE,EAAA7tD,2BACAkD,EAAA1hB,YAAA6e,WAAAutD,EAAAp9F,EACA4xB,EAAAs5D,EAAA17C,EAAAiG,IAEApiB,EACA,OAAAA,KAuBAypE,GAAAx/F,UAAA+tF,oBAAA,SAAAzpC,EAAAhwB,EAAA5vB,EAAAyzC,EACA01C,EAAAK,KAeAsR,GAAAx/F,UAAAouF,uBAAA,SAAA1rF,EAAA4xB,EAAAs5D,EAAAC,EAAA11C,GAIA,YAAAruC,IAHAyU,KAAA2zB,2BACAxvC,EAAA4xB,EAAAs5D,EAAA5rB,EAAA,EAAAp5C,KAAArK,KAAAsvE,EAAA11C,IAWAqnD,GAAAx/F,UAAAggG,iBAAA,SAAA5qD,GACA,IAAA6qD,EAAAh+E,EAAA,EAAA5hB,OAAA+0C,GAAAngB,WACA,GAAAgrE,KAAA1hF,KAAAkhF,gBACA,OAAAlhF,KAAAkhF,gBAAAQ,GAKA,IAHA,IACAxjD,EADAyjD,EAAAnW,GAAAL,0BAEA//E,EAAA4U,KAAAuB,UACA/e,EAAA,EAAAC,EAAAk/F,EAAAj/F,OAAqDF,EAAAC,IAAQD,EAAA,CAC7D,IAAA6oF,EAAAsW,EAAAn/F,GACA,GAAA6oF,EAAA,QAAAjgF,EAAAyrC,GAAA,CACAqH,EAAAmtC,EAAA,OAAArrE,KAAA62B,GACA,OAGA,IAAAqH,EAKA,UAAAr8B,MAAA,wCAAAg1B,EAAAt1B,WAEA,OANAvB,KAAAkhF,gBAAAQ,GAAAxjD,EACAl+B,KAAAmhF,wBAAAO,GAAAnd,EAAA,EAAAz4E,OAAAoyC,EACA+qC,EAAA,EAAAhyE,OAAA+I,KAAA4hF,2BAAA5hF,MAIAk+B,GAUA+iD,GAAAx/F,UAAAogG,sBAAA,SAAAH,GACA,OAAA1hF,KAAAkhF,gBAAAQ,IAQAT,GAAAx/F,UAAAqgG,kBAAA,WACA,OAAA9hF,KAAAkhF,iBAOAD,GAAAx/F,UAAAssD,OAAA,WACA,OAAA/tC,KAAA4tC,MAQAqzC,GAAAx/F,UAAA8f,QAAA,aAOA0/E,GAAAx/F,UAAAmgG,2BAAA,WACA5hF,KAAA4tC,KAAA13B,UASA+qE,GAAAx/F,UAAA4/F,0BAAA,SAAAK,GACA,IAAAF,EAAAxhF,KAAAkhF,gBAAAQ,GAMA,cALA1hF,KAAAkhF,gBAAAQ,GAEAnd,EAAA,EAAAz5E,cAAAkV,KAAAmhF,wBAAAO,WACA1hF,KAAAmhF,wBAAAO,GAEAF,GAQAP,GAAAx/F,UAAAswF,YAAAruE,EAAA,EAAA7hB,aAQAo/F,GAAAx/F,UAAAsgG,4BAAA,SAAA7tE,EAAA6B,GACA,IAAA2rE,EACA,IAAAA,KAAA1hF,KAAAkhF,gBACAnrE,GAAA2rE,KAAA3rE,EAAAE,aACAjW,KAAAqhF,0BAAAK,GAAA19D,WAUAi9D,GAAAx/F,UAAAugG,wBAAA,SAAAjsE,GACAA,EAAAi7D,oBAAA/kF,KACuCg1F,GAAA,mBASvCA,GAAAx/F,UAAAwgG,mCAAA,SAAAlsE,GACA,IAAA2rE,EACA,IAAAA,KAAA1hF,KAAAkhF,gBACA,KAAAQ,KAAA3rE,EAAAE,aAIA,YAHAF,EAAAi7D,oBAAA/kF,KAC2C+T,KAAA+hF,4BAAA7xE,KAAAlQ,QAa3CihF,GAAAiB,aAAA,SAAAC,EAAAC,GACA,OAAAD,EAAArsE,OAAAssE,EAAAtsE,QAEA,IAAAusE,GAAA,GCnUAC,GAAA,SAAA1d,EAAA1wD,GAEAmuE,GAAA/7F,KAAA0Z,KAAA4kE,EAAA1wD,GAMAlU,KAAAi2E,SAAAh6C,EAAA,EAAAlnC,wBAMAiL,KAAAi6B,QAAAj6B,KAAAi2E,SAAAxkF,OAEAuO,KAAAi6B,QAAA1kC,MAAArB,MAAA,OACA8L,KAAAi6B,QAAA1kC,MAAAJ,OAAA,OACA6K,KAAAi6B,QAAA1kC,MAAAi5C,QAAA,QACAxuC,KAAAi6B,QAAA4U,UAAAa,GAAA,EAAAr8B,mBACAuxD,EAAA2d,aAAAviF,KAAAi6B,QAAA2qC,EAAA4d,WAAA,UAMAxiF,KAAA4vC,kBAAA,EAMA5vC,KAAAk2E,WAAA5J,GAAA,EAAA3qF,UAIA+hB,EAAA,EAAApiB,SAAAghG,GAAAD,IAQAC,GAAA,iBAAAl3F,GACA,OAAAA,IAAAqgF,GAAAr+D,QAUAk1E,GAAA,gBAAA1d,EAAA1wD,GACA,WAAAouE,GAAA1d,EAAA1wD,IASAouE,GAAA7gG,UAAAk8F,sBAAA,SAAAvyF,EAAA2qB,GACA,IAAA7B,EAAAlU,KAAA+tC,SACAp8C,EAAAqO,KAAAi2E,SACA,GAAA/hE,EAAAvB,YAAAvnB,GAAA,CACA,IAAA9I,EAAAyzB,EAAAzzB,OACAwzC,EAAA/f,EAAA+f,WAEAhuC,EADAiuB,EAAAk6B,UACAnoD,SAEA8E,EAAAoT,KAAAyJ,aAAAsM,GAEAi+D,EAAA,IAAAiI,GAAAtqF,EAAAmkC,EACAxzC,EAAAsK,EAAA9E,GACA+1F,EAAA,IAAA3J,GAAA9oF,EAAA4oF,EACAj+D,EAAApkB,EAAA,MACAuiB,EAAA7I,cAAAwyE,KAUAyE,GAAA7gG,UAAAgoB,aAAA,SAAAsM,GACA,IAAAk6B,EAAAl6B,EAAAk6B,UACAxhD,EAAAuR,KAAAi6B,QAAA/lC,MAAA,EACAxF,EAAAsR,KAAAi6B,QAAA9kC,OAAA,EACAxG,EAAAonB,EAAA+f,WAAAma,EAAApoD,WACA+G,GAAAD,EACAN,GAAA4hD,EAAAnoD,SACA+G,GAAAohD,EAAAroD,OAAA,GACAkH,GAAAmhD,EAAAroD,OAAA,GACA,OAAA0kF,GAAA,EAAA99E,QAAAwR,KAAAk2E,WAAAznF,EAAAC,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAC,IAOAwzF,GAAA7gG,UAAA8f,QAAA,WACA,OAAAkqE,GAAAr+D,QAOAk1E,GAAA7gG,UAAAswF,YAAA,SAAAh8D,GAEA,GAAAA,EAAA,CAQA,IAAApkB,EAAAqO,KAAAi2E,SACAngD,EAAA/f,EAAA+f,WACA5hC,EAAAjR,KAAAyuC,MAAA3b,EAAAhuB,KAAA,GAAA+tC,GACA3gC,EAAAlS,KAAAyuC,MAAA3b,EAAAhuB,KAAA,GAAA+tC,GACA91B,KAAAi6B,QAAA/lC,UAAA8L,KAAAi6B,QAAA9kC,WACA6K,KAAAi6B,QAAA/lC,QACA8L,KAAAi6B,QAAA9kC,UAEAxD,EAAAmtF,UAAA,IAAA5qF,EAAAiB,GAGA,IAAArN,EAAAiuB,EAAAk6B,UAAAnoD,SAEAkY,KAAAohF,oBAAArrE,GAEA/V,KAAA29E,sBAAAK,GAAA,EAAApoE,WAAAG,GAEA,IAAAC,EAAAD,EAAAC,iBACA7F,EAAA,EAAAhT,WAAA6Y,EAAAqsE,GAAAH,cAEAp6F,IACA6J,EAAA8lD,OACAmiC,GAAA,EAAA1jF,eAAAvE,EAAA7J,EAAAoM,EAAA,EAAAiB,EAAA,IAGA,IACA3S,EAAAC,EAAAo0C,EAAA2qD,EAAA9sE,EADAkrE,EAAA7pE,EAAAk6B,UAAApoD,WAEA,IAAArF,EAAA,EAAAC,EAAAuzB,EAAAtzB,OAA2CF,EAAAC,IAAQD,EAEnDq0C,GADAniB,EAAAsB,EAAAxzB,IACAq0C,MACA2qD,EAAwDxhF,KAAAyhF,iBAAA5qD,GACxDqZ,GAAA,EAAAz7B,oBAAAC,EAAAkrE,IACAlrE,EAAAsiB,aAAA0zC,EAAA,EAAA9wD,OAGA4nE,EAAApD,aAAAroE,EAAArB,IACA8sE,EAAArD,aAAApoE,EAAArB,EAAA/iB,GAIA7J,GACA6J,EAAAomD,UAGA/3C,KAAA29E,sBACAK,GAAA,EAAAtmE,YAAA3B,GAEA/V,KAAA4vC,mBACA5vC,KAAAi6B,QAAA1kC,MAAAi5C,QAAA,GACAxuC,KAAA4vC,kBAAA,GAGA5vC,KAAAiiF,mCAAAlsE,GACA/V,KAAAgiF,wBAAAjsE,QA5DA/V,KAAA4vC,mBACA5vC,KAAAi6B,QAAA1kC,MAAAi5C,QAAA,OACAxuC,KAAA4vC,kBAAA,IAiEA0yC,GAAA7gG,UAAA+tF,oBAAA,SAAAzpC,EAAAhwB,EAAA5vB,EAAAyzC,EACA01C,EAAAK,GACA,IAAAn4D,EAUAh1B,EARAo9F,EADA7pE,EAAAk6B,UACApoD,WAEAouB,EAAAF,EAAAC,iBACAysE,EAAAxsE,EAAAvzB,OAEAyB,EAAAmoF,GAAA,EAAAnpF,MACA4yB,EAAAm6D,2BAAAnqC,EAAAniD,SAGA,IAAApB,EAAAigG,EAAA,EAAyBjgG,GAAA,IAAQA,EAAA,CACjC,IAAAkyB,EAAAuB,EAAAzzB,GACAq0C,EAAAniB,EAAAmiB,MACA,GAAAqZ,GAAA,EAAAz7B,oBAAAC,EAAAkrE,IACAtQ,EAAAhpF,KAAAqpF,EAAA94C,GAIA,GAFArf,EAD8DxX,KAAAyhF,iBAAA5qD,GAC9DinD,yBACA35F,EAAA4xB,EAAA5vB,EAAAyzC,GAEA,OAAApiB,IAMA,IAAAkrE,GAAA,YC1NAC,GAAA,SAAAC,GAEA3D,GAAA34F,KAAA0Z,KAAA4iF,GAMA5iF,KAAArO,QAAA,OAAAqO,KAAArO,QAAA,KAAAsqC,EAAA,EAAAlnC,wBAMAiL,KAAA6iF,cAMA7iF,KAAA8iF,gBAAA,KAMA9iF,KAAA+iF,iBAMA/iF,KAAAgjF,iBAMAhjF,KAAAijF,UAAAh5E,EAAA,EAAA1nB,cAMAyd,KAAAkjF,cAAA,IAAAviE,GAAA,WAMA3gB,KAAAo/E,gBAAA9S,GAAA,EAAA3qF,SAMAqe,KAAAmjF,WAAA,GAIAz/E,EAAA,EAAApiB,SAAAqhG,GAAA1D,IASA0D,GAAA,iBAAAv3F,EAAAyrC,GACA,OAAAzrC,IAAAqgF,GAAAr+D,QAAAypB,EAAAt1B,YAAA4uD,GAAA,EAAA3+C,MAUAmxE,GAAA,gBAAAnD,EAAA3oD,GACA,WAAA8rD,GAAqE,IASrEA,GAAAlhG,UAAA2hG,gBAAA,SAAAhuD,GACA,IAAA+pB,EAAA/pB,EAAA/f,WACA26C,EAAAhwD,KAAAu8E,WAAAlsB,4BACA,OAAAlR,GAAAzL,EAAA,EAAAj7C,QACA0mD,GAAAzL,EAAA,EAAAh7C,OACAymD,GAAAzL,EAAA,EAAAl8C,QAAAw4D,GAMA2yB,GAAAlhG,UAAA28F,aAAA,SAAAroE,EAAArB,GAEA,IAAAohB,EAAA/f,EAAA+f,WACA/tC,EAAAguB,EAAAhuB,KACAkoD,EAAAl6B,EAAAk6B,UACA3uC,EAAA2uC,EAAA3uC,WACAs+E,EAAA3vC,EAAApoD,WACA83F,EAAA1vC,EAAAroD,OAEAg7F,EAAA5iF,KAAAu8E,WACAM,EAA6C+F,EAAAztE,YAC7CkuE,EAAAxG,EAAAhiE,cACA/V,EAAA+3E,EAAA7mD,yBAAA10B,GACA6W,EAAArT,EAAAkd,kBAAA49D,EAAA5/E,KAAAmjF,YACA5S,EAAAzrE,EAAAuc,cAAAlJ,GACAmrE,EAAArgG,KAAAyuC,MAAAkuD,EAAArP,IAAA,EACAjuF,EAAAyzB,EAAAzzB,OAKA,QAHAiJ,IAAAmpB,EAAApyB,SACAA,EAAA2nB,EAAA,EAAA/gB,gBAAA5G,EAAAoyB,EAAApyB,SAEA2nB,EAAA,EAAApjB,QAAAvE,GAEA,SAGA,IAAA82B,EAAAtU,EAAAuU,0BAAA/2B,EAAA61B,GACAgoE,EAAAr7E,EAAA0c,mBAAArJ,EAAAiB,GAEAsb,EAAAmoD,EAAAzmD,kBAAAN,GAKAytD,KACAA,EAAAprE,MAEA,IAMAid,EAAAtxC,EAAAC,EANAy/F,EAAAxjF,KAAAq8E,uBACAQ,EAAAv7E,EAAAiiF,GAEAN,EAAAjjF,KAAAijF,UACAQ,EAAAzjF,KAAAkjF,cACAQ,GAAA,EAEA,IAAA5/F,EAAAs1B,EAAAp2B,KAA0Bc,GAAAs1B,EAAA/1B,OAAqBS,EAC/C,IAAAC,EAAAq1B,EAAAh2B,KAA4BW,GAAAq1B,EAAA71B,OAAqBQ,EAAA,CAcjD,IAbAqxC,EAAAynD,EAAAhnD,QAAA1d,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,IACA+T,YAAAq+B,EAAA,EAAAl8C,QACAorF,EAAAvyB,4BAGSuyB,EAAAxyB,aAAA,IAETszB,GAAA,GAHAtuD,EAAAhB,SAAAsf,EAAA,EAAAj7C,SAMAuH,KAAAojF,gBAAAhuD,KACAA,IAAAqe,kBAEAzzC,KAAAojF,gBAAAhuD,GAAA,CACA,IAAAjN,EAAAzkB,EAAA,EAAA5hB,OAAAke,MACA,GAAAo1B,EAAA/f,YAAAq+B,EAAA,EAAAj7C,OAAA,CACA8qF,EAAAprE,GAAAid,EAAA7c,UAAA7B,YAAA0e,EACA,IAAA2e,EAAA3e,EAAA2e,aAAA5rB,GACAu7D,IAAA3vC,IAAA,IAAA/zC,KAAAgjF,cAAA32F,QAAA+oC,KACAsuD,GAAA,GAGA,OAAAtuD,EAAAye,SAAA1rB,EAAApS,EAAA+9B,MAEA,SAIA,IAAA6vC,EAAA7+E,EAAAyc,2BACA6T,EAAA7c,UAAAkrE,EAAAR,GACA1tD,GAAA,EACAouD,IACApuD,EAAAiuD,EAAArrE,EAAA,EAAAwrE,IAEApuD,GACAzwB,EAAAkc,gCACAoU,EAAA7c,UAAAirE,EAAA,KAAAC,EAAAR,GAMA,IAAA3F,EAAA/M,EAAAz6C,EAAApB,EAAA4uD,EACAxS,EAAA/6D,EAAAg7D,UACA6S,EAAA9S,EAAAhnC,EAAA,EAAAzrC,YAAAyyE,EAAAhnC,EAAA,EAAAxrC,aACA,KAAA0B,KAAAs9E,oBAAAv0C,KAAAC,MAAAjzB,EAAA+9B,KAAA,IAAA8vC,KACAF,IACA1jF,KAAA8iF,kBAAA74E,EAAA,EAAA5lB,eAAA2b,KAAA8iF,gBAAAxgG,IACA0d,KAAA+iF,kBAAAM,GACAC,GAAAtjF,KAAA6iF,gBACAe,GAAAtG,GAAAt9E,KAAAs9E,oBACA,CAEA,IAAA3rF,EAAAqO,KAAArO,QACA,GAAAA,EAAA,CACA,IAAAkyF,EAAAhH,EAAAxmD,iBAAAle,EAAA2d,EAAAx0B,GACApN,EAAAjR,KAAAyuC,MAAAtY,EAAAtyB,WAAA+8F,EAAA,GAAAP,GACAnuF,EAAAlS,KAAAyuC,MAAAtY,EAAAryB,YAAA88F,EAAA,GAAAP,GACA7xF,EAAAE,EAAAF,OACAA,EAAAyC,UAAAzC,EAAA0D,WACA6K,KAAA6iF,cAAAS,EACA7xF,EAAAyC,QACAzC,EAAA0D,WAEA6K,KAAA8iF,kBAAA74E,EAAA,EAAAlkB,OAAAo6F,EAAAngF,KAAA8iF,kBACAnxF,EAAAmtF,UAAA,IAAA5qF,EAAAiB,GAEAmuF,EAAAtjF,KAAA6iF,eAIA7iF,KAAAgjF,cAAAtgG,OAAA,EAEA,IAUAohG,EAAAC,EAAA7G,EAAA16F,EAAAC,EACAuhG,EAAAC,EAAAC,EAAAttF,EAAAC,EAXAstF,EAAAziG,OAAAmK,KAAA03F,GAAArvE,IAAAmD,QAYA,IAXA8sE,EAAA7mF,KAAA,SAAAzP,EAAAC,GACA,OAAAD,IAAAsqB,EACA,EACOrqB,IAAAqqB,GACP,EAEAtqB,EAAAC,EAAA,EAAAD,EAAAC,GAAA,MAKAtL,EAAA,EAAAC,EAAA0hG,EAAAzhG,OAA+BF,EAAAC,IAAQD,EAOvC,QAAA6yC,MANA6nD,EAAAiH,EAAA3hG,GACAuhG,EAAAlH,EAAAxmD,iBAAA6mD,EAAApnD,EAAAx0B,GAEAwiF,EADAh/E,EAAAuc,cAAA67D,GACA3M,EACA0T,EAAAvvD,EAAAmoD,EAAAnnD,UAAAp0B,GACA4iF,EAAAX,EAAArG,GAEA9nD,EAAA8uD,EAAA7uD,IAEAvxC,IADAkgG,EAAAl/E,EAAAqc,mBAAAiU,EAAAwe,eAAAqvC,IACA,GAAA9C,EAAA,IAAA5P,EAAA77C,EAAA4uD,EACAv/F,GAAAo8F,EAAA,GAAA6D,EAAA,IAAAzT,EAAA77C,EAAA4uD,EACA1sF,EAAAmtF,EAAA,GAAAD,EAAAR,EACAzsF,EAAAktF,EAAA,GAAAD,EAAAR,EACAtjF,KAAAokF,cAAAhvD,EAAArf,EAAArB,EAAA5wB,EAAAC,EAAA6S,EAAAC,EAAAotF,EAAA9rE,IAAA+kE,GACAl9E,KAAAgjF,cAAA/2F,KAAAmpC,GAIAp1B,KAAA+iF,iBAAAM,EACArjF,KAAAs9E,mBAAA/M,EAAAz6C,EAAApB,EAAA4uD,EACAtjF,KAAA8iF,gBAAA3C,EAGA,IAAA7xF,GAAA0R,KAAAs9E,mBAAAsC,EACAhzF,GAAA0/E,GAAA,EAAA99E,QAAAwR,KAAAo/E,gBACAtpD,EAAA/tC,EAAA,KAAA+tC,EAAA/tC,EAAA,KACAuG,MACA,GACA0R,KAAA8iF,gBAAA,GAAAnD,EAAA,IAAA3/E,KAAAs9E,mBAAAxnD,GACA6pD,EAAA,GAAA3/E,KAAA8iF,gBAAA,IAAA9iF,KAAAs9E,mBAAAxnD,GAcA,OAbAw2C,GAAA,EAAA99E,QAAAwR,KAAAu+E,iCACAzoD,EAAA/tC,EAAA,KAAA6E,GAAA,GAAAkpC,EAAA/tC,EAAA,KAAA6E,GAAA,GACAkpC,EAAA8pD,GAAA9pD,EAAA8pD,EACA,GACAD,EAAA,IAAAA,EAAA,IAGA3/E,KAAAg9E,gBAAAjnE,EAAAkf,UAAA4nD,EAAA1kE,EAAAiB,GACApZ,KAAAi9E,kBAAAlnE,EAAA8mE,EAAA/3E,EAAAgxB,EACAx0B,EAAAhf,EAAA61B,EAAAyqE,EAAAxyB,cACApwD,KAAA48E,oBAAA7mE,EAAA8mE,GACA78E,KAAA+8E,YAAAhnE,EAAA8mE,GAEA78E,KAAAgjF,cAAAtgG,OAAA,GAeAigG,GAAAlhG,UAAA2iG,cAAA,SAAAhvD,EAAArf,EAAArB,EAAA5wB,EAAAC,EAAA6S,EAAAC,EAAAs/C,EAAAphB,GACA,IAAAt+B,EAAA2+B,EAAA8D,SAAAl5B,KAAAu8E,YACA,GAAA9lF,EAAA,CAGA,IAAA0xB,EAAAzkB,EAAA,EAAA5hB,OAAAke,MACAlJ,EAAAi+B,EAAAK,EAAAye,SAAA1rB,EAAApS,EAAA+9B,MAAA,EACA,IAAAh9C,GAAAkJ,KAAAu8E,WAAApnE,YAAAygB,UAAA7f,EAAAk6B,UAAA3uC,aACAtB,KAAArO,QAAAmtF,UAAAh7F,EAAAC,EAAA6S,EAAAC,GAEA,IAAAwtF,EAAAvtF,IAAAkJ,KAAArO,QAAAoF,YACAstF,IACArkF,KAAArO,QAAA8lD,OACAz3C,KAAArO,QAAAoF,YAAAD,GAEAkJ,KAAArO,QAAA4E,UAAAE,EAAA0/C,IACA1/C,EAAAvC,MAAA,EAAAiiD,EAAA1/C,EAAAtB,OAAA,EAAAghD,EAAAryD,EAAAC,EAAA6S,EAAAC,GAEAwtF,GACArkF,KAAArO,QAAAomD,UAEA,IAAAjhD,EACAif,EAAA0yB,SAAA,EACG1T,GACHK,EAAA4e,cAAA7rB,KAQAw6D,GAAAlhG,UAAAy3C,SAAA,WACA,IAAAvnC,EAAAqO,KAAArO,QACA,OAAAA,IAAAF,OAAA,MAQAkxF,GAAAlhG,UAAA86F,SAMAoG,GAAAlhG,UAAAk9F,kBAAA,WACA,OAAA3+E,KAAAo/E,iBAEA,IAAAkF,GAAA,uBClWAC,GAAA,aASAA,GAAA9iG,UAAA+iG,UAAA,SAAA1uE,EAAA2uE,KAOAF,GAAA9iG,UAAAoF,QAAA,aACA,IAAA69F,GAAA,GCVAC,IARAvyF,OAAA,SACAwyF,QAAA,UACArzE,MAAA,QACA1f,YAAA,aACAE,QAAA,UACAy+D,KAAA,0BCTAq0B,IAUAn0D,WAAA,SAAAnrC,EAAAC,EAAAC,EAAAC,GACA,IAGAlD,EAHAiG,EAAAlD,EAAAC,GACAqD,EAAAtD,EAAAC,EAAA,GACA9C,EAAA,EAEA,IAAAF,EAAAgD,EAAAE,EAA2BlD,EAAAiD,EAASjD,GAAAkD,EAAA,CACpC,IAAAgD,EAAAnD,EAAA/C,GACAsG,EAAAvD,EAAA/C,EAAA,GACAE,GAAAO,KAAAgf,MAAAvZ,EAAAD,IAAAC,EAAAD,IAAAK,EAAAD,IAAAC,EAAAD,IACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAApG,GAWAqvC,WAAA,SAAAxsC,EAAAC,EAAAC,EAAAC,GACA,IAAAo/F,EACAD,GAAAn0D,WAAAnrC,EAAAC,EAAAC,EAAAC,GACA1B,EAAAuB,EAAAE,EAAAC,GAAAH,EAAAC,GACAvB,EAAAsB,EAAAE,EAAAC,EAAA,GAAAH,EAAAC,EAAA,GAEA,OADAs/F,GAAA7hG,KAAAgf,KAAAje,IAAAC,OAGA8gG,GAAA,WCxCAC,IAgBAt0D,WAAA,SACAnrC,EAAAC,EAAAC,EAAAC,EAAAmO,EAAAoxF,EAAAC,EAAAC,GAmBA,IAlBA,IAiBAzoF,EAAAW,EAAA+nF,EAjBA5tE,KAGA6tE,EAAA9/F,EAAAC,GAAAD,EAAAE,EAAAC,GAEA4/F,EAAAzxF,EAAAnR,OAEA+F,EAAAlD,EAAAC,GACAqD,EAAAtD,EAAAC,EAAA,GAEAkD,EAAAnD,EADAC,GAAAE,GAEAoD,EAAAvD,EAAAC,EAAA,GACA+/F,EAAA,EACAnjD,EAAAn/C,KAAAgf,KAAAhf,KAAAgW,IAAAvQ,EAAAD,EAAA,GAAAxF,KAAAgW,IAAAnQ,EAAAD,EAAA,IAEA28F,EAAA,GACAC,EAAA,EAEAjjG,EAAA,EAAiBA,EAAA8iG,IAAc9iG,EAAA,CAC/B6a,EAAAgoF,EAAAC,EAAA9iG,EAAA,EAAAA,EACA,IAAAkjG,EAAA7xF,EAAAkqB,OAAA1gB,GAEAsoF,EAAAV,EADAO,EAAAH,EAAAK,EAAAF,IAAAE,GACAD,EACAA,GAAAE,EAEA,IADA,IAAAC,EAAAV,EAAAS,EAAA,EACAngG,EAAAC,EAAAC,GAAA6/F,EAAAnjD,EAAAwjD,GACAn9F,EAAAC,EACAG,EAAAC,EAEAJ,EAAAnD,EADAC,GAAAE,GAEAoD,EAAAvD,EAAAC,EAAA,GACA+/F,GAAAnjD,EACAA,EAAAn/C,KAAAgf,KAAAhf,KAAAgW,IAAAvQ,EAAAD,EAAA,GAAAxF,KAAAgW,IAAAnQ,EAAAD,EAAA,IAEA,IAAAg9F,EAAAD,EAAAL,EACAl3F,EAAApL,KAAA6d,MAAAhY,EAAAD,EAAAH,EAAAD,GAIA,GAHA48F,IACAh3F,KAAA,GAAApL,KAAAsX,GAAAtX,KAAAsX,SAEAhP,IAAA65F,EAAA,CACA,IAAAxoE,EAAAvuB,EAAA+2F,EAEA,GADAxoE,KAAA35B,KAAAsX,IAAA,EAAAtX,KAAAsX,GAAAqiB,GAAA35B,KAAAsX,GAAA,EAAAtX,KAAAsX,GAAA,EACAtX,KAAA2W,IAAAgjB,GAAAuoE,EACA,YAGA,IAAAW,EAAAD,EAAAzjD,EACAt+C,EAAA0c,GAAA,EAAA7F,KAAAlS,EAAAC,EAAAo9F,GACA/hG,EAAAyc,GAAA,EAAA7F,KAAA9R,EAAAC,EAAAg9F,GACAV,GAAA/2F,GACAg3F,IACA3oF,EAAA,GAAA5Y,EACA4Y,EAAA,GAAA3Y,EACA2Y,EAAA,GAAAipF,EAAA,GAEAjpF,EAAA,GAAA8oF,IAGAC,EAAAE,EACAjpF,GAAA5Y,EAAAC,EAAA4hG,EAAA,EAAAt3F,EAFAm3F,EAAAE,GAGAL,EACA7tE,EAAAuuE,QAAArpF,GAEA8a,EAAAvrB,KAAAyQ,GAEA0oF,EAAA/2F,GAEA62F,GAAAS,EAEA,OAAAnuE,IAEAwuE,GAAA,GCvEAC,IAfAC,eAAA,EACAC,WAAA,EACA/zF,OAAA,EACAg0F,WAAA,EACAC,OAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,KAAA,EACAC,gBAAA,EACAC,eAAA,GACAC,iBAAA,GACAC,OAAA,ICfAC,MAOAA,GAAAC,OACApC,GAAA5yF,QACA4yF,GAAAvyF,OACAuyF,GAAA9yF,YACA8yF,GAAApzE,MACAozE,GAAAn0B,KACAm0B,GAAAC,SAOAkC,GAAAE,cACAF,GAAAE,WAAA,OACAF,GAAAE,WAAA,MACAF,GAAAE,WAAA,UACAF,GAAAE,WAAA,QACAF,GAAAE,WAAA,QACAF,GAAAE,WAAA,MACAF,GAAAE,WAAA,UACAF,GAAAE,WAAA,WACAF,GAAAE,WAAA,cACAF,GAAAE,WAAA,eACAF,GAAAE,WAAA,SACA,IAAAC,GAAA,GCJAC,GAAA,SAAA9hE,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,GACAtR,GAAAxvF,KAAA0Z,MAKAA,KAAAonF,gBAMApnF,KAAAqnF,WAAAp9E,EAAA,EAAA1nB,cAMAyd,KAAAolB,YAOAplB,KAAAmnF,YAMAnnF,KAAA62D,WAMA72D,KAAA81B,aAMA91B,KAAAsnF,aAAA,EAOAtnF,KAAAnY,aAMAmY,KAAAunF,YAMAvnF,KAAAwnF,2BAAA,KAMAxnF,KAAAynF,2BAAA,KAMAznF,KAAA0nF,mBAAA,KAMA1nF,KAAA2nF,gBAMA3nF,KAAA3d,eAMA2d,KAAA4nF,oBAMA5nF,KAAA6nF,mBAAAvb,GAAA,EAAA3qF,SAMAqe,KAAA8nF,4BAMA9nF,KAAA43E,kBAAA,KAMA53E,KAAAuzB,SAMAvzB,KAAAm2E,cAAA,EAMAn2E,KAAA63E,mBAAAvL,GAAA,EAAA3qF,SAMAqe,KAAA3J,gBAAAi2E,GAAA,EAAA3qF,UAGA+hB,EAAA,EAAApiB,SAAA4lG,GAAApR,IAYAoR,GAAAzlG,UAAAsmG,sBAAA,SAAAp2F,EAAAgmD,EAAAC,EAAAowC,EAAAC,EACAC,EAAAC,GACAx2F,EAAAirC,YACAjrC,EAAAkmD,OAAA10D,MAAAwO,EAAAgmD,GACAhmD,EAAAmrC,OAAA35C,MAAAwO,EAAAimD,GACAjmD,EAAAmrC,OAAA35C,MAAAwO,EAAAq2F,GACAr2F,EAAAmrC,OAAA35C,MAAAwO,EAAAs2F,GACAt2F,EAAAmrC,OAAA35C,MAAAwO,EAAAgmD,GACAuwC,IACAloF,KAAAunF,YAAiDW,EAAA,GACjDloF,KAAAm6B,MAAAxoC,IAEAw2F,IACAnoF,KAAAooF,gBAAAz2F,EAAuD,GACvDA,EAAAkpC,WAyBAqsD,GAAAzlG,UAAA4mG,aAAA,SAAA12F,EAAA7N,EAAAC,EAAA0S,EACAqY,EAAAC,EAAAu5E,EAAAnzF,EAAAqB,EAAAE,EAAAC,EACA7O,EAAAwG,EAAAsqC,EAAA1kC,EAAAuB,EAAAyyF,EAAAC,GACA,IAAAI,EAAAL,GAAAC,EACAlQ,EAAAj4E,KAAA63E,mBAGA/zF,GAFAgrB,GAAAxgB,EAGAvK,GAFAgrB,GAAAzgB,EAGAsqC,IACA90C,EAAAb,KAAAyuC,MAAA5tC,GACAC,EAAAd,KAAAyuC,MAAA3tC,IAGA,IASA4zD,EAEAC,EAEAowC,EAEAC,EAfArxF,EAAA1C,EAAAwC,EAAAD,EAAAvC,MAAAuC,EAAAvC,MAAAwC,EAAAxC,EACA2C,EAAA1B,EAAAwB,EAAAF,EAAAtB,OAAAsB,EAAAtB,OAAAwB,EAAAxB,EACAyyD,EAAA5nD,KAAAqnF,WACAmB,EAAA/yF,EAAA,GAAAmB,EAAAtI,EAAAmH,EAAA,GACAgzF,EAAAhzF,EAAA,GAAAoB,EAAAvI,EAAAmH,EAAA,GACAizF,EAAA5kG,EAAA2R,EAAA,GACAkzF,EAAA5kG,EAAA0R,EAAA,IAUA8yF,GAAA,IAAAzgG,KACA6vD,GAAA+wC,EAAAC,GACA/wC,GAAA8wC,EAAAF,EAAAG,GACAX,GAAAU,EAAAF,EAAAG,EAAAF,GACAR,GAAAS,EAAAC,EAAAF,IAGA,IAAA77F,EAAA,KACA,OAAA9E,EAAA,CACA,IAAAqlD,EAAArpD,EAAAgrB,EACAs+B,EAAArpD,EAAAgrB,EACAniB,EAAA0/E,GAAA,EAAA99E,QAAAypF,EACA9qC,EAAAC,EAAA,IAAAtlD,GAAAqlD,GAAAC,GAEAnjC,EAAA,EAAA/kB,oBAAA0iE,GACA39C,EAAA,EAAAtnB,iBAAAilE,EAAA0kB,GAAA,EAAAnpF,MAAA80F,EAAAtgC,IACA1tC,EAAA,EAAAtnB,iBAAAilE,EAAA0kB,GAAA,EAAAnpF,MAAA80F,EAAArgC,IACA3tC,EAAA,EAAAtnB,iBAAAilE,EAAA0kB,GAAA,EAAAnpF,MAAA80F,EAAA+P,IACA/9E,EAAA,EAAAtnB,iBAAAilE,EAAA0kB,GAAA,EAAAnpF,MAAA80F,EAAAgQ,SAEAh+E,EAAA,EAAAzmB,eAAAklG,EAAAC,EAAAD,EAAAF,EAAAG,EAAAF,EAAA7gC,GAEA,IAAAn2D,EAAAE,EAAAF,OACAtI,EAAAy+D,EAAA,IAAAn2D,EAAAyC,OAAA0zD,EAAA,OAAAA,EAAA,IAAAn2D,EAAA0D,QAAAyyD,EAAA,MACA,GAAA0gC,EAAA,CACA,IAAAn/F,GAAA,GAAAm/F,EAAA,GACA,OAEAr+E,EAAA,EAAAjkB,OAAAsiG,EAAA1gC,GACA,IAAAghC,EAAAz/F,GACAwI,EAAA/E,IAAAhJ,MAAA,QAAA4S,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/S,EAAAC,EAAAuK,GACA,KACAs6F,GAAAL,GACAK,EAAA38F,KAAAi8F,EAAAC,EAAAxwC,EAAAC,EAAAowC,EAAAC,GAEAK,EAAAr8F,KAAA28F,QACGz/F,IACHo/F,GACAvoF,KAAA+nF,sBAAAp2F,EAAAgmD,EAAAC,EAAAowC,EAAAC,EAC+B,EACA,GAE/BrO,GAAA,EAAArjF,UAAA5E,EAAA/E,EAAA4J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/S,EAAAC,EAAAuK,KAUA44F,GAAAzlG,UAAAonG,gBAAA,SAAAC,GACA,IAAAhzD,EAAA91B,KAAA81B,WACA,UAAAA,EAAAgzD,IAAA50E,IAAA,SAAA60E,GACA,OAAAA,EAAAjzD,KAeAoxD,GAAAzlG,UAAAunG,sBAAA,SAAAzjG,EAAAC,EAAAC,EAAAC,EAAAujG,EAAAC,GAEA,IAAAC,EAAAnpF,KAAA3d,YAAAK,OACAJ,EAAA0d,KAAAopF,uBACAF,IACA1jG,GAAAE,GAEA,IAIAlD,EAAA6mG,EAAAC,EAJAC,GAAAhkG,EAAAC,GAAAD,EAAAC,EAAA,IACAgkG,GAAAjpD,SACAkpD,GAAA,EAGA,IAAAjnG,EAAAgD,EAAAE,EAA2BlD,EAAAiD,EAASjD,GAAAkD,EACpC8jG,EAAA,GAAAjkG,EAAA/C,GACAgnG,EAAA,GAAAjkG,EAAA/C,EAAA,IACA8mG,EAAAr/E,EAAA,EAAAzlB,uBAAAlC,EAAAknG,MACAH,GACAI,IACAzpF,KAAA3d,YAAA8mG,KAAAI,EAAA,GACAvpF,KAAA3d,YAAA8mG,KAAAI,EAAA,IAEAvpF,KAAA3d,YAAA8mG,KAAAK,EAAA,GACAxpF,KAAA3d,YAAA8mG,KAAAK,EAAA,GACAC,GAAA,GACKH,IAAA7kG,GAAA,EAAAO,cACLgb,KAAA3d,YAAA8mG,KAAAK,EAAA,GACAxpF,KAAA3d,YAAA8mG,KAAAK,EAAA,GACAC,GAAA,GAEAA,GAAA,EAEAF,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAH,EAAAC,EAQA,OAJAL,GAAAQ,GAAAjnG,IAAAgD,EAAAE,KACAsa,KAAA3d,YAAA8mG,KAAAI,EAAA,GACAvpF,KAAA3d,YAAA8mG,KAAAI,EAAA,IAEAJ,GAYAjC,GAAAzlG,UAAAioG,uBAAA,SAAAnkG,EAAAC,EAAA05B,EAAAx5B,EAAAikG,GACA,QAAAnnG,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAAiD,EAAAy5B,EAAA18B,GACAonG,EAAA5pF,KAAAgpF,sBAAAzjG,EAAAC,EAAAC,EAAAC,GAAA,MACAikG,EAAA19F,KAAA29F,GACApkG,EAAAC,EAEA,OAAAD,GAOA0hG,GAAAzlG,UAAA2yF,WAAA,SAAAnzE,EAAA69B,EAAAZ,GACAl+B,KAAA6pF,cAAA5oF,EAAA69B,GACA,IAGAv5C,EAAAqkG,EAAAD,EAAAG,EACAtkG,EAJA4F,EAAA6V,EAAAM,UACA7b,EAAAub,EAAAia,YACA6uE,EAAA/pF,KAAA3d,YAAAK,OAGA,GAAA0I,GAAAoW,GAAA,EAAAtP,cAAA,CAEA3M,GADA0b,EAA+C,GAC/CwiC,6BACAqmD,KACA,IAAA1qE,EAAAne,EAAAi4E,WACA1zF,EAAA,EACA,QAAAhD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAsCF,EAAAC,IAAQD,EAAA,CAC9C,IAAAwnG,KACAxkG,EAAAwa,KAAA0pF,uBAAAnkG,EAAAC,EAAA45B,EAAA58B,GAAAkD,EAAAskG,GACAF,EAAA79F,KAAA+9F,GAEAhqF,KAAA2nF,aAAA17F,MAAAg6F,GAAAI,OACA0D,EAAAD,EAAA7oF,EAAAi9B,EAAAoD,GAAA,EAAApb,qBACG96B,GAAAoW,GAAA,EAAAzP,SAAA3G,GAAAoW,GAAA,EAAAvP,mBACH03F,KACApkG,EAAA6F,GAAAoW,GAAA,EAAAzP,QACiC,EAAA0xC,6BACjCxiC,EAAAsZ,qBACA/0B,EAAAwa,KAAA0pF,uBAAAnkG,EAAA,EAC2D,EAAAo+C,UAC3Dj+C,EAAAikG,GACA3pF,KAAA2nF,aAAA17F,MAAAg6F,GAAAI,OACA0D,EAAAJ,EAAA1oF,EAAAi9B,EAAAoD,GAAA,EAAAtb,gBACG56B,GAAAoW,GAAA,EAAA3P,aAAAzG,GAAAoW,GAAA,EAAAxP,aACHzM,EAAA0b,EAAAsZ,qBACAqvE,EAAA5pF,KAAAgpF,sBACAzjG,EAAA,EAAAA,EAAA7C,OAAAgD,GAAA,MACAsa,KAAA2nF,aAAA17F,MAAAg6F,GAAAI,OACA0D,EAAAH,EAAA3oF,EAAAi9B,EAAAoD,GAAA,EAAAj/C,eACG+I,GAAAoW,GAAA,EAAA5P,QACHrM,EAAA0b,EAAAsZ,qBACAva,KAAA3d,YAAA4J,KAAA1G,EAAA,GAAAA,EAAA,IACAqkG,EAAA5pF,KAAA3d,YAAAK,OACAsd,KAAA2nF,aAAA17F,MAAAg6F,GAAAI,OACA0D,EAAAH,EAAA3oF,EAAAi9B,KAEAl+B,KAAAiqF,YAAAhpF,EAAA69B,IASAooD,GAAAzlG,UAAAooG,cAAA,SAAA5oF,EAAA69B,GACA9+B,KAAAwnF,4BACAvB,GAAAC,eAAApnD,EAAA,GACA9+B,KAAA2nF,aAAA17F,KAAA+T,KAAAwnF,4BACAxnF,KAAAynF,4BACAxB,GAAAC,eAAApnD,EAAA,GACA9+B,KAAA8nF,yBAAA77F,KAAA+T,KAAAynF,6BAQAP,GAAAzlG,UAAA04C,MAAA,SAAAxoC,GACA,GAAAqO,KAAAunF,YAAA,CACA,IAAArnE,EAAAosD,GAAA,EAAAnpF,MAAA6c,KAAA6nF,mBAAA7nF,KAAAunF,YAAA3jG,SACA+N,EAAApD,UAAA2xB,EAAA,GAAAA,EAAA,IACAvuB,EAAAvD,OAAA4R,KAAAm2E,eAEAxkF,EAAAyoC,OACAp6B,KAAAunF,aACA51F,EAAAqF,aAAA7T,MAAAwO,EAAAioF,GAAA,EAAAvjF,kBAUA6wF,GAAAzlG,UAAA2mG,gBAAA,SAAAz2F,EAAAu4F,GACAv4F,EAAAiqC,YAAgDsuD,EAAA,GAChDv4F,EAAAqrC,UAAwCktD,EAAA,GACxCv4F,EAAAu3B,QAAsCghE,EAAA,GACtCv4F,EAAA63B,SAAuC0gE,EAAA,GACvCv4F,EAAA+3B,WAAyCwgE,EAAA,GACzCnuD,EAAA,EAAA5uB,mBACAxb,EAAA23B,eAA+C4gE,EAAA,GAC/Cv4F,EAAA0b,YAAkD68E,EAAA,MASlDhD,GAAAzlG,UAAA0oG,iBAAA,SAAA7B,EAAAxpD,GACA,GAAAwpD,KAAA5lG,OAAA,GACA,IAAA0nG,EAAA9B,EAAA,GACA,MAAA8B,MAAA9B,EAAA5lG,OAAA,GAEA,IAAAklE,GACA5kE,KAAgCslG,EAAA,GAChCllG,KAAgCklG,EAAA,GAChCjlG,KAAgCilG,EAAA,GAChC/kG,KAAgC+kG,EAAA,GAChC5kG,MAAAo7C,GAEA,IAAA9+B,KAAAonF,cAAAr5D,SAAA65B,GAAA,CACA5nD,KAAAonF,cAAAr/D,OAAA6/B,GAEA,IADA,IAAArxD,EAAAqjF,GAAA,EAAArjF,UACAyD,EAAA,EAAAoH,EAAAknF,EAAA5lG,OAAmDsX,EAAAoH,IAAQpH,EAAA,CAC3D,IAAAqwF,EAA+C/B,EAAAtuF,GAC/CqwF,IACAA,EAAA3nG,OAAA,IACAsd,KAAA+nF,sBAAAsC,EAAA,GACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAA,EAAA,IAAAA,EAAA,KAEA9zF,EAAApT,WAAAoI,EAAA8+F,KAIA/B,EAAA5lG,OAAA,EACAunB,EAAA,EAAA/kB,oBAAAojG,MAoBApB,GAAAzlG,UAAA6oG,QAAA,SACA34F,EAAA/E,EAAA29F,EACA5C,EAAA6C,EAAAC,GAEA,IAAA1S,EACA/3E,KAAA43E,mBAAAznE,EAAA,EAAApqB,OAAA6G,EAAAoT,KAAA6nF,oBACA9P,EAAA/3E,KAAA43E,mBAEA53E,KAAA43E,oBACA53E,KAAA43E,sBAEAG,EAAAC,GAAA,EAAAtpE,YACA1O,KAAA3d,YAAA,EAAA2d,KAAA3d,YAAAK,OAAA,EACAkK,EAAAoT,KAAA43E,mBACAtL,GAAA,EAAAn+E,aAAA6R,KAAA6nF,mBAAAj7F,IA0BA,IAxBA,IAIA89F,EACA57E,EAAAC,EAAA47E,EAAAC,EAAAC,EAAAC,EAAAxC,EAAA7xF,EALAs0F,GAAAhpG,EAAA,EAAA8E,QAAA0jG,GACA/nG,EAAA,EACAC,EAAAklG,EAAAjlG,OACAsL,EAAA,EAGAg9F,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAAprF,KAAA4nF,iBACA5R,EAAAh2E,KAAAm2E,cAEA5iD,GACA5hC,UACAmkC,WAAA91B,KAAA81B,WACAjuC,WAAAmY,KAAAnY,WACAC,SAAAkuF,GAKAqV,EACArrF,KAAA2nF,iBAAA3nF,KAAA62D,SAAA,MACAr0E,EAAAC,GAAA,CACA,IAEgDq8C,EAAAh7C,EAAAC,EAFhDmmG,EAAAvC,EAAAnlG,GAGA,OAFuD0nG,EAAA,IAGvD,KAAAjE,GAAAC,eACApnD,EAA0DorD,EAAA,GAC1Da,GACAR,EAAA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,cACAooB,EAAAT,cACA77C,EAAgC0nG,EAAA,QACvB3+F,IAAAk/F,GAAAxgF,EAAA,EAAA9gB,WACTshG,EAAA3rD,EAAAT,cAAAl6B,eAGA3hB,EAFAA,EAAgC0nG,EAAA,KAIhC,MACA,KAAAjE,GAAAE,WACA6E,EAAAK,IACArrF,KAAAm6B,MAAAxoC,GACAq5F,EAAA,GAEAC,EAAAI,IACA15F,EAAAkpC,SACAowD,EAAA,GAEAD,GAAAC,IACAt5F,EAAAirC,YACA+tD,EAAAC,EAAArqD,OAEA/9C,EACA,MACA,KAAAyjG,GAAA7zF,OAEA,IAAA3J,EAAAsvF,EADA/pF,EAA8Bk8F,EAAA,IAE9BrhG,EAAAkvF,EAAA/pF,EAAA,GAGAhK,EAFA+zF,EAAA/pF,EAAA,GAEAvF,EACAxE,EAFA8zF,EAAA/pF,EAAA,GAEAnF,EACAgR,EAAA5W,KAAAgf,KAAAje,IAAAC,KACA0N,EAAAkmD,OAAApvD,EAAAoR,EAAAhR,GACA8I,EAAAkrC,IAAAp0C,EAAAI,EAAAgR,EAAA,IAAA5W,KAAAsX,IAAA,KACA/X,EACA,MACA,KAAAyjG,GAAAG,WACAz0F,EAAAsrC,cACAz6C,EACA,MACA,KAAAyjG,GAAAI,OACAr4F,EAA8Bk8F,EAAA,GAC9BQ,EAAAR,EAAA,GACA,IAAAjpF,EAAyDipF,EAAA,GACzDhsD,EAAAgsD,EAAA,GACAj6E,EAAA,GAAAi6E,EAAAxnG,OAAAwnG,EAAA,QAAA3+F,EACAgoC,EAAAtyB,WACAsyB,EAAAuL,UACAt8C,KAAA4oG,IACAA,EAAA5oG,OAEA,IAAA2e,EAAAiqF,EAAA5oG,GACAytB,EACAA,EAAA8nE,EAAA/pF,EAAA08F,EAAA,EAAAvpF,IAEAA,EAAA,GAAA42E,EAAA/pF,GACAmT,EAAA,GAAA42E,EAAA/pF,EAAA,GACAmT,EAAAze,OAAA,GAEAw7C,EAAA/8B,EAAAoyB,KACA/wC,EACA,MACA,KAAAyjG,GAAAM,WACAv4F,EAA8Bk8F,EAAA,GAC9BQ,EAA+BR,EAAA,GAC/BzzF,EACAyzF,EAAA,GAEAp7E,EAAoCo7E,EAAA,GACpCn7E,EAAoCm7E,EAAA,GACpC5B,EAAAkC,EAAA,KAA+EN,EAAA,GAC/E,IAUAz0F,EAAA61F,EAAAC,EAVAp2F,EAAuC+0F,EAAA,GACvC1zF,EAAwC0zF,EAAA,GACxCxzF,EAAwCwzF,EAAA,GACxCvzF,EAAwCuzF,EAAA,IACxC1xD,EAAgD0xD,EAAA,IAChDpiG,EAAyCoiG,EAAA,IACzC57F,GAAsC47F,EAAA,IACtCtxD,GAA6CsxD,EAAA,IAC7Ch2F,GAAsCg2F,EAAA,IAetC,IAZAA,EAAAxnG,OAAA,IACA+S,EAA8Cy0F,EAAA,IAC9CoB,EAA8CpB,EAAA,IAC9CqB,EAAgDrB,EAAA,MAEhDz0F,EAAAmkF,GAAA,EAAA5mF,eACAs4F,EAAAC,GAAA,GAGA/yD,IACA1wC,GAAAkuF,GAEchoF,EAAA08F,EAAQ18F,GAAA,EACtBgS,KAAAqoF,aAAA12F,EACAomF,EAAA/pF,GAAA+pF,EAAA/pF,EAAA,GAAAyI,EAAAqY,EAAAC,EACAu5E,EAAAnzF,EAAAqB,EAAAE,EAAAC,EAAA7O,EAAAwG,GACAsqC,GAAA1kC,GAAAuB,EACA61F,EAAoD,OACpDC,EAAsD,QAEtDvrF,KAAAmqF,iBAAA7B,EAAAxpD,KACAt8C,EACA,MACA,KAAAyjG,GAAAK,WACA,IAAA7pF,GAAsCytF,EAAA,GACtCzkG,GAAoCykG,EAAA,GACpCsB,GAAyCtB,EAAA,GACzC5B,EAAAkC,EAAA,KAA+EN,EAAA,GAC/E,IAAAnd,GAAyCmd,EAAA,GACzCuB,GAAwCvB,EAAA,GACxC/E,GAAyC+E,EAAA,GACzCjF,GAAyDiF,EAAA,GACzD9zF,GAAwC8zF,EAAA,GACxCwB,GAA0CxB,EAAA,IAC1CruD,GAA6CquD,EAAA,IAC7Cr2F,GAAqCq2F,EAAA,IACrCyB,GAAwCzB,EAAA,IACxCvO,GAA0CuO,EAAA,IAE1C0B,GAAA7G,GAAAr0D,WAAAqnD,EAAAt7E,GAAAhX,GAAA,GACAomG,GAAA5G,GAAApxF,IACA,GAAAk5E,IAAA8e,IAAAD,GAAA,CACA,IAAAjS,GAAiE,KAAAmS,WAAAH,IAAAhS,UACjEuL,IAAA0G,GAAAC,IAAA5E,GAAAD,WAAArN,IACA1iE,GAAA+uE,GAAAt1D,WACAqnD,EAAAt7E,GAAAhX,GAAA,EAAAoO,GAAAoxF,GAAAC,GAAAC,IACA,GAAAluE,GAAA,CACA,IAAAlpB,GAAAg+F,GAAAC,GAAA/8C,GAAAg9C,GACA,GAAAP,GACA,IAAA39F,GAAA,EAAAg+F,GAAA90E,GAAAv0B,OAA4CqL,GAAAg+F,KAAQh+F,GAEpDi+F,IADAC,GAAAh1E,GAAAlpB,KAC0C,GAC1CkhD,GAA+D,KAAA/V,SAAA8yD,GAAAL,GAAA,GAAAD,IAC/D58E,EAA4Cm9E,GAAA,GAAApwD,GAC5C9sB,EAAAy8E,GAAAv8C,GAAA95C,OAAA,MAAAq2F,IAAA3vD,GAAAzlC,GACA4J,KAAAqoF,aAAA12F,EACsCs6F,GAAA,GAAiCA,GAAA,GAAAh9C,GACvEngC,EAAAC,EAAAu5E,EAAAr5C,GAAA95C,OAAA,MACsC82F,GAAA,GAAAtQ,IAAA,EAAA1sC,GAAA/6C,MACtC0lF,GAAA,EAAA5mF,eAAA,WAGA,GAAAy4F,GACA,IAAA19F,GAAA,EAAAg+F,GAAA90E,GAAAv0B,OAA4CqL,GAAAg+F,KAAQh+F,GAEpDi+F,IADAC,GAAAh1E,GAAAlpB,KAC0C,GAC1CkhD,GAA+D,KAAA/V,SAAA8yD,GAAAL,GAAAF,GAAA,IAC/D38E,EAA4Cm9E,GAAA,GAC5Cl9E,EAAAy8E,GAAAv8C,GAAA95C,OAAAiB,GACA4J,KAAAqoF,aAAA12F,EACsCs6F,GAAA,GAAiCA,GAAA,GAAAh9C,GACvEngC,EAAAC,EAAAu5E,EAAAr5C,GAAA95C,OAAA,MACsC82F,GAAA,GAAAtQ,IAAA,EAAA1sC,GAAA/6C,MACtC0lF,GAAA,EAAA5mF,eAAA,YAKAgN,KAAAmqF,iBAAA7B,EAAAxpD,KACAt8C,EACA,MACA,KAAAyjG,GAAAO,aACA,QAAAj7F,IAAAi/F,EAAA,CAEA,IAAAhzE,GAAAgzE,EADA1rD,EAA4DorD,EAAA,IAE5D,GAAA1yE,GACA,OAAAA,KAGAh1B,EACA,MACA,KAAAyjG,GAAAQ,KACA4E,EACAL,IAEAhrF,KAAAm6B,MAAAxoC,KAEAnP,EACA,MACA,KAAAyjG,GAAAS,gBAYA,IAXA14F,EAA8Bk8F,EAAA,GAC9BQ,EAA+BR,EAAA,GAC/BpmG,EAAAi0F,EAAA/pF,GAGA88F,GAFA/mG,EAAAg0F,EAAA/pF,EAAA,IAEA,MADA68F,EAAA/mG,EAAA,QAEA6mG,GAAAG,IAAAF,IACAj5F,EAAAkmD,OAAA/zD,EAAAC,GACA4mG,EAAAE,EACAD,EAAAE,GAEA98F,GAAA,EAAoBA,EAAA08F,EAAQ18F,GAAA,EAG5B68F,GAFA/mG,EAAAi0F,EAAA/pF,IAEA,KACA88F,GAFA/mG,EAAAg0F,EAAA/pF,EAAA,IAEA,KACAA,GAAA08F,EAAA,GAAAG,IAAAF,GAAAG,IAAAF,IACAj5F,EAAAmrC,OAAAh5C,EAAAC,GACA4mG,EAAAE,EACAD,EAAAE,KAGAtoG,EACA,MACA,KAAAyjG,GAAAU,eACAuE,EAAAhB,EACAlqF,KAAAunF,YAAA2C,EAAA,GAEAc,IACAhrF,KAAAm6B,MAAAxoC,GACAq5F,EAAA,EACAC,IACAt5F,EAAAkpC,SACAowD,EAAA,IAIAt5F,EAAAorC,UAAoDmtD,EAAA,KACpD1nG,EACA,MACA,KAAAyjG,GAAAW,iBACAuE,EAAAjB,EACAe,IACAt5F,EAAAkpC,SACAowD,EAAA,GAEAjrF,KAAAooF,gBAAAz2F,EAA2D,KAC3DnP,EACA,MACA,KAAAyjG,GAAAY,OACAwE,EACAJ,IAEAt5F,EAAAkpC,WAEAr4C,EACA,MACA,UACAA,GAIAwoG,GACAhrF,KAAAm6B,MAAAxoC,GAEAs5F,GACAt5F,EAAAkpC,UAaAqsD,GAAAzlG,UAAAyqG,OAAA,SACAv6F,EAAA/E,EAAAopF,EAAAuU,GACAvqF,KAAAm2E,cAAAH,EACAh2E,KAAAsqF,QAAA34F,EAAA/E,EACA29F,EAAAvqF,KAAA2nF,kBAAAp8F,WAiBA27F,GAAAzlG,UAAA0qG,mBAAA,SACAx6F,EAAA/E,EAAAopF,EAAAuU,EACA6B,EAAA3B,GAEA,OADAzqF,KAAAm2E,cAAAH,EACAh2E,KAAAsqF,QAAA34F,EAAA/E,EAAA29F,EACAvqF,KAAA8nF,yBAAAsE,EAAA3B,IAOAvD,GAAAzlG,UAAA4qG,gCAAA,WACA,IAIA7pG,EAJAslG,EAAA9nF,KAAA8nF,yBAEAA,EAAAzC,UAGA,IACA6E,EACA9+F,EAFAqO,EAAAquF,EAAAplG,OAGA+Z,GAAA,EACA,IAAAja,EAAA,EAAaA,EAAAiX,IAAOjX,GAEpB4I,GADA8+F,EAAApC,EAAAtlG,IACmD,KACnDyjG,GAAAO,aACA/pF,EAAAja,EACK4I,GAAA66F,GAAAC,iBACLgE,EAAA,GAAA1nG,EACA2tB,EAAA,EAAA3T,gBAAAwD,KAAA8nF,yBAAArrF,EAAAja,GACAia,GAAA,IASAyqF,GAAAzlG,UAAA+zF,mBAAA,SAAAz4C,EAAAnB,GACA,IAAArI,EAAAvzB,KAAAuzB,MACA,GAAAwJ,EAAA,CACA,IAAA+8C,EAAA/8C,EAAAlT,WACA0J,EAAAwJ,UAAAjB,GAAA,EAAAjkB,YAAAiiE,GACAF,GAAA,EAAArnF,uBAEAghC,EAAAwJ,eAAAxxC,EAEA,GAAAqwC,EAAA,CACA,IAAAm+C,EAAAn+C,EAAA/R,WACA0J,EAAAqI,YAAAE,GAAA,EAAAjkB,YAAAkiE,GACAH,GAAA,EAAA/mF,oBACA,IAAAmnF,EAAAp+C,EAAA9R,aACAyJ,EAAArK,aAAA39B,IAAAyuF,EACAA,EAAAJ,GAAA,EAAApnF,eACA,IAAAynF,EAAAr+C,EAAA7R,cACAwJ,EAAAnK,SAAA6wD,EACAA,EAAAr2F,QAAAg2F,GAAA,EAAAnnF,gBACA,IAAAynF,EAAAt+C,EAAA5R,oBACAuJ,EAAAjK,eAAA4wD,GACAN,GAAA,EAAAlnF,sBACA,IAAAynF,EAAAv+C,EAAA3R,cACAsJ,EAAA/J,cAAAj+B,IAAA4uF,EACAA,EAAAP,GAAA,EAAAjnF,gBACA,IAAAynF,EAAAx+C,EAAA90C,WACAysC,EAAAyJ,eAAAzxC,IAAA6uF,EACAA,EAAAR,GAAA,EAAA3mF,iBACA,IAAAonF,EAAAz+C,EAAA1R,gBACAqJ,EAAA7J,gBAAAn+B,IAAA8uF,EACAA,EAAAT,GAAA,EAAAhnF,kBAEA2gC,EAAAyJ,UAAAh9B,KAAAsnF,eACAtnF,KAAAsnF,aAAA/zD,EAAAyJ,UAEAh9B,KAAA0nF,mBAAA,WAGAn0D,EAAAqI,iBAAArwC,EACAgoC,EAAArK,aAAA39B,EACAgoC,EAAAnK,SAAA,KACAmK,EAAAjK,oBAAA/9B,EACAgoC,EAAA/J,cAAAj+B,EACAgoC,EAAAyJ,eAAAzxC,EACAgoC,EAAA7J,gBAAAn+B,GASA27F,GAAAzlG,UAAA6qG,UAAA,SAAA/4D,EAAAtyB,GACA,IAAA87B,EAAAxJ,EAAAwJ,UACAmrD,GAAAjC,GAAAU,eAAA5pD,GACA,oBAAAA,EAAA,CACA,IAAAwvD,EAAAtrF,EAAAkD,YACA+jF,EAAAj8F,MAAAsgG,EAAA,GAAAA,EAAA,KAEAvsF,KAAA2nF,aAAA17F,KAAAi8F,IAOAhB,GAAAzlG,UAAA+qG,YAAA,SAAAj5D,GACAvzB,KAAA2nF,aAAA17F,MACAg6F,GAAAW,iBACArzD,EAAAqI,YAAArI,EAAAyJ,UAAAh9B,KAAA81B,WAAAvC,EAAArK,QACAqK,EAAA/J,SAAA+J,EAAA7J,WACA1pB,KAAA6oF,gBAAAt1D,EAAAnK,UAAAmK,EAAAjK,eAAAtpB,KAAA81B,cAUAoxD,GAAAzlG,UAAAgrG,gBAAA,SAAAl5D,EAAA+4D,EAAArrF,GACA,IAAA87B,EAAAxJ,EAAAwJ,UACA,iBAAAA,GAAAxJ,EAAAm5D,kBAAA3vD,IACAuvD,EAAAhmG,KAAA0Z,KAAAuzB,EAAAtyB,GACAsyB,EAAAm5D,iBAAA3vD,IASAmqD,GAAAzlG,UAAAkrG,kBAAA,SAAAp5D,EAAAi5D,GACA,IAAA5wD,EAAArI,EAAAqI,YACA1S,EAAAqK,EAAArK,QACAE,EAAAmK,EAAAnK,SACAE,EAAAiK,EAAAjK,eACAE,EAAA+J,EAAA/J,SACAwT,EAAAzJ,EAAAyJ,UACAtT,EAAA6J,EAAA7J,YACA6J,EAAAq5D,oBAAAhxD,GACArI,EAAAs5D,gBAAA3jE,GACAE,GAAAmK,EAAAu5D,kBAAA38E,EAAA,EAAApqB,OAAAwtC,EAAAu5D,gBAAA1jE,IACAmK,EAAAw5D,uBAAAzjE,GACAiK,EAAAy5D,iBAAAxjE,GACA+J,EAAA05D,kBAAAjwD,GACAzJ,EAAA25D,mBAAAxjE,KACA8iE,EAAAlmG,KAAA0Z,KAAAuzB,GACAA,EAAAq5D,mBAAAhxD,EACArI,EAAAs5D,eAAA3jE,EACAqK,EAAAu5D,gBAAA1jE,EACAmK,EAAAw5D,sBAAAzjE,EACAiK,EAAAy5D,gBAAAxjE,EACA+J,EAAA05D,iBAAAjwD,EACAzJ,EAAA25D,kBAAAxjE,IASAw9D,GAAAzlG,UAAAwoG,YAAA,SAAAhpF,EAAA69B,GACA9+B,KAAAwnF,2BAAA,GAAAxnF,KAAA2nF,aAAAjlG,OACAsd,KAAAwnF,2BAAA,KACAxnF,KAAAynF,2BAAA,GAAAznF,KAAA8nF,yBAAAplG,OACAsd,KAAAynF,2BAAA,KACA,IAAA0F,GACAlH,GAAAO,aAAA1nD,GACA9+B,KAAA2nF,aAAA17F,KAAAkhG,GACAntF,KAAA8nF,yBAAA77F,KAAAkhG,IAOAjG,GAAAzlG,UAAA2rG,OAAA1pF,EAAA,EAAA7hB,aAUAqlG,GAAAzlG,UAAA2nG,qBAAA,WACA,IAAAppF,KAAA0nF,qBACA1nF,KAAA0nF,mBAAAz9E,EAAA,EAAAtmB,MAAAqc,KAAAmnF,WACAnnF,KAAAsnF,aAAA,IACA,IAAApzF,EAAA8L,KAAAnY,YAAAmY,KAAAsnF,aAAA,KACAr9E,EAAA,EAAAxmB,OAAAuc,KAAA0nF,mBAAAxzF,EAAA8L,KAAA0nF,oBAGA,OAAA1nF,KAAA0nF,oBAEA,IAAA2F,GAAA,GC1hCAC,GAAA,SACAloE,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,GACAiG,GAAA/mG,KAAA0Z,KACAolB,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,GAMApnF,KAAAutF,gBAAA,KAMAvtF,KAAAwtF,mBAAA,KAMAxtF,KAAAg+B,OAAA,KAMAh+B,KAAAytF,cAAAliG,EAMAyU,KAAA0tF,cAAAniG,EAMAyU,KAAA2tF,aAAApiG,EAMAyU,KAAAs4B,cAAA/sC,EAMAyU,KAAA4tF,cAAAriG,EAMAyU,KAAA6tF,cAAAtiG,EAMAyU,KAAAu4B,qBAAAhtC,EAMAyU,KAAAy4B,eAAAltC,EAMAyU,KAAA04B,YAAAntC,EAMAyU,KAAA24B,kBAAAptC,EAMAyU,KAAA2pB,YAAAp+B,GAIAmY,EAAA,EAAApiB,SAAAgsG,GAAAD,IAWAC,GAAA7rG,UAAAqsG,iBAAA,SAAAvoG,EAAAC,EAAAC,EAAAC,GACA,OAAAsa,KAAAgpF,sBACAzjG,EAAAC,EAAAC,EAAAC,GAAA,OAOA4nG,GAAA7rG,UAAA0zF,UAAA,SAAAC,EAAAt2C,GACA,GAAA9+B,KAAAg+B,OAAA,CAGAh+B,KAAA6pF,cAAAzU,EAAAt2C,GACA,IAAAv5C,EAAA6vF,EAAA76D,qBACA70B,EAAA0vF,EAAAl6D,YACA6yE,EAAA/tF,KAAA3d,YAAAK,OACAymG,EAAAnpF,KAAA8tF,iBACAvoG,EAAA,EAAAA,EAAA7C,OAAAgD,GACAsa,KAAA2nF,aAAA17F,MACAg6F,GAAAM,WAAAwH,EAAA5E,EAAAnpF,KAAAg+B,OAEAh+B,KAAAytF,SAAAztF,KAAA0tF,SAAA1tF,KAAAutF,gBAAAvtF,KAAA2tF,QAAA3tF,KAAAs4B,SACAt4B,KAAA4tF,SAAA5tF,KAAA6tF,SAAA7tF,KAAAu4B,gBAAAv4B,KAAAy4B,UACAz4B,KAAA04B,OAAA14B,KAAA81B,WAAA91B,KAAA24B,aAAA34B,KAAA2pB,SAEA3pB,KAAA8nF,yBAAA77F,MACAg6F,GAAAM,WAAAwH,EAAA5E,EACAnpF,KAAAwtF,mBAEAxtF,KAAAytF,SAAAztF,KAAA0tF,SAAA1tF,KAAAutF,gBAAAvtF,KAAA2tF,QAAA3tF,KAAAs4B,SACAt4B,KAAA4tF,SAAA5tF,KAAA6tF,SAAA7tF,KAAAu4B,gBAAAv4B,KAAAy4B,UACAz4B,KAAA04B,OAAA14B,KAAA24B,aAAA34B,KAAA2pB,SAEA3pB,KAAAiqF,YAAA7U,EAAAt2C,KAOAwuD,GAAA7rG,UAAAszF,eAAA,SAAAC,EAAAl2C,GACA,GAAA9+B,KAAAg+B,OAAA,CAGAh+B,KAAA6pF,cAAA7U,EAAAl2C,GACA,IAAAv5C,EAAAyvF,EAAAz6D,qBACA70B,EAAAsvF,EAAA95D,YACA6yE,EAAA/tF,KAAA3d,YAAAK,OACAymG,EAAAnpF,KAAA8tF,iBACAvoG,EAAA,EAAAA,EAAA7C,OAAAgD,GACAsa,KAAA2nF,aAAA17F,MACAg6F,GAAAM,WAAAwH,EAAA5E,EAAAnpF,KAAAg+B,OAEAh+B,KAAAytF,SAAAztF,KAAA0tF,SAAA1tF,KAAAutF,gBAAAvtF,KAAA2tF,QAAA3tF,KAAAs4B,SACAt4B,KAAA4tF,SAAA5tF,KAAA6tF,SAAA7tF,KAAAu4B,gBAAAv4B,KAAAy4B,UACAz4B,KAAA04B,OAAA14B,KAAA81B,WAAA91B,KAAA24B,aAAA34B,KAAA2pB,SAEA3pB,KAAA8nF,yBAAA77F,MACAg6F,GAAAM,WAAAwH,EAAA5E,EACAnpF,KAAAwtF,mBAEAxtF,KAAAytF,SAAAztF,KAAA0tF,SAAA1tF,KAAAutF,gBAAAvtF,KAAA2tF,QAAA3tF,KAAAs4B,SACAt4B,KAAA4tF,SAAA5tF,KAAA6tF,SAAA7tF,KAAAu4B,gBAAAv4B,KAAAy4B,UACAz4B,KAAA04B,OAAA14B,KAAA24B,aAAA34B,KAAA2pB,SAEA3pB,KAAAiqF,YAAAjV,EAAAl2C,KAOAwuD,GAAA7rG,UAAA2rG,OAAA,WACAptF,KAAAqsF,kCAEArsF,KAAAytF,cAAAliG,EACAyU,KAAA0tF,cAAAniG,EACAyU,KAAAwtF,mBAAA,KACAxtF,KAAAg+B,OAAA,KACAh+B,KAAA2tF,aAAApiG,EACAyU,KAAA04B,YAAAntC,EACAyU,KAAAs4B,cAAA/sC,EACAyU,KAAA4tF,cAAAriG,EACAyU,KAAA6tF,cAAAtiG,EACAyU,KAAAu4B,qBAAAhtC,EACAyU,KAAAy4B,eAAAltC,EACAyU,KAAA24B,kBAAAptC,EACAyU,KAAA2pB,YAAAp+B,GAOA+hG,GAAA7rG,UAAAg0F,cAAA,SAAAC,EAAA4S,GACA,IAAAz5E,EAAA6mE,EAAAz8C,YACAlxC,EAAA2tF,EAAArsF,UACA2kG,EAAAtY,EAAAv8C,qBAAA,GACA1iC,EAAAi/E,EAAAx8C,SAAA,GACAhZ,EAAAw1D,EAAAt0D,YACAphB,KAAAytF,SAAA5+E,EAAA,GACA7O,KAAA0tF,SAAA7+E,EAAA,GACA7O,KAAAutF,gBAAsD,EACtDvtF,KAAAwtF,mBAAAQ,EACAhuF,KAAAg+B,OAAAvnC,EACAuJ,KAAA2tF,QAAA5lG,EAAA,GACAiY,KAAAs4B,SAAAo9C,EAAA3+C,aACA/2B,KAAA4tF,SAAA1tE,EAAA,GACAlgB,KAAA6tF,SAAA3tE,EAAA,GACAlgB,KAAAu4B,gBAAAm9C,EAAA78C,oBACA74B,KAAAy4B,UAAAi9C,EAAA58C,cACA94B,KAAA04B,OAAAg9C,EAAA38C,WACA/4B,KAAA24B,aAAA+8C,EAAA18C,iBACAh5B,KAAA2pB,OAAA5hC,EAAA,IAEA,IAAAkmG,GAAA,GC1NAC,GAAA,SACA9oE,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,GACAiG,GAAA/mG,KAAA0Z,KACAolB,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,IAGA1jF,EAAA,EAAApiB,SAAA4sG,GAAAb,IAWAa,GAAAzsG,UAAA0sG,qBAAA,SAAA5oG,EAAAC,EAAAC,EAAAC,GACA,IAAAqoG,EAAA/tF,KAAA3d,YAAAK,OACAymG,EAAAnpF,KAAAgpF,sBACAzjG,EAAAC,EAAAC,EAAAC,GAAA,MACA0oG,GACAnI,GAAAS,gBAAAqH,EAAA5E,GAGA,OAFAnpF,KAAA2nF,aAAA17F,KAAAmiG,GACApuF,KAAA8nF,yBAAA77F,KAAAmiG,GACA3oG,GAOAyoG,GAAAzsG,UAAAkzF,eAAA,SAAAC,EAAA91C,GACA,IAAAvL,EAAAvzB,KAAAuzB,MACAqI,EAAArI,EAAAqI,YACAoB,EAAAzJ,EAAAyJ,UACA,QAAAzxC,IAAAqwC,QAAArwC,IAAAyxC,EAAA,CAGAh9B,KAAA2sF,kBAAAp5D,EAAAvzB,KAAAwsF,aACAxsF,KAAA6pF,cAAAjV,EAAA91C,GACA9+B,KAAA8nF,yBAAA77F,MACAg6F,GAAAW,iBACArzD,EAAAqI,YAAArI,EAAAyJ,UAAAzJ,EAAArK,QAAAqK,EAAA/J,SACA+J,EAAA7J,WAAA6J,EAAAnK,SAAAmK,EAAAjK,iBAEA28D,GAAAE,aAEA,IAAA5gG,EAAAqvF,EAAAr6D,qBACA70B,EAAAkvF,EAAA15D,YACAlb,KAAAmuF,qBAAA5oG,EAAA,EAAAA,EAAA7C,OAAAgD,GACAsa,KAAA8nF,yBAAA77F,MAAAg6F,GAAAY,SACA7mF,KAAAiqF,YAAArV,EAAA91C,KAOAovD,GAAAzsG,UAAAozF,oBAAA,SAAAC,EAAAh2C,GACA,IAAAvL,EAAAvzB,KAAAuzB,MACAqI,EAAArI,EAAAqI,YACAoB,EAAAzJ,EAAAyJ,UACA,QAAAzxC,IAAAqwC,QAAArwC,IAAAyxC,EAAA,CAGAh9B,KAAA2sF,kBAAAp5D,EAAAvzB,KAAAwsF,aACAxsF,KAAA6pF,cAAA/U,EAAAh2C,GACA9+B,KAAA8nF,yBAAA77F,MACAg6F,GAAAW,iBACArzD,EAAAqI,YAAArI,EAAAyJ,UAAAzJ,EAAArK,QAAAqK,EAAA/J,SACA+J,EAAA7J,WAAA6J,EAAAnK,SAAAmK,EAAAjK,iBAEA28D,GAAAE,aAEA,IAIA3jG,EAAAC,EAJAy8B,EAAA41D,EAAAnxC,UACAp+C,EAAAuvF,EAAAv6D,qBACA70B,EAAAovF,EAAA55D,YACA11B,EAAA,EAEA,IAAAhD,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAA+BF,EAAAC,IAAQD,EACvCgD,EAAAwa,KAAAmuF,qBACA5oG,EAAAC,EAAA05B,EAAA18B,GAAAkD,GAEAsa,KAAA8nF,yBAAA77F,MAAAg6F,GAAAY,SACA7mF,KAAAiqF,YAAAnV,EAAAh2C,KAOAovD,GAAAzsG,UAAA2rG,OAAA,WACA,IAAA75D,EAAAvzB,KAAAuzB,WACAhoC,GAAAgoC,EAAA86D,YAAA96D,EAAA86D,YAAAruF,KAAA3d,YAAAK,QACAsd,KAAA2nF,aAAA17F,MAAAg6F,GAAAY,SAEA7mF,KAAAqsF,kCACArsF,KAAAuzB,MAAA,MAOA26D,GAAAzsG,UAAA+qG,YAAA,SAAAj5D,QACAhoC,GAAAgoC,EAAA86D,YAAA96D,EAAA86D,YAAAruF,KAAA3d,YAAAK,SACAsd,KAAA2nF,aAAA17F,MAAAg6F,GAAAY,SACAtzD,EAAA86D,WAAAruF,KAAA3d,YAAAK,QAEA6wC,EAAA86D,WAAA,EACAhB,GAAA5rG,UAAA+qG,YAAAlmG,KAAA0Z,KAAAuzB,GACAvzB,KAAA2nF,aAAA17F,MAAAg6F,GAAAE,cAEA,IAAAmI,GAAA,YC/GAC,GAAA,SACAnpE,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,GACAiG,GAAA/mG,KAAA0Z,KACAolB,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,IAGA1jF,EAAA,EAAApiB,SAAAitG,GAAAlB,IAWAkB,GAAA9sG,UAAA+sG,sBAAA,SAAAjpG,EAAAC,EAAA05B,EAAAx5B,GACA,IAAA6tC,EAAAvzB,KAAAuzB,MACA6G,OAAA7uC,IAAAgoC,EAAAwJ,UACAlC,OAAAtvC,GAAAgoC,EAAAqI,YACA6yD,EAAAvvE,EAAAx8B,OACAgsG,GAAAzI,GAAAE,YACAnmF,KAAA2nF,aAAA17F,KAAAyiG,GACA1uF,KAAA8nF,yBAAA77F,KAAAyiG,GACA,QAAAlsG,EAAA,EAAiBA,EAAAisG,IAAajsG,EAAA,CAC9B,IAAAiD,EAAAy5B,EAAA18B,GACAurG,EAAA/tF,KAAA3d,YAAAK,OACAymG,EAAAnpF,KAAAgpF,sBACAzjG,EAAAC,EAAAC,EAAAC,GAAA,GAAAm1C,GACAuzD,GACAnI,GAAAS,gBAAAqH,EAAA5E,GAGA,GAFAnpF,KAAA2nF,aAAA17F,KAAAmiG,GACApuF,KAAA8nF,yBAAA77F,KAAAmiG,GACAvzD,EAAA,CAGA,IAAA8zD,GAAA1I,GAAAG,YACApmF,KAAA2nF,aAAA17F,KAAA0iG,GACA3uF,KAAA8nF,yBAAA77F,KAAA0iG,GAEAnpG,EAAAC,EAEA,IAAAyiG,GAAAjC,GAAAQ,MAKA,GAJAzmF,KAAA8nF,yBAAA77F,KAAAi8F,GACA9tD,GACAp6B,KAAA2nF,aAAA17F,KAAAi8F,GAEArtD,EAAA,CACA,IAAAstD,GAAAlC,GAAAY,QACA7mF,KAAA2nF,aAAA17F,KAAAk8F,GACAnoF,KAAA8nF,yBAAA77F,KAAAk8F,GAEA,OAAA3iG,GAOA+oG,GAAA9sG,UAAA6yF,WAAA,SAAAC,EAAAz1C,GACA,IAAAvL,EAAAvzB,KAAAuzB,MACAwJ,EAAAxJ,EAAAwJ,UACAnB,EAAArI,EAAAqI,YACA,QAAArwC,IAAAwxC,QAAAxxC,IAAAqwC,EAAA,CAGA57B,KAAA4uF,qBAAAra,GACAv0E,KAAA6pF,cAAAtV,EAAAz1C,GAEA9+B,KAAA8nF,yBAAA77F,MACAg6F,GAAAU,eACAlpD,GAAA,EAAAhnB,SAAAmjE,GAAA,EAAArnF,yBAEAhH,IAAAgoC,EAAAqI,aACA57B,KAAA8nF,yBAAA77F,MACAg6F,GAAAW,iBACArzD,EAAAqI,YAAArI,EAAAyJ,UAAAzJ,EAAArK,QAAAqK,EAAA/J,SACA+J,EAAA7J,WAAA6J,EAAAnK,SAAAmK,EAAAjK,iBAGA,IAAA/jC,EAAAgvF,EAAAh6D,qBACA70B,EAAA6uF,EAAAr5D,YACA6yE,EAAA/tF,KAAA3d,YAAAK,OACAsd,KAAAgpF,sBACAzjG,EAAA,EAAAA,EAAA7C,OAAAgD,GAAA,MACA,IAAAgpG,GAAAzI,GAAAE,YACA0I,GAAA5I,GAAA7zF,OAAA27F,GACA/tF,KAAA2nF,aAAA17F,KAAAyiG,EAAAG,GACA7uF,KAAA8nF,yBAAA77F,KAAAyiG,EAAAG,GACA,IAAA3G,GAAAjC,GAAAQ,MAKA,GAJAzmF,KAAA8nF,yBAAA77F,KAAAi8F,QACA38F,IAAAgoC,EAAAwJ,WACA/8B,KAAA2nF,aAAA17F,KAAAi8F,QAEA38F,IAAAgoC,EAAAqI,YAAA,CACA,IAAAusD,GAAAlC,GAAAY,QACA7mF,KAAA2nF,aAAA17F,KAAAk8F,GACAnoF,KAAA8nF,yBAAA77F,KAAAk8F,GAEAnoF,KAAAiqF,YAAA1V,EAAAz1C,KAOAyvD,GAAA9sG,UAAA4zF,YAAA,SAAAC,EAAAx2C,GACA,IAAAvL,EAAAvzB,KAAAuzB,MACAvzB,KAAA4uF,qBAAAtZ,GACAt1E,KAAA6pF,cAAAvU,EAAAx2C,GAEA9+B,KAAA8nF,yBAAA77F,MACAg6F,GAAAU,eACAlpD,GAAA,EAAAhnB,SAAAmjE,GAAA,EAAArnF,yBAEAhH,IAAAgoC,EAAAqI,aACA57B,KAAA8nF,yBAAA77F,MACAg6F,GAAAW,iBACArzD,EAAAqI,YAAArI,EAAAyJ,UAAAzJ,EAAArK,QAAAqK,EAAA/J,SACA+J,EAAA7J,WAAA6J,EAAAnK,SAAAmK,EAAAjK,iBAGA,IAAApK,EAAAo2D,EAAA3xC,UACAp+C,EAAA+vF,EAAA7xC,6BACA/9C,EAAA4vF,EAAAp6D,YACAlb,KAAAwuF,sBAAAjpG,EAAA,EAAA25B,EAAAx5B,GACAsa,KAAAiqF,YAAA3U,EAAAx2C,IAOAyvD,GAAA9sG,UAAAwzF,iBAAA,SAAAC,EAAAp2C,GACA,IAAAvL,EAAAvzB,KAAAuzB,MACAwJ,EAAAxJ,EAAAwJ,UACAnB,EAAArI,EAAAqI,YACA,QAAArwC,IAAAwxC,QAAAxxC,IAAAqwC,EAAA,CAGA57B,KAAA4uF,qBAAA1Z,GACAl1E,KAAA6pF,cAAA3U,EAAAp2C,GAEA9+B,KAAA8nF,yBAAA77F,MACAg6F,GAAAU,eACAlpD,GAAA,EAAAhnB,SAAAmjE,GAAA,EAAArnF,yBAEAhH,IAAAgoC,EAAAqI,aACA57B,KAAA8nF,yBAAA77F,MACAg6F,GAAAW,iBACArzD,EAAAqI,YAAArI,EAAAyJ,UAAAzJ,EAAArK,QAAAqK,EAAA/J,SACA+J,EAAA7J,WAAA6J,EAAAnK,SAAAmK,EAAAjK,iBAGA,IAIA9mC,EAAAC,EAJA28B,EAAA81D,EAAAgE,WACA3zF,EAAA2vF,EAAAzxC,6BACA/9C,EAAAwvF,EAAAh6D,YACA11B,EAAA,EAEA,IAAAhD,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EACxCgD,EAAAwa,KAAAwuF,sBACAjpG,EAAAC,EAAA45B,EAAA58B,GAAAkD,GAEAsa,KAAAiqF,YAAA/U,EAAAp2C,KAOAyvD,GAAA9sG,UAAA2rG,OAAA,WACAptF,KAAAqsF,kCACArsF,KAAAuzB,MAAA,KAKA,IAAAnO,EAAAplB,KAAAolB,UACA,OAAAA,EAAA,CACA,IACA5iC,EAAAC,EADAJ,EAAA2d,KAAA3d,YAEA,IAAAG,EAAA,EAAAC,EAAAJ,EAAAK,OAAwCF,EAAAC,IAAQD,EAChDH,EAAAG,GAAA++C,GAAA,EAAA9P,KAAApvC,EAAAG,GAAA4iC,KAUAmpE,GAAA9sG,UAAAmtG,qBAAA,SAAA3tF,GACA,IAAAsyB,EAAAvzB,KAAAuzB,WAEAhoC,IADAgoC,EAAAwJ,WAEA/8B,KAAAysF,gBAAAl5D,EAAAvzB,KAAAssF,UAAArrF,QAEA1V,IAAAgoC,EAAAqI,aACA57B,KAAA2sF,kBAAAp5D,EAAAvzB,KAAAwsF,cAGA,IAAAsC,GAAA,GC7NAC,IAYAr+D,WAAA,SAAAy0D,EAAA5/F,EAAAC,EAAAC,EAAAC,GACA,IAKAlD,EAAAwsG,EAAAC,EAAAxmG,EAAAI,EAAAqmG,EAAAC,EAAAC,EAAAC,EALAC,EAAA9pG,EACA+pG,EAAA/pG,EACAgqG,EAAA,EACAp1F,EAAA,EACAzQ,EAAAnE,EAEA,IAAAhD,EAAAgD,EAAkBhD,EAAAiD,EAASjD,GAAAkD,EAAA,CAC3B,IAAAgD,EAAAnD,EAAA/C,GACAsG,EAAAvD,EAAA/C,EAAA,QACA+I,IAAA9C,IACA2mG,EAAA1mG,EAAAD,EACA4mG,EAAAvmG,EAAAD,EACAomG,EAAAhsG,KAAAgf,KAAAmtF,IAAAC,UACA9jG,IAAA2jG,IACA90F,GAAA40F,EACA/rG,KAAAwsG,MAAAP,EAAAE,EAAAD,EAAAE,IAAAL,EAAAC,IACA9J,IACA/qF,EAAAo1F,IACAA,EAAAp1F,EACAk1F,EAAA3lG,EACA4lG,EAAA/sG,GAEA4X,EAAA,EACAzQ,EAAAnH,EAAAkD,IAGAspG,EAAAC,EACAC,EAAAE,EACAD,EAAAE,GAEA5mG,EAAAC,EACAG,EAAAC,EAGA,OADAsR,GAAA60F,GACAO,GAAA7lG,EAAAnH,IAAA8sG,EAAAC,KAEAG,GAAA,GCrCAC,IAJA/9F,MAAA,QACAg+F,KAAA,QCeAC,GAAA,SACAzqE,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,GACAiG,GAAA/mG,KAAA0Z,KACAolB,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,GAMApnF,KAAAutF,gBAMAvtF,KAAA8vF,QAAA,KAMA9vF,KAAAm+B,MAAA,GAMAn+B,KAAAo3E,aAAA,EAMAp3E,KAAAq3E,aAAA,EAMAr3E,KAAAs3E,yBAAA/rF,EAMAyU,KAAAu3E,cAAA,EAMAv3E,KAAAy3E,eAAA,KAKAz3E,KAAA+vF,cAMA/vF,KAAA03E,iBAAA,KAKA13E,KAAAgwF,gBAMAhwF,KAAA23E,cAKA33E,KAAA8rF,cAMA9rF,KAAAiwF,SAAA,GAMAjwF,KAAAkwF,SAAA,GAMAlwF,KAAAmwF,WAAA,GAMAnwF,KAAAowF,WAEAxW,GAAA,EAAA1mF,WACAu0B,SAIA/jB,EAAA,EAAApiB,SAAAuuG,GAAAxC,IAUAwC,GAAAQ,kBAAA,SAAAz8F,EAAA08F,EAAAC,GACA,IAEAC,EAAAhuG,EAFAiuG,EAAAH,EAAA5tG,OACAwR,EAAA,EAEA,IAAA1R,EAAA,EAAaA,EAAAiuG,IAAcjuG,EAC3BguG,EAAA5W,GAAA,EAAA5jF,iBAAApC,EAAA08F,EAAA9tG,IACA0R,EAAAjR,KAAAK,IAAA4Q,EAAAs8F,GACAD,EAAAtkG,KAAAukG,GAEA,OAAAt8F,GAOA27F,GAAApuG,UAAA8zF,SAAA,SAAAt0E,EAAA69B,GACA,IAAAu6C,EAAAr5E,KAAAy3E,eACA8B,EAAAv5E,KAAA03E,iBACA+B,EAAAz5E,KAAA23E,WACA,QAAA33E,KAAAm+B,OAAAs7C,IAAAJ,GAAAE,GAAA,CAIA,IAMA/2F,EAAAC,EANAga,EAAAuD,KAAA3d,YAAAK,OAEAguG,EAAAzvF,EAAAM,UACAhc,EAAA,KACAE,EAAA,EACAC,EAAA,EAGA,GAAA+zF,EAAAkX,YAAAhB,GAAAC,KAAA,CACA,IAAA3lF,EAAA,EAAA9gB,WAAA6W,KAAAopF,uBAAAnoF,EAAAkD,aACA,OAEA,IAAA+a,EAGA,GAFA35B,EAAA0b,EAAAsZ,qBACA70B,EAAAub,EAAAia,YACAw1E,GAAAlvF,GAAA,EAAA3P,YACAqtB,GAAA35B,EAAA7C,aACK,GAAAguG,GAAAlvF,GAAA,EAAAvP,kBACLitB,EAAAje,EAAA0iC,eACK,GAAA+sD,GAAAlvF,GAAA,EAAAzP,QACLmtB,EAAAje,EAAA0iC,UAAA//C,MAAA,UACK,GAAA8sG,GAAAlvF,GAAA,EAAAtP,cAAA,CACL,IAAAktB,EAAAne,EAAAi4E,WAEA,IADAh6D,KACA18B,EAAA,EAAAC,EAAA28B,EAAA18B,OAAoCF,EAAAC,IAAQD,EAC5C08B,EAAAjzB,KAAAmzB,EAAA58B,GAAA,IAGAwd,KAAA6pF,cAAA5oF,EAAA69B,GAIA,IAHA,IAEA8xD,EAFAjX,EAAAF,EAAAE,UACAkX,EAAA,EAEAC,EAAA,EAAAC,EAAA7xE,EAAAx8B,OAAqCouG,EAAAC,IAAQD,EAAA,CAC7C,QAAAvlG,GAAAouF,EAAA,CACA,IAAAv8B,EAAAsyC,GAAAh/D,WACA+oD,EAAA0L,SAAA5/F,EAAAsrG,EAAA3xE,EAAA4xE,GAAAprG,GACAmrG,EAAAzzC,EAAA,GACAwzC,EAAAxzC,EAAA,QAEAwzC,EAAA1xE,EAAA4xE,GAEA,IAAAtuG,EAAAquG,EAA0BruG,EAAAouG,EAAapuG,GAAAkD,EACvCsa,KAAA3d,YAAA4J,KAAA1G,EAAA/C,GAAA+C,EAAA/C,EAAA,IAEAiD,EAAAua,KAAA3d,YAAAK,OACAmuG,EAAA3xE,EAAA4xE,GACA9wF,KAAAgxF,WAAAv0F,EAAAhX,EAAAua,KAAAutF,iBACA9wF,EAAAhX,EAEAua,KAAAiqF,YAAAhpF,EAAA69B,OAEG,CACH,IAAAmQ,EAAAjvC,KAAAk5B,SAAAl5B,KAAAm+B,MAAAn+B,KAAAiwF,SAAAjwF,KAAAkwF,SAAAlwF,KAAAmwF,YACAj8F,EAAA+6C,EAAA/6C,MAAA8L,KAAA81B,WACA,OAAA46D,GACA,KAAAlvF,GAAA,EAAA5P,MACA,KAAA4P,GAAA,EAAAxP,YAEAvM,GADAF,EAAA0b,EAAAsZ,sBACA73B,OACA,MACA,KAAA8e,GAAA,EAAA3P,YACAtM,EAAwD,EAAAszF,kBACxD,MACA,KAAAr3E,GAAA,EAAApP,OACA7M,EAAoD,EAAAyB,YACpD,MACA,KAAAwa,GAAA,EAAAvP,kBAEAxM,GADAF,EAA6D,EAAAyzF,oBAC7Dt2F,OACA,MACA,KAAA8e,GAAA,EAAAzP,QAEA,GADAxM,EAAqD,EAAAq+C,wBACrD61C,EAAA1M,UAAAxnF,EAAA,GAAAya,KAAAnY,WAAAqM,EACA,OAEAxO,EAAA,EACA,MACA,KAAA8b,GAAA,EAAAtP,cACA,IAAAowC,EAA6D,EAAA82C,wBAE7D,IADA7zF,KACA/C,EAAA,EAAAC,EAAA6/C,EAAA5/C,OAA+CF,EAAAC,EAAQD,GAAA,GACvDi3F,EAAA1M,UAAAzqC,EAAA9/C,EAAA,GAAAwd,KAAAnY,YAAAqM,IACA3O,EAAA0G,KAAAq2C,EAAA9/C,GAAA8/C,EAAA9/C,EAAA,IAIA,OADAiD,EAAAF,EAAA7C,QAEA,OAKA+C,EAAAua,KAAAgpF,sBAAAzjG,EAAA,EAAAE,EAAAC,GAAA,MACAsa,KAAA6pF,cAAA5oF,EAAA69B,IACA26C,EAAA6R,gBAAA7R,EAAA8R,oBACAvrF,KAAAw1E,mBAAAiE,EAAA6R,eAAA7R,EAAA8R,kBACAvrF,KAAAysF,gBAAAzsF,KAAAuzB,MAAAvzB,KAAAssF,UAAArrF,GACAjB,KAAA2sF,kBAAA3sF,KAAAuzB,MAAAvzB,KAAAwsF,cAEAxsF,KAAAixF,eAAAhiD,EAAAxyC,EAAAhX,GACAua,KAAAiqF,YAAAhpF,EAAA69B,MAYA+wD,GAAApuG,UAAAy3C,SAAA,SAAArlC,EAAA83F,EAAAF,EAAAC,GACA,IAAAz8C,EACA7iD,EAAAs/F,EAAAC,EAAA93F,EAAA43F,EAAAzrF,KAAA81B,WAEA5iC,EAAA0mF,GAAA,EAAA1mF,WACA,IAAAA,EAAA6zB,YAAA36B,GAAA,CACA,IAAAmtF,EAAAmS,EAAA1rF,KAAAgwF,aAAAtE,IAAA1rF,KAAA03E,iBAAA,KACA2B,EAAAoS,EAAAzrF,KAAA+vF,WAAAtE,IAAAzrF,KAAAy3E,eAAA,KACAgC,EAAAz5E,KAAA8rF,WAAAH,IAAA3rF,KAAA23E,WACA7hD,EAAA91B,KAAA81B,WACAxnC,EAAAmrF,EAAAnrF,MAAAwnC,EACAo7D,EAAAjK,GAAAD,WAAAvN,EAAAE,WAAAC,GAAA,EAAA9mF,kBACA+oC,EAAA6vD,GAAAnS,EAAAv8C,UAAAu8C,EAAAv8C,UAAA,EAEAszD,EAAAz8F,EAAA6f,MAAA,MACA+8E,EAAAH,EAAA5tG,OACA6tG,KACAr8F,EAAA27F,GAAAQ,kBAAA5W,EAAA7lF,KAAA08F,EAAAC,GACAY,EAAAvX,GAAA,EAAA5kF,kBAAAykF,EAAA7lF,MACAuB,EAAAg8F,EAAAV,EACAW,EAAAl9F,EAAA2nC,EACAlqC,EAAAsqC,EAAA,EAAAlnC,sBACA9R,KAAAiW,KAAAk4F,EAAA9iG,GACArL,KAAAiW,MAAA/D,EAAA0mC,GAAAvtC,IACA2gD,EAAAt9C,EAAAF,OACAyB,EAAArG,IAAAT,EAAA6iD,GACA,GAAA3gD,GACAqD,EAAArD,WAEAqD,EAAAiC,KAAA6lF,EAAA7lF,KACA83F,IACA/5F,EAAAiqC,YAAA29C,EAAA39C,YACAjqC,EAAAqrC,UAAAnB,GAAAE,EAAA,EAAAjvB,OAAAxe,EAAA,GACAqD,EAAAu3B,QAAAqwD,EAAArwD,QACAv3B,EAAA63B,SAAA+vD,EAAA/vD,SACA73B,EAAA+3B,WAAA6vD,EAAA7vD,WACAqS,EAAA,EAAA5uB,kBAAAosE,EAAAnwD,SAAA1mC,SACAiP,EAAA0b,YAAAksE,EAAAnwD,UACAz3B,EAAA23B,eAAAiwD,EAAAjwD,iBAGAmiE,IACA95F,EAAAorC,UAAAs8C,EAAAt8C,WAEAprC,EAAAkoF,aAAA,SACAloF,EAAAgoF,UAAA,SACA,IAEAn3F,EAFA6uG,EAAA,GAAAH,EACAptG,EAAAotG,EAAAjiD,EAAA/6C,MAAA5F,EAAA+iG,EAAAx1D,EAEA,GAAA6vD,EACA,IAAAlpG,EAAA,EAAiBA,EAAAiuG,IAAcjuG,EAC/BmP,EAAA2mF,WAAAgY,EAAA9tG,GAAAsB,EAAAutG,EAAAd,EAAA/tG,GAAA,IAAAq5C,EAAAs1D,GAAA3uG,EAAA2uG,GAGA,GAAA1F,EACA,IAAAjpG,EAAA,EAAiBA,EAAAiuG,IAAcjuG,EAC/BmP,EAAA4mF,SAAA+X,EAAA9tG,GAAAsB,EAAAutG,EAAAd,EAAA/tG,GAAA,IAAAq5C,EAAAs1D,GAAA3uG,EAAA2uG,GAIA,OAAAj+F,EAAAqP,IAAAnW,IAUAyjG,GAAApuG,UAAAwvG,eAAA,SAAAhiD,EAAAxyC,EAAAhX,GACA,IAAAg0F,EAAAz5E,KAAA23E,WACA4B,EAAAv5E,KAAA03E,iBACA5hD,EAAA91B,KAAA81B,WACAo7D,EAAAjK,GAAAD,WAAAvN,EAAAE,WAAAC,GAAA,EAAA9mF,kBACA04F,EAAAvE,GAAAD,WAAAvN,EAAAI,cACAh+C,EAAA09C,KAAAv8C,UAAAu8C,EAAAv8C,UAAA,EAEAluB,EAAAoiF,EAAAjiD,EAAA/6C,MAAA4hC,EAAA,MAAAo7D,GAAAr1D,EACA9sB,EAAAy8E,EAAAv8C,EAAA95C,OAAA2gC,EAAA,MAAA01D,GAAA3vD,EACA77B,KAAA2nF,aAAA17F,MAAAg6F,GAAAM,WAAA9pF,EAAAhX,EACAwpD,GAAAngC,EAAA9O,KAAAo3E,cAAAthD,GAAA/mB,EAAA/O,KAAAq3E,cAAAvhD,EACA91B,KAAAutF,gBAAAt+C,EAAA95C,OAAA,MAAA6K,KAAAs3E,oBAAAt3E,KAAAu3E,cACA,KAAAtoC,EAAA/6C,MACAulF,EAAAhkF,SAAAmkF,GAAA,EAAA5mF,eACA4mF,GAAA,EAAA5mF,eAAAymF,EAAAhkF,QAAAye,IAAA,SAAA6Y,GACA,OAAAA,EAAA+I,MAEA2jD,EAAA6R,iBAAA7R,EAAA8R,mBAEAvrF,KAAA8nF,yBAAA77F,MAAAg6F,GAAAM,WAAA9pF,EAAAhX,EACAwpD,GAAAngC,EAAA9O,KAAAo3E,cAAAthD,GAAA/mB,EAAA/O,KAAAq3E,cAAAvhD,EACA91B,KAAAutF,gBAAAt+C,EAAA95C,OAAA,MAAA6K,KAAAs3E,oBAAAt3E,KAAAu3E,cACA,EAAAzhD,GAAA,EAAAmZ,EAAA/6C,MAAAulF,EAAAhkF,UACAgkF,EAAA6R,iBAAA7R,EAAA8R,oBAWAsE,GAAApuG,UAAAuvG,WAAA,SAAAv0F,EAAAhX,EAAA6iG,GACA,IAAA/O,EAAAv5E,KAAA03E,iBACA+B,EAAAz5E,KAAA23E,WACA0B,EAAAr5E,KAAAy3E,eAEAiU,EAAA1rF,KAAAmwF,WACA5W,IACAmS,KAAA1rF,KAAAgwF,eACAhwF,KAAAgwF,aAAAtE,IACA9vD,YAAA29C,EAAA39C,YACA1S,QAAAqwD,EAAArwD,QACAI,eAAAiwD,EAAAjwD,eACA0T,UAAAu8C,EAAAv8C,UACAxT,SAAA+vD,EAAA/vD,SACAE,WAAA6vD,EAAA7vD,WACAN,SAAAmwD,EAAAnwD,YAIA,IAAAuiE,EAAA3rF,KAAAiwF,SACAjwF,KAAAiwF,YAAAjwF,KAAA8rF,aACA9rF,KAAA8rF,WAAA9rF,KAAAiwF,WACAr8F,KAAA6lF,EAAA7lF,KACA+lF,UAAAF,EAAAE,WAAAC,GAAA,EAAA9mF,iBACAxE,MAAAmrF,EAAAnrF,QAGA,IAAAm9F,EAAAzrF,KAAAkwF,SACA7W,IACAoS,KAAAzrF,KAAA+vF,aACA/vF,KAAA+vF,WAAAtE,IACA1uD,UAAAs8C,EAAAt8C,aAKA,IAAAjH,EAAA91B,KAAA81B,WACA01D,EAAAvE,GAAAD,WAAAvN,EAAAI,cAEAzjF,EAAA4J,KAAAq3E,aAAAvhD,EACAjiC,EAAAmM,KAAAm+B,MACAvqC,EAAA6lF,EAAA7lF,KACA+nF,EAAAlC,EAAAnrF,MACAutC,EAAA09C,IAAAv8C,UAAA2+C,EAAA,IACA4U,EAAAvwF,KAAAowF,QAAAx8F,GACA28F,IACAvwF,KAAAowF,QAAAx8F,GAAA28F,MAEAvwF,KAAA2nF,aAAA17F,MAAAg6F,GAAAK,WACA7pF,EAAAhX,EAAA+lG,EAAAlD,EACA7O,EAAA1M,SAAA0e,EAAAhS,EAAA0L,SACA,SAAAtxF,GACA,IAAAK,EAAAq8F,EAAA18F,GAIA,OAHAK,IACAA,EAAAq8F,EAAA18F,GAAA+lF,GAAA,EAAA5jF,iBAAApC,EAAAC,IAEAK,EAAAynF,EAAA7lD,GAEA1/B,EAAAs1F,EAAA7vD,EAAA/F,EAAAjiC,EAAA83F,EAAA,IAEA3rF,KAAA8nF,yBAAA77F,MAAAg6F,GAAAK,WACA7pF,EAAAhX,EAAA+lG,EAAAlD,EACA7O,EAAA1M,SAAA0e,EAAAhS,EAAA0L,SACA,SAAAtxF,GACA,IAAAK,EAAAq8F,EAAA18F,GAIA,OAHAK,IACAA,EAAAq8F,EAAA18F,GAAA+lF,GAAA,EAAA5jF,iBAAApC,EAAAC,IAEAK,EAAAynF,GAEAvlF,EAAAs1F,EAAA7vD,EAAAhoC,EAAA83F,EAAA,EAAA71D,KAQA+5D,GAAApuG,UAAAm0F,aAAA,SAAAC,EAAAyS,GACA,IAAA7O,EAAAJ,EAAAE,EACA,GAAA1D,EAEG,CACH71E,KAAAutF,gBAAwD,EAExD,IAAA9S,EAAA5E,EAAAx6C,UACAo/C,IAGApB,EAAAr5E,KAAAy3E,kBAEA4B,EAAAr5E,KAAAy3E,mBAEA4B,EAAAt8C,UAAAjB,GAAA,EAAAjkB,YACA4iE,EAAA5wD,YAAA+vD,GAAA,EAAArnF,mBAPA8mF,EAAAr5E,KAAAy3E,eAAA,KAUA,IAAAkD,EAAA9E,EAAAp6C,YACA,GAAAk/C,EAEK,EACLpB,EAAAv5E,KAAA03E,oBAEA6B,EAAAv5E,KAAA03E,qBAEA,IAAAtuD,EAAAuxD,EAAA5wD,cACAT,EAAAqxD,EAAA3wD,oBACAgT,EAAA29C,EAAA7zF,WACA4iC,EAAAixD,EAAAzwD,gBACAqvD,EAAArwD,QAAAyxD,EAAA7wD,cAAA8vD,GAAA,EAAApnF,eACA+mF,EAAAnwD,aAAAxlC,QAAAg2F,GAAA,EAAAnnF,gBACA8mF,EAAAjwD,oBACA/9B,IAAA+9B,EAAAswD,GAAA,EAAAlnF,sBAAA42B,EACAiwD,EAAA/vD,SAAAmxD,EAAA1wD,eAAA2vD,GAAA,EAAAjnF,gBACA4mF,EAAAv8C,eACAzxC,IAAAyxC,EAAA48C,GAAA,EAAA3mF,iBAAA+pC,EACAu8C,EAAA7vD,gBACAn+B,IAAAm+B,EAAAkwD,GAAA,EAAAhnF,kBAAA82B,EACA6vD,EAAA39C,YAAAE,GAAA,EAAAjkB,YACA8iE,EAAA9wD,YAAA+vD,GAAA,EAAA/mF,yBApBA0mF,EAAAv5E,KAAA03E,iBAAA,KAuBA+B,EAAAz5E,KAAA23E,WACA,IAAA/jF,EAAAiiF,EAAAuF,WAAAxB,GAAA,EAAAtnF,YACAsnF,GAAA,EAAArmF,UAAAK,GACA,IAAA+nF,EAAA9F,EAAA98C,WACA0gD,EAAA1M,SAAA8I,EAAAyb,cACA7X,EAAA7lF,OACA6lF,EAAA0L,SAAAtP,EAAA0b,cACA9X,EAAAkX,UAAA9a,EAAA2b,eACA/X,EAAAE,UAAA9D,EAAAiG,eACArC,EAAAI,aAAAhE,EAAAmG,mBAAApC,GAAA,EAAA7mF,oBACA0mF,EAAA6R,eAAAzV,EAAA4b,oBACAhY,EAAA8R,iBAAA1V,EAAA6b,sBACAjY,EAAAhkF,QAAAogF,EAAA8b,cAAA/X,GAAA,EAAA5mF,eACAymF,EAAAnrF,WAAA/C,IAAAowF,EAAA,EAAAA,EAEA,IAAAN,EAAAxF,EAAAyF,aACAC,EAAA1F,EAAA2F,aACAC,EAAA5F,EAAAh9C,oBACA6iD,EAAA7F,EAAA/8C,cACA94B,KAAAm+B,MAAA03C,EAAAv3C,WAAA,GACAt+B,KAAAo3E,kBAAA7rF,IAAA8vF,EAAA,EAAAA,EACAr7E,KAAAq3E,kBAAA9rF,IAAAgwF,EAAA,EAAAA,EACAv7E,KAAAs3E,yBAAA/rF,IAAAkwF,KACAz7E,KAAAu3E,mBAAAhsF,IAAAmwF,EAAA,EAAAA,EAEA17E,KAAAmwF,WAAA5W,GACA,iBAAAA,EAAA39C,YAAA29C,EAAA39C,YAAAl4B,EAAA,EAAA5hB,OAAAy3F,EAAA39C,cACA29C,EAAArwD,QAAAqwD,EAAAjwD,eAAA,IAAAiwD,EAAAv8C,UACAu8C,EAAA/vD,SAAA+vD,EAAA7vD,WAAA,IAAA6vD,EAAAnwD,SAAApQ,OAAA,IACA,GACAhZ,KAAAiwF,SAAAxW,EAAA7lF,KAAA6lF,EAAAnrF,OAAAmrF,EAAAE,WAAA,KACA35E,KAAAkwF,SAAA7W,EACA,iBAAAA,EAAAt8C,UAAAs8C,EAAAt8C,UAAA,IAAAr5B,EAAA,EAAA5hB,OAAAu3F,EAAAt8C,WACA,QA1EA/8B,KAAAm+B,MAAA,IA6EA,IAAAyzD,GAAA,GCjgBAC,GAAA,SACAzsE,EAAA+hE,EAAAt/F,EAAAiuC,EAAA+gC,EAAAuwB,EAAA0K,GACApN,GAAAp+F,KAAA0Z,MAMAA,KAAA+xF,eAAA3K,EAMApnF,KAAAutF,gBAAA,KAMAvtF,KAAAgyF,WAAA5sE,EAMAplB,KAAAiyF,WAAA9K,EAMAnnF,KAAA42D,UAAAC,EAMA72D,KAAAy7C,YAAA3lB,EAMA91B,KAAAkyF,YAAArqG,EAMAmY,KAAAouD,cAAA0jC,EAOA9xF,KAAAmyF,oBAMAnyF,KAAAoyF,qBAAAn2D,EAAA,EAAAlnC,sBAAA,KAMAiL,KAAAqyF,uBAAA/lB,GAAA,EAAA3qF,UAGA+hB,EAAA,EAAApiB,SAAAuwG,GAAAnN,IASAmN,GAAAS,mBACAC,KAAA,KAYAV,GAAAW,4BAAA,SAAAriF,EAAArsB,EAAAC,GACA,IAAAvB,EACAud,EAAA9c,KAAA46B,MAAA1N,EAAAztB,OAAA,GACA,GAAAoB,GAAAic,EACA,IAAAvd,EAAAud,EAAoBvd,EAAAsB,EAAOtB,IAC3B2tB,EAAA3tB,GAAAuB,IAAA,OAEG,GAAAD,EAAAic,EACH,IAAAvd,EAAAsB,EAAA,EAAmBtB,EAAAud,EAAYvd,IAC/B2tB,EAAA3tB,GAAAuB,IAAA,GAeA8tG,GAAAY,gBAAA,SAAA1yF,GACA,QAAAxU,IAAAsmG,GAAAS,kBAAAvyF,GACA,OAAA8xF,GAAAS,kBAAAvyF,GAKA,IAFA,IAAA2yF,EAAA,EAAA3yF,EAAA,EACA1D,EAAA,IAAA3P,MAAAgmG,GACAlwG,EAAA,EAAiBA,EAAAkwG,EAAelwG,IAChC6Z,EAAA7Z,GAAA,IAAAkK,MAAAgmG,GAOA,IAJA,IAAA5uG,EAAAic,EACAhc,EAAA,EACA4uG,EAAA,EAEA7uG,GAAAC,GACA8tG,GAAAW,4BAAAn2F,EAAA0D,EAAAjc,EAAAic,EAAAhc,GACA8tG,GAAAW,4BAAAn2F,EAAA0D,EAAAhc,EAAAgc,EAAAjc,GACA+tG,GAAAW,4BAAAn2F,EAAA0D,EAAAhc,EAAAgc,EAAAjc,GACA+tG,GAAAW,4BAAAn2F,EAAA0D,EAAAjc,EAAAic,EAAAhc,GACA8tG,GAAAW,4BAAAn2F,EAAA0D,EAAAjc,EAAAic,EAAAhc,GACA8tG,GAAAW,4BAAAn2F,EAAA0D,EAAAhc,EAAAgc,EAAAjc,GACA+tG,GAAAW,4BAAAn2F,EAAA0D,EAAAhc,EAAAgc,EAAAjc,GACA+tG,GAAAW,4BAAAn2F,EAAA0D,EAAAjc,EAAAic,EAAAhc,GAIA,IADA4uG,GAAA,MADA5uG,GAEAD,GAAA,MAEA6uG,GAAA,KADA7uG,GAAA,IAMA,OADA+tG,GAAAS,kBAAAvyF,GAAA1D,EACAA,GASAw1F,GAAAe,gBAAA,SAAAC,EAAAlhG,EAAA7J,GAGA,IAFA,IAAAq8F,EAAAziG,OAAAmK,KAAAgnG,GAAA3+E,IAAAmD,QAAA/Z,KAAA6S,EAAA,EAAAnU,2BACA81E,KACA35D,EAAA,EAAA26E,EAAA3O,EAAAzhG,OAAiCy1B,EAAA26E,IAAQ36E,EAEzC,IADA,IAAA46E,EAAAF,EAAA1O,EAAAhsE,GAAAzB,YACAl0B,EAAA,EAAAC,EAAAswG,EAAArwG,OAA2CF,EAAAC,GAAQ,CACnD,IAAAypG,EAAA6G,EAAAvwG,KACAoK,EAAAmmG,EAAAvwG,KACA0pG,SAAAv6F,EAAA/E,EAAA9E,EAAAgqF,KAUA+f,GAAApwG,UAAAuxG,aAAA,SAAAC,GACA,IAAA9kC,EAAA,KAUA,OATAnuD,KAAA+xF,iBACAkB,GACA9kC,EAAAnuD,KAAAutF,iBACwB,MAExBp/B,EAAAnuD,KAAAutF,gBAAAtjF,EAAA,EAAA1nB,eACA0J,KAAA,IAGAkiE,GAQA0jC,GAAApwG,UAAAq2D,KAAA,SAAAnmD,EAAA/E,GACA,IAAAsmG,EAAAlzF,KAAAmzF,cAAAvmG,GACA+E,EAAAirC,YACAjrC,EAAAkmD,OAAAq7C,EAAA,GAAAA,EAAA,IACAvhG,EAAAmrC,OAAAo2D,EAAA,GAAAA,EAAA,IACAvhG,EAAAmrC,OAAAo2D,EAAA,GAAAA,EAAA,IACAvhG,EAAAmrC,OAAAo2D,EAAA,GAAAA,EAAA,IACAvhG,EAAAmmD,QAQA+5C,GAAApwG,UAAA2xG,WAAA,SAAAC,GACA,QAAAv9E,KAAA9V,KAAAmyF,iBAEA,IADA,IAAA1S,EAAAz/E,KAAAmyF,iBAAAr8E,GACAtzB,EAAA,EAAAC,EAAA4wG,EAAA3wG,OAAwCF,EAAAC,IAAQD,EAChD,GAAA6wG,EAAA7wG,KAAAi9F,EACA,SAIA,UAOAoS,GAAApwG,UAAA2rG,OAAA,WACA,IAAA16D,EACA,IAAAA,KAAA1yB,KAAAmyF,iBAAA,CACA,IACAmB,EADAD,EAAArzF,KAAAmyF,iBAAAz/D,GAEA,IAAA4gE,KAAAD,EACAA,EAAAC,GAAAlG,WAoBAyE,GAAApwG,UAAAkyC,2BAAA,SACAxvC,EAAA0D,EAAAC,EAAAunF,EAAAkb,EAAApkG,EAAA0sG,GAGA,IAkBAU,EAlBAC,EAAA,GADAnkB,EAAApsF,KAAAyuC,MAAA29C,IACA,EACAziF,EAAA0/E,GAAA,EAAA99E,QAAAwR,KAAAqyF,uBACAhjB,EAAA,GAAAA,EAAA,GACA,EAAAxnF,GAAA,EAAAA,GACAC,GACA3D,EAAA,IAAAA,EAAA,IACAwN,EAAAqO,KAAAoyF,qBAEAzgG,EAAAF,OAAAyC,QAAAs/F,GAAA7hG,EAAAF,OAAA0D,SAAAq+F,GACA7hG,EAAAF,OAAAyC,MAAAs/F,EACA7hG,EAAAF,OAAA0D,OAAAq+F,GAEA7hG,EAAAmtF,UAAA,IAAA0U,UAOAjoG,IAAAyU,KAAAouD,gBACAmlC,EAAAtpF,EAAA,EAAA1nB,cACA0nB,EAAA,EAAAtnB,iBAAA4wG,EAAApvG,GACA8lB,EAAA,EAAAxmB,OAAA8vG,EAAA1rG,GAAAmY,KAAAouD,cAAAihB,GAAAkkB,IAGA,IACAE,EAOAhP,EARA5rE,EAAAg5E,GAAAY,gBAAApjB,GAcA,SAAAmb,EAAA1rD,GAEA,IADA,IAAAigD,EAAAptF,EAAAqtF,aAAA,IAAAwU,KAAA92F,KACAla,EAAA,EAAmBA,EAAAgxG,EAAiBhxG,IACpC,QAAAwX,EAAA,EAAqBA,EAAAw5F,EAAiBx5F,IAAA,CAGtC,IAAAwd,EAFA,GAAAqB,EAAAr2B,GAAAwX,GACA,GAAA+kF,EAAA,GAAA/kF,EAAAw5F,EAAAhxG,GAAA,KAMA,QAJAixG,GAAAhP,GAAAE,GAAApzE,OAAAkzE,GAAAE,GAAAn0B,OACA,IAAAijC,EAAApnG,QAAAyyC,MACAtnB,EAAArxB,EAAA24C,IAEAtnB,QAGA7lB,EAAAmtF,UAAA,IAAA0U,MA1BAxzF,KAAA+xF,iBACA0B,EAAAzzF,KAAA+xF,eAAAxpE,MAAArU,IAAA,SAAA8S,GACA,OAAAA,EAAAtjC,SAkCA,IAGAlB,EAAAwX,EAAAq5F,EAAAnH,EAAA10E,EAHA2sE,EAAAziG,OAAAmK,KAAAmU,KAAAmyF,kBAAAj+E,IAAAmD,QAIA,IAHA8sE,EAAA7mF,KAAA6S,EAAA,EAAAnU,2BAGAxZ,EAAA2hG,EAAAzhG,OAAA,EAAyBF,GAAA,IAAQA,EAAA,CACjC,IAAAkxG,EAAAvP,EAAA3hG,GAAAk0B,WAEA,IADA28E,EAAArzF,KAAAmyF,iBAAAuB,GACA15F,EAAAitF,GAAAF,MAAArkG,OAAA,EAAiDsX,GAAA,IAAQA,EAGzD,QAAAzO,KADA2gG,EAAAmH,EADA5O,EAAAwC,GAAAF,MAAA/sF,KAGA,IAAA64F,GACApO,GAAAE,GAAApzE,OAAAkzE,GAAAE,GAAAn0B,MAUA,GAFAh5C,EAAA00E,EAAAC,mBAAAx6F,EAAA/E,EAAA9E,EACAyiG,EAAAC,EAAA+I,GAEA,OAAA/7E,MAXA,CACA,IAAA22C,EAAA0kC,EAAAa,GACAvlC,EAGAA,EAAAliE,KAAAigG,EAAAt/F,EAAAhJ,MAAA,IAFAivG,EAAAa,IAAAxH,EAAAt/F,EAAAhJ,MAAA,OAsBAiuG,GAAApwG,UAAA0xG,cAAA,SAAAvmG,GACA,IAAAu6F,EAAAnnF,KAAAiyF,WACAjvG,EAAAmkG,EAAA,GACA/jG,EAAA+jG,EAAA,GACA9jG,EAAA8jG,EAAA,GACA5jG,EAAA4jG,EAAA,GACA+L,GAAAlwG,EAAAI,EAAAJ,EAAAO,EAAAF,EAAAE,EAAAF,EAAAD,GAGA,OAFA40F,GAAA,EAAAtpE,YACAwkF,EAAA,MAAAtmG,EAAAsmG,GACAA,GAOArB,GAAApwG,UAAA+iG,UAAA,SAAA1uE,EAAA2uE,GACA,IAAAiP,OAAAnoG,IAAAuqB,IAAAY,WAAA,IACA28E,EAAArzF,KAAAmyF,iBAAAuB,QACAnoG,IAAA8nG,IACAA,KACArzF,KAAAmyF,iBAAAuB,GAAAL,GAEA,IAAAnH,EAAAmH,EAAA5O,QACAl5F,IAAA2gG,IAEAA,EAAA,IAAAyH,EADA9B,GAAA+B,oBAAAnP,IACAzkF,KAAAgyF,WAAAhyF,KAAAiyF,WACAjyF,KAAAkyF,YAAAlyF,KAAAy7C,YAAAz7C,KAAA42D,UAAA52D,KAAA+xF,gBACAsB,EAAA5O,GAAAyH,GAEA,OAAAA,GAOA2F,GAAApwG,UAAAoyG,WAAA,WACA,OAAA7zF,KAAAmyF,kBAOAN,GAAApwG,UAAAoF,QAAA,WACA,OAAA9E,EAAA,EAAA8E,QAAAmZ,KAAAmyF,mBAeAN,GAAApwG,UAAAyqG,OAAA,SAAAv6F,EACA/E,EAAAopF,EAAAuU,EAAAuJ,EAAAC,GAGA,IAAA5P,EAAAziG,OAAAmK,KAAAmU,KAAAmyF,kBAAAj+E,IAAAmD,QACA8sE,EAAA7mF,KAAA6S,EAAA,EAAAnU,2BAIArK,EAAA8lD,OACAz3C,KAAA83C,KAAAnmD,EAAA/E,GAEA,IACApK,EAAAC,EAAAuX,EAAAoH,EAAAiyF,EAAAnH,EADA8H,EAAAF,GAAA7M,GAAAF,MAEA,IAAAvkG,EAAA,EAAAC,EAAA0hG,EAAAzhG,OAA6BF,EAAAC,IAAQD,EAAA,CACrC,IAAAkxG,EAAAvP,EAAA3hG,GAAAk0B,WAEA,IADA28E,EAAArzF,KAAAmyF,iBAAAuB,GACA15F,EAAA,EAAAoH,EAAA4yF,EAAAtxG,OAAwCsX,EAAAoH,IAAQpH,EAAA,CAChD,IAAAyqF,EAAAuP,EAAAh6F,GAEA,QAAAzO,KADA2gG,EAAAmH,EAAA5O,IAEA,IAAAsP,GACAtP,GAAAE,GAAApzE,OAAAkzE,GAAAE,GAAAn0B,KAQA07B,SAAAv6F,EAAA/E,EAAAopF,EAAAuU,OARA,CACA,IAAAp8B,EAAA4lC,EAAAL,GACAvlC,EAGAA,EAAAliE,KAAAigG,EAAAt/F,EAAAhJ,MAAA,IAFAmwG,EAAAL,IAAAxH,EAAAt/F,EAAAhJ,MAAA,MAWA+N,EAAAomD,WAWA85C,GAAA+B,qBACAK,OAAAnF,GACAoF,QAAA7G,GACAt8C,MAAAk9C,GACAkG,WAAA7F,GACA8F,QAAAtF,GACAuF,KAAAzC,IAEA,IAAA0C,GAAA,GCpfAC,IAQAC,aAAA,SAAAC,EAAAC,GACA,OAAAhxF,EAAA,EAAA5hB,OAAA2yG,GAAA/wF,EAAA,EAAA5hB,OAAA4yG,IASAC,oBAAA,SAAA9sG,EAAAiuC,GACA,IAAA1Q,EAAAmvE,GAAAK,aAAA/sG,EAAAiuC,GACA,OAAA1Q,KASAwvE,aAAA,SAAA/sG,EAAAiuC,GACA,OAAApyB,EAAA,EAAAziB,mBAAA4G,EAAAiuC,GAWA++D,sBAAA,SAAAC,EAAA7zF,EAAA1L,EAAAupC,GACA,IAAA/B,EAAAxnC,EAAA8lC,UACAO,EAAArmC,EAAAkmC,YACA,GAAAsB,GAAAnB,EAAA,CACA,IAAAm5D,EAAAD,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAvyF,QACA2iG,EAAAvf,mBAAAz4C,EAAAnB,GACAm5D,EAAAzgB,WAAArzE,EAAA69B,GAEA,IAAA+2C,EAAAtgF,EAAA+oC,UACA,GAAAu3C,EAAA,CACA,IAAAmf,EAAAF,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAn0B,MACAwkC,EAAApf,aAAAC,EAAAif,EAAA9B,cAAA,IACAgC,EAAAzf,SAAAt0E,EAAA69B,KAeAm2D,cAAA,SACAH,EAAAh2D,EAAAvpC,EAAAolB,EAAAjwB,EAAAkvC,GACA,IACA87C,EAAAiH,EADAuY,GAAA,EAoBA,OAlBAxf,EAAAngF,EAAA2jC,eAEAyjD,EAAAjH,EAAAt8C,kBACAsC,GAAA,EAAAjjC,QACAkkF,GAAAjhD,GAAA,EAAAlkC,MACAk+E,EAAA77C,oBAAAnvC,EAAAkvC,IAEA+iD,GAAAjhD,GAAA,EAAAnjC,MACAm9E,EAAA1tD,OAEA20D,EAAAjH,EAAAt8C,gBACAs8C,EAAA/7C,kBAAAjvC,EAAAkvC,GACAs7D,GAAA,IAGAX,GAAAY,eAAAL,EAAAh2D,EAAAvpC,EACAolB,GAEAu6E,GAWAC,eAAA,SACAL,EAAAh2D,EAAAvpC,EAAAolB,GACA,IAAA1Z,EAAA1L,EAAAkpC,qBAAAlpC,CAAAupC,GACA,GAAA79B,EAAA,CAGA,IAAA+Z,EAAA/Z,EAAAyZ,sBAAAC,GAEA,GADAplB,EAAAgpC,cAEAg2D,GAAAa,gBAAAN,EAAA95E,EAAAzlB,EAAAupC,QAIAu2D,EADAd,GAAAe,oBAAAt6E,EAAAzZ,YACAuzF,EAAA95E,EAAAzlB,EAAAupC,KAYAs2D,gBAAA,SAAAN,EAAA7zF,EAAA1L,EAAAupC,GACA,GAAA79B,EAAAM,WAAAC,GAAA,EAAArP,oBAOA2iG,EAAAtQ,UAAAjvF,EAAA2hC,YAAAytD,GAAAC,SACAxQ,WAAsD,EAAAt1C,EAAAvpC,EAAAgpC,oBANtD,IADA,IAAA58B,EAA2D,EAAAC,gBAC3Dpf,EAAA,EAAAC,EAAAkf,EAAAjf,OAA2CF,EAAAC,IAAQD,EACnD+xG,GAAAa,gBAAAN,EAAAnzF,EAAAnf,GAAA+S,EAAAupC,IAgBAy2D,kCAAA,SAAAT,EAAA7zF,EAAA1L,EAAAupC,GACA,IACAt8C,EAAAC,EADAkf,EAAAV,EAAA03E,qBAEA,IAAAn2F,EAAA,EAAAC,EAAAkf,EAAAjf,OAAqCF,EAAAC,IAAQD,EAAA,EAG7C6yG,EADAd,GAAAe,oBAAA3zF,EAAAnf,GAAA+e,YACAuzF,EAAAnzF,EAAAnf,GAAA+S,EAAAupC,KAYA02D,0BAAA,SAAAV,EAAA7zF,EAAA1L,EAAAupC,GACA,IAAAlD,EAAArmC,EAAAkmC,YACA,GAAAG,EAAA,CACA,IAAA65D,EAAAX,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAA9yF,aACA4jG,EAAAjgB,mBAAA,KAAA55C,GACA65D,EAAA9gB,eAAA1zE,EAAA69B,GAEA,IAAA+2C,EAAAtgF,EAAA+oC,UACA,GAAAu3C,EAAA,CACA,IAAAmf,EAAAF,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAn0B,MACAwkC,EAAApf,aAAAC,EAAAif,EAAA9B,cAAA,IACAgC,EAAAzf,SAAAt0E,EAAA69B,KAYA42D,+BAAA,SAAAZ,EAAA7zF,EAAA1L,EAAAupC,GACA,IAAAlD,EAAArmC,EAAAkmC,YACA,GAAAG,EAAA,CACA,IAAA65D,EAAAX,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAA9yF,aACA4jG,EAAAjgB,mBAAA,KAAA55C,GACA65D,EAAA5gB,oBAAA5zE,EAAA69B,GAEA,IAAA+2C,EAAAtgF,EAAA+oC,UACA,GAAAu3C,EAAA,CACA,IAAAmf,EAAAF,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAn0B,MACAwkC,EAAApf,aAAAC,EAAAif,EAAA9B,cAAA,IACAgC,EAAAzf,SAAAt0E,EAAA69B,KAYA62D,4BAAA,SAAAb,EAAA7zF,EAAA1L,EAAAupC,GACA,IAAA/B,EAAAxnC,EAAA8lC,UACAO,EAAArmC,EAAAkmC,YACA,GAAAG,GAAAmB,EAAA,CACA,IAAA64D,EAAAd,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAA5yF,SACA6jG,EAAApgB,mBAAAz4C,EAAAnB,GACAg6D,EAAA3gB,iBAAAh0E,EAAA69B,GAEA,IAAA+2C,EAAAtgF,EAAA+oC,UACA,GAAAu3C,EAAA,CACA,IAAAmf,EAAAF,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAn0B,MACAwkC,EAAApf,aAAAC,EAAAif,EAAA9B,cAAA,IACAgC,EAAAzf,SAAAt0E,EAAA69B,KAYA+2D,qBAAA,SAAAf,EAAA7zF,EAAA1L,EAAAupC,GACA,IAAA42C,EAAAngF,EAAA2jC,WACA,GAAAw8C,EAAA,CACA,GAAAA,EAAAt8C,iBAAAsC,GAAA,EAAAjjC,OACA,OAEA,IAAAq9F,EAAAhB,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAApzE,OACAukF,EAAArgB,cAAAC,EAAAof,EAAA9B,cAAA,IACA8C,EAAA3gB,UAAAl0E,EAAA69B,GAEA,IAAA+2C,EAAAtgF,EAAA+oC,UACA,GAAAu3C,EAAA,CACA,IAAAmf,EAAAF,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAn0B,MACAwkC,EAAApf,aAAAC,EAAAif,EAAA9B,eAAAtd,IACAsf,EAAAzf,SAAAt0E,EAAA69B,KAYAi3D,0BAAA,SAAAjB,EAAA7zF,EAAA1L,EAAAupC,GACA,IAAA42C,EAAAngF,EAAA2jC,WACA,GAAAw8C,EAAA,CACA,GAAAA,EAAAt8C,iBAAAsC,GAAA,EAAAjjC,OACA,OAEA,IAAAq9F,EAAAhB,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAApzE,OACAukF,EAAArgB,cAAAC,EAAAof,EAAA9B,cAAA,IACA8C,EAAA/gB,eAAA9zE,EAAA69B,GAEA,IAAA+2C,EAAAtgF,EAAA+oC,UACA,GAAAu3C,EAAA,CACA,IAAAmf,EAAAF,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAn0B,MACAwkC,EAAApf,aAAAC,EAAAif,EAAA9B,eAAAtd,IACAsf,EAAAzf,SAAAt0E,EAAA69B,KAYAk3D,uBAAA,SAAAlB,EAAA7zF,EAAA1L,EAAAupC,GACA,IAAA/B,EAAAxnC,EAAA8lC,UACAO,EAAArmC,EAAAkmC,YACA,GAAAsB,GAAAnB,EAAA,CACA,IAAAg6D,EAAAd,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAA5yF,SACA6jG,EAAApgB,mBAAAz4C,EAAAnB,GACAg6D,EAAAvgB,YAAAp0E,EAAA69B,GAEA,IAAA+2C,EAAAtgF,EAAA+oC,UACA,GAAAu3C,EAAA,CACA,IAAAmf,EAAAF,EAAAtQ,UACAjvF,EAAA2hC,YAAAytD,GAAAn0B,MACAwkC,EAAApf,aAAAC,EAAAif,EAAA9B,cAAA,IACAgC,EAAAzf,SAAAt0E,EAAA69B,MAYAy1D,GAAAe,qBACAW,MAAA1B,GAAAsB,qBACA1B,WAAAI,GAAAiB,0BACApB,QAAAG,GAAAyB,uBACAE,WAAA3B,GAAAwB,0BACAI,gBAAA5B,GAAAmB,+BACAU,aAAA7B,GAAAoB,4BACAU,mBAAA9B,GAAAgB,kCACAtB,OAAAM,GAAAM,uBAEA,IAAAyB,GAAA,GC7TAC,GAAA,SAAAC,GAEAnY,GAAA/3F,KAAA0Z,KAAAw2F,GAMAx2F,KAAA+xF,eAAAyE,EAAA1nC,eACA2nC,KAAA,QAMAz2F,KAAA02F,QAAA,EAMA12F,KAAA22F,mBAAA,EAMA32F,KAAA42F,oBAAAr2D,IAMAvgC,KAAA8iF,gBAAA74E,EAAA,EAAA1nB,cAMAyd,KAAA62F,qBAAA,KAMA72F,KAAA82F,aAAA,KAMA92F,KAAAkgF,oBAAA,EAKAlgF,KAAArO,QAAAsqC,EAAA,EAAAlnC,wBAEAwvE,EAAA,EAAAz4E,OAAA8tF,GAAA,EAAA1mF,WAAA+1E,EAAA,EAAA/xE,MAAA8I,KAAA+2F,oBAAA/2F,OAIA0D,EAAA,EAAApiB,SAAAi1G,GAAAlY,IASAkY,GAAA,iBAAAnrG,EAAAyrC,GACA,OAAAzrC,IAAAqgF,GAAAr+D,QAAAypB,EAAAt1B,YAAA4uD,GAAA,EAAAz+C,QAUA6kF,GAAA,gBAAA/W,EAAA3oD,GACA,WAAA0/D,GAAyE,IAOzEA,GAAA90G,UAAAgxB,gBAAA,WACA8xD,EAAA,EAAAp4E,SAAAytF,GAAA,EAAA1mF,WAAA+1E,EAAA,EAAA/xE,MAAA8I,KAAA+2F,oBAAA/2F,MACAq+E,GAAA58F,UAAAgxB,gBAAAnsB,KAAA0Z,OAOAu2F,GAAA90G,UAAA08F,aAAA,SAAApoE,EAAArB,EAAA/iB,GAEA,IAAArP,EAAAyzB,EAAAzzB,OACAwzC,EAAA/f,EAAA+f,WACAg8C,EAAAp9D,EAAAmB,QACAE,EAAA+7D,sBACA7hC,EAAAl6B,EAAAk6B,UACA3uC,EAAA2uC,EAAA3uC,WACAxZ,EAAAmoD,EAAAnoD,SACAm7B,EAAA3hB,EAAA6C,YACA6yF,EAAiDh3F,KAAAu8E,WAAApnE,YAEjDvoB,EAAAoT,KAAAyJ,aAAAsM,EAAA,GAEA/V,KAAAi+E,WAAAtsF,EAAAokB,EAAAnpB,GAGA,IAAAqqG,EAAAviF,EAAApyB,OACAm8F,OAAAlzF,IAAA0rG,EACAxY,GACAz+E,KAAA83C,KAAAnmD,EAAAokB,EAAyD,GAEzD,IAAA++E,EAAA90F,KAAA82F,aACA,GAAAhC,MAAAjuG,UAAA,CACAmZ,KAAA+xF,gBACA/xF,KAAA+xF,eAAAnmG,QAEA,IAGAsrG,EAHArgE,EAA2C72B,KAAAu8E,WAC3C4a,EAAA,EACAC,EAAA,EAEAC,EAAA,IAAA3iF,EAAAle,QACA8gG,EAAAzgE,EAAAlkB,YAAAqrE,GAAA,EAAArmE,QACA,GAAA0/E,GAAAC,EAAA,CACA,IAAAC,EAAA5lG,EAAAF,OAAAyC,MACAsjG,EAAA7lG,EAAAF,OAAA0D,OACA,GAAArN,EAAA,CACA,IAAA2vG,EAAAx0G,KAAAyuC,MAAAzuC,KAAAgf,KAAAs1F,IAAAC,MACAL,GAAAM,EAAAF,GAAA,EACAH,GAAAK,EAAAD,GAAA,EACAD,EAAAC,EAAAC,EAGAz3F,KAAArO,QAAAF,OAAAyC,MAAAqjG,EACAv3F,KAAArO,QAAAF,OAAA0D,OAAAqiG,EACAN,EAAAl3F,KAAArO,aAEAulG,EAAAvlG,EAGA,IAAAmF,EAAAogG,EAAAngG,YACAsgG,IAIAH,EAAAngG,YAAA2d,EAAAle,SAGA0gG,GAAAvlG,GACAulG,EAAA3oG,UAAA4oG,EAAAC,GAGA,IAAAljG,EAAA6hB,EAAAhuB,KAAA,GAAA+tC,EACA3gC,EAAA4gB,EAAAhuB,KAAA,GAAA+tC,EAIA,GAHA8jD,GAAA,EAAA1jF,eAAAghG,GAAApvG,EACAoM,EAAA,EAAAiB,EAAA,GACA2/F,EAAA5I,OAAAgL,EAAAtqG,EAAA9E,EAAAgqF,GACAklB,EAAAhjE,YAAA1yB,EAAA2C,aACAgG,EAAA,EAAA5lB,eAAA4+B,EAAA3gC,GAAA,CAKA,IAJA,IAGA6T,EAHArM,EAAAxH,EAAA,GACA6gC,EAAAlZ,EAAA,EAAAnjB,SAAAm8B,GACAy0E,EAAA,EAEA5tG,EAAAm5B,EAAA,IAEA9sB,EAAAgtB,IADAu0E,EAEA9qG,EAAAoT,KAAAyJ,aAAAsM,EAAA5f,GACA2+F,EAAA5I,OAAAgL,EAAAtqG,EAAA9E,EAAAgqF,GACAhoF,GAAAq5B,EAIA,IAFAu0E,EAAA,EACA5tG,EAAAxH,EAAA,GACAwH,EAAAm5B,EAAA,IAEA9sB,EAAAgtB,IADAu0E,EAEA9qG,EAAAoT,KAAAyJ,aAAAsM,EAAA5f,GACA2+F,EAAA5I,OAAAgL,EAAAtqG,EAAA9E,EAAAgqF,GACAhoF,GAAAq5B,EAGAv2B,EAAAoT,KAAAyJ,aAAAsM,EAAA,GAKA,GAHA6jE,GAAA,EAAA1jF,eAAAghG,EAAApvG,EACAoM,EAAA,EAAAiB,EAAA,GAEA+hG,GAAAvlG,EAAA,CAIA,GAHA2lG,GACAt3F,KAAAk+E,oBAAAgZ,EAAAnhF,EAAAnpB,GAEAyqG,EAAA,CACA,IAAAM,EAAAhmG,EAAAoF,YACApF,EAAAoF,YAAA2d,EAAAle,QACA7E,EAAA4E,UAAA2gG,EAAAzlG,QAAA0lG,GAAAC,GACAzlG,EAAAoF,YAAA4gG,OAEAhmG,EAAA4E,UAAA2gG,EAAAzlG,QAAA0lG,GAAAC,GAEAF,EAAA3oG,WAAA4oG,GAAAC,GAGAC,IACAH,EAAAngG,YAAAD,GAIA2nF,GACA9sF,EAAAomD,UAEA/3C,KAAA+9E,YAAApsF,EAAAokB,EAAArB,EAAA9nB,IAQA2pG,GAAA90G,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GACA,GAAA55B,KAAA82F,aAEG,CACH,IAAAjvG,EAAAkuB,EAAAk6B,UAAApoD,WACAC,EAAAiuB,EAAAk6B,UAAAnoD,SACA+uC,EAA2C72B,KAAAu8E,WAE3CzmB,KAcA,OAbA91D,KAAA82F,aAAAnjE,2BAAAxvC,EAAA0D,EACAC,EAAAunF,KAKA,SAAAvwC,GACA,IAAA1yC,EAAAsX,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACA,KAAAtqB,KAAA0pE,GAEA,OADAA,EAAA1pE,IAAA,EACAjG,EAAAG,KAAAszC,EAAAkF,EAAAjI,IAES,QAST0/D,GAAA90G,UAAAs1G,oBAAA,SAAAzkF,GACA,IAAAukB,EAAA72B,KAAAu8E,WACA1lD,EAAAI,cAAAj3B,KAAA82F,cACAjgE,EAAAphB,WAUA8gF,GAAA90G,UAAAm2G,wBAAA,SAAAtlF,GACAtS,KAAAy8E,2BAOA8Z,GAAA90G,UAAA28F,aAAA,SAAAroE,EAAArB,GAEA,IAAA8hF,EAA+Cx2F,KAAAu8E,WAC/Cya,EAAAR,EAAArhF,YAEAnV,KAAA+8E,YAAAhnE,EAAAihF,GAEA,IAAAa,EAAA9hF,EAAAg7D,UAAAjnC,EAAA,EAAAzrC,WACAy5F,EAAA/hF,EAAAg7D,UAAAjnC,EAAA,EAAAxrC,aACAyvD,EAAAyoC,EAAAnnC,0BACArB,EAAAwoC,EAAAlnC,4BAEA,IAAAtvD,KAAA02F,SAAA3oC,GAAA8pC,IACA7pC,GAAA8pC,EACA,SAGA,IAAAC,EAAAhiF,EAAAzzB,OACA2tD,EAAAl6B,EAAAk6B,UACA3uC,EAAA2uC,EAAA3uC,WACAzZ,EAAAooD,EAAApoD,WACAiuC,EAAA/f,EAAA+f,WACAkiE,EAAAxB,EAAA37E,cACAo9E,EAAAzB,EAAAxnC,kBACAkpC,EAAA1B,EAAAvnC,sBAEA1jE,IAAA2sG,IACAA,EAAA5B,GAAA9B,cAGA,IAAAlyG,EAAA2nB,EAAA,EAAAxmB,OAAAs0G,EACAE,EAAApwG,GACAo7B,EAAAgtB,EAAA3uC,WAAA6C,YAEA,GAAA6yF,EAAAhjE,YAAAic,EAAA3uC,WAAA2C,aACAgG,EAAA,EAAA5lB,eAAA4+B,EAAAlN,EAAAzzB,QAAA,CAMA,IAAA6gC,EAAAlZ,EAAA,EAAAnjB,SAAAm8B,GACAx/B,EAAAR,KAAAK,IAAA2mB,EAAA,EAAAnjB,SAAAxE,GAAA,EAAA6gC,GACA7gC,EAAA,GAAA2gC,EAAA,GAAAx/B,EACAnB,EAAA,GAAA2gC,EAAA,GAAAx/B,EAGA,IAAAuc,KAAA02F,QACA12F,KAAA42F,qBAAA/uG,GACAmY,KAAA22F,mBAAAqB,GACAh4F,KAAA62F,sBAAAqB,GACAjuF,EAAA,EAAA5lB,eAAA2b,KAAA8iF,gBAAAxgG,GAEA,OADA0d,KAAAkgF,oBAAA,GACA,EAGAlgF,KAAA82F,aAAA,KAEA92F,KAAA02F,QAAA,EAEA,IAAA5B,EAAA,IAAAR,GACAgC,GAAA1B,aAAA/sG,EAAAiuC,GAAAxzC,EAAAuF,EACAiuC,EAAAkhE,EAAAj9B,cAAA/5D,KAAA+xF,eAAAyE,EAAAxnC,mBACAgoC,EAAA78B,aAAA73E,EAAAuF,EAAAyZ,GAKA,IAAA2zF,EAAA,SAAAn2D,GACA,IAAAG,EACAD,EAAAF,EAAAswB,mBASA,GARApwB,EACAC,EAAAD,EAAA14C,KAAAw4C,EAAAj3C,IAEAm3C,EAAAw3D,EAAApnC,sBAEAnwB,EAAAD,EAAAF,EAAAj3C,IAGAo3C,EAAA,CACA,IAAAk5D,EAAAn4F,KAAAi1F,cACAn2D,EAAAj3C,EAAAiuC,EAAAmJ,EAAA61D,GACA90F,KAAA02F,OAAA12F,KAAA02F,QAAAyB,IAEGjoF,KAAAlQ,MACH,GAAAk4F,EAAA,CAEA,IAAApiC,KACAkhC,EAAA/9B,uBAAA32E,EAIA,SAAAw8C,GACAg3B,EAAA7pE,KAAA6yC,IACS9+B,MACT81D,EAAAx4D,KAAA46F,GACA,QAAA11G,EAAA,EAAAC,EAAAqzE,EAAApzE,OAAyCF,EAAAC,IAAQD,EACjDyyG,EAAAn/B,EAAAtzE,SAGAw0G,EAAA/9B,uBAAA32E,EAAA2yG,EAAAj1F,MAWA,OATA80F,EAAA1H,SAEAptF,KAAA42F,oBAAA/uG,EACAmY,KAAA22F,kBAAAqB,EACAh4F,KAAA62F,qBAAAqB,EACAl4F,KAAA8iF,gBAAAxgG,EACA0d,KAAA82F,aAAAhC,EAEA90F,KAAAkgF,oBAAA,GACA,GAaAqW,GAAA90G,UAAAwzG,cAAA,SAAAn2D,EAAAj3C,EAAAiuC,EAAAmJ,EAAA61D,GACA,IAAA71D,EACA,SAEA,IAAAi2D,GAAA,EACA,GAAAxoG,MAAAkQ,QAAAqiC,GACA,QAAAz8C,EAAA,EAAAC,EAAAw8C,EAAAv8C,OAAuCF,EAAAC,IAAQD,EAC/C0yG,EAAAoB,GAAArB,cACAH,EAAAh2D,EAAAG,EAAAz8C,GACA8zG,GAAA3B,oBAAA9sG,EAAAiuC,GACA91B,KAAA43F,wBAAA53F,OAAAk1F,OAGAA,EAAAoB,GAAArB,cACAH,EAAAh2D,EAAAG,EACAq3D,GAAA3B,oBAAA9sG,EAAAiuC,GACA91B,KAAA43F,wBAAA53F,MAEA,OAAAk1F,GAEA,IAAAkD,GAAA,GCtaAC,IALA9mF,MAAA,QACA+mF,OAAA,SACA5mF,OAAA,4BCUA6mF,GAAA,SAAA1hE,GAKA72B,KAAArO,QAAA,KAEA2yF,GAAAh+F,KAAA0Z,KAAA62B,GAMA72B,KAAA+xF,eAAAl7D,EAAAi4B,eAAA2nC,KAAA,QAMAz2F,KAAA02F,QAAA,EAMA12F,KAAAw4F,uBAMAx4F,KAAA+kC,cAAAunC,GAAA,EAAA3qF,SAGAqe,KAAAmjF,WACAtsD,EAAA64B,iBAAA2oC,GAAA3mF,OAAA,IAEA6yD,EAAA,EAAAz4E,OAAA8tF,GAAA,EAAA1mF,WAAA+1E,EAAA,EAAA/xE,MAAA8I,KAAA+2F,oBAAA/2F,OAIA0D,EAAA,EAAApiB,SAAAi3G,GAAAjU,IASAiU,GAAA,iBAAAntG,EAAAyrC,GACA,OAAAzrC,IAAAqgF,GAAAr+D,QAAAypB,EAAAt1B,YAAA4uD,GAAA,EAAA1+C,aAUA8mF,GAAA,gBAAA/Y,EAAA3oD,GACA,WAAA0hE,GAAiF,IAQjFA,GAAAE,eACAhiG,OAAAkuF,GAAA5yF,QAAA4yF,GAAAvyF,OACAuyF,GAAA9yF,YAAA8yF,GAAApzE,MAAAozE,GAAAn0B,MACAkoC,QAAA/T,GAAA5yF,QAAA4yF,GAAA9yF,cAQA0mG,GAAAI,gBACAliG,OAAAkuF,GAAAC,SACA8T,QAAA/T,GAAApzE,MAAAozE,GAAAn0B,KAAAm0B,GAAAC,SACA0R,OAAArP,GAAAF,OAOAwR,GAAA92G,UAAAgxB,gBAAA,WACA8xD,EAAA,EAAAp4E,SAAAytF,GAAA,EAAA1mF,WAAA+1E,EAAA,EAAA/xE,MAAA8I,KAAA+2F,oBAAA/2F,MACAskF,GAAA7iG,UAAAgxB,gBAAAnsB,KAAA0Z,OAOAu4F,GAAA92G,UAAA28F,aAAA,SAAAroE,EAAArB,GACA,IAAAmiB,EAAA72B,KAAAu8E,WACAqc,EAAA/hE,EAAAhc,cACA,GAAA7a,KAAAw4F,wBAAAI,EAAA,CACA54F,KAAAgjF,cAAAtgG,OAAA,EACA,IAAAisE,EAAA93B,EAAA64B,gBACA1vD,KAAArO,SAAAg9D,GAAA0pC,GAAA3mF,SACA1R,KAAArO,QAAAsqC,EAAA,EAAAlnC,yBAEAiL,KAAArO,SAAAg9D,GAAA0pC,GAAA3mF,SACA1R,KAAArO,QAAA,MAIA,OADAqO,KAAAw4F,uBAAAI,EACAtU,GAAA7iG,UAAA28F,aAAAj7F,MAAA6c,KAAA/E,YASAs9F,GAAA92G,UAAAo3G,mBAAA,SACAzjE,EAAArf,GACA,IAAA8gB,EAAA72B,KAAAu8E,WACAzmD,EAAA/f,EAAA+f,WACAx0B,EAAAyU,EAAAk6B,UAAA3uC,WACAw3F,EAAAjiE,EAAAhc,cACA20C,EACA34B,EAAAo4B,kBAAA,KAEA8pC,EAAA3jE,EAAA4jE,eAAAniE,GACA,GAAAkiE,EAAAZ,OAAAY,EAAAhW,kBAAA+V,GACAC,EAAAE,qBAAAzpC,EADA,CAYA,IAPA,IAAAt0D,EAA+C27B,EAAA1hB,YAC/CgmC,EAAAjgD,EAAA66B,cACAjxB,EAAA5J,EAAA86B,yBAAA10B,GACAzZ,EAAAid,EAAAuc,cAAA+T,EAAA7c,UAAA,IACAyrE,EAAAl/E,EAAAqc,mBAAAiU,EAAAimB,kBAEA69C,KACA5/F,EAAA,EAAA6/F,EAAA/jE,EAAAgkE,SAAA12G,OAA4C4W,EAAA6/F,IAAQ7/F,EAAA,CACpD,IAAA+/F,EAAAjkE,EAAAS,QAAAT,EAAAgkE,SAAA9/F,IACA,GAAA+/F,EAAAhkF,YAAAq+B,EAAA,EAAAl8C,MAAA,CAIA,IAAA8hG,EAAAD,EAAA9gF,UACAghF,EAAAp+C,EAAAh6B,mBAAAm4E,GACAE,EAAAvvF,EAAA,EAAA/gB,gBAAA86F,EAAAuV,GACAE,EAAAxvF,EAAA,EAAAlkB,OAAAwzG,EAAAC,GAAA,KACAvvF,EAAA,EAAAxmB,OAAA+1G,EAAA3iE,EAAAm4B,kBAAAnnE,GACA6xG,EAAAL,EAAAtlE,gBACA4lE,GAAA,EACA/1E,GAAA,EAAAra,WAAAjI,EAAAo4F,KACAC,GAAA,EACAN,EAAAO,cAAAt4F,IAEAy3F,EAAAZ,OAAA,EACA,IAgCAr5D,EAhCAg2D,EAAA,IAAAR,GAAA,EAAAkF,EAAA3xG,EACAiuC,EAAA56B,EAAA6+D,cAAA/5D,KAAA+xF,eAAAl7D,EAAAm4B,mBACAr0C,EAAA27E,GAAA3B,oBACA9sG,EAAAiuC,GAMAm/D,EAAA,SAAAn2D,GACA,IAAAG,EACAD,EAAAF,EAAAswB,mBASA,GARApwB,EACAC,EAAAD,EAAA14C,KAA0D,EAAAuB,IAE1Dm3C,EAAAnI,EAAAu4B,sBAEAnwB,EAAAD,EAAAF,EAAAj3C,IAGAo3C,EAAA,CACA,IAAAk5D,EAAAn4F,KAAAi1F,cAAAn2D,EAAAnkB,EAAAskB,EACA61D,GACA90F,KAAA02F,OAAA12F,KAAA02F,QAAAyB,EACAY,EAAAZ,MAAAY,EAAAZ,WAIAriC,EAAAujC,EAAAjgC,cACA5J,OAAAupC,EAAAE,qBACAnjC,EAAAx4D,KAAAkyD,GAGA,QAAAhtE,EAAA,EAAAC,EAAAqzE,EAAApzE,OAAyCF,EAAAC,IAAQD,EACjDs8C,EAAAg3B,EAAAtzE,GACAm3G,IACAD,EAAAt1F,YAAAJ,GAAA,EAAAgP,cAEA0mF,EAAA10F,eAAAu0F,GAEAG,EAAA30F,UAAAs0F,EAAAl1F,cAEA26B,EAAAT,cAAAzxC,UAAA8sG,EAAAp4F,IAEAm4F,IAAAxvF,EAAA,EAAA9gB,WAAAswG,EAAA36D,EAAAT,cAAAl6B,cACA8wF,EAAA3uG,KAAA0Z,KAAA8+B,GAIA,QAAAjlC,KADAi7F,EAAA1H,SACA0H,EAAAjB,aACAqF,EAAAr/F,IAAA,EAEAw/F,EAAAQ,eAAAhjE,EAAAzB,EAAA7c,UAAA7B,WAAAo+E,IAEAiE,EAAAhW,iBAAA+V,EACAC,EAAAE,oBAAAzpC,IAOA+oC,GAAA92G,UAAA2iG,cAAA,SACAhvD,EAAArf,EAAArB,EAAA5wB,EAAAC,EAAA6S,EAAAC,EAAAs/C,EAAAphB,GACA,IAAA+kE,EAAsD,EACtD95F,KAAA64F,mBAAAiB,EAAA/jF,GACA/V,KAAArO,UACAqO,KAAA+5F,iBAAAD,EAAA/jF,EAAArB,GACA4vE,GAAA7iG,UAAA2iG,cAAAjhG,MAAA6c,KAAA/E,aAQAs9F,GAAA92G,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GACA,IAAA/xC,EAAAkuB,EAAAk6B,UAAApoD,WACAC,EAAAiuB,EAAAk6B,UAAAnoD,SACAunF,OAAA9jF,GAAA8jF,EAAA,EAAAA,EACA,IASAoqB,EAAAt9F,EACA3Z,EAAAC,EAAAqyG,EACA1/D,EAAA7c,EAAAyrE,EAXAntD,EAAA72B,KAAAu8E,WAEAzmB,KAGAktB,EAAAhjF,KAAAgjF,cAGAl+E,EAD+C+xB,EAAA1hB,YAC/C6gB,yBAAAjgB,EAAAk6B,UAAA3uC,YAIA,IAAA9e,EAAA,EAAAC,EAAAugG,EAAAtgG,OAAwCF,EAAAC,IAAQD,EAKhD,GAHA+1B,GADA6c,EAAA4tD,EAAAxgG,IACA64D,iBACA2oC,EAAAl/E,EAAAqc,mBAAA5I,EAAAvY,KAAAijF,WACAwW,EAAAxvF,EAAA,EAAAxmB,OAAAugG,EAAA3U,EAAAxnF,EAAA4xG,GACAxvF,EAAA,EAAA/lB,mBAAAu1G,EAAAt1G,GAGA,QAAAmV,EAAA,EAAA6/F,EAAA/jE,EAAAgkE,SAAA12G,OAA8C4W,EAAA6/F,IAAQ7/F,EAAA,CACtD,IAAA+/F,EAAAjkE,EAAAS,QAAAT,EAAAgkE,SAAA9/F,IACA+/F,EAAAhkF,YAAAq+B,EAAA,EAAAl8C,QAGAs9F,EAAAuE,EAAAW,eAAAnjE,EAAAzB,EAAA7c,UAAA7B,YACAva,KAAA24F,EAAAnhE,2BACAxvC,EAAA0D,EAAAC,EAAAunF,KAKA,SAAAvwC,GACA,IAAA1yC,EAAAsX,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACA,KAAAtqB,KAAA0pE,GAEA,OADAA,EAAA1pE,IAAA,EACAjG,EAAAG,KAAAszC,EAAAkF,EAAAjI,IAEW,OAGX,OAAA16B,GAUAo8F,GAAA92G,UAAAw4G,oBAAA,SAAA7kE,EAAArf,GACA,IAEAjR,EAFA9E,KAAAu8E,WAC+CpnE,YAC/C4gB,cACAxd,EAAA6c,EAAA7c,UACAg4D,EAAAzrE,EAAAuc,cAAA9I,EAAA,IACA03B,EAAAl6B,EAAAk6B,UACAna,EAAA/f,EAAA+f,WACAokE,EAAAjqD,EAAApoD,WAAAiuC,EACAkuD,EAAAl/E,EAAAqc,mBAAA5I,EAAAvY,KAAAijF,WACAr7F,EAAAqoD,EAAAroD,OACAs4B,EAAAjW,EAAA,EAAAvjB,WAAAs9F,GACAj8F,EAAAguB,EAAAhuB,KACAoO,EAAAlT,KAAAyuC,MAAAoE,EAAA/tC,EAAA,MACAqO,EAAAnT,KAAAyuC,MAAAoE,EAAA/tC,EAAA,MACA,OAAAukF,GAAA,EAAA99E,QAAAwR,KAAA+kC,cACA5uC,EAAAC,EACAm6E,EAAA2pB,EAAA3pB,EAAA2pB,EACAjqD,EAAAnoD,UACAo4B,EAAA,GAAAt4B,EAAA,IAAA2oF,GACA3oF,EAAA,GAAAs4B,EAAA,IAAAqwD,IAOAgoB,GAAA92G,UAAAs1G,oBAAA,SAAAzkF,GACA,IAAAukB,EAAA72B,KAAAu8E,WACA1lD,EAAAI,mBAAA1rC,IAAAyU,KAAAw4F,wBACA3hE,EAAAphB,WAUA8iF,GAAA92G,UAAAm2G,wBAAA,SAAAtlF,GACAtS,KAAAy8E,2BAOA8b,GAAA92G,UAAAs8F,YAAA,SAAApsF,EAAAokB,EAAArB,GACA,IAQAve,EAAAC,EARAygC,EAAA72B,KAAAu8E,WACAsW,EAAAh8D,EAAAi4B,kBAAkD,KAClD5zD,EAA+C27B,EAAA1hB,YAC/Cw5C,EAAA93B,EAAA64B,gBACAskC,EAAAuE,GAAAI,eAAAhqC,GACA74B,EAAA/f,EAAA+f,WACAhuC,EAAAiuB,EAAAk6B,UAAAnoD,SACAC,EAAAguB,EAAAhuB,KAEAD,IACAqO,EAAAlT,KAAAyuC,MAAAoE,EAAA/tC,EAAA,MACAqO,EAAAnT,KAAAyuC,MAAAoE,EAAA/tC,EAAA,MACA6xF,GAAA,EAAA1jF,eAAAvE,GAAA7J,EAAAqO,EAAAC,IAEAy8F,GACA7yF,KAAA+xF,eAAAnmG,QAMA,IAJA,IAAA0wF,EAAAt8E,KAAAgjF,cACAl+E,EAAA5J,EAAA86B,yBAAAjgB,EAAAk6B,UAAA3uC,YACA64F,KACAhW,KACA3hG,EAAA85F,EAAA55F,OAAA,EAAgCF,GAAA,IAAQA,EAAA,CACxC,IAAA4yC,EAA6CknD,EAAA95F,GAC7C,GAAA4yC,EAAA/f,YAAAq+B,EAAA,EAAA/6C,MAOA,IAJA,IAAA4f,EAAA6c,EAAA7c,UACA6hF,EAAAt1F,EAAAqc,mBAAA5I,GAAA,GACAzT,EAAAqc,mBAAAiU,EAAAimB,kBAAA,GACAzuD,OAAArB,EACA+N,EAAA,EAAA6/F,EAAA/jE,EAAAgkE,SAAA12G,OAA8C4W,EAAA6/F,IAAQ7/F,EAAA,CACtD,IAAA+/F,EAAAjkE,EAAAS,QAAAT,EAAAgkE,SAAA9/F,IACA,GAAA+/F,EAAAhkF,YAAAq+B,EAAA,EAAAl8C,MAAA,CAGA,IAAAs9F,EAAAuE,EAAAW,eAAAnjE,EAAAte,EAAA7B,YACA,GAAAi4C,GAAA0pC,GAAA3mF,QAAAojF,EAAA1B,WAAAY,GAAA,CAGApnG,IACAA,EAAAoT,KAAAyJ,aAAAsM,EAAAqkF,IAEA,IAAAld,EAAAmc,EAAA9gF,UAAA,GACA8hF,EAAAvF,EAAA3B,cAAAvmG,GACA+E,EAAA8lD,OACA9lD,EAAAoF,YAAA2d,EAAAle,QAGA,QAAAwD,EAAA,EAAAoH,EAAA+4F,EAAAz3G,OAAwCsX,EAAAoH,IAAQpH,EAAA,CAChD,IAAA89C,EAAAqiD,EAAAngG,GACAkjF,EAAAiH,EAAAnqF,KACArI,EAAAirC,YAEAjrC,EAAAkmD,OAAAwiD,EAAA,GAAAA,EAAA,IACA1oG,EAAAmrC,OAAAu9D,EAAA,GAAAA,EAAA,IACA1oG,EAAAmrC,OAAAu9D,EAAA,GAAAA,EAAA,IACA1oG,EAAAmrC,OAAAu9D,EAAA,GAAAA,EAAA,IAEA1oG,EAAAkmD,OAAAC,EAAA,GAAAA,EAAA,IACAnmD,EAAAmrC,OAAAgb,EAAA,GAAAA,EAAA,IACAnmD,EAAAmrC,OAAAgb,EAAA,GAAAA,EAAA,IACAnmD,EAAAmrC,OAAAgb,EAAA,GAAAA,EAAA,IACAnmD,EAAAmmD,QAGAg9C,EAAA5I,OAAAv6F,EAAA/E,EAAA9E,KAAyDksG,EAAAnB,GACzDlhG,EAAAomD,UACAoiD,EAAAluG,KAAAouG,GACAlW,EAAAl4F,KAAAixF,MAGA2V,GACAyB,GAAA1B,gBAAAC,EAAAlhG,EAAA7J,GAEAA,GACA8xF,GAAA,EAAA1jF,eAAAvE,EAAA7J,EAC0B,EAAiC,GAE3Dw8F,GAAA7iG,UAAAs8F,YAAA56F,MAAA6c,KAAA/E,YAYAs9F,GAAA92G,UAAAwzG,cAAA,SAAAn2D,EAAAnkB,EAAAskB,EAAA61D,GACA,IAAA71D,EACA,SAEA,IAAAi2D,GAAA,EACA,GAAAxoG,MAAAkQ,QAAAqiC,GACA,QAAAz8C,EAAA,EAAAC,EAAAw8C,EAAAv8C,OAAuCF,EAAAC,IAAQD,EAC/C0yG,EAAAoB,GAAArB,cACAH,EAAAh2D,EAAAG,EAAAz8C,GAAAm4B,EACA3a,KAAA43F,wBAAA53F,OAAAk1F,OAGAA,EAAAoB,GAAArB,cACAH,EAAAh2D,EAAAG,EAAAtkB,EACA3a,KAAA43F,wBAAA53F,MAEA,OAAAk1F,GAUAqD,GAAA92G,UAAAs4G,iBAAA,SACA3kE,EAAArf,EAAArB,GACA,IAAAmiB,EAAA72B,KAAAu8E,WACAwc,EAAA3jE,EAAA4jE,eAAAniE,GACAiiE,EAAAjiE,EAAAhc,cACAw4E,EAAAkF,GAAAE,cAAA5hE,EAAA64B,iBACA,GAAA2jC,GAAA0F,EAAAuB,uBAAAxB,EAAA,CACAC,EAAAuB,qBAAAxB,EACA,IAAAvgF,EAAA6c,EAAAimB,iBACAljC,EAAAI,EAAA,GACAud,EAAA/f,EAAA+f,WACA56B,EAAiD27B,EAAA1hB,YACjDrQ,EAAA5J,EAAA86B,yBAAAjgB,EAAAk6B,UAAA3uC,YACAzZ,EAAAid,EAAAuc,cAAAlJ,GACAxmB,EAAAyjC,EAAA5jC,WAAAqlC,GACA9uC,EAAAmT,EAAAm7B,iBAAAle,EAAA2d,EAAA/f,EAAAk6B,UAAA3uC,YACA3P,EAAAF,OAAAyC,MAAAnM,EAAA,GACA4J,EAAAF,OAAA0D,OAAApN,EAAA,GAEA,IADA,IAAAi8F,EAAAl/E,EAAAqc,mBAAA5I,GACA/1B,EAAA,EAAAC,EAAA2yC,EAAAgkE,SAAA12G,OAA8CF,EAAAC,IAAQD,EAAA,CACtD,IAAA62G,EAAAjkE,EAAAS,QAAAT,EAAAgkE,SAAA52G,IACA,GAAA62G,EAAAhkF,YAAAq+B,EAAA,EAAAl8C,MAAA,CAGA,IAAA+iG,EAAAzkE,EAAAjuC,EACA+E,EAAA0/E,GAAA,EAAA3/E,MAAAqT,KAAA+kC,eACAunC,GAAA,EAAAh+E,MAAA1B,EAAA2tG,MACAjuB,GAAA,EAAA/9E,UAAA3B,GAAAo3F,EAAA,IAAAA,EAAA,IACAqV,EAAAW,eAAAnjE,EAAAzB,EAAA7c,UAAA7B,YACAw1E,OAAAv6F,EAAA/E,EAAA,KAAkDymG,OAIlD,IAAAmH,GAAA,WC9fAC,GAAA,SAAAv/F,GAMA8E,KAAA06F,QAAAx/F,GASAu/F,GAAAh5G,UAAA8f,QAAA,aAMAk5F,GAAAh5G,UAAA0zB,UAAA,WACA,OAAAnV,KAAA06F,SAOAD,GAAAh5G,UAAAk5G,WAAAl3C,EAAA,EAAAn5C,MACA,IAAAswF,GAAA,GC5BAC,GAAA,SAAA3/F,GACA0/F,GAAAt0G,KAAA0Z,KAAA9E,IAGAwI,EAAA,EAAApiB,SAAAu5G,GAAAD,IAMAC,GAAAp5G,UAAA8f,QAAA,WACA,OAAAu5F,GAAA,EAAApqG,iBAEA,IAAAqqG,GAAA,GCbAC,GAAA,SAAA9/F,GACA0/F,GAAAt0G,KAAA0Z,KAAA9E,IAGAwI,EAAA,EAAApiB,SAAA05G,GAAAJ,IAMAI,GAAAv5G,UAAA8f,QAAA,WACA,OAAAu5F,GAAA,EAAAnqG,eAEA,IAAAsqG,GAAA,GCnBAC,MAGAA,GAAAH,SAAA,IAAAA,GAAAr3F,EAAA,EAAAljB,YACA,snDACA,u4BAEA06G,GAAAD,OAAA,IAAAA,GAAAv3F,EAAA,EAAAljB,YACA,8nDACA,84BACA,IAAA26G,GAAA,GCsEAC,GA3EA,SAAArtF,EAAAstF,GAKAr7F,KAAAs7F,mBAAAvtF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,0BAKAwf,KAAAw7F,oBAAAztF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,2BAKAwf,KAAAy7F,qBAAA1tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,4BAKAwf,KAAA07F,YAAA3tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,mBAKAwf,KAAA27F,aAAA5tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,oBAKAwf,KAAA47F,UAAA7tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAA67F,YAAA9tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,mBAKAwf,KAAA87F,cAAA/tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,qBAKAwf,KAAA+7F,OAAAhuF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,cAKAwf,KAAAg8F,WAAAjuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,kBAKAwf,KAAAk8F,cAAAnuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,qBAKAwf,KAAAm8F,SAAApuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,iBCjFA47G,IAMAz6G,OAAA,WACA,yCASA06G,cAAA,SAAAC,EAAA1vG,GAOA,OANA0vG,EAAA,GAAA1vG,EAAA,GACA0vG,EAAA,GAAA1vG,EAAA,GACA0vG,EAAA,GAAA1vG,EAAA,GACA0vG,EAAA,GAAA1vG,EAAA,GACA0vG,EAAA,IAAA1vG,EAAA,GACA0vG,EAAA,IAAA1vG,EAAA,GACA0vG,IAEAA,GAAA,GCVAC,GAAA,SAAAn3E,EAAA+hE,GACArR,GAAAxvF,KAAA0Z,MAMAA,KAAAolB,YAOAplB,KAAAmnF,YAUAnnF,KAAAkgB,OAAAjW,EAAA,EAAAjjB,UAAAmgG,GAMAnnF,KAAAw8F,kBAAAlwB,GAAA,EAAA3qF,SAMAqe,KAAAy8F,oBAAAnwB,GAAA,EAAA3qF,SAMAqe,KAAA08F,mBAAApwB,GAAA,EAAA3qF,SAMAqe,KAAA28F,SAAAL,GAAA36G,SAMAqe,KAAA48F,WAMA58F,KAAA68F,cAAA,KAOA78F,KAAA88F,gBAOA98F,KAAA+8F,uBAMA/8F,KAAA2H,YAMA3H,KAAAg9F,eAAA,KAOAh9F,KAAAy1F,sBAAAlqG,GAIAmY,EAAA,EAAApiB,SAAAi7G,GAAAzmB,IAQAymB,GAAA96G,UAAAw7G,2BAAA,SAAAtrG,KAOA4qG,GAAA96G,UAAA2rG,OAAA,SAAAz7F,KAeA4qG,GAAA96G,UAAAy7G,aAAA,SAAAnvF,EAAApc,EAAA5J,EAAA+tC,KAYAymE,GAAA96G,UAAA07G,gBAAA,SAAApvF,EAAAqvF,KAYAb,GAAA96G,UAAA47G,WAAA,SAAAtvF,EAAApc,EAAA44F,EAAA+S,KAgBAf,GAAA96G,UAAA87G,+BAAA,SAAAxvF,EAAApc,EAAA44F,EAAAC,EAAAC,KAgBA8R,GAAA96G,UAAA+7G,uBAAA,SAAAzvF,EAAApc,EAAA44F,EACAC,EAAAiT,EAAAhT,GACA,OAAAgT,EAMAz9F,KAAAu9F,+BAAAxvF,EAAApc,EACA44F,EAAAC,EAAAC,GALAzqF,KAAA09F,0BAAA3vF,EAAApc,EACA44F,EAAAC,IAmBA+R,GAAA96G,UAAAi8G,0BAAA,SAAA3vF,EAAApc,EAAA44F,EACAC,GACAz8E,EAAAniB,MAAAmiB,EAAAxe,iBAAAwe,EAAA4vF,kBACA39F,KAAAq9F,WAAAtvF,EAAApc,EAAA44F,GAAA,GAEA,IAAA/yE,EAAAgzE,EAAA,MACA,OAAAhzE,QAGA,GAsBA+kF,GAAA96G,UAAAyqG,OAAA,SAAAv6F,EACA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EACAt/B,EAAA+zF,EACAC,EAAAiT,EAAAhT,GACA,IACAmT,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAFApwF,EAAApc,EAAAysG,QAIAp+F,KAAAy1F,mBACAmI,EAAA7vF,EAAAswF,UAAAtwF,EAAA7d,cACA2tG,EAAA9vF,EAAAG,aAAAH,EAAAuwF,cACAR,EAAA/vF,EAAAG,aAAAH,EAAAwwF,oBACAR,EAAAhwF,EAAAG,aAAAH,EAAAywF,aACAR,EAAAjwF,EAAAG,aAAAH,EAAA0wF,mBACAR,EAAAlwF,EAAAG,aAAAH,EAAA2wF,cACAR,EAAAnwF,EAAAG,aAAAH,EAAA4wF,yBACAR,EAAApwF,EAAAG,aAAAH,EAAA6wF,yBAEA7wF,EAAA8wF,OAAA9wF,EAAA7d,cACA6d,EAAAniB,MAAAmiB,EAAA+wF,oBACA/wF,EAAAgxF,YAAA,KACAhxF,EAAAixF,YAAAjxF,EAAAkxF,OAAA,OACAlxF,EAAAmxF,UAAAnxF,EAAAoxF,KAAApxF,EAAAoxF,KAAApxF,EAAAqxF,SAEAp/F,KAAAy1F,iBAAAvJ,OAAAv6F,EACA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EACAt/B,EAAA+zF,EACAC,EAAAiT,EAAAhT,GAEA18E,EAAAgxF,YAAA,GACAhxF,EAAAixF,YAAAjxF,EAAAsxF,SAAA,QAGA1tG,EAAA2tG,WAAAxE,GAAA,EAAAnrG,aAAAqQ,KAAAg9F,gBAEArrG,EAAA2tG,WAAAxE,GAAA,EAAAlrG,qBAAAoQ,KAAA68F,eAEA,IAAAO,EAAAp9F,KAAAk9F,aAAAnvF,EAAApc,EAAA5J,EAAA+tC,GAGAypE,EAAAjzB,GAAA,EAAA3/E,MAAAqT,KAAAw8F,mBACAlwB,GAAA,EAAAh+E,MAAAixG,EAAA,GAAA13G,EAAAE,EAAA,OAAAF,EAAAE,EAAA,KACAukF,GAAA,EAAAl+E,OAAAmxG,GAAAz3G,GACAwkF,GAAA,EAAA/9E,UAAAgxG,IAAA33G,EAAA,GAAAoY,KAAAkgB,OAAA,MAAAt4B,EAAA,GAAAoY,KAAAkgB,OAAA,KAEA,IAAAs/E,EAAAlzB,GAAA,EAAA3/E,MAAAqT,KAAA08F,oBACApwB,GAAA,EAAAh+E,MAAAkxG,EAAA,EAAAz3G,EAAA,KAAAA,EAAA,IAEA,IAcAyvB,EAdAioF,EAAAnzB,GAAA,EAAA3/E,MAAAqT,KAAAy8F,qBAsCA,OArCA,IAAA30G,GACAwkF,GAAA,EAAAl+E,OAAAqxG,GAAA33G,GAGAimB,EAAA2xF,iBAAAtC,EAAA9B,oBAAA,EACAgB,GAAAD,cAAAr8F,KAAA28F,SAAA4C,IACAxxF,EAAA2xF,iBAAAtC,EAAA5B,qBAAA,EACAc,GAAAD,cAAAr8F,KAAA28F,SAAA6C,IACAzxF,EAAA2xF,iBAAAtC,EAAA3B,sBAAA,EACAa,GAAAD,cAAAr8F,KAAA28F,SAAA8C,IACA1xF,EAAA4xF,UAAAvC,EAAAxB,UAAAplG,QAIAjL,IAAAi/F,EACAxqF,KAAAq9F,WAAAtvF,EAAApc,EAAA44F,GAAA,GAGA/yE,EAAAxX,KAAAw9F,uBAAAzvF,EAAApc,EAAA44F,EACAC,EAAAiT,EAAAhT,GAIAzqF,KAAAm9F,gBAAApvF,EAAAqvF,GAEAp9F,KAAAy1F,mBACAmI,GACA7vF,EAAA+W,QAAA/W,EAAA7d,cAEA6d,EAAAniB,MAAAmiB,EAAA+wF,oBACA/wF,EAAAixF,YAAqC,EACX,EAAuC,GACjEjxF,EAAAgxF,YAAqC,GACrChxF,EAAAmxF,UAAmC,EACT,EAA2C,IAGrE1nF,GAUA+kF,GAAA96G,UAAAm+G,aAAA,SACA7xF,EAAApc,EAAAhI,EAAAlE,GACA,IAAAo6G,EAAAluG,EAAAmuG,uBACAhF,GAAA,EAAAvqG,aAAAuqG,GAAA,EAAAxqG,eAGAyvG,EAAAt6G,EAAAkE,EACAq2G,EAAAr2G,GAHAgI,EAAAmuG,uBAAA,KAIA/xF,EAAA6xF,aAAA9E,GAAA,EAAAtrG,UAAAuwG,EAAAF,EAAAG,IAEA,IAAAC,GAAA,GCvWAC,IAOA5tG,YAAA,kBAOAC,kBAAA,SAOAC,eAAA,QAOAC,mBAOAC,sBAAA,EAOAC,gBAAA,QAOAC,kBAAA,GAMAC,oBAAA,SAOAC,iBAAA,GAOAC,oBAAA,GAOAE,iBAAA,EAYAktG,2BAAA,SAAA13G,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,GACA,IAAAnC,GAAA8B,EAAAD,IAAAM,EAAAF,IAAAF,EAAAF,IAAAK,EAAAD,GACA,OAAAjC,GAAAs5G,GAAAE,SAAAx5G,IAAAs5G,GAAAE,aACA70G,EAAA3E,EAAA,IAOAs5G,GAAAE,QAAA/oF,OAAA+oF,SAAA,sBACA,IAAAC,GAAA,GC3FAC,GAAA,SAAAC,EAAAC,GAMAxgG,KAAAygG,UAAAl1G,IAAAg1G,OAMAvgG,KAAA0gG,YAAAn1G,IAAAi1G,EACAA,EAAAF,GAAAK,OAAA7wG,aAQAwwG,GAAA7+G,UAAA2uB,SAAA,WACA,OAAApQ,KAAAygG,MAOAH,GAAA7+G,UAAAm/G,SAAA,WACA,OAAA5gG,KAAA0gG,QAQAJ,GAAAK,QACA7wG,YAAAgrG,GAAA,EAAAhrG,YACAD,YAAAirG,GAAA,EAAAjrG,YACAE,aAAA+qG,GAAA,EAAA/qG,cAEA,IAAA8wG,GAAA,GC/BAC,GAAA,SAAA17E,EAAA+hE,GACA8Y,GAAA35G,KAAA0Z,KAAAolB,EAAA+hE,GAMAnnF,KAAA+gG,kBAAA,KAMA/gG,KAAAghG,WAMAhhG,KAAAihG,iBAMAjhG,KAAAu6B,QAAA,EAWAv6B,KAAAszB,QACA4tE,UAAA,KACAC,YAAA,KACA/3E,SAAA,KACAE,oBAAA/9B,EACAyxC,eAAAzxC,EACAkqB,SAAA,IAKA/R,EAAA,EAAApiB,SAAAw/G,GAAAb,IAUAa,GAAAr/G,UAAAqsG,iBAAA,SACAvoG,EAAAC,EAAAC,EAAAC,GACA,IAGAlD,EAAAC,EAHA2+G,EAAAphG,KAAA2H,SAAAjlB,OACA2+G,EAAArhG,KAAA48F,QAAAl6G,OACA+W,EAAA2nG,EAAA,EAEA,IAAA5+G,EAAAgD,EAAA/C,EAAAgD,EAA4BjD,EAAAC,EAAQD,GAAAkD,EACpCsa,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,GACAwd,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,EAAA,GACAwd,KAAA2H,SAAAy5F,KAAA,EACAphG,KAAA2H,SAAAy5F,KAAAphG,KAAAu6B,QAEAv6B,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,GACAwd,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,EAAA,GACAwd,KAAA2H,SAAAy5F,KAAA,EACAphG,KAAA2H,SAAAy5F,KAAAphG,KAAAu6B,QAEAv6B,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,GACAwd,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,EAAA,GACAwd,KAAA2H,SAAAy5F,KAAA,EACAphG,KAAA2H,SAAAy5F,KAAAphG,KAAAu6B,QAEAv6B,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,GACAwd,KAAA2H,SAAAy5F,KAAA77G,EAAA/C,EAAA,GACAwd,KAAA2H,SAAAy5F,KAAA,EACAphG,KAAA2H,SAAAy5F,KAAAphG,KAAAu6B,QAEAv6B,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EAEAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAEAA,GAAA,GAQAqnG,GAAAr/G,UAAA6yF,WAAA,SAAAC,EAAAz1C,GACA,IAAA/+B,EAAAw0E,EAAAx3D,YACAr3B,EAAA6uF,EAAAr5D,YACA,GAAAnb,EAAA,CACAC,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAA+8F,oBAAA9wG,KAAA6yC,GACA9+B,KAAAszB,OAAA7d,UACAzV,KAAAihG,cAAAh1G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAszB,OAAA7d,SAAA,GAGAzV,KAAAu6B,QAAAx6B,EACA,IAAAxa,EAAAgvF,EAAAh6D,qBACAh1B,EAAAyyF,GAAA,EAAAzpF,UAAAhJ,EAAA,IACAG,GAAAsa,KAAAkgB,OAAA,IAAAlgB,KAAAkgB,OAAA,IACAlgB,KAAA8tF,iBAAAvoG,EAAA,IAAAG,QAEA,GAAAsa,KAAAszB,OAAA7d,UACAzV,KAAAghG,QAAAhxF,MACAhQ,KAAAghG,QAAAt+G,QAAA,CACA,IAAA4+G,EAAAthG,KAAAghG,QAAAhhG,KAAAghG,QAAAt+G,OAAA,GACAsd,KAAAszB,OAAA4tE,UAA2DI,EAAA,GAC3DthG,KAAAszB,OAAA6tE,YAA4DG,EAAA,GAC5DthG,KAAAszB,OAAA0J,UAAkDskE,EAAA,GAClDthG,KAAAszB,OAAA7d,SAAA,IAUAqrF,GAAAr/G,UAAA2rG,OAAA,SAAAz7F,GAEAqO,KAAAg9F,eAAA,IAAA6D,GAAA7gG,KAAA2H,UAGA3H,KAAA68F,cAAA,IAAAgE,GAAA7gG,KAAA48F,SAEA58F,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QAGA,IAAAsd,KAAAihG,cAAAv+G,QAAAsd,KAAAghG,QAAAt+G,OAAA,IACAsd,KAAAghG,YAGAhhG,KAAA2H,SAAA,KACA3H,KAAA48F,QAAA,MAOAkE,GAAAr/G,UAAAw7G,2BAAA,SAAAtrG,GAKA,IAAAqrG,EAAAh9F,KAAAg9F,eACAH,EAAA78F,KAAA68F,cACA,kBACAlrG,EAAA4vG,aAAAvE,GACArrG,EAAA4vG,aAAA1E,KAQAiE,GAAAr/G,UAAAy7G,aAAA,SAAAnvF,EAAApc,EAAA5J,EAAA+tC,GAEA,IAAA0rE,EAAAC,EACAD,EAAArG,GAAAJ,SACA0G,EAAAtG,GAAAF,OACA,IAGAmC,EAHA/B,EAAA1pG,EAAA+vG,WAAAF,EAAAC,GA8BA,OA1BAzhG,KAAA+gG,kBAIA3D,EAAAp9F,KAAA+gG,mBAHA3D,EAAA,IAAAhC,GAAArtF,EAAAstF,GACAr7F,KAAA+gG,kBAAA3D,GAKAzrG,EAAAgwG,WAAAtG,GAGAttF,EAAA6zF,wBAAAxE,EAAApB,YACAjuF,EAAA8zF,oBAAAzE,EAAApB,WAAA,EAAAlB,GAAA,EAAAtqG,OACA,QAEAud,EAAA6zF,wBAAAxE,EAAAlB,eACAnuF,EAAA8zF,oBAAAzE,EAAAlB,cAAA,EAAApB,GAAA,EAAAtqG,OACA,QAEAud,EAAA6zF,wBAAAxE,EAAAjB,UACApuF,EAAA8zF,oBAAAzE,EAAAjB,SAAA,EAAArB,GAAA,EAAAtqG,OACA,SAGAud,EAAA+zF,WAAA1E,EAAArB,OAAAh0G,GACAgmB,EAAA4xF,UAAAvC,EAAAzB,aAAA7lE,GAEAsnE,GAOA0D,GAAAr/G,UAAA07G,gBAAA,SAAApvF,EAAAqvF,GACArvF,EAAAg0F,yBAAA3E,EAAApB,YACAjuF,EAAAg0F,yBAAA3E,EAAAlB,eACAnuF,EAAAg0F,yBAAA3E,EAAAjB,WAOA2E,GAAAr/G,UAAA47G,WAAA,SAAAtvF,EAAApc,EAAA44F,EAAA+S,GAKA,IAAA96G,EAAAmH,EAAAlE,EAAAu8G,EAJA,GAAAjgH,EAAA,EAAA8E,QAAA0jG,GAMA,IADA9kG,EAAAua,KAAA88F,aAAA98F,KAAA88F,aAAAp6G,OAAA,GACAF,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAA2CF,GAAA,IAAQA,EACnDmH,EAAAqW,KAAAihG,cAAAz+G,GACAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAiiG,cAAAl0F,EAAuDi0F,EAAA,IACvDhiG,KAAAooF,gBAAAr6E,EAAyDi0F,EAAA,GAC7BA,EAAA,IAC5BhiG,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAA,EAAAkE,OAZAqW,KAAAkiG,oBAAAn0F,EAAApc,EAAA44F,IAqBAuW,GAAAr/G,UAAA87G,+BAAA,SAAAxvF,EAAApc,EAAA44F,EACAC,EAAAC,GACA,IAAAjoG,EAAAmH,EAAAlE,EAAAu8G,EAAAG,EAAArjE,EAAAsjE,EAGA,IAFAA,EAAApiG,KAAA88F,aAAAp6G,OAAA,EACA+C,EAAAua,KAAA88F,aAAAsF,EAAA,GACA5/G,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAAyCF,GAAA,IAAQA,EAOjD,IANAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAiiG,cAAAl0F,EAAqDi0F,EAAA,IACrDhiG,KAAAooF,gBAAAr6E,EAAuDi0F,EAAA,GAC7BA,EAAA,IAC1BG,EAAAniG,KAAAihG,cAAAz+G,GAEA4/G,GAAA,GACApiG,KAAA88F,aAAAsF,IAAAD,GAAA,CAKA,GAJAx4G,EAAAqW,KAAA88F,aAAAsF,GACAtjE,EAAA9+B,KAAA+8F,oBAAAqF,QAGA72G,IAAAg/F,EAFA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,aAGAooB,EAAAT,qBACA9yC,IAAAk/F,GAAAxgF,EAAA,EAAA9gB,WACuC,EACvC21C,EAAAT,cAAAl6B,cAAA,CACA4J,EAAAniB,MAAAmiB,EAAAxe,iBAAAwe,EAAA4vF,kBACA39F,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GAEA,IAAA+xB,EAAAgzE,EAAA1rD,GAEA,GAAAtnB,EACA,OAAAA,EAIA4qF,IACA38G,EAAAkE,IAaAm3G,GAAAr/G,UAAAygH,oBAAA,SAAAn0F,EAAApc,EAAA44F,GACA,IAAA/nG,EAAAmH,EAAAlE,EAAAu8G,EAAAG,EAAArjE,EAAAsjE,EAAAC,EAGA,IAFAD,EAAApiG,KAAA88F,aAAAp6G,OAAA,EACA+C,EAAAkE,EAAAqW,KAAA88F,aAAAsF,EAAA,GACA5/G,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAAyCF,GAAA,IAAQA,EAAA,CAOjD,IANAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAiiG,cAAAl0F,EAAqDi0F,EAAA,IACrDhiG,KAAAooF,gBAAAr6E,EAAuDi0F,EAAA,GAC7BA,EAAA,IAC1BG,EAAAniG,KAAAihG,cAAAz+G,GAEA4/G,GAAA,GACApiG,KAAA88F,aAAAsF,IAAAD,GACAE,EAAAriG,KAAA88F,aAAAsF,GACAtjE,EAAA9+B,KAAA+8F,oBAAAqF,GAGA7X,EAFA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,cAGA/sB,IAAAlE,GACAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GAEAA,EAAA48G,GAEAD,IACAz4G,EAAA04G,EAEA14G,IAAAlE,GACAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GAEAkE,EAAAlE,EAAA08G,IAUArB,GAAAr/G,UAAAwgH,cAAA,SAAAl0F,EAAAwI,GACAxI,EAAAu0F,WAAAtiG,KAAA+gG,kBAAAlF,YAAAtlF,IAUAuqF,GAAAr/G,UAAA2mG,gBAAA,SAAAr6E,EAAAwI,EAAAymB,GACAjvB,EAAAu0F,WAAAtiG,KAAA+gG,kBAAAjF,cAAAvlF,GACAxI,EAAA4xF,UAAA3/F,KAAA+gG,kBAAArF,YAAA1+D,IAOA8jE,GAAAr/G,UAAA+zF,mBAAA,SAAAz4C,EAAAnB,GACA,IAAAm+C,EAAAK,EACA,GAAAx+C,EAAA,CACA,IAAAq+C,EAAAr+C,EAAA7R,cACA/pB,KAAAszB,OAAAlK,SAAA6wD,GACAomB,GAAA5tG,gBACA,IAAAynF,EAAAt+C,EAAA5R,oBACAhqB,KAAAszB,OAAAhK,eAAA4wD,GACAmmB,GAAA3tG,sBAQAqnF,GAPAA,EAAAn+C,EAAA/R,sBACA5R,gBACA8hE,aAAA/hE,cAKAqoF,GAAAxtG,mBAJA4qC,GAAA,EAAAnnB,QAAAyjE,GAAA7lE,IAAA,SAAAnmB,EAAAvL,GACA,UAAAA,EAAAuL,EAAA,IAAAA,KACOsyG,GAAAxtG,mBAKPunF,OAAA7uF,KADA6uF,EAAAx+C,EAAA90C,YAEAszF,EAAAimB,GAAAptG,sBAEA8mF,GAAA,SACAK,EAAA,EAEA,IAAAN,EAAA/8C,IAAAlT,YAAA,SAOAiwD,EANAA,aAAA7hE,gBACA6hE,aAAA9hE,cAKAqoF,GAAA9tG,iBAJAkrC,GAAA,EAAAnnB,QAAAwjE,GAAA5lE,IAAA,SAAAnmB,EAAAvL,GACA,UAAAA,EAAAuL,EAAA,IAAAA,KACKsyG,GAAA9tG,iBAILyN,KAAAszB,OAAA6tE,aAAAhxF,EAAA,EAAApqB,OAAAia,KAAAszB,OAAA6tE,YAAApnB,IACA/5E,KAAAszB,OAAA4tE,WAAA/wF,EAAA,EAAApqB,OAAAia,KAAAszB,OAAA4tE,UAAApnB,IACA95E,KAAAszB,OAAA0J,YAAAo9C,IACAp6E,KAAAszB,OAAA7d,SAAA,EACAzV,KAAAszB,OAAA4tE,UAAApnB,EACA95E,KAAAszB,OAAA6tE,YAAApnB,EACA/5E,KAAAszB,OAAA0J,UAAAo9C,EACAp6E,KAAAghG,QAAA/0G,MAAA6tF,EAAAC,EAAAK,MAGA,IAAAmoB,GAAA,GC9ZAC,MAGAA,GAAAzH,SAAA,IAAAA,GAAAr3F,EAAA,EAAAljB,YACA,kXACA,mPAEAgiH,GAAAvH,OAAA,IAAAA,GAAAv3F,EAAA,EAAAljB,YACA,mqBACA,iUACA,IAAAiiH,GAAA,GC0DAC,GA/DA,SAAA30F,EAAAstF,GAKAr7F,KAAAs7F,mBAAAvtF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,0BAKAwf,KAAAw7F,oBAAAztF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,2BAKAwf,KAAAy7F,qBAAA1tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,4BAKAwf,KAAA47F,UAAA7tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAA2iG,QAAA50F,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,eAKAwf,KAAAg8F,WAAAjuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,kBAKAwf,KAAA4iG,WAAA70F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,kBAKAwf,KAAA6iG,UAAA90F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAA8iG,UAAA/0F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAA+iG,iBAAAh1F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,yBC7DAwiH,IAJAC,KAAA,mBACAC,SAAA,wBCYAC,GAAA,SAAA1xG,EAAAsc,GAMA/N,KAAAi6B,QAAAxoC,EAMAuO,KAAAojG,IAAAr1F,EAMA/N,KAAAqjG,gBAMArjG,KAAAsjG,gBAMAtjG,KAAAujG,iBAMAvjG,KAAAwjG,gBAAA,KAMAxjG,KAAAyjG,yBAAA,KAMAzjG,KAAA0jG,qBAAA,KAMA1jG,KAAA2jG,0BAAA,KAKA3jG,KAAA8/F,uBAAA3vF,EAAA,EAAA/T,SACAsH,EAAA,EAAAriB,iBAAA,0BAGA2e,KAAA8/F,wBACA/xF,EAAA61F,aAAA,0BAGAr/B,EAAA,EAAAz4E,OAAAkU,KAAAi6B,QAAA+oE,GAAAC,KACAjjG,KAAA6jG,uBAAA7jG,MACAukE,EAAA,EAAAz4E,OAAAkU,KAAAi6B,QAAA+oE,GAAAE,SACAljG,KAAA8jG,2BAAA9jG,OAIA0D,EAAA,EAAApiB,SAAA6hH,GAAA97C,GAAA,GAUA87C,GAAA1hH,UAAA69G,WAAA,SAAA10G,EAAAm5G,GACA,IAAAh2F,EAAA/N,KAAAo+F,QACA/hG,EAAA0nG,EAAA3zF,WACA4zF,EAAAlrF,OAAApV,EAAA,EAAA5hB,OAAAiiH,IACA,GAAAC,KAAAhkG,KAAAqjG,aAAA,CACA,IAAAY,EAAAjkG,KAAAqjG,aAAAW,GACAj2F,EAAAuxF,WAAA10G,EAAAq5G,EAAAxgH,YACG,CACH,IAEmCygH,EAFnCzgH,EAAAsqB,EAAAo2F,eACAp2F,EAAAuxF,WAAA10G,EAAAnH,GAEAmH,GAAAkwG,GAAA,EAAAnrG,aACAu0G,EAAA,IAAAE,aAAA/nG,GACKzR,GAAAkwG,GAAA,EAAAlrG,uBACLs0G,EAAAlkG,KAAA8/F,uBACA,IAAAuE,YAAAhoG,GAAA,IAAAioG,YAAAjoG,IAEA0R,EAAAw2F,WAAA35G,EAAAs5G,EAAAH,EAAAnD,YACA5gG,KAAAqjG,aAAAW,IACAD,MACAtgH,YASA0/G,GAAA1hH,UAAA8/G,aAAA,SAAAwC,GACA,IAAAh2F,EAAA/N,KAAAo+F,QACA4F,EAAAlrF,OAAApV,EAAA,EAAA5hB,OAAAiiH,IACAE,EAAAjkG,KAAAqjG,aAAAW,GACAj2F,EAAAy2F,iBACAz2F,EAAAwzF,aAAA0C,EAAAxgH,eAEAuc,KAAAqjG,aAAAW,IAOAb,GAAA1hH,UAAAgxB,gBAAA,WACA8xD,EAAA,EAAAh4E,YAAAyT,KAAAi6B,SACA,IAAAlsB,EAAA/N,KAAAo+F,QACA,IAAArwF,EAAAy2F,gBAAA,CACA,IAAAp4G,EACA,IAAAA,KAAA4T,KAAAqjG,aACAt1F,EAAAwzF,aAAAvhG,KAAAqjG,aAAAj3G,GAAA3I,QAEA,IAAA2I,KAAA4T,KAAAujG,cACAx1F,EAAA02F,cAAAzkG,KAAAujG,cAAAn3G,IAEA,IAAAA,KAAA4T,KAAAsjG,aACAv1F,EAAA22F,aAAA1kG,KAAAsjG,aAAAl3G,IAGA2hB,EAAA42F,kBAAA3kG,KAAAyjG,0BACA11F,EAAA62F,mBAAA5kG,KAAA2jG,2BACA51F,EAAA82F,cAAA7kG,KAAA0jG,wBAQAP,GAAA1hH,UAAAqjH,UAAA,WACA,OAAA9kG,KAAAi6B,SASAkpE,GAAA1hH,UAAA28G,MAAA,WACA,OAAAp+F,KAAAojG,KAQAD,GAAA1hH,UAAAsjH,2BAAA,WAIA,OAHA/kG,KAAAyjG,0BACAzjG,KAAAglG,+BAEAhlG,KAAAyjG,0BAUAN,GAAA1hH,UAAAwjH,UAAA,SAAAC,GACA,IAAAC,EAAArsF,OAAApV,EAAA,EAAA5hB,OAAAojH,IACA,GAAAC,KAAAnlG,KAAAsjG,aACA,OAAAtjG,KAAAsjG,aAAA6B,GAEA,IAAAp3F,EAAA/N,KAAAo+F,QACAgH,EAAAr3F,EAAAs3F,aAAAH,EAAA3jG,WAIA,OAHAwM,EAAAu3F,aAAAF,EAAAF,EAAA/vF,aACApH,EAAAw3F,cAAAH,GACAplG,KAAAsjG,aAAA6B,GAAAC,EACAA,GAaAjC,GAAA1hH,UAAAigH,WAAA,SACA8D,EAAAC,GACA,IAAAC,EACAhiG,EAAA,EAAA5hB,OAAA0jH,GAAA,IAAA9hG,EAAA,EAAA5hB,OAAA2jH,GACA,GAAAC,KAAA1lG,KAAAujG,cACA,OAAAvjG,KAAAujG,cAAAmC,GAEA,IAAA33F,EAAA/N,KAAAo+F,QACA/C,EAAAttF,EAAA43F,gBAKA,OAJA53F,EAAA63F,aAAAvK,EAAAr7F,KAAAilG,UAAAO,IACAz3F,EAAA63F,aAAAvK,EAAAr7F,KAAAilG,UAAAQ,IACA13F,EAAA83F,YAAAxK,GACAr7F,KAAAujG,cAAAmC,GAAArK,EACAA,GAQA8H,GAAA1hH,UAAAoiH,uBAAA,WACA9hH,EAAA,EAAA6J,MAAAoU,KAAAqjG,cACAthH,EAAA,EAAA6J,MAAAoU,KAAAsjG,cACAvhH,EAAA,EAAA6J,MAAAoU,KAAAujG,eACAvjG,KAAAwjG,gBAAA,KACAxjG,KAAAyjG,yBAAA,KACAzjG,KAAA0jG,qBAAA,KACA1jG,KAAA2jG,0BAAA,MAOAR,GAAA1hH,UAAAqiH,2BAAA,aAQAX,GAAA1hH,UAAAujH,6BAAA,WACA,IAAAj3F,EAAA/N,KAAAojG,IACA0C,EAAA/3F,EAAAg4F,oBACAh4F,EAAAi4F,gBAAAj4F,EAAAzc,YAAAw0G,GAEA,IAAAG,EAAA9C,GAAA+C,mBAAAn4F,EAAA,KACAo4F,EAAAp4F,EAAAq4F,qBACAr4F,EAAAs4F,iBAAAt4F,EAAAu4F,aAAAH,GACAp4F,EAAAw4F,oBAAAx4F,EAAAu4F,aAAAv4F,EAAAy4F,kBAAA,KACAz4F,EAAA04F,qBACA14F,EAAAzc,YAAAyc,EAAAze,kBAAAye,EAAA7c,WAAA+0G,EAAA,GACAl4F,EAAA24F,wBAAA34F,EAAAzc,YAAAyc,EAAA44F,iBACA54F,EAAAu4F,aAAAH,GAEAp4F,EAAA64F,YAAA74F,EAAA7c,WAAA,MACA6c,EAAAs4F,iBAAAt4F,EAAAu4F,aAAA,MACAv4F,EAAAi4F,gBAAAj4F,EAAAzc,YAAA,MAEA0O,KAAAyjG,yBAAAqC,EACA9lG,KAAA0jG,qBAAAuC,EACAjmG,KAAA2jG,0BAAAwC,GAUAhD,GAAA1hH,UAAAkgH,WAAA,SAAAtG,GACA,OAAAA,GAAAr7F,KAAAwjG,kBAGAxjG,KAAAo+F,QACAuD,WAAAtG,GACAr7F,KAAAwjG,gBAAAnI,GACA,IAYA8H,GAAA0D,eAAA,SAAA94F,EAAA+4F,EAAAC,GACA,IAAAd,EAAAl4F,EAAAi5F,gBAcA,OAbAj5F,EAAA64F,YAAA74F,EAAA7c,WAAA+0G,GACAl4F,EAAAk5F,cAAAl5F,EAAA7c,WAAA6c,EAAAjd,mBAAAid,EAAAld,QACAkd,EAAAk5F,cAAAl5F,EAAA7c,WAAA6c,EAAAhd,mBAAAgd,EAAAld,aAEAtF,IAAAu7G,GACA/4F,EAAAk5F,cACAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAA9pG,eAAA81G,QAEAv7G,IAAAw7G,GACAh5F,EAAAk5F,cACAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAA7pG,eAAA81G,GAGAd,GAYA9C,GAAA+C,mBAAA,SACAn4F,EAAA7Z,EAAAiB,EAAA2xG,EAAAC,GACA,IAAAd,EAAA9C,GAAA0D,eAAA94F,EAAA+4F,EAAAC,GAKA,OAJAh5F,EAAAm5F,WACAn5F,EAAA7c,WAAA,EAAA6c,EAAAtd,KAAAyD,EAAAiB,EAAA,EAAA4Y,EAAAtd,KAAAsd,EAAA1d,cACA,MAEA41G,GAWA9C,GAAA6D,cAAA,SAAAj5F,EAAAtX,EAAAqwG,EAAAC,GACA,IAAAd,EAAA9C,GAAA0D,eAAA94F,EAAA+4F,EAAAC,GAIA,OAHAh5F,EAAAm5F,WACAn5F,EAAA7c,WAAA,EAAA6c,EAAAtd,KAAAsd,EAAAtd,KAAAsd,EAAA1d,cAAAoG,GAEAwvG,GAEA,IAAAkB,GAAA,GChWAC,GAAA,SAAAhiF,EAAA+hE,GACA8Y,GAAA35G,KAAA0Z,KAAAolB,EAAA+hE,GAMAnnF,KAAA8O,aAAAvjB,EAMAyU,KAAA+O,aAAAxjB,EAMAyU,KAAAqnG,gBAMArnG,KAAAsnG,4BAMAtnG,KAAA7K,YAAA5J,EAMAyU,KAAAunG,iBAAAh8G,EAMAyU,KAAAwnG,gBAAAj8G,EAMAyU,KAAAynG,iBAAA,KAMAznG,KAAAxJ,aAAAjL,EAMAyU,KAAAtJ,aAAAnL,EAMAyU,KAAArJ,aAAApL,EAMAyU,KAAAw4B,oBAAAjtC,EAMAyU,KAAAlY,cAAAyD,EAMAyU,KAAA1R,WAAA/C,EAMAyU,KAAA9L,WAAA3I,GAGAmY,EAAA,EAAApiB,SAAA8lH,GAAAnH,IAMAmH,GAAA3lH,UAAAw7G,2BAAA,SAAAtrG,GACA,IAAAqrG,EAAAh9F,KAAAg9F,eACAH,EAAA78F,KAAA68F,cACA6K,EAAA1nG,KAAA2nG,aAAA,GACA55F,EAAApc,EAAAysG,QACA,kBAEA,IAAA57G,EAAAC,EADA,IAAAsrB,EAAAy2F,gBAEA,IAAAhiH,EAAA,EAAAC,EAAAilH,EAAAhlH,OAAuCF,EAAAC,IAAQD,EAC/CurB,EAAA82F,cAAA6C,EAAAllH,IAGAmP,EAAA4vG,aAAAvE,GACArrG,EAAA4vG,aAAA1E,KAaAuK,GAAA3lH,UAAAmmH,gBAAA,SAAAriH,EAAAC,EAAAC,EAAAC,GACA,IAiBAlD,EAAAiX,EAAAtD,EAAAC,EAAAtS,EAAAC,EAjBA+qB,EAAkC9O,KAAA,QAClC+O,EAAkC/O,KAAA,QAClC7K,EAAiC6K,KAAA,OACjCunG,EAAsCvnG,KAAA,YACtCwnG,EAAqCxnG,KAAA,WACrCxJ,EAAkCwJ,KAAA,QAClCtJ,EAAkCsJ,KAAA,QAClCrJ,EAAkCqJ,KAAA,QAClCw4B,EAAAx4B,KAAAw4B,eAAA,IAEA1wC,GAAmCkY,KAAAlY,SACnCwG,EAAgC0R,KAAA,MAChC9L,EAAgC8L,KAAA,MAChC/X,EAAAhF,KAAAgF,IAAAH,GACAK,EAAAlF,KAAAkF,IAAAL,GACAu5G,EAAArhG,KAAA48F,QAAAl6G,OACA0+G,EAAAphG,KAAA2H,SAAAjlB,OAEA,IAAAF,EAAAgD,EAAkBhD,EAAAiD,EAASjD,GAAAkD,EAC3B5B,EAAAyB,EAAA/C,GAAAwd,KAAAkgB,OAAA,GACAn8B,EAAAwB,EAAA/C,EAAA,GAAAwd,KAAAkgB,OAAA,GAYAzmB,EAAA2nG,EAAA,EAGAjrG,GAAA7H,EAAAwgB,EACA1Y,GAAA9H,GAAA6G,EAAA4Z,GACA/O,KAAA2H,SAAAy5F,KAAAt9G,EACAkc,KAAA2H,SAAAy5F,KAAAr9G,EACAic,KAAA2H,SAAAy5F,KAAAjrG,EAAAlO,EAAAmO,EAAAjO,EACA6X,KAAA2H,SAAAy5F,KAAAjrG,EAAAhO,EAAAiO,EAAAnO,EACA+X,KAAA2H,SAAAy5F,KAAA1qG,EAAA8wG,EACAxnG,KAAA2H,SAAAy5F,MAAAzqG,EAAAxB,GAAAoyG,EACAvnG,KAAA2H,SAAAy5F,KAAA5qG,EACAwJ,KAAA2H,SAAAy5F,KAAA5oE,EAGAriC,EAAA7H,GAAA4F,EAAA4a,GACA1Y,GAAA9H,GAAA6G,EAAA4Z,GACA/O,KAAA2H,SAAAy5F,KAAAt9G,EACAkc,KAAA2H,SAAAy5F,KAAAr9G,EACAic,KAAA2H,SAAAy5F,KAAAjrG,EAAAlO,EAAAmO,EAAAjO,EACA6X,KAAA2H,SAAAy5F,KAAAjrG,EAAAhO,EAAAiO,EAAAnO,EACA+X,KAAA2H,SAAAy5F,MAAA1qG,EAAAxC,GAAAszG,EACAxnG,KAAA2H,SAAAy5F,MAAAzqG,EAAAxB,GAAAoyG,EACAvnG,KAAA2H,SAAAy5F,KAAA5qG,EACAwJ,KAAA2H,SAAAy5F,KAAA5oE,EAGAriC,EAAA7H,GAAA4F,EAAA4a,GACA1Y,EAAA9H,EAAAygB,EACA/O,KAAA2H,SAAAy5F,KAAAt9G,EACAkc,KAAA2H,SAAAy5F,KAAAr9G,EACAic,KAAA2H,SAAAy5F,KAAAjrG,EAAAlO,EAAAmO,EAAAjO,EACA6X,KAAA2H,SAAAy5F,KAAAjrG,EAAAhO,EAAAiO,EAAAnO,EACA+X,KAAA2H,SAAAy5F,MAAA1qG,EAAAxC,GAAAszG,EACAxnG,KAAA2H,SAAAy5F,KAAAzqG,EAAA4wG,EACAvnG,KAAA2H,SAAAy5F,KAAA5qG,EACAwJ,KAAA2H,SAAAy5F,KAAA5oE,EAGAriC,GAAA7H,EAAAwgB,EACA1Y,EAAA9H,EAAAygB,EACA/O,KAAA2H,SAAAy5F,KAAAt9G,EACAkc,KAAA2H,SAAAy5F,KAAAr9G,EACAic,KAAA2H,SAAAy5F,KAAAjrG,EAAAlO,EAAAmO,EAAAjO,EACA6X,KAAA2H,SAAAy5F,KAAAjrG,EAAAhO,EAAAiO,EAAAnO,EACA+X,KAAA2H,SAAAy5F,KAAA1qG,EAAA8wG,EACAxnG,KAAA2H,SAAAy5F,KAAAzqG,EAAA4wG,EACAvnG,KAAA2H,SAAAy5F,KAAA5qG,EACAwJ,KAAA2H,SAAAy5F,KAAA5oE,EAEAx4B,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EAGA,OAAA2nG,GAYAgG,GAAA3lH,UAAAomH,eAAA,SAAAH,EAAAI,EAAAC,EAAAh6F,GACA,IAAAk4F,EAAAxvG,EAAA0xB,EAAA3lC,EACAC,EAAAqlH,EAAAplH,OACA,IAAAF,EAAA,EAAaA,EAAAC,IAAQD,EACrBiU,EAAAqxG,EAAAtlH,IAEA2lC,EAAAzkB,EAAA,EAAA5hB,OAAA2U,GAAAigB,cACAqxF,EACA9B,EAAA8B,EAAA5/E,IAEA89E,EAAAkB,GAAAH,cACAj5F,EAAAtX,EAAAqkG,GAAA,EAAA1pG,cAAA0pG,GAAA,EAAA1pG,eACA22G,EAAA5/E,GAAA89E,GAEAyB,EAAAllH,GAAAyjH,GAQAmB,GAAA3lH,UAAAy7G,aAAA,SAAAnvF,EAAApc,EAAA5J,EAAA+tC,GAEA,IAKAsnE,EALAoE,EAAAiB,GAAA1H,SACA0G,EAAAgB,GAAAxH,OACAI,EAAA1pG,EAAA+vG,WAAAF,EAAAC,GAmCA,OA/BAzhG,KAAAynG,iBAIArK,EAAAp9F,KAAAynG,kBAHArK,EAAA,IAAAsF,GAAA30F,EAAAstF,GACAr7F,KAAAynG,iBAAArK,GAMAzrG,EAAAgwG,WAAAtG,GAGAttF,EAAA6zF,wBAAAxE,EAAApB,YACAjuF,EAAA8zF,oBAAAzE,EAAApB,WAAA,EAAAlB,GAAA,EAAAtqG,OACA,QAEAud,EAAA6zF,wBAAAxE,EAAAyF,WACA90F,EAAA8zF,oBAAAzE,EAAAyF,UAAA,EAAA/H,GAAA,EAAAtqG,OACA,QAEAud,EAAA6zF,wBAAAxE,EAAAwF,YACA70F,EAAA8zF,oBAAAzE,EAAAwF,WAAA,EAAA9H,GAAA,EAAAtqG,OACA,SAEAud,EAAA6zF,wBAAAxE,EAAA0F,WACA/0F,EAAA8zF,oBAAAzE,EAAA0F,UAAA,EAAAhI,GAAA,EAAAtqG,OACA,SAEAud,EAAA6zF,wBAAAxE,EAAA2F,kBACAh1F,EAAA8zF,oBAAAzE,EAAA2F,iBAAA,EAAAjI,GAAA,EAAAtqG,OACA,SAEA4sG,GAOAgK,GAAA3lH,UAAA07G,gBAAA,SAAApvF,EAAAqvF,GACArvF,EAAAg0F,yBAAA3E,EAAApB,YACAjuF,EAAAg0F,yBAAA3E,EAAAyF,WACA90F,EAAAg0F,yBAAA3E,EAAAwF,YACA70F,EAAAg0F,yBAAA3E,EAAA0F,WACA/0F,EAAAg0F,yBAAA3E,EAAA2F,mBAOAqE,GAAA3lH,UAAA47G,WAAA,SAAAtvF,EAAApc,EAAA44F,EAAA+S,GACA,IAOA96G,EAAAC,EAAAkH,EAPA+9G,EAAApK,EAAAt9F,KAAAgoG,0BAAAhoG,KAAA2nG,cACAN,EAAA/J,EAAAt9F,KAAAsnG,yBAAAtnG,KAAAqnG,aAEA,GAAAtlH,EAAA,EAAA8E,QAAA0jG,GAKA,IAAA/nG,EAAA,EAAAC,EAAAilH,EAAAhlH,OAAAiH,EAAA,EAAgDnH,EAAAC,IAAQD,EAAA,CACxDurB,EAAA64F,YAAA9L,GAAA,EAAA5pG,WAAAw2G,EAAAllH,IACA,IAAAiD,EAAA4hH,EAAA7kH,GACAwd,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAkE,EAAAlE,OARAua,KAAAioG,mBACAl6F,EAAApc,EAAA44F,EAAAmd,EAAAL,IAuCAD,GAAA3lH,UAAAwmH,mBAAA,SAAAl6F,EAAApc,EAAA44F,EAAAmd,EACAL,GACA,IAEA7kH,EAAAC,EAFA2/G,EAAA,EAGA,IAAA5/G,EAAA,EAAAC,EAAAilH,EAAAhlH,OAAmCF,EAAAC,IAAQD,EAAA,CAC3CurB,EAAA64F,YAAA9L,GAAA,EAAA5pG,WAAAw2G,EAAAllH,IAMA,IALA,IAAA2/G,EAAA3/G,EAAA,EAAA6kH,EAAA7kH,EAAA,KACA0lH,EAAAb,EAAA7kH,GAEAmH,EAAAw4G,EACA18G,EAAA08G,EACAC,EAAApiG,KAAA88F,aAAAp6G,QACAsd,KAAA88F,aAAAsF,IAAA8F,GAAA,CACA,IAAAppE,EAAA9+B,KAAA+8F,oBAAAqF,QAGA72G,IAAAg/F,EADA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,aAGA/sB,IAAAlE,GAEAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GAKAA,EAFAkE,EAAAy4G,IAAApiG,KAAA88F,aAAAp6G,OAAA,EACAwlH,EAAAloG,KAAA88F,aAAAsF,EAAA,IAIA38G,EAAA28G,IAAApiG,KAAA88F,aAAAp6G,OAAA,EACAwlH,EAAAloG,KAAA88F,aAAAsF,EAAA,GAEAA,IAGAz4G,IAAAlE,GAGAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,KASA2hH,GAAA3lH,UAAA87G,+BAAA,SAAAxvF,EAAApc,EAAA44F,EACAC,EAAAC,GACA,IAAAjoG,EAAA2/G,EAAAx4G,EAAAlE,EAAAq5C,EACAsjE,EAAApiG,KAAA88F,aAAAp6G,OAAA,EACAylH,EAAAnoG,KAAAgoG,0BACA,IAAAxlH,EAAA2lH,EAAAzlH,OAAA,EAA2CF,GAAA,IAAQA,EAMnD,IALAurB,EAAA64F,YAAA9L,GAAA,EAAA5pG,WAAAi3G,EAAA3lH,IACA2/G,EAAA3/G,EAAA,EAAAwd,KAAAsnG,yBAAA9kH,EAAA,KACAiD,EAAAua,KAAAsnG,yBAAA9kH,GAGA4/G,GAAA,GACApiG,KAAA88F,aAAAsF,IAAAD,GAAA,CAKA,GAJAx4G,EAAAqW,KAAA88F,aAAAsF,GACAtjE,EAAA9+B,KAAA+8F,oBAAAqF,QAGA72G,IAAAg/F,EAFA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,aAGAooB,EAAAT,qBACA9yC,IAAAk/F,GAAAxgF,EAAA,EAAA9gB,WACuC,EACvC21C,EAAAT,cAAAl6B,cAAA,CACA4J,EAAAniB,MAAAmiB,EAAAxe,iBAAAwe,EAAA4vF,kBACA39F,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GAEA,IAAA+xB,EAAAgzE,EAAA1rD,GACA,GAAAtnB,EACA,OAAAA,EAIA/xB,EAAAkE,EACAy4G,MAUAgF,GAAA3lH,UAAA2rG,OAAA,SAAAz7F,GACAqO,KAAA8O,aAAAvjB,EACAyU,KAAA+O,aAAAxjB,EACAyU,KAAA7K,YAAA5J,EACAyU,KAAAunG,iBAAAh8G,EACAyU,KAAAwnG,gBAAAj8G,EACAyU,KAAA48F,QAAA,KACA58F,KAAAxJ,aAAAjL,EACAyU,KAAAtJ,aAAAnL,EACAyU,KAAArJ,aAAApL,EACAyU,KAAAw4B,oBAAAjtC,EACAyU,KAAAlY,cAAAyD,EACAyU,KAAA1R,WAAA/C,EACAyU,KAAA2H,SAAA,KACA3H,KAAA9L,WAAA3I,GAUA67G,GAAA3lH,UAAAkmH,YAAA,SAAAS,KAQAhB,GAAA3lH,UAAAumH,wBAAA,aACA,IAAAK,GAAA,GCleAC,GAAA,SAAAljF,EAAA+hE,GACAkhB,GAAA/hH,KAAA0Z,KAAAolB,EAAA+hE,GAMAnnF,KAAAuoG,WAMAvoG,KAAAwoG,uBAMAxoG,KAAAyoG,aAMAzoG,KAAA0oG,0BAIAhlG,EAAA,EAAApiB,SAAAgnH,GAAAD,IAMAC,GAAA7mH,UAAAszF,eAAA,SAAAC,EAAAl2C,GACA9+B,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAA+8F,oBAAA9wG,KAAA6yC,GACA,IAAAv5C,EAAAyvF,EAAAz6D,qBACA70B,EAAAsvF,EAAA95D,YACAlb,KAAA4nG,gBACAriH,EAAA,EAAAA,EAAA7C,OAAAgD,IAOA4iH,GAAA7mH,UAAA0zF,UAAA,SAAAC,EAAAt2C,GACA9+B,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAA+8F,oBAAA9wG,KAAA6yC,GACA,IAAAv5C,EAAA6vF,EAAA76D,qBACA70B,EAAA0vF,EAAAl6D,YACAlb,KAAA4nG,gBACAriH,EAAA,EAAAA,EAAA7C,OAAAgD,IAOA4iH,GAAA7mH,UAAA2rG,OAAA,SAAAz7F,GACA,IAAAoc,EAAApc,EAAAysG,QAEAp+F,KAAAqnG,aAAAp7G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAsnG,yBAAAr7G,KAAA+T,KAAA48F,QAAAl6G,QAGAsd,KAAAg9F,eAAA,IAAA6D,GAAA7gG,KAAA2H,UAEA,IAAAi1F,EAAA58F,KAAA48F,QAGA58F,KAAA68F,cAAA,IAAAgE,GAAAjE,GAIA,IAAAmL,KAEA/nG,KAAA6nG,eAAA7nG,KAAAyoG,UAAAzoG,KAAAuoG,QAAAR,EAAAh6F,GAEA/N,KAAA6nG,eAAA7nG,KAAA0oG,sBAAA1oG,KAAAwoG,oBACAT,EAAAh6F,GAEA/N,KAAAuoG,QAAA,KACAvoG,KAAAwoG,oBAAA,KACAH,GAAA5mH,UAAA2rG,OAAA9mG,KAAA0Z,KAAArO,IAOA22G,GAAA7mH,UAAAg0F,cAAA,SAAAC,GACA,IAWAizB,EAXA95F,EAAA6mE,EAAAz8C,YACAxiC,EAAAi/E,EAAAx8C,SAAA,GACAyC,EAAA+5C,EAAAr8C,eACA20D,EAAAtY,EAAAv8C,qBAAA,GACA3iC,EAAAk/E,EAAA3+C,aACA7W,EAAAw1D,EAAAt0D,YACAoX,EAAAk9C,EAAA78C,oBACA/wC,EAAA4tF,EAAA58C,cACA/wC,EAAA2tF,EAAArsF,UACAiF,EAAAonF,EAAA38C,WAGA,IAAA/4B,KAAAuoG,QAAA7lH,OACAsd,KAAAuoG,QAAAt8G,KAAAwK,IAEAkyG,EAAA3oG,KAAAuoG,QAAAvoG,KAAAuoG,QAAA7lH,OAAA,GACAghB,EAAA,EAAA5hB,OAAA6mH,IAAAjlG,EAAA,EAAA5hB,OAAA2U,KACAuJ,KAAAqnG,aAAAp7G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAuoG,QAAAt8G,KAAAwK,KAIA,IAAAuJ,KAAAwoG,oBAAA9lH,OACAsd,KAAAwoG,oBAAAv8G,KAAA+hG,IAEA2a,EACA3oG,KAAAwoG,oBAAAxoG,KAAAwoG,oBAAA9lH,OAAA,GACAghB,EAAA,EAAA5hB,OAAA6mH,IAAAjlG,EAAA,EAAA5hB,OAAAksG,KACAhuF,KAAAsnG,yBAAAr7G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAwoG,oBAAAv8G,KAAA+hG,KAIAhuF,KAAA8O,QAAAD,EAAA,GACA7O,KAAA+O,QAAAF,EAAA,GACA7O,KAAA7K,OAAApN,EAAA,GACAiY,KAAAunG,YAAA5rE,EAAA,GACA37B,KAAAwnG,WAAA7rE,EAAA,GACA37B,KAAAxJ,UACAwJ,KAAAtJ,QAAAwpB,EAAA,GACAlgB,KAAArJ,QAAAupB,EAAA,GACAlgB,KAAAlY,WACAkY,KAAAw4B,iBACAx4B,KAAA1R,QACA0R,KAAA9L,MAAAnM,EAAA,IAOAugH,GAAA7mH,UAAAkmH,YAAA,SAAAS,GACA,OAAAA,EAAApoG,KAAAyoG,UAAA5/E,OAAA7oB,KAAA0oG,uBAAA1oG,KAAAyoG,WAOAH,GAAA7mH,UAAAumH,wBAAA,WACA,OAAAhoG,KAAA0oG,uBAEA,IAAAE,GAAA,qBCtKAC,IAUAC,mBAAA,SAAAvjH,EAAAC,EAAAC,EAAAC,GACA,IAAA6jG,EAAA9jG,EAAAC,EACA,OAAAH,EAAAC,KAAAD,EAAAgkG,IACAhkG,EAAAC,EAAA,KAAAD,EAAAgkG,EAAA,KAAA9jG,EAAAD,GAAAE,EAAA,KACA27C,GAAA,EAAAtP,WAAAxsC,EAAAC,EAAAC,EAAAC,KAIAqjH,GAAA,GCfAC,MAGAA,GAAAjO,SAAA,IAAAA,GAAAr3F,EAAA,EAAAljB,YACA,spBACA,4XAEAwoH,GAAA/N,OAAA,IAAAA,GAAAv3F,EAAA,EAAAljB,YACA,4/KACA,4wHACA,IAAAyoH,GAAA,GC4EAC,GAjFA,SAAAn7F,EAAAstF,GAKAr7F,KAAAs7F,mBAAAvtF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,0BAKAwf,KAAAw7F,oBAAAztF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,2BAKAwf,KAAAy7F,qBAAA1tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,4BAKAwf,KAAA07F,YAAA3tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,mBAKAwf,KAAAmpG,aAAAp7F,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,oBAKAwf,KAAA47F,UAAA7tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAAopG,QAAAr7F,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,eAKAwf,KAAA+7F,OAAAhuF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,cAKAwf,KAAA27F,aAAA5tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,oBAKAwf,KAAAqpG,UAAAt7F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAAg8F,WAAAjuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,kBAKAwf,KAAAspG,UAAAv7F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAAupG,YAAAx7F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,oBCjEAgpH,GAAA,SAAApkF,EAAA+hE,GACA8Y,GAAA35G,KAAA0Z,KAAAolB,EAAA+hE,GAMAnnF,KAAA+gG,kBAAA,KAMA/gG,KAAAghG,WAMAhhG,KAAAihG,iBAaAjhG,KAAAszB,QACA6tE,YAAA,KACAj4E,aAAA39B,EACA69B,SAAA,KACAE,oBAAA/9B,EACAi+B,cAAAj+B,EACAyxC,eAAAzxC,EACAm+B,gBAAAn+B,EACAkqB,SAAA,IAKA/R,EAAA,EAAApiB,SAAAkoH,GAAAvJ,IAWAuJ,GAAA/nH,UAAAqsG,iBAAA,SAAAvoG,EAAAC,EAAAC,EAAAC,GAEA,IAAAlD,EAAAC,EAWAgnH,EAAAC,EAAAjwG,EAIAi+C,EAAAC,EAAAC,EAdAwpD,EAAAphG,KAAA2H,SAAAjlB,OACA2+G,EAAArhG,KAAA48F,QAAAl6G,OAIA8mC,EAAA,UAAAxpB,KAAAszB,OAAA9J,SAAA,EACA,UAAAxpB,KAAAszB,OAAA9J,SAAA,IACAN,EAAA,SAAAlpB,KAAAszB,OAAApK,QAAA,EACA,WAAAlpB,KAAAszB,OAAApK,QAAA,IACA+/D,EAAA8f,GAAAD,mBAAAvjH,EAAAC,EAAAC,EAAAC,GAEAg8D,EAAA2/C,EACAsI,EAAA,EAIA,IAAAnnH,EAAAgD,EAAA/C,EAAAgD,EAA4BjD,EAAAC,EAAQD,GAAAkD,EAAA,CAOpC,GALA+T,EAAA2nG,EAAA,EAEA1pD,EAAAC,EACAA,EAAAC,IAAAryD,EAAA/C,GAAA+C,EAAA/C,EAAA,IAEAA,IAAAgD,EAAA,CAEA,GADAoyD,GAAAryD,EAAA/C,EAAAkD,GAAAH,EAAA/C,EAAAkD,EAAA,IACAD,EAAAD,GAAA,EAAAE,GAAAyqB,EAAA,EAAApqB,OAAA4xD,EAAAC,GACA,MAEA,IAAAqxC,EAMO,CAGP//D,IACAk4E,EAAAphG,KAAA4pG,cAAA,KAAAjyD,EAAAC,EACA+xD,EAAAH,GAAAK,aAAAC,eAAA5gF,EAAAk4E,GAEAA,EAAAphG,KAAA4pG,cAAA,KAAAjyD,EAAAC,GACA+xD,EAAAH,GAAAK,aAAAC,eAAA5gF,EAAAk4E,GAEAphG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EAEAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,GAIA2nG,EAAAphG,KAAA4pG,cAAA,KAAAjyD,EAAAC,EACA+xD,EAAAH,GAAAK,aAAAE,YAAA7gF,GAAA,GAAAk4E,GAKA1/C,GAHA0/C,EAAAphG,KAAA4pG,cAAA,KAAAjyD,EAAAC,GACA+xD,EAAAH,GAAAK,aAAAE,YAAA7gF,GAAA,GAAAk4E,IAEA,IAEA,SAhCA1pD,GAAAnyD,EAAAE,EAAA,EAAAC,GACAH,EAAAE,EAAA,EAAAC,EAAA,IAEA+jH,EAAA7xD,MA+BK,IAAAp1D,IAAAiD,EAAAC,EAAA,CAEL,GAAAujG,EAAA,CAEArxC,EAAA6xD,EACA,MAEA/xD,MAAA,KAEA0pD,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,GAAA,KACAgyD,EAAAH,GAAAK,aAAAG,UAAA9gF,GAAA,GAAAk4E,GAEAA,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,GAAA,MACAgyD,EAAAH,GAAAK,aAAAG,UAAA9gF,GAAA,GAAAk4E,GAEAphG,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA3/C,EAAA,EACA1hD,KAAA48F,QAAAyE,KAAA3/C,EAEA1hD,KAAA48F,QAAAyE,KAAA3/C,EACA1hD,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAEAyvB,IACAk4E,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,GAAA,KACAgyD,EAAAH,GAAAK,aAAAI,aAAA/gF,EAAAk4E,GAEAA,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,GAAA,MACAgyD,EAAAH,GAAAK,aAAAI,aAAA/gF,EAAAk4E,GAEAphG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EAEAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,GAIA,MAGAm+C,GAAAryD,EAAA/C,EAAAkD,GAAAH,EAAA/C,EAAAkD,EAAA,IAIAgkH,EAAArJ,GAAAF,2BAAAzoD,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,KACA,IAEAwpD,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,EAAAC,EACA8xD,EAAAF,GAAAK,aAAAK,aAAA1gF,GAAA,GAAA43E,GAEAA,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,EAAAC,EACA8xD,EAAAF,GAAAK,aAAAM,cAAA3gF,GAAA,GAAA43E,GAEAA,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,EAAAC,GACA8xD,EAAAF,GAAAK,aAAAO,cAAA5gF,GAAA,GAAA43E,GAEA5+G,EAAAgD,IACAwa,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA3/C,EAAA,EACA1hD,KAAA48F,QAAAyE,KAAA3/C,EAEA1hD,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAAsI,EAAAD,EAAA,EAAAhoD,IAAA,GAGA1hD,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EAEAioD,EAAAjoD,EAAA,EACAkwG,EAAAD,EAGAlgF,IACA43E,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,EAAAC,EACA8xD,EAAAF,GAAAK,aAAAQ,UAAA7gF,EAAA43E,GAEAphG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,GAIAwvF,IACAxvF,KAAA2nG,EAAA,EACAsI,EAAAhmE,GAAA,EAAAtf,uBAAAszB,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,WACA,KAEAwpD,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,EAAAC,EACA8xD,EAAAF,GAAAK,aAAAK,aAAA1gF,GAAA,GAAA43E,GAEAA,EAAAphG,KAAA4pG,aAAAlyD,EAAAC,EAAAC,GACA8xD,EAAAF,GAAAK,aAAAO,cAAA5gF,GAAA,GAAA43E,GAEAphG,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAA3/C,EAAA,EACA1hD,KAAA48F,QAAAyE,KAAA3/C,EAEA1hD,KAAA48F,QAAAyE,KAAA5nG,EAAA,EACAuG,KAAA48F,QAAAyE,KAAA5nG,EACAuG,KAAA48F,QAAAyE,KAAAsI,EAAAD,EAAA,EAAAhoD,IAAA,IAaA8nD,GAAA/nH,UAAAmoH,aAAA,SAAAlyD,EAAAC,EAAAC,EAAA0yD,EAAAlJ,GASA,OARAphG,KAAA2H,SAAAy5F,KAAA1pD,EAAA,GACA13C,KAAA2H,SAAAy5F,KAAA1pD,EAAA,GACA13C,KAAA2H,SAAAy5F,KAAAzpD,EAAA,GACA33C,KAAA2H,SAAAy5F,KAAAzpD,EAAA,GACA33C,KAAA2H,SAAAy5F,KAAAxpD,EAAA,GACA53C,KAAA2H,SAAAy5F,KAAAxpD,EAAA,GACA53C,KAAA2H,SAAAy5F,KAAAkJ,EAEAlJ,GAYAoI,GAAA/nH,UAAA8oH,SAAA,SAAAhlH,EAAAC,EAAAC,EAAAC,GACA,IAAA03D,EAAA33D,EAAAD,EACA,GAAA43D,EAAA,EAAA13D,EACA,SACG,GAAA03D,IAAA,EAAA13D,EAAA,CACH,IAAA8kH,GAAAjlH,EAAAC,GAAAD,EAAAC,EAAA,IACAilH,GAAAllH,EAAAC,EAAAE,GAAAH,EAAAC,EAAAE,EAAA,IACA,OAAAyqB,EAAA,EAAApqB,OAAAykH,EAAAC,GAGA,UAOAjB,GAAA/nH,UAAAkzF,eAAA,SAAAC,EAAA91C,GACA,IAAAv5C,EAAAqvF,EAAAr6D,qBACA70B,EAAAkvF,EAAA15D,YACAlb,KAAAuqG,SAAAhlH,EAAA,EAAAA,EAAA7C,OAAAgD,KACAH,EAAAyyF,GAAA,EAAAzpF,UAAAhJ,EAAA,EAAAA,EAAA7C,OACAgD,GAAAsa,KAAAkgB,OAAA,IAAAlgB,KAAAkgB,OAAA,IACAlgB,KAAAszB,OAAA7d,UACAzV,KAAAihG,cAAAh1G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAszB,OAAA7d,SAAA,GAEAzV,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAA+8F,oBAAA9wG,KAAA6yC,GACA9+B,KAAA8tF,iBACAvoG,EAAA,EAAAA,EAAA7C,OAAAgD,KAQA8jH,GAAA/nH,UAAAozF,oBAAA,SAAAC,EAAAh2C,GACA,IAAA4rE,EAAA1qG,KAAA48F,QAAAl6G,OACAw8B,EAAA41D,EAAAnxC,UACAzkB,EAAA6mE,QAAA,GACA,IAEAvjG,EAAAC,EAFA8C,EAAAuvF,EAAAv6D,qBACA70B,EAAAovF,EAAA55D,YAEA,GAAAgE,EAAAx8B,OAAA,EACA,IAAAF,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAAiCF,EAAAC,IAAQD,EACzC,GAAAwd,KAAAuqG,SAAAhlH,EAAA25B,EAAA18B,EAAA,GAAA08B,EAAA18B,GAAAkD,GAAA,CACA,IAAAgrC,EAAAsnD,GAAA,EAAAzpF,UAAAhJ,EAAA25B,EAAA18B,EAAA,GAAA08B,EAAA18B,GACAkD,GAAAsa,KAAAkgB,OAAA,IAAAlgB,KAAAkgB,OAAA,IACAlgB,KAAA8tF,iBACAp9D,EAAA,EAAAA,EAAAhuC,OAAAgD,GAIAsa,KAAA48F,QAAAl6G,OAAAgoH,IACA1qG,KAAA88F,aAAA7wG,KAAAy+G,GACA1qG,KAAA+8F,oBAAA9wG,KAAA6yC,GACA9+B,KAAAszB,OAAA7d,UACAzV,KAAAihG,cAAAh1G,KAAAy+G,GACA1qG,KAAAszB,OAAA7d,SAAA,KAWA+zF,GAAA/nH,UAAAkpH,uBAAA,SACAplH,EAAAqlH,EAAAllH,GAQA,IAAAlD,EAAAC,EADA,GANAsmH,GAAAD,mBAAAvjH,EAAA,EACAA,EAAA7C,OAAAgD,KACAH,EAAA0G,KAAA1G,EAAA,IACAA,EAAA0G,KAAA1G,EAAA,KAEAya,KAAA8tF,iBAAAvoG,EAAA,EAAAA,EAAA7C,OAAAgD,GACAklH,EAAAloH,OAEA,IAAAF,EAAA,EAAAC,EAAAmoH,EAAAloH,OAAgDF,EAAAC,IAAQD,EACxDumH,GAAAD,mBAAA8B,EAAApoH,GAAA,EACAooH,EAAApoH,GAAAE,OAAAgD,KACAklH,EAAApoH,GAAAyJ,KAAA2+G,EAAApoH,GAAA,IACAooH,EAAApoH,GAAAyJ,KAAA2+G,EAAApoH,GAAA,KAEAwd,KAAA8tF,iBAAA8c,EAAApoH,GAAA,EACAooH,EAAApoH,GAAAE,OAAAgD,IAUA8jH,GAAA/nH,UAAAopH,gBAAA,SAAA/rE,EAAAgsE,GACA,IAAAztG,OAAA9R,IAAAu/G,EAAA9qG,KAAA48F,QAAAl6G,OAAAooH,EACA9qG,KAAA88F,aAAA7wG,KAAAoR,GACA2C,KAAA+8F,oBAAA9wG,KAAA6yC,GACA9+B,KAAAszB,OAAA7d,UACAzV,KAAAihG,cAAAh1G,KAAAoR,GACA2C,KAAAszB,OAAA7d,SAAA,IAQA+zF,GAAA/nH,UAAAspH,gBAAA,WACA,OAAA/qG,KAAA48F,QAAAl6G,QAOA8mH,GAAA/nH,UAAA2rG,OAAA,SAAAz7F,GAEAqO,KAAAg9F,eAAA,IAAA6D,GAAA7gG,KAAA2H,UAGA3H,KAAA68F,cAAA,IAAAgE,GAAA7gG,KAAA48F,SAEA58F,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QAGA,IAAAsd,KAAAihG,cAAAv+G,QAAAsd,KAAAghG,QAAAt+G,OAAA,IACAsd,KAAAghG,YAGAhhG,KAAA2H,SAAA,KACA3H,KAAA48F,QAAA,MAOA4M,GAAA/nH,UAAAw7G,2BAAA,SAAAtrG,GACA,IAAAqrG,EAAAh9F,KAAAg9F,eACAH,EAAA78F,KAAA68F,cACA,kBACAlrG,EAAA4vG,aAAAvE,GACArrG,EAAA4vG,aAAA1E,KAQA2M,GAAA/nH,UAAAy7G,aAAA,SAAAnvF,EAAApc,EAAA5J,EAAA+tC,GAEA,IAAA0rE,EAAAC,EACAD,EAAAyH,GAAAlO,SACA0G,EAAAwH,GAAAhO,OACA,IAGAmC,EAHA/B,EAAA1pG,EAAA+vG,WAAAF,EAAAC,GAkCA,OA9BAzhG,KAAA+gG,kBAIA3D,EAAAp9F,KAAA+gG,mBAHA3D,EAAA,IAAA8L,GAAAn7F,EAAAstF,GACAr7F,KAAA+gG,kBAAA3D,GAKAzrG,EAAAgwG,WAAAtG,GAGAttF,EAAA6zF,wBAAAxE,EAAAiM,WACAt7F,EAAA8zF,oBAAAzE,EAAAiM,UAAA,EAAAvO,GAAA,EAAAtqG,OACA,QAEAud,EAAA6zF,wBAAAxE,EAAApB,YACAjuF,EAAA8zF,oBAAAzE,EAAApB,WAAA,EAAAlB,GAAA,EAAAtqG,OACA,QAEAud,EAAA6zF,wBAAAxE,EAAAkM,WACAv7F,EAAA8zF,oBAAAzE,EAAAkM,UAAA,EAAAxO,GAAA,EAAAtqG,OACA,SAEAud,EAAA6zF,wBAAAxE,EAAAmM,aACAx7F,EAAA8zF,oBAAAzE,EAAAmM,YAAA,EAAAzO,GAAA,EAAAtqG,OACA,SAGAud,EAAA+zF,WAAA1E,EAAArB,OAAAh0G,GACAgmB,EAAA4xF,UAAAvC,EAAAzB,aAAA7lE,GAEAsnE,GAOAoM,GAAA/nH,UAAA07G,gBAAA,SAAApvF,EAAAqvF,GACArvF,EAAAg0F,yBAAA3E,EAAAiM,WACAt7F,EAAAg0F,yBAAA3E,EAAApB,YACAjuF,EAAAg0F,yBAAA3E,EAAAkM,WACAv7F,EAAAg0F,yBAAA3E,EAAAmM,cAOAC,GAAA/nH,UAAA47G,WAAA,SAAAtvF,EAAApc,EAAA44F,EAAA+S,GAEA,IAaA96G,EAAAmH,EAAAlE,EAAAu8G,EAbAgJ,EAAuCj9F,EAAAG,aAAAH,EAAAk9F,YACvCC,EAAwCn9F,EAAAG,aAAAH,EAAAo9F,iBAQxC,GANA7N,IACAvvF,EAAA8wF,OAAA9wF,EAAA5d,YACA4d,EAAAq9F,WAAA,GACAr9F,EAAAs9F,UAAAt9F,EAAAsxF,WAGAt9G,EAAA,EAAA8E,QAAA0jG,GAMA,IADA9kG,EAAAua,KAAA88F,aAAA98F,KAAA88F,aAAAp6G,OAAA,GACAF,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAA2CF,GAAA,IAAQA,EACnDmH,EAAAqW,KAAAihG,cAAAz+G,GACAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAooF,gBAAAr6E,EAAAi0F,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAhiG,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAsoB,EAAAniB,MAAAmiB,EAAA4vF,kBACAl4G,EAAAkE,OAXAqW,KAAAkiG,oBAAAn0F,EAAApc,EAAA44F,GAcA+S,IACAvvF,EAAA+W,QAAA/W,EAAA5d,YACA4d,EAAAniB,MAAAmiB,EAAA4vF,kBAEA5vF,EAAAq9F,UAAAF,GACAn9F,EAAAs9F,UAAAL,KAWAxB,GAAA/nH,UAAAygH,oBAAA,SAAAn0F,EAAApc,EAAA44F,GACA,IAAA/nG,EAAAmH,EAAAlE,EAAAu8G,EAAAG,EAAArjE,EAAAsjE,EAAAC,EAGA,IAFAD,EAAApiG,KAAA88F,aAAAp6G,OAAA,EACA+C,EAAAkE,EAAAqW,KAAA88F,aAAAsF,EAAA,GACA5/G,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAAyCF,GAAA,IAAQA,EAAA,CAKjD,IAJAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAooF,gBAAAr6E,EAAAi0F,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAG,EAAAniG,KAAAihG,cAAAz+G,GAEA4/G,GAAA,GACApiG,KAAA88F,aAAAsF,IAAAD,GACAE,EAAAriG,KAAA88F,aAAAsF,GACAtjE,EAAA9+B,KAAA+8F,oBAAAqF,GAGA7X,EAFA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,cAGA/sB,IAAAlE,IACAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAsoB,EAAAniB,MAAAmiB,EAAA4vF,mBAEAl4G,EAAA48G,GAEAD,IACAz4G,EAAA04G,EAEA14G,IAAAlE,IACAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAsoB,EAAAniB,MAAAmiB,EAAA4vF,mBAEAh0G,EAAAlE,EAAA08G,IAQAqH,GAAA/nH,UAAA87G,+BAAA,SAAAxvF,EAAApc,EAAA44F,EACAC,EAAAC,GACA,IAAAjoG,EAAAmH,EAAAlE,EAAAu8G,EAAAG,EAAArjE,EAAAsjE,EAGA,IAFAA,EAAApiG,KAAA88F,aAAAp6G,OAAA,EACA+C,EAAAua,KAAA88F,aAAAsF,EAAA,GACA5/G,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAAyCF,GAAA,IAAQA,EAKjD,IAJAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAooF,gBAAAr6E,EAAAi0F,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAG,EAAAniG,KAAAihG,cAAAz+G,GAEA4/G,GAAA,GACApiG,KAAA88F,aAAAsF,IAAAD,GAAA,CAKA,GAJAx4G,EAAAqW,KAAA88F,aAAAsF,GACAtjE,EAAA9+B,KAAA+8F,oBAAAqF,QAGA72G,IAAAg/F,EAFA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,aAGAooB,EAAAT,qBACA9yC,IAAAk/F,GAAAxgF,EAAA,EAAA9gB,WACuC,EACvC21C,EAAAT,cAAAl6B,cAAA,CACA4J,EAAAniB,MAAAmiB,EAAAxe,iBAAAwe,EAAA4vF,kBACA39F,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GAEA,IAAA+xB,EAAAgzE,EAAA1rD,GAEA,GAAAtnB,EACA,OAAAA,EAIA4qF,IACA38G,EAAAkE,IAcA6/G,GAAA/nH,UAAA2mG,gBAAA,SAAAr6E,EAAAwI,EAAAymB,EAAAtT,GACA3b,EAAAu0F,WAAAtiG,KAAA+gG,kBAAAqI,QAAA7yF,GACAxI,EAAA4xF,UAAA3/F,KAAA+gG,kBAAArF,YAAA1+D,GACAjvB,EAAA4xF,UAAA3/F,KAAA+gG,kBAAAoI,aAAAz/E,IAOA8/E,GAAA/nH,UAAA+zF,mBAAA,SAAAz4C,EAAAnB,GACA,IAAAo+C,EAAAp+C,EAAA9R,aACA9pB,KAAAszB,OAAApK,aAAA39B,IAAAyuF,EACAA,EAAAqmB,GAAA7tG,eACA,IAAAynF,EAAAr+C,EAAA7R,cACA/pB,KAAAszB,OAAAlK,SAAA6wD,GACAomB,GAAA5tG,gBACA,IAAAynF,EAAAt+C,EAAA5R,oBACAhqB,KAAAszB,OAAAhK,eAAA4wD,GACAmmB,GAAA3tG,sBACA,IAAAynF,EAAAv+C,EAAA3R,cACAjqB,KAAAszB,OAAA9J,cAAAj+B,IAAA4uF,EACAA,EAAAkmB,GAAA1tG,gBACA,IAAAonF,EAAAn+C,EAAA/R,WAOAkwD,EANAA,aAAA9hE,gBACA8hE,aAAA/hE,cAKAqoF,GAAAxtG,mBAJA4qC,GAAA,EAAAnnB,QAAAyjE,GAAA7lE,IAAA,SAAAnmB,EAAAvL,GACA,UAAAA,EAAAuL,EAAA,IAAAA,KACKsyG,GAAAxtG,mBAIL,IAAAunF,EAAAx+C,EAAA90C,WACAszF,OAAA7uF,IAAA6uF,EACAA,EAAAimB,GAAAptG,iBACA,IAAAonF,EAAAz+C,EAAA1R,gBACAmwD,OAAA9uF,IAAA8uF,EACAA,EAAAgmB,GAAAztG,kBACAoN,KAAAszB,OAAA6tE,aAAAhxF,EAAA,EAAApqB,OAAAia,KAAAszB,OAAA6tE,YAAApnB,IACA/5E,KAAAszB,OAAA0J,YAAAo9C,GAAAp6E,KAAAszB,OAAA5J,aAAA2wD,IACAr6E,KAAAszB,OAAA7d,SAAA,EACAzV,KAAAszB,OAAA6tE,YAAApnB,EACA/5E,KAAAszB,OAAA0J,UAAAo9C,EACAp6E,KAAAszB,OAAA5J,WAAA2wD,EACAr6E,KAAAghG,QAAA/0G,MAAA8tF,EAAAK,EAAAC,MAQAmvB,GAAAK,cACAyB,MAAA,EACAvB,WAAA,EACAC,SAAA,EACAF,eAAA,EACAG,aAAA,GACAC,YAAA,GACAC,aAAA,GACAC,aAAA,GACAC,UAAA,IAEA,IAAAkB,GAAA,YCvqBAC,MAGAA,GAAAzQ,SAAA,IAAAA,GAAAr3F,EAAA,EAAAljB,YACA,oPACA,0JAEAgrH,GAAAvQ,OAAA,IAAAA,GAAAv3F,EAAA,EAAAljB,YACA,4OACA,iHACA,IAAAirH,GAAA,GCkCAC,GAvCA,SAAA39F,EAAAstF,GAKAr7F,KAAAs7F,mBAAAvtF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,0BAKAwf,KAAAw7F,oBAAAztF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,2BAKAwf,KAAAy7F,qBAAA1tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,4BAKAwf,KAAAopG,QAAAr7F,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,eAKAwf,KAAA47F,UAAA7tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAAg8F,WAAAjuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,4BCrCAmrH,GAAA,SAAAC,GAMA5rG,KAAA6rG,YAAAtgH,EAMAyU,KAAA8rG,WAAAvgH,EAMAyU,KAAA+rG,WAAAxgH,EAMAyU,KAAAgsG,eAAAzgH,IAAAqgH,KAMA5rG,KAAAisG,QAAA,GAQAN,GAAAlqH,UAAAyqH,WAAA,SAAAxvG,GAGA,IAAA2T,GACAQ,UAAAtlB,EACA4gH,UAAA5gH,EACAmR,QAGA0vG,EAAApsG,KAAA+rG,MAGA,GAAAK,EAOG,CAEH,IAAAD,EAAAC,EAAAD,KACA97F,EAAAQ,KAAAu7F,EACA/7F,EAAA87F,OACAC,EAAAD,KAAA97F,EACA87F,IACAA,EAAAt7F,KAAAR,GAGA+7F,IAAApsG,KAAA8rG,QACA9rG,KAAA8rG,MAAAz7F,QAjBArQ,KAAA6rG,OAAAx7F,EACArQ,KAAA8rG,MAAAz7F,EACArQ,KAAAgsG,YACA37F,EAAA87F,KAAA97F,EACAA,EAAAQ,KAAAR,GAgBArQ,KAAA+rG,MAAA17F,EACArQ,KAAAisG,WAOAN,GAAAlqH,UAAA4qH,WAAA,WACA,IAAAD,EAAApsG,KAAA+rG,MACA,GAAAK,EAAA,CACA,IAAAD,EAAAC,EAAAD,KACAt7F,EAAAu7F,EAAAv7F,KACAs7F,IACAA,EAAAt7F,QAEAA,IACAA,EAAAs7F,QAEAnsG,KAAA+rG,MAAAI,GAAAt7F,EAEA7Q,KAAA6rG,SAAA7rG,KAAA8rG,OACA9rG,KAAA+rG,WAAAxgH,EACAyU,KAAA6rG,YAAAtgH,EACAyU,KAAA8rG,WAAAvgH,GACKyU,KAAA6rG,SAAAO,EACLpsG,KAAA6rG,OAAA7rG,KAAA+rG,MACK/rG,KAAA8rG,QAAAM,IACLpsG,KAAA8rG,MAAAj7F,EAAA7Q,KAAA+rG,MAAAl7F,KAAA7Q,KAAA+rG,OAEA/rG,KAAAisG,YASAN,GAAAlqH,UAAA6qH,UAAA,WAEA,GADAtsG,KAAA+rG,MAAA/rG,KAAA6rG,OACA7rG,KAAA+rG,MACA,OAAA/rG,KAAA+rG,MAAArvG,MAUAivG,GAAAlqH,UAAA8qH,SAAA,WAEA,GADAvsG,KAAA+rG,MAAA/rG,KAAA8rG,MACA9rG,KAAA+rG,MACA,OAAA/rG,KAAA+rG,MAAArvG,MAUAivG,GAAAlqH,UAAA+qH,SAAA,WACA,GAAAxsG,KAAA+rG,OAAA/rG,KAAA+rG,MAAAI,KAEA,OADAnsG,KAAA+rG,MAAA/rG,KAAA+rG,MAAAI,KACAnsG,KAAA+rG,MAAArvG,MAUAivG,GAAAlqH,UAAAgrH,YAAA,WACA,GAAAzsG,KAAA+rG,OAAA/rG,KAAA+rG,MAAAI,KACA,OAAAnsG,KAAA+rG,MAAAI,KAAAzvG,MAUAivG,GAAAlqH,UAAAirH,SAAA,WACA,GAAA1sG,KAAA+rG,OAAA/rG,KAAA+rG,MAAAl7F,KAEA,OADA7Q,KAAA+rG,MAAA/rG,KAAA+rG,MAAAl7F,KACA7Q,KAAA+rG,MAAArvG,MAUAivG,GAAAlqH,UAAAkrH,YAAA,WACA,GAAA3sG,KAAA+rG,OAAA/rG,KAAA+rG,MAAAl7F,KACA,OAAA7Q,KAAA+rG,MAAAl7F,KAAAnU,MAUAivG,GAAAlqH,UAAAmrH,YAAA,WACA,GAAA5sG,KAAA+rG,MACA,OAAA/rG,KAAA+rG,MAAArvG,MASAivG,GAAAlqH,UAAAorH,aAAA,WACA7sG,KAAAgsG,WAAAhsG,KAAA+rG,QACA/rG,KAAA6rG,OAAA7rG,KAAA+rG,MACA/rG,KAAA8rG,MAAA9rG,KAAA+rG,MAAAl7F,OAQA86F,GAAAlqH,UAAAonC,OAAA,SAAAikF,GACA,GAAAA,EAAAf,MAAA,CACA,GAAA/rG,KAAA+rG,MAAA,CACA,IAAAtmH,EAAAua,KAAA+rG,MAAAI,KACAnsG,KAAA+rG,MAAAI,KAAAW,EAAAjB,OACAiB,EAAAjB,OAAAh7F,KAAA7Q,KAAA+rG,MACAtmH,EAAAorB,KAAAi8F,EAAAhB,MACAgB,EAAAhB,MAAAK,KAAA1mH,EACAua,KAAAisG,SAAAa,EAAAb,aAEAjsG,KAAA+rG,MAAAe,EAAAf,MACA/rG,KAAA6rG,OAAAiB,EAAAjB,OACA7rG,KAAA8rG,MAAAgB,EAAAhB,MACA9rG,KAAAisG,QAAAa,EAAAb,QAEAa,EAAAf,WAAAxgH,EACAuhH,EAAAjB,YAAAtgH,EACAuhH,EAAAhB,WAAAvgH,EACAuhH,EAAAb,QAAA,IASAN,GAAAlqH,UAAAuf,UAAA,WACA,OAAAhB,KAAAisG,SAEA,IAAAc,GAAA,YC5NAC,GAAA,SAAA5nF,EAAA+hE,GACA8Y,GAAA35G,KAAA0Z,KAAAolB,EAAA+hE,GAEAnnF,KAAAy1F,iBAAA,IAAA8V,GACAnmF,EAAA+hE,GAMAnnF,KAAA+gG,kBAAA,KAMA/gG,KAAAghG,WAMAhhG,KAAAihG,iBAOAjhG,KAAAszB,QACA4tE,UAAA,KACAzrF,SAAA,IAKA/R,EAAA,EAAApiB,SAAA0rH,GAAA/M,IAUA+M,GAAAvrH,UAAAqsG,iBAAA,SACAvoG,EAAAqlH,EAAAllH,GAEA,IAAAunH,EAAA,IAAAF,GACAG,EAAA,IAAAC,GAAA,EAEAntG,KAAAotG,wBAAA7nH,EAAAG,EAAAunH,EAAAC,GAAA,GACA,IAAAG,EAAArtG,KAAAstG,cAAAL,GAGA,GAAArC,EAAAloH,OAAA,CACA,IAAAF,EAAAC,EACA8qH,KACA,IAAA/qH,EAAA,EAAAC,EAAAmoH,EAAAloH,OAAgDF,EAAAC,IAAQD,EAAA,CACxD,IAAAgrH,GACAV,KAAA,IAAAC,GACAM,eAAA9hH,EACA2hH,MAAA,IAAAC,GAAA,GAEAI,EAAAthH,KAAAuhH,GACAxtG,KAAAotG,wBAAAxC,EAAApoH,GACAkD,EAAA8nH,EAAAV,KAAAU,EAAAN,OAAA,GACAltG,KAAAytG,gBAAAD,EAAAV,KAAAU,EAAAN,OAAA,GACAM,EAAAH,UAAArtG,KAAAstG,cAAAE,EAAAV,MAMA,IAJAS,EAAAjwG,KAAA,SAAAzP,EAAAC,GACA,OAAAA,EAAAu/G,UAAA,KAAAx/G,EAAAw/G,UAAA,GACAx/G,EAAAw/G,UAAA,GAAAv/G,EAAAu/G,UAAA,GAAAv/G,EAAAu/G,UAAA,GAAAx/G,EAAAw/G,UAAA,KAEA7qH,EAAA,EAAeA,EAAA+qH,EAAA7qH,SAAsBF,EAAA,CACrC,IAGAyG,EAHAykH,EAAAH,EAAA/qH,GAAAsqH,KACAnjH,EAAA+jH,EAAApB,YACAqB,EAAAhkH,EAEA,GAEA,GAAAqW,KAAA4tG,kBAAAD,EAAAT,GAAAxqH,OAAA,CACAuG,GAAA,EACA,MAEA0kH,EAAAD,EAAAlB,iBACO7iH,IAAAgkH,GACP1kH,GACA+W,KAAA6tG,YAAAH,EAAAH,EAAA/qH,GAAA6qH,UAAA,GAAAJ,EAAAI,EAAA,GAAAH,KACAA,EAAArkF,OAAA0kF,EAAA/qH,GAAA0qH,OACAltG,KAAAytG,gBAAAR,EAAAC,GAAA,UAKAltG,KAAAytG,gBAAAR,EAAAC,GAAA,GAEAltG,KAAA8tG,aAAAb,EAAAC,IAaAF,GAAAvrH,UAAA2rH,wBAAA,SACA7nH,EAAAG,EAAAonH,EAAAI,EAAAa,GACA,IAEAvrH,EAAAC,EAGAkH,EAEA+tD,EAEAC,EATAlzB,EAAAif,GAAA,EAAAtf,sBAAA7+B,EACA,EAAAA,EAAA7C,OAAAgD,GAEA+T,EAAAuG,KAAA2H,SAAAjlB,OAAA,EAOAulC,KACA2a,KACA,GAAAmrE,IAAAtpF,EAAA,CAGA,IADAizB,EADA/tD,EAAAqW,KAAAguG,aAAAzoH,EAAA,GAAAA,EAAA,GAAAkU,KAEAjX,EAAAkD,EAAAjD,EAAA8C,EAAA7C,OAAiDF,EAAAC,EAAQD,GAAAkD,EACzDiyD,EAAA33C,KAAAguG,aAAAzoH,EAAA/C,GAAA+C,EAAA/C,EAAA,GAAAiX,KACAmpC,EAAA32C,KAAA+T,KAAAiuG,YAAAv2D,EAAAC,EAAAm1D,IACA7kF,EAAAh8B,MAAAhJ,KAAAC,IAAAw0D,EAAA5zD,EAAA6zD,EAAA7zD,GAAAb,KAAAC,IAAAw0D,EAAA3zD,EAAA4zD,EAAA5zD,GAAAd,KAAAK,IAAAo0D,EAAA5zD,EAAA6zD,EAAA7zD,GACAb,KAAAK,IAAAo0D,EAAA3zD,EAAA4zD,EAAA5zD,KACA2zD,EAAAC,EAEA/U,EAAA32C,KAAA+T,KAAAiuG,YAAAt2D,EAAAhuD,EAAAmjH,IACA7kF,EAAAh8B,MAAAhJ,KAAAC,IAAAw0D,EAAA5zD,EAAA6zD,EAAA7zD,GAAAb,KAAAC,IAAAw0D,EAAA3zD,EAAA4zD,EAAA5zD,GAAAd,KAAAK,IAAAo0D,EAAA5zD,EAAA6zD,EAAA7zD,GACAb,KAAAK,IAAAo0D,EAAA3zD,EAAA4zD,EAAA5zD,SACG,CACH,IAAA0B,EAAAF,EAAA7C,OAAAgD,EAGA,IADAgyD,EADA/tD,EAAAqW,KAAAguG,aAAAzoH,EAAAE,GAAAF,EAAAE,EAAA,GAAAgU,KAEAjX,EAAAiD,EAAAC,EAAAjD,EAAA,EAAkCD,GAAAC,EAASD,GAAAkD,EAC3CiyD,EAAA33C,KAAAguG,aAAAzoH,EAAA/C,GAAA+C,EAAA/C,EAAA,GAAAiX,KACAmpC,EAAA32C,KAAA+T,KAAAiuG,YAAAv2D,EAAAC,EAAAm1D,IACA7kF,EAAAh8B,MAAAhJ,KAAAC,IAAAw0D,EAAA5zD,EAAA6zD,EAAA7zD,GAAAb,KAAAC,IAAAw0D,EAAA3zD,EAAA4zD,EAAA5zD,GAAAd,KAAAK,IAAAo0D,EAAA5zD,EAAA6zD,EAAA7zD,GACAb,KAAAK,IAAAo0D,EAAA3zD,EAAA4zD,EAAA5zD,KACA2zD,EAAAC,EAEA/U,EAAA32C,KAAA+T,KAAAiuG,YAAAt2D,EAAAhuD,EAAAmjH,IACA7kF,EAAAh8B,MAAAhJ,KAAAC,IAAAw0D,EAAA5zD,EAAA6zD,EAAA7zD,GAAAb,KAAAC,IAAAw0D,EAAA3zD,EAAA4zD,EAAA5zD,GAAAd,KAAAK,IAAAo0D,EAAA5zD,EAAA6zD,EAAA7zD,GACAb,KAAAK,IAAAo0D,EAAA3zD,EAAA4zD,EAAA5zD,KAEAmpH,EAAAllF,KAAAC,EAAA2a,IAUAoqE,GAAAvrH,UAAA6rH,cAAA,SAAAR,GACA,IAAAnjH,EAAAmjH,EAAAR,YACA4B,EAAAvkH,EACA0jH,GAAAa,EAAAx2D,GAAA5zD,EAAAoqH,EAAAx2D,GAAA3zD,GAEA,IACAmqH,EAAApB,EAAAN,YACA90D,GAAA5zD,EAAAupH,EAAA,KACAA,GAAAa,EAAAx2D,GAAA5zD,EAAAoqH,EAAAx2D,GAAA3zD,UAEGmqH,IAAAvkH,GAEH,OAAA0jH,GAYAL,GAAAvrH,UAAAgsH,gBAAA,SAAAX,EAAAI,EAAAiB,GACA,IAAAxkH,EAAAmjH,EAAAR,YACA8B,EAAAzkH,EACA2yB,EAAAwwF,EAAAN,WACA6B,GAAA,EACA,GACA,IAAAC,EAAAH,EAAA9N,GAAAF,2BAAA7jF,EAAAq7B,GAAA7zD,EACAw4B,EAAAq7B,GAAA5zD,EAAAqqH,EAAAz2D,GAAA7zD,EAAAsqH,EAAAz2D,GAAA5zD,EAAAqqH,EAAA12D,GAAA5zD,EAAAsqH,EAAA12D,GAAA3zD,GACAs8G,GAAAF,2BAAAiO,EAAA12D,GAAA5zD,EAAAsqH,EAAA12D,GAAA3zD,EAAAqqH,EAAAz2D,GAAA7zD,EACAsqH,EAAAz2D,GAAA5zD,EAAAu4B,EAAAq7B,GAAA7zD,EAAAw4B,EAAAq7B,GAAA5zD,QACAwH,IAAA+iH,GACAtuG,KAAAuuG,YAAAH,EAAA9xF,EAAAwwF,EAAAI,GACAmB,GAAA,EACA/xF,IAAA3yB,IACAA,EAAAmjH,EAAAL,eAEAnwF,EAAA8xF,EACAtB,EAAAJ,YACK0B,EAAAz2D,GAAA22D,aACLF,EAAAz2D,GAAA22D,SACAD,GAAA,GAEAD,EAAA9xF,EACAA,EAAAwwF,EAAAN,iBACG4B,IAAAzkH,GACH,OAAA0kH,GAaArB,GAAAvrH,UAAAosH,YAAA,SAAAW,EAAAC,EACA3B,EAAA4B,EAAAxB,GAEA,IADA,IAAAgB,EAAAM,EAAAlC,YACA4B,EAAAv2D,GAAA7zD,IAAA2qH,GACAP,EAAAM,EAAAhC,WAGA,IAIAhqH,EAAAC,EAAAksH,EAEAC,EANAj3D,EAAAu2D,EAAAv2D,GAEAC,GAAY9zD,EAAA4qH,EAAA3qH,EAAA4zD,EAAA5zD,EAAAvB,GAAA,GACZqsH,EAAA5pH,IAKA6pH,EAAA9uG,KAAA4tG,mBAAqDl2D,GAAAC,KAAAC,GAAes1D,GAAA,GACpE,IAAA1qH,EAAA,EAAAC,EAAAqsH,EAAApsH,OAA+CF,EAAAC,IAAQD,EAAA,CACvD,IAAAusH,EAAAD,EAAAtsH,GACAyG,EAAA+W,KAAAgvG,uBAAAr3D,EAAAC,EAAAm3D,EAAAr3D,GACAq3D,EAAAp3D,IAAA,GACAs3D,EAAAhsH,KAAA2W,IAAA+9C,EAAA7zD,EAAAmF,EAAA,IACAgmH,EAAAJ,QACAtjH,IADA80G,GAAAF,2BAAAxoD,EAAA7zD,EAAA6zD,EAAA5zD,EACAgrH,EAAAr3D,GAAA5zD,EAAAirH,EAAAr3D,GAAA3zD,EAAAgrH,EAAAp3D,GAAA7zD,EAAAirH,EAAAp3D,GAAA5zD,KACA8qH,EAAAI,EACAL,GAAY9qH,EAAAmF,EAAA,GAAAlF,EAAAkF,EAAA,GAAAzG,GAAA,GACZ0rH,EAAAa,GAGA,GAAAF,IAAA5pH,IACA,SAIA,GAFA0pH,EAAAT,EAAAv2D,GAEAk3D,EAAA,GACA,IAAAK,EAAAlvG,KAAAmvG,qBAAAx3D,EAAAi3D,EAAAV,EAAAv2D,GAAAu1D,GACA,GAAAgC,EAAAxsH,OAAA,CACA,IAAAuiC,EAAAhgC,IACA,IAAAzC,EAAA,EAAAC,EAAAysH,EAAAxsH,OAA+CF,EAAAC,IAAQD,EAAA,CACvD,IAAA4sH,EAAAF,EAAA1sH,GACA6sH,EAAApsH,KAAA6d,MAAA62C,EAAA5zD,EAAAqrH,EAAArrH,EAAA6zD,EAAA9zD,EAAAsrH,EAAAtrH,IACAurH,EAAApqF,GAAAoqF,IAAApqF,GAAAmqF,EAAAtrH,EAAA6qH,EAAA7qH,KACAmhC,EAAAoqF,EACAV,EAAAS,KAOA,IADAlB,EAAApB,EAAAR,YACA4B,EAAAv2D,GAAA7zD,IAAA6qH,EAAA7qH,GAAAoqH,EAAAv2D,GAAA5zD,IAAA4qH,EAAA5qH,GACAmqH,EAAApB,EAAAN,WAIA,IAAA8C,GAAkBxrH,EAAA6zD,EAAA7zD,EAAAC,EAAA4zD,EAAA5zD,EAAAvB,EAAAm1D,EAAAn1D,EAAA8rH,YAAA/iH,GAClBgkH,GAAkBzrH,EAAAoqH,EAAAv2D,GAAA7zD,EAAAC,EAAAmqH,EAAAv2D,GAAA5zD,EAAAvB,EAAA0rH,EAAAv2D,GAAAn1D,EAAA8rH,YAAA/iH,GASlB,OAPAijH,EAAA/B,cAAA/0D,GAAA43D,EACAtvG,KAAAiuG,YAAAt2D,EAAAu2D,EAAAv2D,GAAA62D,EAAAtB,GACAltG,KAAAiuG,YAAAsB,EAAAD,EAAAd,EAAAtB,GACAgB,EAAAv2D,GAAA43D,EACAf,EAAA3B,eACAC,EAAAjkF,OAAA2lF,IAEA,GASAxB,GAAAvrH,UAAAqsH,aAAA,SAAAhB,EAAAI,GAKA,IAJA,IAAAiB,GAAA,EACAqB,EAAAxvG,KAAAyvG,UAAA3C,EAAAI,GAGAJ,EAAA9rG,YAAA,GACA,GAAAwuG,GACA,IAAAxvG,KAAA0vG,UAAA5C,EAAAI,EAAAsC,EAAArB,KACAnuG,KAAAytG,gBAAAX,EAAAI,EAAAiB,KAGAnuG,KAAA2vG,0BAAA7C,EAAAI,GAAA,GACA,WAKA,IAAAltG,KAAA0vG,UAAA5C,EAAAI,EAAAsC,EAAArB,KAEAnuG,KAAAytG,gBAAAX,EAAAI,EAAAiB,KAEAnuG,KAAA2vG,0BAAA7C,EAAAI,GAAA,CAEA,KADAsC,EAAAxvG,KAAAyvG,UAAA3C,EAAAI,IACA,CAEAltG,KAAA4vG,cAAA9C,EAAAI,GACA,MAEAiB,GAAAnuG,KAAA6vG,aAAA/C,GACA9sG,KAAAytG,gBAAAX,EAAAI,EAAAiB,GAOA,OAAArB,EAAA9rG,YAAA,CACA,IAAAqgG,EAAArhG,KAAA48F,QAAAl6G,OACAsd,KAAA48F,QAAAyE,KAAAyL,EAAAH,cAAAj1D,GAAAl1D,EACAwd,KAAA48F,QAAAyE,KAAAyL,EAAAF,cAAAl1D,GAAAl1D,EACAwd,KAAA48F,QAAAyE,KAAAyL,EAAAL,cAAA/0D,GAAAl1D,IAaAwqH,GAAAvrH,UAAAiuH,UAAA,SAAA5C,EAAAI,EAAAsC,EAAArB,GACA,IAMAz2D,EAAAC,EAAAC,EANAypD,EAAArhG,KAAA48F,QAAAl6G,OACAiH,EAAAmjH,EAAAR,YACA8B,EAAAtB,EAAAH,cACArwF,EAAA3yB,EACA4yB,EAAAuwF,EAAAN,WACAsD,EAAAhD,EAAAL,cAEAsD,GAAA,EACA,GAMA,IAAAC,EAFA,GAHAt4D,EAAAp7B,EAAAo7B,GACAC,EAAAr7B,EAAAq7B,GACAC,EAAAr7B,EAAAo7B,IACA,IAAAA,EAAA22D,OAIA0B,EADAR,EACA,IAAAxvG,KAAAmvG,qBAAAz3D,EAAAC,EAAAC,EAAAs1D,GAAA,GAAAxqH,OAEAyrH,EAAAnuG,KAAAiwG,kBAAAH,EAAAn4D,GAAAC,EAAAD,EAAAD,EACA02D,EAAA12D,IAAA13C,KAAAiwG,kBAAA7B,EAAA12D,KAAAC,EAAAC,EAAAk4D,EAAAn4D,KAEA63D,GAA4D,IAA5DxvG,KAAA4tG,mBAA6Cl2D,KAAAC,GAAAC,GAAes1D,GAAAxqH,SAC5DstH,IAEAR,IAAA,IAAA93D,EAAA42D,SAAA,IAAA12D,EAAA02D,QACA5qE,GAAA,EAAAtf,uBAAAgqF,EAAA12D,GAAA5zD,EAAAsqH,EAAA12D,GAAA3zD,EAAA2zD,EAAA5zD,EACA4zD,EAAA3zD,EAAA4zD,EAAA7zD,EAAA6zD,EAAA5zD,EAAA6zD,EAAA9zD,EAAA8zD,EAAA7zD,EAAA+rH,EAAAn4D,GAAA7zD,EAAAgsH,EAAAn4D,GAAA5zD,GAAA,WAAAoqH,KAEAnuG,KAAA48F,QAAAyE,KAAA3pD,EAAAl1D,EACAwd,KAAA48F,QAAAyE,KAAA1pD,EAAAn1D,EACAwd,KAAA48F,QAAAyE,KAAAzpD,EAAAp1D,EACAwd,KAAAuuG,YAAAjyF,EAAAC,EAAAuwF,EAAAI,GACA3wF,IAAA5yB,IACAA,EAAAmmH,GAEAC,GAAA,GAKA3B,EAAAtB,EAAAH,cACArwF,EAAAwwF,EAAAF,cACArwF,EAAAuwF,EAAAN,WACAsD,EAAAhD,EAAAL,oBACGnwF,IAAA3yB,GAAAmjH,EAAA9rG,YAAA,GAEH,OAAA+uG,GAWA/C,GAAAvrH,UAAAkuH,0BAAA,SACA7C,EAAAI,EAAAgD,GACA,IAAAvmH,EAAAmjH,EAAAR,YACAQ,EAAAN,WACA,IAAA4B,EAAAzkH,EACA2yB,EAAAwwF,EAAAN,WACA2D,GAAA,EAEA,GACA,IAAAlnH,EAAA+W,KAAAgvG,uBAAAZ,EAAA12D,GAAA02D,EAAAz2D,GAAAr7B,EAAAo7B,GAAAp7B,EAAAq7B,GACAu4D,GACA,GAAAjnH,EAAA,CACA,IAQA8jC,EARAqjF,GAAA,EACAhP,EAAAphG,KAAA2H,SAAAjlB,OACA2+G,EAAArhG,KAAA48F,QAAAl6G,OACA+W,EAAA2nG,EAAA,EACA8M,EAAApB,EAAAJ,WAkCA,GAjCAI,EAAAT,aACAa,EAAArwG,OAAAqxG,GACAkC,EAAAlC,IAAAvkH,EAEAumH,GACAjnH,EAAA,KAAAmlH,EAAA12D,GAAA5zD,GAAAmF,EAAA,KAAAmlH,EAAA12D,GAAA3zD,GACA+oH,EAAAJ,WACA3/E,EAAAqhF,EAAA12D,GACAp7B,EAAAo7B,GAAA3qB,EACAmgF,EAAArwG,OAAAuxG,GACAgC,KAAAhC,IAAAzkH,IAEAojC,EAAAzQ,EAAAq7B,GACAy2D,EAAAz2D,GAAA5qB,EACAmgF,EAAArwG,OAAAyf,GACA8zF,KAAA9zF,IAAA3yB,GAEAmjH,EAAAT,eAEAt/E,EAAA/sB,KAAAguG,aAAA/kH,EAAA,GAAAA,EAAA,GAAAwQ,GACA20G,EAAAz2D,GAAA5qB,EACAzQ,EAAAo7B,GAAA3qB,EACAmgF,EAAA9kF,QAAAnlC,KAAAC,IAAAkrH,EAAA12D,GAAA5zD,EAAAsqH,EAAAz2D,GAAA7zD,GAAAb,KAAAC,IAAAkrH,EAAA12D,GAAA3zD,EAAAqqH,EAAAz2D,GAAA5zD,GACAd,KAAAK,IAAA8qH,EAAA12D,GAAA5zD,EAAAsqH,EAAAz2D,GAAA7zD,GAAAb,KAAAK,IAAA8qH,EAAA12D,GAAA3zD,EAAAqqH,EAAAz2D,GAAA5zD,IAAAqqH,GACAlB,EAAA9kF,QAAAnlC,KAAAC,IAAAo5B,EAAAo7B,GAAA5zD,EAAAw4B,EAAAq7B,GAAA7zD,GAAAb,KAAAC,IAAAo5B,EAAAo7B,GAAA3zD,EAAAu4B,EAAAq7B,GAAA5zD,GACAd,KAAAK,IAAAg5B,EAAAo7B,GAAA5zD,EAAAw4B,EAAAq7B,GAAA7zD,GAAAb,KAAAK,IAAAg5B,EAAAo7B,GAAA3zD,EAAAu4B,EAAAq7B,GAAA5zD,IAAAu4B,IAGAtc,KAAA48F,QAAAyE,KAAA6M,EAAAx2D,GAAAl1D,EACAwd,KAAA48F,QAAAyE,KAAA6M,EAAAv2D,GAAAn1D,EACAwd,KAAA48F,QAAAyE,KAAAt0E,EAAAvqC,EAEA2tH,GAAA,EACAC,EACA,MAIAhC,EAAAtB,EAAAH,cACArwF,EAAAwwF,EAAAN,iBACG4B,IAAAzkH,GACH,OAAAwmH,GAUAnD,GAAAvrH,UAAAguH,UAAA,SAAA3C,EAAAI,GACA,IAAAvjH,EAAAmjH,EAAAR,YACA4B,EAAAvkH,EACA,GACA,GAAAqW,KAAA4tG,kBAAAM,EAAAhB,GAAAxqH,OACA,SAEAwrH,EAAApB,EAAAN,iBACG0B,IAAAvkH,GACH,UASAqjH,GAAAvrH,UAAAouH,aAAA,SAAA/C,GACA,IAAApqH,EAAA,EAAAoqH,EAAA9rG,YACAzb,EAAA,IAAAmH,MAAAhK,GACAiH,EAAAmjH,EAAAR,YACA4B,EAAAvkH,EACAnH,EAAA,EACA,GACA+C,EAAA/C,KAAA0rH,EAAAx2D,GAAA5zD,EACAyB,EAAA/C,KAAA0rH,EAAAx2D,GAAA3zD,EACAmqH,EAAApB,EAAAN,iBACG0B,IAAAvkH,GACH,OAAA+5C,GAAA,EAAAtf,sBAAA7+B,EAAA,EAAA7C,EAAA,IASAsqH,GAAAvrH,UAAAmuH,cAAA,SAAA9C,EAAAI,GACA,IAAAvjH,EAAAmjH,EAAAR,YACA8B,EAAAzkH,EACA,GACA,IAAAq4C,EAAAhiC,KAAA4tG,kBAAAQ,EAAAlB,GACA,GAAAlrE,EAAAt/C,OAAA,CACA,IAAA45B,EAAA0lB,EAAA,GACAvoC,EAAAuG,KAAA2H,SAAAjlB,OAAA,EACAuG,EAAA+W,KAAAgvG,uBAAAZ,EAAA12D,GACA02D,EAAAz2D,GAAAr7B,EAAAo7B,GAAAp7B,EAAAq7B,IACA5qB,EAAA/sB,KAAAguG,aAAA/kH,EAAA,GAAAA,EAAA,GAAAwQ,GACA42G,EAAA,IAAAtD,GACAuD,EAAA,IAAAnD,GAAA,EACAntG,KAAAiuG,YAAAlhF,EAAAqhF,EAAAz2D,GAAA04D,EAAAC,GACAlC,EAAAz2D,GAAA5qB,EACAmgF,EAAA9kF,QAAAnlC,KAAAC,IAAAkrH,EAAA12D,GAAA5zD,EAAAipC,EAAAjpC,GAAAb,KAAAC,IAAAkrH,EAAA12D,GAAA3zD,EAAAgpC,EAAAhpC,GACAd,KAAAK,IAAA8qH,EAAA12D,GAAA5zD,EAAAipC,EAAAjpC,GAAAb,KAAAK,IAAA8qH,EAAA12D,GAAA3zD,EAAAgpC,EAAAhpC,IAAAqqH,GAEA,IADA,IAAAT,EAAAb,EAAAN,WACAmB,IAAArxF,GACAtc,KAAAiuG,YAAAN,EAAAj2D,GAAAi2D,EAAAh2D,GAAA04D,EAAAC,GACApD,EAAArwG,OAAA8wG,GACAb,EAAAT,aACAsB,EAAAb,EAAAF,cAEA5sG,KAAAiuG,YAAA3xF,EAAAo7B,GAAA3qB,EAAAsjF,EAAAC,GACAh0F,EAAAo7B,GAAA3qB,EACAmgF,EAAA9kF,QAAAnlC,KAAAC,IAAAo5B,EAAAq7B,GAAA7zD,EAAAipC,EAAAjpC,GAAAb,KAAAC,IAAAo5B,EAAAq7B,GAAA5zD,EAAAgpC,EAAAhpC,GACAd,KAAAK,IAAAg5B,EAAAq7B,GAAA7zD,EAAAipC,EAAAjpC,GAAAb,KAAAK,IAAAg5B,EAAAq7B,GAAA5zD,EAAAgpC,EAAAhpC,IAAAu4B,GACAtc,KAAAytG,gBAAAX,EAAAI,GAAA,GACAltG,KAAA8tG,aAAAhB,EAAAI,GACAltG,KAAAytG,gBAAA4C,EAAAC,GAAA,GACAtwG,KAAA8tG,aAAAuC,EAAAC,GACA,MAEAlC,EAAAtB,EAAAN,iBACG4B,IAAAzkH,IAWHqjH,GAAAvrH,UAAAusH,aAAA,SAAAlqH,EAAAC,EAAAvB,GACA,IAAA4+G,EAAAphG,KAAA2H,SAAAjlB,OAUA,OATAsd,KAAA2H,SAAAy5F,KAAAt9G,EACAkc,KAAA2H,SAAAy5F,KAAAr9G,GAGAD,IACAC,IACAvB,IACA8rH,YAAA/iH,IAcAyhH,GAAAvrH,UAAAwsH,YAAA,SAAAv2D,EAAAC,EAAAm1D,EAAAyD,GACA,IAAArC,GACAx2D,KACAC,MAOA,OALAm1D,EAAAZ,WAAAgC,GACAqC,GACAA,EAAAxoF,QAAA9kC,KAAAC,IAAAw0D,EAAA5zD,EAAA6zD,EAAA7zD,GAAAb,KAAAC,IAAAw0D,EAAA3zD,EAAA4zD,EAAA5zD,GACAd,KAAAK,IAAAo0D,EAAA5zD,EAAA6zD,EAAA7zD,GAAAb,KAAAK,IAAAo0D,EAAA3zD,EAAA4zD,EAAA5zD,IAAAmqH,GAEAA,GAWAlB,GAAAvrH,UAAA8sH,YAAA,SAAAH,EAAA9xF,EAAAwwF,EAAAI,GACAJ,EAAAF,gBAAAtwF,IACAwwF,EAAAT,aACA+B,EAAAz2D,GAAAr7B,EAAAq7B,GACAu1D,EAAArwG,OAAAyf,GACA4wF,EAAA9kF,QAAAnlC,KAAAC,IAAAkrH,EAAA12D,GAAA5zD,EAAAsqH,EAAAz2D,GAAA7zD,GAAAb,KAAAC,IAAAkrH,EAAA12D,GAAA3zD,EAAAqqH,EAAAz2D,GAAA5zD,GACAd,KAAAK,IAAA8qH,EAAA12D,GAAA5zD,EAAAsqH,EAAAz2D,GAAA7zD,GAAAb,KAAAK,IAAA8qH,EAAA12D,GAAA3zD,EAAAqqH,EAAAz2D,GAAA5zD,IAAAqqH,KAcApB,GAAAvrH,UAAA0tH,qBAAA,SAAAz3D,EAAAC,EACAC,EAAAs1D,EAAAsD,GACA,IAAAhuH,EAAAC,EAAAuX,EAAA+yB,EACAvV,KACAi5F,EAAAvD,EAAA1kF,aAAAvlC,KAAAC,IAAAw0D,EAAA5zD,EAAA6zD,EAAA7zD,EAAA8zD,EAAA9zD,GACAb,KAAAC,IAAAw0D,EAAA3zD,EAAA4zD,EAAA5zD,EAAA6zD,EAAA7zD,GAAAd,KAAAK,IAAAo0D,EAAA5zD,EAAA6zD,EAAA7zD,EAAA8zD,EAAA9zD,GAAAb,KAAAK,IAAAo0D,EAAA3zD,EACA4zD,EAAA5zD,EAAA6zD,EAAA7zD,KACA,IAAAvB,EAAA,EAAAC,EAAAguH,EAAA/tH,OAA2CF,EAAAC,IAAQD,EACnD,IAAAwX,KAAAy2G,EAAAjuH,GAEA,iBADAuqC,EAAA0jF,EAAAjuH,GAAAwX,KACAw2G,IAAAzjF,EAAAuhF,QACAvhF,EAAAjpC,IAAA4zD,EAAA5zD,GAAAipC,EAAAhpC,IAAA2zD,EAAA3zD,GAAAgpC,EAAAjpC,IAAA6zD,EAAA7zD,GAAAipC,EAAAhpC,IAAA4zD,EAAA5zD,GACAgpC,EAAAjpC,IAAA8zD,EAAA9zD,GAAAipC,EAAAhpC,IAAA6zD,EAAA7zD,IAAA,IAAAyzB,EAAAnrB,QAAA0gC,KACAzN,GAAA,EAAAP,sBAAA24B,EAAA5zD,EAAA4zD,EAAA3zD,EAAA4zD,EAAA7zD,EAAA6zD,EAAA5zD,EACA6zD,EAAA9zD,EAAA8zD,EAAA7zD,GAAA,MAAAgpC,EAAAjpC,EAAAipC,EAAAhpC,IACAyzB,EAAAvrB,KAAA8gC,GAKA,OAAAvV,GAWAw1F,GAAAvrH,UAAAmsH,kBAAA,SAAA3wF,EAAAiwF,EAAAgD,GACA,IAKA1tH,EAAAC,EALAi1D,EAAAz6B,EAAAy6B,GACAC,EAAA16B,EAAA06B,GACA84D,EAAAvD,EAAA1kF,aAAAvlC,KAAAC,IAAAw0D,EAAA5zD,EAAA6zD,EAAA7zD,GACAb,KAAAC,IAAAw0D,EAAA3zD,EAAA4zD,EAAA5zD,GAAAd,KAAAK,IAAAo0D,EAAA5zD,EAAA6zD,EAAA7zD,GAAAb,KAAAK,IAAAo0D,EAAA3zD,EAAA4zD,EAAA5zD,KACAyzB,KAEA,IAAAh1B,EAAA,EAAAC,EAAAguH,EAAA/tH,OAA2CF,EAAAC,IAAQD,EAAA,CACnD,IAAAusH,EAAA0B,EAAAjuH,GACAy6B,IAAA8xF,IAAAmB,GAAAnB,EAAAr3D,KAAAC,GAAAo3D,EAAAp3D,KAAAD,IACA13C,KAAAgvG,uBAAAt3D,EAAAC,EAAAo3D,EAAAr3D,GAAAq3D,EAAAp3D,GAAAu4D,IACA14F,EAAAvrB,KAAA8iH,GAGA,OAAAv3F,GAgBAw1F,GAAAvrH,UAAAutH,uBAAA,SAAAt3D,EACAC,EAAAC,EAAAowC,EAAAkoB,GACA,IAAAQ,GAAA1oB,EAAAjkG,EAAA6zD,EAAA7zD,IAAA4zD,EAAA7zD,EAAA4zD,EAAA5zD,IAAAkkG,EAAAlkG,EAAA8zD,EAAA9zD,IAAA6zD,EAAA5zD,EAAA2zD,EAAA3zD,GACA,OAAA2sH,EAAA,CACA,IAAAjkG,IAAAu7E,EAAAlkG,EAAA8zD,EAAA9zD,IAAA4zD,EAAA3zD,EAAA6zD,EAAA7zD,IAAAikG,EAAAjkG,EAAA6zD,EAAA7zD,IAAA2zD,EAAA5zD,EAAA8zD,EAAA9zD,IAAA4sH,EACAC,IAAAh5D,EAAA7zD,EAAA4zD,EAAA5zD,IAAA4zD,EAAA3zD,EAAA6zD,EAAA7zD,IAAA4zD,EAAA5zD,EAAA2zD,EAAA3zD,IAAA2zD,EAAA5zD,EAAA8zD,EAAA9zD,IAAA4sH,EACA,IAAAR,GAAAzjG,EAAA4zF,GAAAD,SAAA3zF,EAAA,EAAA4zF,GAAAD,SACAuQ,EAAAtQ,GAAAD,SAAAuQ,EAAA,EAAAtQ,GAAAD,SAAA8P,GACAzjG,GAAA,GAAAA,GAAA,GAAAkkG,GAAA,GAAAA,GAAA,EACA,OAAAj5D,EAAA5zD,EAAA2oB,GAAAkrC,EAAA7zD,EAAA4zD,EAAA5zD,GAAA4zD,EAAA3zD,EAAA0oB,GAAAkrC,EAAA5zD,EAAA2zD,EAAA3zD,MAgBAipH,GAAAvrH,UAAAwuH,kBAAA,SAAAv4D,EAAAC,EAAAC,EAAAowC,EAAAC,GACA,QAAA18F,IAAAosD,EAAA22D,aAAA/iH,IAAAy8F,EAAAsmB,OACA,SAEA,IAAAsC,GAAAh5D,EAAA9zD,EAAAkkG,EAAAlkG,IAAA6zD,EAAA5zD,EAAAikG,EAAAjkG,IAAA6zD,EAAA7zD,EAAAikG,EAAAjkG,IAAA4zD,EAAA7zD,EAAAkkG,EAAAlkG,GACA+sH,GAAA5oB,EAAAnkG,EAAAkkG,EAAAlkG,IAAA6zD,EAAA5zD,EAAAikG,EAAAjkG,IAAAkkG,EAAAlkG,EAAAikG,EAAAjkG,IAAA4zD,EAAA7zD,EAAAkkG,EAAAlkG,GACAgtH,GAAAp5D,EAAA5zD,EAAA6zD,EAAA7zD,IAAAkkG,EAAAjkG,EAAA4zD,EAAA5zD,IAAA2zD,EAAA3zD,EAAA4zD,EAAA5zD,IAAAikG,EAAAlkG,EAAA6zD,EAAA7zD,GACAitH,GAAAn5D,EAAA9zD,EAAA6zD,EAAA7zD,IAAAkkG,EAAAjkG,EAAA4zD,EAAA5zD,IAAA6zD,EAAA7zD,EAAA4zD,EAAA5zD,IAAAikG,EAAAlkG,EAAA6zD,EAAA7zD,GACAktH,EAAAhpB,EAAAsmB,OAAAuC,GAAAD,EAAAC,GAAAD,EACAK,EAAAt5D,EAAA22D,OAAAyC,GAAAD,EAAAC,GAAAD,EACA,OAAAE,GAAAC,GAOAjE,GAAAvrH,UAAAwzF,iBAAA,SAAAC,EAAAp2C,GACA,IAKAt8C,EAAAC,EAAAuX,EAAAoH,EALAge,EAAA81D,EAAAgE,WACAxzF,EAAAwvF,EAAAh6D,YACAg2F,EAAAlxG,KAAA48F,QAAAl6G,OACAyuH,EAAAnxG,KAAAy1F,iBAAAsV,kBACAxlH,EAAA2vF,EAAA36D,qBAEA5wB,EAAA,EACA,IAAAnH,EAAA,EAAAC,EAAA28B,EAAA18B,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAAE,EAAA58B,GACA,GAAA08B,EAAAx8B,OAAA,GACA,IAAAuqH,EAAAj1B,GAAA,EAAAzpF,UAAAhJ,EAAAoE,EAAAu1B,EAAA,GACAx5B,GAAAsa,KAAAkgB,OAAA,IAAAlgB,KAAAkgB,OAAA,IACA,GAAA+sF,EAAAvqH,OAAA,CACA,IACA0uH,EADAC,KAEA,IAAAr3G,EAAA,EAAAoH,EAAA8d,EAAAx8B,OAAqCsX,EAAAoH,IAAQpH,EAC7CklB,EAAAllB,KAAAklB,EAAAllB,EAAA,KACAo3G,EAAAp5B,GAAA,EAAAzpF,UAAAhJ,EAAA25B,EAAAllB,EAAA,GACAklB,EAAAllB,GAAAtU,GAAAsa,KAAAkgB,OAAA,IAAAlgB,KAAAkgB,OAAA,IACAmxF,EAAAplH,KAAAmlH,IAGApxG,KAAAy1F,iBAAAkV,uBAAAsC,EAAAoE,EAAA3rH,GACAsa,KAAA8tF,iBAAAmf,EAAAoE,EAAA3rH,IAGAiE,EAAAu1B,IAAAx8B,OAAA,GAEAsd,KAAA48F,QAAAl6G,OAAAwuH,IACAlxG,KAAA88F,aAAA7wG,KAAAilH,GACAlxG,KAAA+8F,oBAAA9wG,KAAA6yC,GACA9+B,KAAAszB,OAAA7d,UACAzV,KAAAihG,cAAAh1G,KAAAilH,GACAlxG,KAAAszB,OAAA7d,SAAA,IAGAzV,KAAAy1F,iBAAAsV,kBAAAoG,GACAnxG,KAAAy1F,iBAAAoV,gBAAA/rE,EAAAqyE,IAQAnE,GAAAvrH,UAAA4zF,YAAA,SAAAC,EAAAx2C,GACA,IAAA5f,EAAAo2D,EAAA3xC,UACAj+C,EAAA4vF,EAAAp6D,YACA,GAAAgE,EAAAx8B,OAAA,GACA,IAAA6C,EAAA+vF,EAAA/6D,qBAAArG,IAAAmD,QACA41F,EAAAj1B,GAAA,EAAAzpF,UAAAhJ,EAAA,EAAA25B,EAAA,GACAx5B,GAAAsa,KAAAkgB,OAAA,IAAAlgB,KAAAkgB,OAAA,IACA,GAAA+sF,EAAAvqH,OAAA,CACA,IACAF,EAAAC,EAAA2uH,EADAC,KAEA,IAAA7uH,EAAA,EAAAC,EAAAy8B,EAAAx8B,OAAmCF,EAAAC,IAAQD,EAC3C08B,EAAA18B,KAAA08B,EAAA18B,EAAA,KACA4uH,EAAAp5B,GAAA,EAAAzpF,UAAAhJ,EAAA25B,EAAA18B,EAAA,GACA08B,EAAA18B,GAAAkD,GAAAsa,KAAAkgB,OAAA,IAAAlgB,KAAAkgB,OAAA,IACAmxF,EAAAplH,KAAAmlH,IAIApxG,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAA+8F,oBAAA9wG,KAAA6yC,GACA9+B,KAAAszB,OAAA7d,UACAzV,KAAAihG,cAAAh1G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAszB,OAAA7d,SAAA,GAEAzV,KAAAy1F,iBAAAoV,gBAAA/rE,GAEA9+B,KAAAy1F,iBAAAkV,uBAAAsC,EAAAoE,EAAA3rH,GACAsa,KAAA8tF,iBAAAmf,EAAAoE,EAAA3rH,MASAsnH,GAAAvrH,UAAA2rG,OAAA,SAAAz7F,GAEAqO,KAAAg9F,eAAA,IAAA6D,GAAA7gG,KAAA2H,UAGA3H,KAAA68F,cAAA,IAAAgE,GAAA7gG,KAAA48F,SAEA58F,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QAEAsd,KAAAy1F,iBAAArI,OAAAz7F,GAGA,IAAAqO,KAAAihG,cAAAv+G,QAAAsd,KAAAghG,QAAAt+G,OAAA,IACAsd,KAAAghG,YAGAhhG,KAAA2H,SAAA,KACA3H,KAAA48F,QAAA,MAOAoQ,GAAAvrH,UAAAw7G,2BAAA,SAAAtrG,GACA,IAAAqrG,EAAAh9F,KAAAg9F,eACAH,EAAA78F,KAAA68F,cACAyU,EAAAtxG,KAAAy1F,iBAAAwH,2BAAAtrG,GACA,kBACAA,EAAA4vG,aAAAvE,GACArrG,EAAA4vG,aAAA1E,GACAyU,MAQAtE,GAAAvrH,UAAAy7G,aAAA,SAAAnvF,EAAApc,EAAA5J,EAAA+tC,GAEA,IAAA0rE,EAAAC,EACAD,EAAAiK,GAAA1Q,SACA0G,EAAAgK,GAAAxQ,OACA,IAGAmC,EAHA/B,EAAA1pG,EAAA+vG,WAAAF,EAAAC,GAkBA,OAdAzhG,KAAA+gG,kBAIA3D,EAAAp9F,KAAA+gG,mBAHA3D,EAAA,IAAAsO,GAAA39F,EAAAstF,GACAr7F,KAAA+gG,kBAAA3D,GAKAzrG,EAAAgwG,WAAAtG,GAGAttF,EAAA6zF,wBAAAxE,EAAApB,YACAjuF,EAAA8zF,oBAAAzE,EAAApB,WAAA,EAAAlB,GAAA,EAAAtqG,OACA,OAEA4sG,GAOA4P,GAAAvrH,UAAA07G,gBAAA,SAAApvF,EAAAqvF,GACArvF,EAAAg0F,yBAAA3E,EAAApB,aAOAgR,GAAAvrH,UAAA47G,WAAA,SAAAtvF,EAAApc,EAAA44F,EAAA+S,GAEA,IAaA96G,EAAAmH,EAAAlE,EAAAu8G,EAbAgJ,EAAuCj9F,EAAAG,aAAAH,EAAAk9F,YACvCC,EAAwCn9F,EAAAG,aAAAH,EAAAo9F,iBAQxC,GANA7N,IACAvvF,EAAA8wF,OAAA9wF,EAAA5d,YACA4d,EAAAq9F,WAAA,GACAr9F,EAAAs9F,UAAAt9F,EAAAsxF,WAGAt9G,EAAA,EAAA8E,QAAA0jG,GAMA,IADA9kG,EAAAua,KAAA88F,aAAA98F,KAAA88F,aAAAp6G,OAAA,GACAF,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAA2CF,GAAA,IAAQA,EACnDmH,EAAAqW,KAAAihG,cAAAz+G,GACAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAiiG,cAAAl0F,EAAAi0F,GACAhiG,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAA,EAAAkE,OAVAqW,KAAAkiG,oBAAAn0F,EAAApc,EAAA44F,GAaA+S,IACAvvF,EAAA+W,QAAA/W,EAAA5d,YACA4d,EAAAniB,MAAAmiB,EAAA4vF,kBAEA5vF,EAAAq9F,UAAAF,GACAn9F,EAAAs9F,UAAAL,KAQAgC,GAAAvrH,UAAA87G,+BAAA,SAAAxvF,EAAApc,EAAA44F,EACAC,EAAAC,GACA,IAAAjoG,EAAAmH,EAAAlE,EAAAu8G,EAAAG,EAAArjE,EAAAsjE,EAGA,IAFAA,EAAApiG,KAAA88F,aAAAp6G,OAAA,EACA+C,EAAAua,KAAA88F,aAAAsF,EAAA,GACA5/G,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAAyCF,GAAA,IAAQA,EAKjD,IAJAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAiiG,cAAAl0F,EAAAi0F,GACAG,EAAAniG,KAAAihG,cAAAz+G,GAEA4/G,GAAA,GACApiG,KAAA88F,aAAAsF,IAAAD,GAAA,CAKA,GAJAx4G,EAAAqW,KAAA88F,aAAAsF,GACAtjE,EAAA9+B,KAAA+8F,oBAAAqF,QAGA72G,IAAAg/F,EAFA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,aAGAooB,EAAAT,qBACA9yC,IAAAk/F,GAAAxgF,EAAA,EAAA9gB,WACuC,EACvC21C,EAAAT,cAAAl6B,cAAA,CACA4J,EAAAniB,MAAAmiB,EAAAxe,iBAAAwe,EAAA4vF,kBACA39F,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GAEA,IAAA+xB,EAAAgzE,EAAA1rD,GAEA,GAAAtnB,EACA,OAAAA,EAIA4qF,IACA38G,EAAAkE,IAaAqjH,GAAAvrH,UAAAygH,oBAAA,SAAAn0F,EAAApc,EAAA44F,GACA,IAAA/nG,EAAAmH,EAAAlE,EAAAu8G,EAAAG,EAAArjE,EAAAsjE,EAAAC,EAGA,IAFAD,EAAApiG,KAAA88F,aAAAp6G,OAAA,EACA+C,EAAAkE,EAAAqW,KAAA88F,aAAAsF,EAAA,GACA5/G,EAAAwd,KAAAihG,cAAAv+G,OAAA,EAAyCF,GAAA,IAAQA,EAAA,CAKjD,IAJAw/G,EAAAhiG,KAAAghG,QAAAx+G,GACAwd,KAAAiiG,cAAAl0F,EAAAi0F,GACAG,EAAAniG,KAAAihG,cAAAz+G,GAEA4/G,GAAA,GACApiG,KAAA88F,aAAAsF,IAAAD,GACAE,EAAAriG,KAAA88F,aAAAsF,GACAtjE,EAAA9+B,KAAA+8F,oBAAAqF,GAGA7X,EAFA7mF,EAAA,EAAA5hB,OAAAg9C,GAAApoB,cAGA/sB,IAAAlE,IACAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAsoB,EAAAniB,MAAAmiB,EAAA4vF,mBAEAl4G,EAAA48G,GAEAD,IACAz4G,EAAA04G,EAEA14G,IAAAlE,IACAua,KAAA4/F,aAAA7xF,EAAApc,EAAAhI,EAAAlE,GACAsoB,EAAAniB,MAAAmiB,EAAA4vF,mBAEAh0G,EAAAlE,EAAA08G,IAUA6K,GAAAvrH,UAAAwgH,cAAA,SAAAl0F,EAAAwI,GACAxI,EAAAu0F,WAAAtiG,KAAA+gG,kBAAAqI,QAAA7yF,IAOAy2F,GAAAvrH,UAAA+zF,mBAAA,SAAAz4C,EAAAnB,GACA,IAAAk+C,EAAA/8C,IAAAlT,YAAA,SAeA,GARAiwD,EANAA,aAAA7hE,gBACA6hE,aAAA9hE,cAKAqoF,GAAA9tG,iBAJAkrC,GAAA,EAAAnnB,QAAAwjE,GAAA5lE,IAAA,SAAAnmB,EAAAvL,GACA,UAAAA,EAAAuL,EAAA,IAAAA,KACKsyG,GAAA9tG,iBAILyN,KAAAszB,OAAA4tE,WAAA/wF,EAAA,EAAApqB,OAAA+zF,EAAA95E,KAAAszB,OAAA4tE,aACAlhG,KAAAszB,OAAA4tE,UAAApnB,EACA95E,KAAAszB,OAAA7d,SAAA,EACAzV,KAAAghG,QAAA/0G,KAAA6tF,IAGAl+C,EACA57B,KAAAy1F,iBAAAjgB,mBAAA,KAAA55C,OACG,CACH,IAAA21E,EAAA,IAAAnyE,GAAA,GACA7oB,OAAA,SACAymB,UAAA,IAEAh9B,KAAAy1F,iBAAAjgB,mBAAA,KAAA+7B,KAGA,IAAAC,GAAA,GC1hCAC,GAAA,SAAA1pH,EAAA2pH,GAMA1xG,KAAA2xG,OAAAD,EAMA1xG,KAAA4xG,eAAwB9tH,EAAA,EAAAC,EAAA,EAAAmQ,MAAAnM,EAAAoN,OAAApN,IAMxBiY,KAAAymB,YAMAzmB,KAAAi2E,SAAAh6C,EAAA,EAAAlnC,sBAAAhN,KAMAiY,KAAAi6B,QAAAj6B,KAAAi2E,SAAAxkF,QAQAggH,GAAAhwH,UAAA8gB,IAAA,SAAAg6B,GACA,OAAAv8B,KAAAymB,SAAA8V,IAAA,MAcAk1E,GAAAhwH,UAAAmlB,IAAA,SAAA21B,EAAAroC,EAAAiB,EAAA08G,EAAAzrH,GACA,IAAA0rH,EAAAtvH,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAud,KAAA4xG,aAAAlvH,OAA4CF,EAAAC,IAAQD,EAEpD,IADAsvH,EAAA9xG,KAAA4xG,aAAApvH,IACA0R,SAAA8L,KAAA2xG,QACAG,EAAA38G,UAAA6K,KAAA2xG,OAAA,CAEA,IAAA3qF,GACA7wB,QAAA27G,EAAAhuH,EAAAkc,KAAA2xG,OACAv7G,QAAA07G,EAAA/tH,EAAAic,KAAA2xG,OACAl7G,MAAAuJ,KAAAi6B,SAWA,OATAj6B,KAAAymB,SAAA8V,GAAAvV,EAGA6qF,EAAAvrH,KAAAF,EAAA4Z,KAAAi2E,SACA67B,EAAAhuH,EAAAkc,KAAA2xG,OAAAG,EAAA/tH,EAAAic,KAAA2xG,QAGA3xG,KAAA+xG,OAAAvvH,EAAAsvH,EAAA59G,EAAA8L,KAAA2xG,OAAAx8G,EAAA6K,KAAA2xG,QAEA3qF,EAKA,aAWAyqF,GAAAhwH,UAAAswH,OAAA,SAAA10G,EAAAy0G,EAAA59G,EAAAiB,GACA,IAIA68G,EAEAC,EANAH,EAAA59G,QACA49G,EAAA38G,UAUA68G,GACAluH,EAAAguH,EAAAhuH,EAAAoQ,EACAnQ,EAAA+tH,EAAA/tH,EACAmQ,MAAA49G,EAAA59G,QACAiB,OAAA28G,EAAA38G,QAIA88G,GACAnuH,EAAAguH,EAAAhuH,EACAC,EAAA+tH,EAAA/tH,EAAAoR,EACAjB,QACAiB,OAAA28G,EAAA38G,UAEA6K,KAAAkyG,cAAA70G,EAAA20G,EAAAC,KAIAD,GACAluH,EAAAguH,EAAAhuH,EAAAoQ,EACAnQ,EAAA+tH,EAAA/tH,EACAmQ,MAAA49G,EAAA59G,QACAiB,UAIA88G,GACAnuH,EAAAguH,EAAAhuH,EACAC,EAAA+tH,EAAA/tH,EAAAoR,EACAjB,MAAA49G,EAAA59G,MACAiB,OAAA28G,EAAA38G,UAEA6K,KAAAkyG,cAAA70G,EAAA20G,EAAAC,KAcAR,GAAAhwH,UAAAywH,cAAA,SAAA70G,EAAA20G,EAAAC,GACA,IAAAE,GAAA90G,EAAA,GACA20G,EAAA99G,MAAA,GAAA89G,EAAA78G,OAAA,GACAg9G,EAAAlmH,KAAA+lH,GAEAC,EAAA/9G,MAAA,GAAA+9G,EAAA98G,OAAA,GACAg9G,EAAAlmH,KAAAgmH,GAEAjyG,KAAA4xG,aAAAtlH,OAAAnJ,MAAA6c,KAAA4xG,aAAAO,IAEA,IAAAC,GAAA,GC7JAC,GAAA,SAAAnxG,GAEA,IAAAG,EAAAH,MAOAlB,KAAAsyG,kBAAA/mH,IAAA8V,EAAAkxG,YACAlxG,EAAAkxG,YAAA7uG,EAAA,EAAAjjB,mBAOAuf,KAAAwyG,cAAAjnH,IAAA8V,EAAAoxG,QACApxG,EAAAoxG,SAAA,GAAA/uG,EAAA,EAAAhjB,eACAgjB,EAAA,EAAAhjB,oBAAA6K,IAAAmY,EAAA,EAAAtiB,uBACAsiB,EAAA,EAAAtiB,uBAAA,KAOA4e,KAAA2xG,YAAApmH,IAAA8V,EAAAqwG,MAAArwG,EAAAqwG,MAAA,EAMA1xG,KAAA0yG,UAAA,IAAAN,GAAApyG,KAAAsyG,aAAAtyG,KAAA2xG,SAOA3xG,KAAA2yG,gBAAA3yG,KAAAsyG,aAMAtyG,KAAA4yG,aAAA,IAAAR,GAAApyG,KAAA2yG,gBAAA3yG,KAAA2xG,UASAU,GAAA5wH,UAAAoxH,QAAA,SAAAt2E,GAEA,IAAAC,EAAAx8B,KAAA8yG,SAAA9yG,KAAA0yG,SAAAn2E,GAEA,IAAAC,EACA,YAEA,IAAAu2E,EAAwC/yG,KAAA8yG,SAAA9yG,KAAA4yG,YAAAr2E,GAExC,OAAAv8B,KAAAgzG,YAAAx2E,EAAAu2E,IAWAV,GAAA5wH,UAAAqxH,SAAA,SAAAG,EAAA12E,GACA,IAAAC,EAAAh6C,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAwwH,EAAAvwH,OAAkCF,EAAAC,IAAQD,EAG1C,GADAg6C,EADAy2E,EAAAzwH,GACA+f,IAAAg6B,GAEA,OAAAC,EAGA,aAYA61E,GAAA5wH,UAAAuxH,YAAA,SAAAx2E,EAAAu2E,GACA,OACA58G,QAAAqmC,EAAArmC,QACAC,QAAAomC,EAAApmC,QACAK,MAAA+lC,EAAA/lC,MACAgmC,SAAAs2E,EAAAt8G,QA2BA47G,GAAA5wH,UAAAmlB,IAAA,SAAA21B,EAAAroC,EAAAiB,EACA08G,EAAAqB,EAAA9sH,GACA,GAAA8N,EAAA8L,KAAA2xG,OAAA3xG,KAAAwyG,UACAr9G,EAAA6K,KAAA2xG,OAAA3xG,KAAAwyG,SACA,YAIA,IAAAh2E,EAAAx8B,KAAAmzG,MAAA,EACA52E,EAAAroC,EAAAiB,EAAA08G,EAAAzrH,GACA,IAAAo2C,EACA,YAMA,IAAA42E,OAAA7nH,IAAA2nH,EACAA,EAAAxvG,EAAA,EAAA7hB,aAEAkxH,EAAwC/yG,KAAAmzG,MAAA,EACxC52E,EAAAroC,EAAAiB,EAAAi+G,EAAAhtH,GAEA,OAAA4Z,KAAAgzG,YAAAx2E,EAAAu2E,IAiBAV,GAAA5wH,UAAA0xH,KAAA,SAAAE,EAAA92E,EAAAroC,EAAAiB,EACA08G,EAAAzrH,GACA,IACAktH,EAAA92E,EAAAh6C,EAAAC,EADAwwH,EAAA,EAAAjzG,KAAA4yG,YAAA5yG,KAAA0yG,SAEA,IAAAlwH,EAAA,EAAAC,EAAAwwH,EAAAvwH,OAAkCF,EAAAC,IAAQD,EAAA,CAG1C,GADAg6C,GADA82E,EAAAL,EAAAzwH,IACAokB,IAAA21B,EAAAroC,EAAAiB,EAAA08G,EAAAzrH,GAEA,OAAAo2C,EAIA,IAAAz0C,EAHKy0C,GAAAh6C,IAAAC,EAAA,IAIL4wH,GACAtrH,EAAA9E,KAAAC,IAAA,EAAA8c,KAAA2yG,gBAAA3yG,KAAAwyG,UACAxyG,KAAA2yG,gBAAA5qH,IAEAA,EAAA9E,KAAAC,IAAA,EAAA8c,KAAAsyG,aAAAtyG,KAAAwyG,UACAxyG,KAAAsyG,aAAAvqH,GAEAurH,EAAA,IAAAlB,GAAArqH,EAAAiY,KAAA2xG,QACAsB,EAAAhnH,KAAAqnH,KAEA7wH,GAGA,aAEA,IAAA8wH,GAAA,GCtMAC,GAAA,SAAApuF,EAAA+hE,GACAkhB,GAAA/hH,KAAA0Z,KAAAolB,EAAA+hE,GAMAnnF,KAAAuoG,WAMAvoG,KAAAyoG,aAMAzoG,KAAAyzG,eAAAx3E,EAAA,EAAAlnC,sBAAA,KAAAtD,OAeAuO,KAAAszB,QACA6tE,YAAA,KACAj4E,aAAA39B,EACA69B,SAAA,KACAE,oBAAA/9B,EACAi+B,cAAAj+B,EACAyxC,UAAA,EACAtT,gBAAAn+B,EACA21G,UAAA,KACAttG,UAAArI,EACA+C,WAAA/C,GAOAyU,KAAAm+B,MAAA,GAMAn+B,KAAA0zG,gBAAAnoH,EAMAyU,KAAA2zG,mBAAApoH,EAMAyU,KAAA4zG,cAAAroH,EAMAyU,KAAA6zG,cAAAtoH,EAMAyU,KAAA0yG,YAMA1yG,KAAA8zG,gBAAAvoH,EAEAyU,KAAA1R,MAAA,EAEA0R,KAAAxJ,QAAA,GAIAkN,EAAA,EAAApiB,SAAAkyH,GAAAnL,IAMAmL,GAAA/xH,UAAA8zF,SAAA,SAAAt0E,EAAA69B,GACA,GAAA9+B,KAAAm+B,MAAA,CACA,IAAA54C,EAAA,KAEAE,EAAA,EACAC,EAAA,EACA,OAAAub,EAAAM,WACA,KAAAC,GAAA,EAAA5P,MACA,KAAA4P,GAAA,EAAAxP,YAEAvM,GADAF,EAAA0b,EAAAsZ,sBACA73B,OACAgD,EAAAub,EAAAia,YACA,MACA,KAAA1Z,GAAA,EAAApP,OACA7M,EAAoD,EAAAyB,YACpD,MACA,KAAAwa,GAAA,EAAA3P,YACAtM,EAAwD,EAAAszF,kBACxD,MACA,KAAAr3E,GAAA,EAAAvP,kBAEAxM,GADAF,EAA6D,EAAAyzF,oBAC7Dt2F,OACA,MACA,KAAA8e,GAAA,EAAAzP,QACAxM,EAAqD,EAAAq+C,uBACrD,MACA,KAAApiC,GAAA,EAAAtP,cAEAzM,GADAF,EAA0D,EAAA6zF,yBAC1D12F,OAIAsd,KAAA88F,aAAA7wG,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAA+8F,oBAAA9wG,KAAA6yC,GAEA,IAGAt8C,EAAAC,EAAAuX,EAAAoH,EAAA2yG,EAAAC,EAAAC,EAAAC,EAHAC,EAAAn0G,KAAA8zG,WACAxjB,EAAAtwF,KAAAm+B,MAAAzqB,MAAA,MACA0gG,EAAAp0G,KAAAq0G,aAAA/jB,GAEAxhF,EAAA7rB,KAAAyuC,MAAA0iF,EAAA,GAAAp0G,KAAA0zG,WAAA1zG,KAAA4zG,UACA7kG,EAAA9rB,KAAAyuC,MAAA0iF,EAAA,GAAAp0G,KAAA2zG,cAAA3zG,KAAA6zG,UACA72E,EAAAh9B,KAAAszB,OAAA0J,UAAA,EAAAh9B,KAAAszB,OAAAhlC,MAEA,IAAA9L,EAAA,EAAAC,EAAA6tG,EAAA5tG,OAAkCF,EAAAC,IAAQD,EAK1C,IAJAuxH,EAAA,EACAC,EAAAG,EAAAh/G,OAAA3S,EAGAwX,EAAA,EAAAoH,GAFA6yG,EAAA3jB,EAAA9tG,GAAAkxB,MAAA,KAEAhxB,OAAsCsX,EAAAoH,IAAQpH,EAAA,CAG9C,GAFAk6G,EAAAC,EAAAb,MAAAT,QAAAoB,EAAAj6G,IAEA,CACA,IAYA2uG,EAZAlyG,EAAAy9G,EAAAz9G,MAEAuJ,KAAA8O,UAAAilG,EACA/zG,KAAA+O,UAAAilG,EACAh0G,KAAAtJ,QAAA,IAAAsD,EAAAk6G,EAAA/9G,QAAA6mC,EAAAk3E,EAAA/9G,QACA6J,KAAArJ,QAAAu9G,EAAA99G,QACA4J,KAAA7K,OAAAg/G,EAAAh/G,OACA6K,KAAA9L,MAAA,IAAA8F,OAAAi6G,EAAAvxH,OAAA,EACAyxH,EAAAjgH,MAAA+/G,EAAAj6G,IAAAgjC,EAAAm3E,EAAAjgH,MAAA+/G,EAAAj6G,IACAgG,KAAAunG,YAAA9wG,EAAAtB,OACA6K,KAAAwnG,WAAA/wG,EAAAvC,MAGA,IAAA8L,KAAAuoG,QAAA7lH,OACAsd,KAAAuoG,QAAAt8G,KAAAwK,IAEAkyG,EAAA3oG,KAAAuoG,QAAAvoG,KAAAuoG,QAAA7lH,OAAA,GACAghB,EAAA,EAAA5hB,OAAA6mH,IAAAjlG,EAAA,EAAA5hB,OAAA2U,KACAuJ,KAAAqnG,aAAAp7G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAuoG,QAAAt8G,KAAAwK,KAIAuJ,KAAAk4E,UAAA3yF,EAxEA,EAwEAE,EAAAC,GAEAquH,GAAA/zG,KAAA9L,SAYAs/G,GAAA/xH,UAAA4yH,aAAA,SAAA/jB,GACA,IAAAgkB,EAAAt0G,KACAm0G,EAAAn0G,KAAA8zG,WACAS,EAAAjkB,EAAA5tG,OAAAyxH,EAAAh/G,OAiBA,OAfAm7F,EAAAp8E,IAAA,SAAAsgG,GACA,IACAhyH,EAAAC,EADAgyH,EAAA,EAEA,IAAAjyH,EAAA,EAAAC,EAAA+xH,EAAA9xH,OAAgCF,EAAAC,IAAQD,EAAA,CACxC,IAAAkyH,EAAAF,EAAAhyH,GACA2xH,EAAAjgH,MAAAwgH,IACAJ,EAAAK,gBAAAD,GAEAD,GAAAN,EAAAjgH,MAAAwgH,GAAAP,EAAAjgH,MAAAwgH,GAAA,EAEA,OAAAD,IACGG,OAAA,SAAAtxH,EAAAoxH,GACH,OAAAzxH,KAAAK,MAAAoxH,KAGAH,IAWAf,GAAA/xH,UAAAy2F,UAAA,SAAA3yF,EAAAC,EACAC,EAAAC,GACA,IAAAlD,EAAAC,EACA,IAAAD,EAAAgD,EAAA/C,EAAAgD,EAA4BjD,EAAAC,EAAQD,GAAAkD,EACpCsa,KAAA4nG,gBAAAriH,EAAAC,EAAAC,EAAAC,IASA8tH,GAAA/xH,UAAAkzH,gBAAA,SAAAjvB,GACA,OAAAA,EAAAhjG,OAAA,CACA,IAAAyxH,EAAAn0G,KAAA8zG,WACAvgF,EAAAvzB,KAAAszB,OACAuhF,EAAA70G,KAAAyzG,eAAAjiH,WAAA,MACAqjH,EAAAjhH,KAAA2/B,EAAA3/B,KACA,IAAAM,EAAAjR,KAAAiW,KAAA27G,EAAA5gH,YAAAyxF,GAAAxxF,MAAAq/B,EAAAjlC,OAEA6lH,EAAAb,MAAA1sG,IAAA8+E,EAAAxxF,EAAAigH,EAAAh/G,OACA,SAAA4/C,EAAAjxD,EAAAC,GAEAgxD,EAAAnhD,KAAuC2/B,EAAA,KACvCwhB,EAAAhY,UAAAxJ,EAAA2tE,UACAnsD,EAAAnZ,YAAArI,EAAA4tE,YACApsD,EAAA/X,UAAAzJ,EAAAyJ,UACA+X,EAAA7rB,QAA2CqK,EAAA,QAC3CwhB,EAAAvrB,SAA2C+J,EAAA,SAC3CwhB,EAAArrB,WAA6C6J,EAAA,WAC7CwhB,EAAA4kC,UAAA,OACA5kC,EAAA8kC,aAAA,MACA99C,EAAA,EAAA5uB,kBAAAomB,EAAAnK,WAEA2rB,EAAA1nC,YAAAkmB,EAAAnK,UACA2rB,EAAAzrB,eAAmDiK,EAAA,gBAEnD,IAAAA,EAAAjlC,OAEAymD,EAAA/9C,aAA+Cu8B,EAAA,UACbA,EAAA,WAIlCA,EAAA4tE,aACApsD,EAAAujC,WAAAoN,EAAA5hG,EAAAC,GAEAwvC,EAAA2tE,WACAnsD,EAAAwjC,SAAAmN,EAAA5hG,EAAAC,OAKAowH,EAAAjgH,MAAAwxF,GAAAxxF,KASAs/G,GAAA/xH,UAAA2rG,OAAA,SAAAz7F,GACA,IAAAoc,EAAApc,EAAAysG,QAEAp+F,KAAAqnG,aAAAp7G,KAAA+T,KAAA48F,QAAAl6G,QACAsd,KAAAsnG,yBAAAtnG,KAAAqnG,aAGArnG,KAAAg9F,eAAA,IAAA6D,GAAA7gG,KAAA2H,UAGA3H,KAAA68F,cAAA,IAAAgE,GAAA7gG,KAAA48F,SAMA58F,KAAA6nG,eAAA7nG,KAAAyoG,UAAAzoG,KAAAuoG,WAAAx6F,GAEA/N,KAAAszB,QACA6tE,YAAA,KACAj4E,aAAA39B,EACA69B,SAAA,KACAE,oBAAA/9B,EACAi+B,cAAAj+B,EACAyxC,UAAA,EACAtT,gBAAAn+B,EACA21G,UAAA,KACAttG,UAAArI,EACA+C,WAAA/C,GAEAyU,KAAAm+B,MAAA,GACAn+B,KAAA0zG,gBAAAnoH,EACAyU,KAAA2zG,mBAAApoH,EACAyU,KAAA4zG,cAAAroH,EACAyU,KAAA6zG,cAAAtoH,EACAyU,KAAAuoG,QAAA,KACAvoG,KAAA0yG,YACA1yG,KAAA8zG,gBAAAvoH,EACA88G,GAAA5mH,UAAA2rG,OAAA9mG,KAAA0Z,KAAArO,IAOA6hH,GAAA/xH,UAAAm0F,aAAA,SAAAC,GACA,IAAAtiD,EAAAvzB,KAAAszB,OACAmnD,EAAA5E,EAAAx6C,UACAs/C,EAAA9E,EAAAp6C,YACA,GAAAo6C,KAAAv3C,YAAAm8C,GAAAE,GAEG,CACH,GAAAF,EAEK,CACL,IAAAC,EAAAD,EAAA5wD,WACA0J,EAAA2tE,UAAAplE,GAAA,EAAAjkB,YAAA6iE,GACA2lB,GAAA9tG,uBAJAghC,EAAA2tE,UAAA,KAMA,GAAAvmB,EAGK,CACL,IAAAC,EAAAD,EAAA9wD,WACA0J,EAAA4tE,YAAArlE,GAAA,EAAAjkB,YAAA+iE,GACAylB,GAAAxtG,oBACA0gC,EAAAyJ,UAAA29C,EAAA7zF,YAAAu5G,GAAAptG,iBACAsgC,EAAArK,QAAAyxD,EAAA7wD,cAAAu2E,GAAA7tG,eACA+gC,EAAAjK,eAAAqxD,EAAA3wD,qBAAAq2E,GAAA3tG,sBACA6gC,EAAA/J,SAAAmxD,EAAA1wD,eAAAo2E,GAAA1tG,gBACA4gC,EAAA7J,WAAAixD,EAAAzwD,iBAAAm2E,GAAAztG,kBACA,IAAAw2B,EAAAuxD,EAAA5wD,cACAwJ,EAAAnK,aAAAxlC,QAAAy8G,GAAA5tG,qBAZA8gC,EAAA4tE,YAAA,KACA5tE,EAAAyJ,UAAA,EAaAzJ,EAAA3/B,KAAAiiF,EAAAuF,WAAAilB,GAAA/tG,YACAihC,EAAAjlC,MAAAunF,EAAA98C,YAAA,EACA/4B,KAAAm+B,MAAmC03C,EAAAv3C,UACnC,IAAAq7C,EAAAsN,GAAAD,WAAAnR,EAAAiG,gBACAjC,EAAAoN,GAAAD,WAAAnR,EAAAmG,mBACAh8E,KAAA0zG,gBAAAnoH,IAAAouF,EACA0mB,GAAAvtG,iBAAA6mF,EACA35E,KAAA2zG,mBAAApoH,IAAAsuF,EACAwmB,GAAAttG,oBAAA8mF,EACA75E,KAAA4zG,SAAA/9B,EAAAyF,cAAA,EACAt7E,KAAA6zG,SAAAh+B,EAAA2F,cAAA,EACAx7E,KAAAw4B,iBAAAq9C,EAAAh9C,oBACA74B,KAAAlY,SAAA+tF,EAAA/8C,eAAA,EAEA94B,KAAA8zG,WAAA9zG,KAAA80G,UAAAvhF,QAtCAvzB,KAAAm+B,MAAA,IAgDAq1E,GAAA/xH,UAAAqzH,UAAA,SAAAvhF,GACA,IACA/wC,EADAuyH,KAEA,IAAAvyH,KAAA+wC,GACAA,EAAA/wC,IAAA,IAAA+wC,EAAA/wC,MACAkK,MAAAkQ,QAAA22B,EAAA/wC,IACAuyH,IAAAlsF,OAAA0K,EAAA/wC,IAEAuyH,EAAA9oH,KAAAsnC,EAAA/wC,KAIA,IAAAi2B,EAAAzY,KAAAg1G,eAAAD,GACA,IAAA/0G,KAAA0yG,SAAAj6F,GAAA,CACA,IAAAo8F,EAAA70G,KAAAyzG,eAAAjiH,WAAA,MACAqjH,EAAAjhH,KAAA2/B,EAAA3/B,KACA,IAAAuB,EAAAlS,KAAAiW,MAAA,IAAA27G,EAAA5gH,YAAA,KAAAC,MACAq/B,EAAAyJ,UAAA,GAAAzJ,EAAAjlC,OAEA0R,KAAA0yG,SAAAj6F,IACA66F,MAAA,IAAAC,IACA7B,MAAAn+E,EAAAyJ,UAAA,IAEA9oC,SACAiB,UAGA,OAAA6K,KAAA0yG,SAAAj6F,IASA+6F,GAAA/xH,UAAAuzH,eAAA,SAAAD,GAEA,IAAAvyH,EAAAC,EACAg2B,EAAA,GACA,IAAAj2B,EAAA,EAAAC,EAAAsyH,EAAAryH,OAAiCF,EAAAC,IAAQD,EACzCi2B,GAAAs8F,EAAAvyH,GAEA,OAAAi2B,GAOA+6F,GAAA/xH,UAAAkmH,YAAA,SAAAS,GACA,OAAApoG,KAAAyoG,WAOA+K,GAAA/xH,UAAAumH,wBAAA,WACA,OAAAhoG,KAAAyoG,WAEA,IAAAwM,GAAA,GCzbAC,GAAA,SAAA9vF,EAAA+hE,EAAA2K,GACApN,GAAAp+F,KAAA0Z,MAMAA,KAAAiyF,WAAA9K,EAMAnnF,KAAAgyF,WAAA5sE,EAMAplB,KAAAouD,cAAA0jC,EAOA9xF,KAAAmyF,qBAIAzuF,EAAA,EAAApiB,SAAA4zH,GAAAxwB,IAOAwwB,GAAAzzH,UAAAuxG,aAAA,SAAAz9F,EAAA09F,KAOAiiB,GAAAzzH,UAAAw7G,2BAAA,SAAAtrG,GACA,IACA+gC,EADA+wB,KAEA,IAAA/wB,KAAA1yB,KAAAmyF,iBAAA,CACA,IACAmB,EADAD,EAAArzF,KAAAmyF,iBAAAz/D,GAEA,IAAA4gE,KAAAD,EACA5vC,EAAAx3D,KACAonG,EAAAC,GAAA2J,2BAAAtrG,IAGA,kBAGA,IAFA,IACA6lB,EADA90B,EAAA+gE,EAAA/gE,OAEAF,EAAA,EAAmBA,EAAAE,EAAYF,IAC/Bg1B,EAAAisC,EAAAjhE,GAAAW,MAAA6c,KAAA/E,WAEA,OAAAuc,IAQA09F,GAAAzzH,UAAA2rG,OAAA,SAAAz7F,GACA,IAAA+gC,EACA,IAAAA,KAAA1yB,KAAAmyF,iBAAA,CACA,IACAmB,EADAD,EAAArzF,KAAAmyF,iBAAAz/D,GAEA,IAAA4gE,KAAAD,EACAA,EAAAC,GAAAlG,OAAAz7F,KASAujH,GAAAzzH,UAAA+iG,UAAA,SAAA1uE,EAAA2uE,GACA,IAAAiP,OAAAnoG,IAAAuqB,IAAAY,WAAA,IACA28E,EAAArzF,KAAAmyF,iBAAAuB,QACAnoG,IAAA8nG,IACAA,KACArzF,KAAAmyF,iBAAAuB,GAAAL,GAEA,IAAAnH,EAAAmH,EAAA5O,QACAl5F,IAAA2gG,IAKAA,EAAA,IAAAyH,EADAuhB,GAAAthB,oBAAAnP,IACAzkF,KAAAgyF,WAAAhyF,KAAAiyF,YACAoB,EAAA5O,GAAAyH,GAEA,OAAAA,GAOAgpB,GAAAzzH,UAAAoF,QAAA,WACA,OAAA9E,EAAA,EAAA8E,QAAAmZ,KAAAmyF,mBAeA+iB,GAAAzzH,UAAAyqG,OAAA,SAAAv6F,EACA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EACAt/B,EAAA+zF,GAEA,IAGA/nG,EAAAC,EAAAuX,EAAAoH,EAAAiyF,EAAAnH,EAHA/H,EAAAziG,OAAAmK,KAAAmU,KAAAmyF,kBAAAj+E,IAAAmD,QAIA,IAHA8sE,EAAA7mF,KAAA6S,EAAA,EAAAnU,2BAGAxZ,EAAA,EAAAC,EAAA0hG,EAAAzhG,OAA6BF,EAAAC,IAAQD,EAErC,IADA6wG,EAAArzF,KAAAmyF,iBAAAhO,EAAA3hG,GAAAk0B,YACA1c,EAAA,EAAAoH,EAAA6lF,GAAAF,MAAArkG,OAAqDsX,EAAAoH,IAAQpH,OAE7DzO,KADA2gG,EAAAmH,EAAApM,GAAAF,MAAA/sF,MAEAkyF,SAAAv6F,EACA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EACAt/B,EAAA+zF,OACAh/F,GAAA,IAyBA2pH,GAAAzzH,UAAA0zH,oBAAA,SAAAxjH,EACA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EAAAt/B,EACA+zF,EAAAC,EAAAiT,EAAAhT,GAEA,IAKAjoG,EAAAC,EAAAuX,EAAAq5F,EAAAnH,EAAA10E,EALA2sE,EAAAziG,OAAAmK,KAAAmU,KAAAmyF,kBAAAj+E,IAAAmD,QAMA,IALA8sE,EAAA7mF,KAAA,SAAAzP,EAAAC,GACA,OAAAA,EAAAD,IAIArL,EAAA,EAAAC,EAAA0hG,EAAAzhG,OAA6BF,EAAAC,IAAQD,EAErC,IADA6wG,EAAArzF,KAAAmyF,iBAAAhO,EAAA3hG,GAAAk0B,YACA1c,EAAAitF,GAAAF,MAAArkG,OAAA,EAAiDsX,GAAA,IAAQA,EAEzD,QAAAzO,KADA2gG,EAAAmH,EAAApM,GAAAF,MAAA/sF,OAEAwd,EAAA00E,SAAAv6F,EACA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EAAAt/B,EACA+zF,EAAAC,EAAAiT,EAAAhT,IAEA,OAAAjzE,GAwBA09F,GAAAzzH,UAAAkyC,2BAAA,SACAxvC,EAAAwN,EAAA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EACAt/B,EAAA+zF,EACApkG,GACA,IAQAotG,EARAxlF,EAAApc,EAAAysG,QAiBA,OAhBArwF,EAAAi4F,gBACAj4F,EAAAzc,YAAAK,EAAAozG,mCAOAx5G,IAAAyU,KAAAouD,gBAGAmlC,EAAAtpF,EAAA,EAAAxmB,OACAwmB,EAAA,EAAA9kB,6BAAAhB,GACA0D,EAAAmY,KAAAouD,gBAGApuD,KAAAm1G,oBAAAxjH,EACAxN,EAAA0D,EAAAC,EAAAotH,GAAAE,oBACAt/E,EAAAt/B,EAAA+zF,EAKA,SAAAzrD,GACA,IAAAigD,EAAA,IAAAs2B,WAAA,GAGA,GAFAtnG,EAAAunG,WAAA,QAAAvnG,EAAAtd,KAAAsd,EAAA1d,cAAA0uF,GAEAA,EAAA,MACA,IAAAvnE,EAAArxB,EAAA24C,GACA,GAAAtnB,EACA,OAAAA,KAGO,EAAA+7E,IAiBP2hB,GAAAzzH,UAAAouF,uBAAA,SACA1rF,EAAAwN,EAAA/J,EAAAC,EAAAC,EAAAC,EAAA+tC,EACAt/B,EAAA+zF,GACA,IAAAx8E,EAAApc,EAAAysG,QAiBA,OAhBArwF,EAAAi4F,gBACAj4F,EAAAzc,YAAAK,EAAAozG,mCAeAx5G,IAbAyU,KAAAm1G,oBAAAxjH,EACAxN,EAAA0D,EAAAC,EAAAotH,GAAAE,oBACAt/E,EAAAt/B,EAAA+zF,EAKA,SAAAzrD,GACA,IAAAigD,EAAA,IAAAs2B,WAAA,GAEA,OADAtnG,EAAAunG,WAAA,QAAAvnG,EAAAtd,KAAAsd,EAAA1d,cAAA0uF,GACAA,EAAA,OACO,IAUPm2B,GAAAE,qBAAA,KASAF,GAAAthB,qBACAK,OAAAsO,GACAxxD,MAAA63D,GACAzU,WAAAoX,GACAnX,QAAAod,GACAnd,KAAA4gB,IAEA,IAAAM,GAAA,GCnTAC,GAAA,SAAA7jH,EAAA/J,EAAAC,EAAAC,EAAAC,EAAAzF,EAAAwzC,GACAggD,GAAAxvF,KAAA0Z,MAKAA,KAAAi2E,SAAAtkF,EAKAqO,KAAAy1G,QAAA7tH,EAKAoY,KAAA6C,QAAAvgB,EAKA0d,KAAAy7C,YAAA3lB,EAKA91B,KAAA+6B,MAAAhzC,EAKAiY,KAAAy4B,UAAA3wC,EAKAkY,KAAAkyF,YAAArqG,EAMAmY,KAAA01G,YAAA,KAMA11G,KAAA21G,WAAA,KAMA31G,KAAA41G,aAAA,KAMA51G,KAAA61G,WAAA,MAIAnyG,EAAA,EAAApiB,SAAAk0H,GAAA1/B,IAQA0/B,GAAA/zH,UAAAy2F,UAAA,SAAA4c,EAAA7zF,GACA,IAAAtP,EAAAqO,KAAAi2E,SACAiW,EACA4I,EAAAtQ,UAAA,EAAAG,GAAAn0B,MACA07B,EAAAtW,aAAA51E,KAAA61G,YACA3pB,EAAA3W,SAAAt0E,EAAA,MACAirF,EAAAkB,OAAAz7F,GAMAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,IAYAspB,GAAA/zH,UAAA8sE,SAAA,SAAAh5D,GACAyK,KAAAw1E,mBAAAjgF,EAAA8lC,UAAA9lC,EAAAkmC,aACAz7B,KAAAy1E,cAAAlgF,EAAA2jC,YACAl5B,KAAA41E,aAAArgF,EAAA+oC,YAYAk3E,GAAA/zH,UAAA4yF,aAAA,SAAApzE,GAEA,OADAA,EAAAM,WAEA,KAAAC,GAAA,EAAA5P,MACAoO,KAAAm1E,UAA8C,QAC9C,MACA,KAAA3zE,GAAA,EAAA3P,YACAmO,KAAA20E,eAAwD,QACxD,MACA,KAAAnzE,GAAA,EAAAzP,QACAiO,KAAAq1E,YAAkD,QAClD,MACA,KAAA7zE,GAAA,EAAAxP,YACAgO,KAAA+0E,eAAwD,QACxD,MACA,KAAAvzE,GAAA,EAAAvP,kBACA+N,KAAA60E,oBAAkE,QAClE,MACA,KAAArzE,GAAA,EAAAtP,cACA8N,KAAAi1E,iBAA4D,QAC5D,MACA,KAAAzzE,GAAA,EAAArP,oBACA6N,KAAAy0E,uBAAwE,QACxE,MACA,KAAAjzE,GAAA,EAAApP,OACA4N,KAAAs0E,WAAgD,UAYhDkhC,GAAA/zH,UAAA+yF,YAAA,SAAA11C,EAAAvpC,GACA,IAAA0L,EAAA1L,EAAAkpC,qBAAAlpC,CAAAupC,GACA79B,GACAgJ,EAAA,EAAA9gB,WAAA6W,KAAA6C,QAAA5B,EAAAkD,eAGAnE,KAAAuuD,SAAAh5D,GACAyK,KAAAq0E,aAAApzE,KAOAu0G,GAAA/zH,UAAAgzF,uBAAA,SAAAxzE,EAAAvE,GACA,IACAla,EAAAC,EADAkf,EAAAV,EAAA03E,qBAEA,IAAAn2F,EAAA,EAAAC,EAAAkf,EAAAjf,OAAqCF,EAAAC,IAAQD,EAC7Cwd,KAAAq0E,aAAA1yE,EAAAnf,KAQAgzH,GAAA/zH,UAAA0zF,UAAA,SAAAl0E,EAAAvE,GACA,IAAA/K,EAAAqO,KAAAi2E,SACA6e,EAAA,IAAAygB,GAAA,EAAAv1G,KAAA6C,SACAqpF,EACA4I,EAAAtQ,UAAA,EAAAG,GAAApzE,OACA26E,EAAAzW,cAAAz1E,KAAA01G,aACAxpB,EAAA/W,UAAAl0E,EAAAvE,GACAwvF,EAAAkB,OAAAz7F,GAMAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,GAEAlsF,KAAA61G,YACA71G,KAAAk4E,UAAA4c,EAAA7zF,IAQAu0G,GAAA/zH,UAAAszF,eAAA,SAAA9zE,EAAAvE,GACA,IAAA/K,EAAAqO,KAAAi2E,SACA6e,EAAA,IAAAygB,GAAA,EAAAv1G,KAAA6C,SACAqpF,EACA4I,EAAAtQ,UAAA,EAAAG,GAAApzE,OACA26E,EAAAzW,cAAAz1E,KAAA01G,aACAxpB,EAAAnX,eAAA9zE,EAAAvE,GACAwvF,EAAAkB,OAAAz7F,GAKAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,GAEAlsF,KAAA61G,YACA71G,KAAAk4E,UAAA4c,EAAA7zF,IAQAu0G,GAAA/zH,UAAAkzF,eAAA,SAAA1zE,EAAAvE,GACA,IAAA/K,EAAAqO,KAAAi2E,SACA6e,EAAA,IAAAygB,GAAA,EAAAv1G,KAAA6C,SACAqpF,EACA4I,EAAAtQ,UAAA,EAAAG,GAAA9yF,aACAq6F,EAAA1W,mBAAA,KAAAx1E,KAAA41G,cACA1pB,EAAAvX,eAAA1zE,EAAAvE,GACAwvF,EAAAkB,OAAAz7F,GAKAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,GAEAlsF,KAAA61G,YACA71G,KAAAk4E,UAAA4c,EAAA7zF,IAQAu0G,GAAA/zH,UAAAozF,oBAAA,SAAA5zE,EAAAvE,GACA,IAAA/K,EAAAqO,KAAAi2E,SACA6e,EAAA,IAAAygB,GAAA,EAAAv1G,KAAA6C,SACAqpF,EACA4I,EAAAtQ,UAAA,EAAAG,GAAA9yF,aACAq6F,EAAA1W,mBAAA,KAAAx1E,KAAA41G,cACA1pB,EAAArX,oBAAA5zE,EAAAvE,GACAwvF,EAAAkB,OAAAz7F,GAKAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,GAEAlsF,KAAA61G,YACA71G,KAAAk4E,UAAA4c,EAAA7zF,IAQAu0G,GAAA/zH,UAAA4zF,YAAA,SAAAp0E,EAAAvE,GACA,IAAA/K,EAAAqO,KAAAi2E,SACA6e,EAAA,IAAAygB,GAAA,EAAAv1G,KAAA6C,SACAqpF,EACA4I,EAAAtQ,UAAA,EAAAG,GAAA5yF,SACAm6F,EAAA1W,mBAAAx1E,KAAA21G,WAAA31G,KAAA41G,cACA1pB,EAAA7W,YAAAp0E,EAAAvE,GACAwvF,EAAAkB,OAAAz7F,GAKAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,GAEAlsF,KAAA61G,YACA71G,KAAAk4E,UAAA4c,EAAA7zF,IAQAu0G,GAAA/zH,UAAAwzF,iBAAA,SAAAh0E,EAAAvE,GACA,IAAA/K,EAAAqO,KAAAi2E,SACA6e,EAAA,IAAAygB,GAAA,EAAAv1G,KAAA6C,SACAqpF,EACA4I,EAAAtQ,UAAA,EAAAG,GAAA5yF,SACAm6F,EAAA1W,mBAAAx1E,KAAA21G,WAAA31G,KAAA41G,cACA1pB,EAAAjX,iBAAAh0E,EAAAvE,GACAwvF,EAAAkB,OAAAz7F,GAKAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,GAEAlsF,KAAA61G,YACA71G,KAAAk4E,UAAA4c,EAAA7zF,IAQAu0G,GAAA/zH,UAAA6yF,WAAA,SAAArzE,EAAAvE,GACA,IAAA/K,EAAAqO,KAAAi2E,SACA6e,EAAA,IAAAygB,GAAA,EAAAv1G,KAAA6C,SACAqpF,EACA4I,EAAAtQ,UAAA,EAAAG,GAAAvyF,QACA85F,EAAA1W,mBAAAx1E,KAAA21G,WAAA31G,KAAA41G,cACA1pB,EAAA5X,WAAArzE,EAAAvE,GACAwvF,EAAAkB,OAAAz7F,GAKAu6F,SAAAlsF,KAAAi2E,SAAAj2E,KAAAy1G,QAAAz1G,KAAAkyF,YAAAlyF,KAAAy4B,UACAz4B,KAAA+6B,MAAA/6B,KAAAy7C,YALA,UAEA+uC,GACA,GAIA0B,EAAA+Q,2BAAAtrG,EAAAu6F,GAEAlsF,KAAA61G,YACA71G,KAAAk4E,UAAA4c,EAAA7zF,IAQAu0G,GAAA/zH,UAAAg0F,cAAA,SAAAC,GACA11E,KAAA01G,YAAAhgC,GAOA8/B,GAAA/zH,UAAA+zF,mBAAA,SAAAz4C,EAAAnB,GACA57B,KAAA21G,WAAA54E,EACA/8B,KAAA41G,aAAAh6E,GAOA45E,GAAA/zH,UAAAm0F,aAAA,SAAAC,GACA71E,KAAA61G,WAAAhgC,GAEA,IAAAigC,GAAA,GC3YAC,MAGAA,GAAAhb,SAAA,IAAAA,GAAAr3F,EAAA,EAAAljB,YACA,gRACA,uLAEAu1H,GAAA9a,OAAA,IAAAA,GAAAv3F,EAAA,EAAAljB,YACA,2TACA,uJACA,IAAAw1H,GAAA,GCkCAC,GAvCA,SAAAloG,EAAAstF,GAKAr7F,KAAAk2G,iBAAAnoG,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,wBAKAwf,KAAAs7F,mBAAAvtF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,0BAKAwf,KAAA47F,UAAA7tF,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAAm2G,UAAApoG,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAAg8F,WAAAjuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,kBAKAwf,KAAA4iG,WAAA70F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,mBCzBA41H,GAAA,SAAA52B,EAAA3oD,GAEAumD,GAAA92F,KAAA0Z,KAAA62B,GAMA72B,KAAAw/E,cAMAx/E,KAAAq2G,aAAA,IAAAxV,KACA,SACA,UACA,QACA,UAOA7gG,KAAAimG,QAAA,KAMAjmG,KAAA8lG,YAAA,KAMA9lG,KAAAs2G,0BAAA/qH,EAMAyU,KAAAu2G,eAAAjqC,GAAA,EAAA3qF,SAMAqe,KAAAu/F,iBAAAjzB,GAAA,EAAA3qF,SAMAqe,KAAA28F,SAAAL,GAAA36G,SAMAqe,KAAA+gG,kBAAA,MAIAr9F,EAAA,EAAApiB,SAAA80H,GAAAh5B,IAQAg5B,GAAA30H,UAAAukH,gBAAA,SAAAjwF,EAAAugG,GAEA,IAAAvoG,EAAA/N,KAAAw/E,YAAA4e,QAEA,QAAA7yG,IAAAyU,KAAAs2G,sBACAt2G,KAAAs2G,wBAAA,CAMA,IAAAx5B,EAAA,SAAA/uE,EAAA+3F,EAAAG,GACAl4F,EAAAy2F,kBACAz2F,EAAA42F,kBAAAmB,GACA/3F,EAAA82F,cAAAoB,KAEK/1F,KAAA,KAAAnC,EAAA/N,KAAA8lG,YAAA9lG,KAAAimG,SAELlwF,EAAAi7D,oBAAA/kF,KACyC,GAGzC,IAAAg6G,EAAAkB,GAAAjB,mBACAn4F,EAAAuoG,KAEAxQ,EAAA/3F,EAAAg4F,oBACAh4F,EAAAi4F,gBAAAlL,GAAA,EAAAxpG,YAAAw0G,GACA/3F,EAAA04F,qBAAA3L,GAAA,EAAAxpG,YACAwpG,GAAA,EAAAxrG,kBAAAwrG,GAAA,EAAA5pG,WAAA+0G,EAAA,GAEAjmG,KAAAimG,UACAjmG,KAAA8lG,cACA9lG,KAAAs2G,4BAGAvoG,EAAAi4F,gBAAAlL,GAAA,EAAAxpG,YAAA0O,KAAA8lG,cAWAsQ,GAAA30H,UAAA08F,aAAA,SAAApoE,EAAArB,EAAA/iB,GAEAqO,KAAA29E,sBACAK,GAAA,EAAApoE,WAAAjkB,EAAAokB,GAEApkB,EAAA2tG,WAAAxE,GAAA,EAAAnrG,aAAAqQ,KAAAq2G,cAEA,IAOAjZ,EAPArvF,EAAApc,EAAAysG,QAEAoD,EAAAwU,GAAAjb,SACA0G,EAAAuU,GAAA/a,OAEAI,EAAA1pG,EAAA+vG,WAAAF,EAAAC,GAGAzhG,KAAA+gG,kBAIA3D,EAAAp9F,KAAA+gG,mBAHA3D,EAAA,IAAA6Y,GAAAloG,EAAAstF,GACAr7F,KAAA+gG,kBAAA3D,GAKAzrG,EAAAgwG,WAAAtG,KACAttF,EAAA6zF,wBAAAxE,EAAApB,YACAjuF,EAAA8zF,oBACAzE,EAAApB,WAAA,EAAAlB,GAAA,EAAAtqG,OAAA,QACAud,EAAA6zF,wBAAAxE,EAAAwF,YACA70F,EAAA8zF,oBACAzE,EAAAwF,WAAA,EAAA9H,GAAA,EAAAtqG,OAAA,QACAud,EAAAyoG,UAAApZ,EAAA+Y,UAAA,IAGApoG,EAAA2xF,iBAAAtC,EAAA8Y,kBAAA,EACA5Z,GAAAD,cAAAr8F,KAAA28F,SAAA38F,KAAAy2G,sBACA1oG,EAAA2xF,iBAAAtC,EAAA9B,oBAAA,EACAgB,GAAAD,cAAAr8F,KAAA28F,SAAA38F,KAAA02G,wBACA3oG,EAAA4xF,UAAAvC,EAAAxB,UAAAlnF,EAAAle,SACAuX,EAAA64F,YAAA9L,GAAA,EAAA5pG,WAAA8O,KAAA22G,cACA5oG,EAAA6oG,WAAA9b,GAAA,EAAArrG,eAAA,KAEAuQ,KAAA29E,sBACAK,GAAA,EAAAtmE,YAAA/lB,EAAAokB,IAWAqgG,GAAA30H,UAAAk8F,sBAAA,SAAAvyF,EAAAuG,EAAAokB,GACA,IAAA8gB,EAAA72B,KAAAu8E,WACA,GAAA1lD,EAAAlkB,YAAAvnB,GAAA,CACA,IAAA6kD,EAAAl6B,EAAAk6B,UACApoD,EAAAooD,EAAApoD,WACAiuC,EAAA/f,EAAA+f,WACAxzC,EAAAyzB,EAAAzzB,OACAsF,EAAAqoD,EAAAroD,OACAE,EAAAmoD,EAAAnoD,SACAC,EAAAguB,EAAAhuB,KAEAmuB,EAAA,IAAA4/F,GACAnkH,EAAA/J,EAAAC,EAAAC,EAAAC,EAAAzF,EAAAwzC,GACA+nD,EAAA,IAAA3J,GACA9oF,EAAA8qB,EAAAH,EAAA,KAAApkB,GACAklC,EAAAxrB,cAAAwyE,KAQAu4B,GAAA30H,UAAAg1H,kBAAA,WACA,OAAAz2G,KAAAu2G,gBAOAH,GAAA30H,UAAAk1H,WAAA,WACA,OAAA32G,KAAAimG,SAOAmQ,GAAA30H,UAAAi1H,oBAAA,WACA,OAAA12G,KAAAu/F,kBAOA6W,GAAA30H,UAAAoiH,uBAAA,WACA7jG,KAAAimG,QAAA,KACAjmG,KAAA8lG,YAAA,KACA9lG,KAAAs2G,0BAAA/qH,GAWA6qH,GAAA30H,UAAA28F,aAAA,SAAAroE,EAAArB,EAAA/iB,KAaAykH,GAAA30H,UAAA+tF,oBAAA,SAAAzpC,EAAAhwB,EAAA5vB,EAAAyzC,KACA,IAAAi9E,GAAA,GCvPAC,GAAA,SAAAt3B,EAAAL,GAEA03B,GAAAvwH,KAAA0Z,KAAAw/E,EAAAL,GAOAn/E,KAAAg+B,OAAA,KAMAh+B,KAAAw+E,kBAAA,KAMAx+E,KAAA+2G,yBAAA,MAIArzG,EAAA,EAAApiB,SAAAw1H,GAAAD,IASAC,GAAA,iBAAA1rH,EAAAyrC,GACA,OAAAzrC,IAAAqgF,GAAA99D,OAAAkpB,EAAAt1B,YAAA4uD,GAAA,EAAA5+C,OAUAulG,GAAA,gBAAAt3B,EAAA3oD,GACA,WAAAigF,GACuC,EACP,IAUhCA,GAAAr1H,UAAAolH,eAAA,SAAApwG,GAMA,IAAAugH,EAAAvgH,EAAAyiC,WACAnrB,EAAA/N,KAAAw/E,YAAA4e,QAEA,OAAA+I,GAAAH,cACAj5F,EAAAipG,EAAAlc,GAAA,EAAA1pG,cAAA0pG,GAAA,EAAA1pG,gBAOA0lH,GAAAr1H,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GACA,IAAA/C,EAAA72B,KAAAu8E,WACArhF,EAAA27B,EAAA1hB,YACAttB,EAAAkuB,EAAAk6B,UAAApoD,WACAC,EAAAiuB,EAAAk6B,UAAAnoD,SACAgqF,EAAA/7D,EAAA+7D,mBACA,OAAA52E,EAAAy4B,2BACAxvC,EAAA0D,EAAAC,EAAAunF,EAAAyC,EAMA,SAAAhzC,GACA,OAAA34C,EAAAG,KAAAszC,EAAAkF,EAAAjI,MAQAigF,GAAAr1H,UAAA28F,aAAA,SAAAroE,EAAArB,EAAA/iB,GAEA,IAAAoc,EAAA/N,KAAAw/E,YAAA4e,QAEAtoE,EAAA/f,EAAA+f,WACAma,EAAAl6B,EAAAk6B,UACA0vC,EAAA1vC,EAAAroD,OACAg4F,EAAA3vC,EAAApoD,WACAmuF,EAAA/lC,EAAAnoD,SAEA2O,EAAAuJ,KAAAg+B,OACAioE,EAAAjmG,KAAAimG,QAEApmB,EAD6C7/E,KAAAu8E,WAC7CpnE,YAEA27D,EAAA/6D,EAAAg7D,UAEA+O,EAAA/pE,EAAAzzB,OAKA,QAJAiJ,IAAAmpB,EAAApyB,SACAw9F,EAAA71E,EAAA,EAAA/gB,gBACA42F,EAAAprE,EAAApyB,UAEAwuF,EAAAhnC,EAAA,EAAAzrC,aAAAyyE,EAAAhnC,EAAA,EAAAxrC,eACA2L,EAAA,EAAApjB,QAAAi5F,GAAA,CACA,IAAAx+E,EAAA2uC,EAAA3uC,WACA,IAAAoC,EAAA,EAAApjB,2BAAA,CACA,IAAAopB,EAAAm2E,EAAA9rD,gBACArqB,IACApI,EAAAoI,GAGA,IAAAs0B,EAAA6hD,EAAA3mD,SAAA4mD,EAAAF,EACA9pD,EAAAx0B,GACA,GAAA08B,EAEA,GADAh+B,KAAA08E,UAAA1+C,KAEAvnC,EAAAunC,EACAioE,EAAAjmG,KAAA6mG,eAAA7oE,GACAh+B,KAAAimG,SAAA,CAKA,IAAAnpB,EAAA,SAAA/uE,EAAAk4F,GACAl4F,EAAAy2F,iBACAz2F,EAAA82F,cAAAoB,IAEW/1F,KAAA,KAAAnC,EAAA/N,KAAAimG,SACXlwF,EAAAi7D,oBAAA/kF,KAC+C,IAO/C,GAAAwK,EAAA,CACA,IAAAhF,EAAAuO,KAAAw/E,YAAAhuF,aAAAszG,YAEA9kG,KAAAi3G,wBAAAxlH,EAAAyC,MAAAzC,EAAA0D,OACA2gC,EAAA6pD,EAAAC,EAAA5J,EACAv/E,EAAA0N,aACAnE,KAAA+2G,yBAAA,KAGA,IAAAR,EAAAv2G,KAAAu2G,eACAjqC,GAAA,EAAA3/E,MAAA4pH,GACAjqC,GAAA,EAAAh+E,MAAAioH,EAAA,MACAjqC,GAAA,EAAA/9E,UAAAgoH,EAAA,MAEAv2G,KAAAg+B,OAAAvnC,EACAuJ,KAAAimG,UAEAjmG,KAAA+8E,YAAAhnE,EAAA8pE,GAGA,QAAAppF,GAcAqgH,GAAAr1H,UAAAw1H,wBAAA,SAAAC,EAAAC,EAAArhF,EACA6pD,EAAAC,EAAA5J,EAAAmK,GAEA,IAAAi3B,EAAAF,EAAAt3B,EACAy3B,EAAAF,EAAAv3B,EAEA2f,EAAAv/F,KAAAu/F,iBACAjzB,GAAA,EAAA3/E,MAAA4yG,GACAjzB,GAAA,EAAAh+E,MAAAixG,EACA,EAAAzpE,EAAAshF,EACA,EAAAthF,EAAAuhF,GACA/qC,GAAA,EAAAl+E,OAAAmxG,GAAAvpB,GACA1J,GAAA,EAAA/9E,UAAAgxG,EACApf,EAAA,GAAAR,EAAA,GACAQ,EAAA,GAAAR,EAAA,IACArT,GAAA,EAAAh+E,MAAAixG,GACApf,EAAA,GAAAA,EAAA,OACAA,EAAA,GAAAA,EAAA,OACA7T,GAAA,EAAA/9E,UAAAgxG,EAAA,MAQAuX,GAAAr1H,UAAAouF,uBAAA,SAAA1rF,EAAA4xB,GAGA,YAAAxqB,IAFAyU,KAAA2zB,2BACAxvC,EAAA4xB,EAAA,EAAA0tC,EAAA,EAAAp5C,KAAArK,OAQA82G,GAAAr1H,UAAA+tF,oBAAA,SAAAzpC,EAAAhwB,EAAA5vB,EAAAyzC,GACA,GAAA55B,KAAAg+B,QAAAh+B,KAAAg+B,OAAA9E,WAAA,CAIA,GAAAl5B,KAAAu8E,WAAApnE,YAAAwe,6BAAAjwB,EAAA,EAAA7hB,aAAA,CAGA,IAAAsC,EAAAmoF,GAAA,EAAAnpF,MACA4yB,EAAAm6D,2BAAAnqC,EAAAniD,SAIA,OAHAoc,KAAA2zB,2BACAxvC,EAAA4xB,EAAA,EAAA0tC,EAAA,EAAAp5C,KAAArK,MAGA7Z,EAAAG,KAAAszC,EAAA55B,KAAAu8E,WAAA,WAEA,EAGA,IAAA5gD,GACA37B,KAAAg+B,OAAA9E,WAAAhlC,MAAA8L,KAAAg+B,OAAA9E,WAAA/jC,QAEA6K,KAAA+2G,2BACA/2G,KAAA+2G,yBAAA/2G,KAAAs3G,4BACAvhG,EAAAhuB,KAAA4zC,IAGA,IAAA47E,EAAAjrC,GAAA,EAAAnpF,MACA6c,KAAA+2G,yBAAAhxE,EAAAniD,SAEA,KAAA2zH,EAAA,MAAAA,EAAA,GAAA57E,EAAA,IACA47E,EAAA,MAAAA,EAAA,GAAA57E,EAAA,IADA,CAMA37B,KAAAw+E,oBACAx+E,KAAAw+E,kBAAAviD,EAAA,EAAAlnC,sBAAA,MAGAiL,KAAAw+E,kBAAAM,UAAA,SACA9+E,KAAAw+E,kBAAAjoF,UAAAyJ,KAAAg+B,OAAA9E,WACAq+E,EAAA,GAAAA,EAAA,gBAEA,IAAAx4B,EAAA/+E,KAAAw+E,kBAAAQ,aAAA,SAAAtiF,KACA,OAAAqiF,EAAA,KACA54F,EAAAG,KAAAszC,EAAA55B,KAAAu8E,WAAAwC,QAEA,KAcA+3B,GAAAr1H,UAAA61H,4BAAA,SAAAE,EAAA77E,GAGA,IAAA87E,EAAAnrC,GAAA,EAAA3qF,SACA2qF,GAAA,EAAA/9E,UAAAkpH,GAAA,MACAnrC,GAAA,EAAAh+E,MAAAmpH,EAAA,EAAAD,EAAA,KAAAA,EAAA,IACAlrC,GAAA,EAAA/9E,UAAAkpH,EAAA,EAAAD,EAAA,IACAlrC,GAAA,EAAAh+E,MAAAmpH,EAAA,MAIA,IAAAC,EAAAprC,GAAA,EAAAv9E,OAAAiR,KAAAu/F,iBAAA37G,SAGAgJ,EAAA0/E,GAAA,EAAA3qF,SASA,OARA2qF,GAAA,EAAA/9E,UAAA3B,EAAA,EAAA+uC,EAAA,IACA2wC,GAAA,EAAAh+E,MAAA1B,EAAA,MACA0/E,GAAA,EAAAh+E,MAAA1B,EAAA+uC,EAAA,KAAAA,EAAA,MACA2wC,GAAA,EAAA/9E,UAAA3B,EAAA,KAEA0/E,GAAA,EAAAx/E,SAAAF,EAAA8qH,GACAprC,GAAA,EAAAx/E,SAAAF,EAAA6qH,GAEA7qH,GAEA,IAAA+qH,GAAA,YC7SAC,GAAA,SAAAhzC,EAAA1wD,GACAmuE,GAAA/7F,KAAA0Z,KAAA4kE,EAAA1wD,GAMAlU,KAAAi6B,QACA7kC,SAAAC,cAAA,UACA2K,KAAAi6B,QAAA1kC,MAAArB,MAAA,OACA8L,KAAAi6B,QAAA1kC,MAAAJ,OAAA,OACA6K,KAAAi6B,QAAA1kC,MAAAi5C,QAAA,QACAxuC,KAAAi6B,QAAA4U,UAAAa,GAAA,EAAAr8B,mBACAuxD,EAAA2d,aAAAviF,KAAAi6B,QAAA2qC,EAAA4d,WAAA,UAMAxiF,KAAA63G,qBAAA,EAMA73G,KAAA83G,sBAAA,EAMA93G,KAAA+3G,iBAAA97E,EAAA,EAAAlnC,wBAMAiL,KAAA4vC,kBAAA,EAMA5vC,KAAAojG,IAAAtI,GAAA,EAAAtpG,WAAAwO,KAAAi6B,SACA+9E,WAAA,EACAC,OAAA,EACAhqG,8BAAA,EACAiqG,uBAAA,EACAC,SAAA,IAOAn4G,KAAAi2E,SAAA,IAAAkxB,GAAAnnG,KAAAi6B,QAAAj6B,KAAAojG,KAEA7+B,EAAA,EAAAz4E,OAAAkU,KAAAi6B,QAAA+oE,GAAAC,KACAjjG,KAAA6jG,uBAAA7jG,MACAukE,EAAA,EAAAz4E,OAAAkU,KAAAi6B,QAAA+oE,GAAAE,SACAljG,KAAA8jG,2BAAA9jG,MAMAA,KAAAo4G,cAAA,IAAAC,GAAA,EAMAr4G,KAAAguE,OAAA,KAMAhuE,KAAAs4G,kBAAA,IAAA7vC,EAMA,SAAA9pE,GACA,IAAA2xE,EAAkD3xE,EAAA,GAClD4xE,EAA+C5xE,EAAA,GAC/CnV,EAAA8mF,EAAA,GAAAtwE,KAAAguE,OAAA,GACAvkF,EAAA6mF,EAAA,GAAAtwE,KAAAguE,OAAA,GACA,aAAA/qF,KAAAkW,IAAAo3E,GACAttF,KAAAgf,KAAAzY,IAAAC,KAAA8mF,GACOrgE,KAAAlQ,MAKP,SAAArB,GACA,OAAkCA,EAAA,GAAA2Z,WAUlCtY,KAAAu4G,qBACA,SAAArkG,EAAA6B,GACA,IAAA/V,KAAAs4G,kBAAAzxH,UAAA,CACAmZ,KAAAs4G,kBAAA9vC,eACA,IAAA7pE,EAAAqB,KAAAs4G,kBAAAjxC,UACAjyC,EAAwCz2B,EAAA,GACxC4hB,EAA4C5hB,EAAA,GAC5CslF,EAA6CtlF,EAAA,GAC7CqB,KAAAw4G,gBACApjF,EAAA7U,EAAA0jE,EAAA6W,GAAA,EAAAjqG,OAAAiqG,GAAA,EAAAjqG,QAEA,UACOqf,KAAAlQ,MAOPA,KAAAy4G,8BAAA,EAEAz4G,KAAA04G,iBAGAh1G,EAAA,EAAApiB,SAAAs2H,GAAAv1B,IAQAu1B,GAAA,iBAAAxsH,GACA,OAAA2wC,EAAA,EAAApuB,OAAAviB,IAAAqgF,GAAA99D,OAUAiqG,GAAA,gBAAAhzC,EAAA1wD,GACA,WAAA0jG,GAAAhzC,EAAA1wD,IAWA0jG,GAAAn2H,UAAA+2H,gBAAA,SAAApjF,EAAA7U,EAAA0jE,EAAA00B,EAAAC,GACA,IAAA7qG,EAAA/N,KAAAo+F,QACAj1B,EAAA/zC,EAAA9c,SACA,GAAAtY,KAAAo4G,cAAArxF,YAAAoiD,GAAA,CACA,IAAA0vC,EAAA74G,KAAAo4G,cAAA71G,IAAA4mE,GACAp7D,EAAA64F,YAAA9L,GAAA,EAAA5pG,WAAA2nH,EAAA5S,SACA4S,EAAAF,eACA5qG,EAAAk5F,cACAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAAhqG,mBAAA6nH,GACAE,EAAAF,aAEAE,EAAAD,eACA7qG,EAAAk5F,cACAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAA/pG,mBAAA6nH,GACAC,EAAAD,iBAEG,CACH,IAAA3S,EAAAl4F,EAAAi5F,gBAEA,GADAj5F,EAAA64F,YAAA9L,GAAA,EAAA5pG,WAAA+0G,GACAhiB,EAAA,GACA,IAAA60B,EAAA94G,KAAA+3G,iBAAAtmH,OACAsnH,EAAA/4G,KAAA+3G,iBACA/3G,KAAA63G,uBAAAt3F,EAAA,IACAvgB,KAAA83G,wBAAAv3F,EAAA,IACAu4F,EAAA5kH,MAAAqsB,EAAA,GACAu4F,EAAA3jH,OAAAorB,EAAA,GACAvgB,KAAA63G,qBAAAt3F,EAAA,GACAvgB,KAAA83G,sBAAAv3F,EAAA,IAEAw4F,EAAAj6B,UAAA,IAAAv+D,EAAA,GAAAA,EAAA,IAEAw4F,EAAAxiH,UAAA6+B,EAAA8D,WAAA+qD,IACA1jE,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,IACAxS,EAAAm5F,WAAApM,GAAA,EAAA5pG,WAAA,EACA4pG,GAAA,EAAArqG,KAAAqqG,GAAA,EAAArqG,KACAqqG,GAAA,EAAAzqG,cAAAyoH,QAEA/qG,EAAAm5F,WAAApM,GAAA,EAAA5pG,WAAA,EACA4pG,GAAA,EAAArqG,KAAAqqG,GAAA,EAAArqG,KACAqqG,GAAA,EAAAzqG,cAAA+kC,EAAA8D,YAEAnrB,EAAAk5F,cACAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAAhqG,mBAAA6nH,GACA5qG,EAAAk5F,cACAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAA/pG,mBAAA6nH,GACA7qG,EAAAk5F,cAAAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAA9pG,eACA8pG,GAAA,EAAA1pG,eACA2c,EAAAk5F,cAAAnM,GAAA,EAAA5pG,WAAA4pG,GAAA,EAAA7pG,eACA6pG,GAAA,EAAA1pG,eACA4O,KAAAo4G,cAAAvrH,IAAAs8E,GACA88B,UACA0S,YACAC,gBAWAhB,GAAAn2H,UAAAk8F,sBAAA,SAAAvyF,EAAA2qB,GACA,IAAA7B,EAAAlU,KAAA+tC,SACA,GAAA75B,EAAAvB,YAAAvnB,GAAA,CACA,IAAAuG,EAAAqO,KAAAi2E,SAEA3zF,EAAAyzB,EAAAzzB,OACAyF,EAAAguB,EAAAhuB,KACAkoD,EAAAl6B,EAAAk6B,UACAna,EAAA/f,EAAA+f,WAEAjuC,EAAAooD,EAAApoD,WACAD,EAAAqoD,EAAAroD,OACAE,EAAAmoD,EAAAnoD,SAEAksF,EAAA,IAAA8hC,GAAAnkH,EACA/J,EAAAC,EAAAC,EAAAC,EAAAzF,EAAAwzC,GACA+nD,EAAA,IAAA3J,GAAA9oF,EAAA4oF,EACAj+D,EAAA,KAAApkB,GACAuiB,EAAA7I,cAAAwyE,KAQA+5B,GAAAn2H,UAAAgxB,gBAAA,WACA,IAAA1E,EAAA/N,KAAAo+F,QACArwF,EAAAy2F,iBACAxkG,KAAAo4G,cAAArwG,QAKA,SAAA8wG,GACAA,GACA9qG,EAAA82F,cAAAgU,EAAA5S,WAIAjmG,KAAAi2E,SAAAjyD,UACAq+D,GAAA5gG,UAAAgxB,gBAAAnsB,KAAA0Z,OASA43G,GAAAn2H,UAAAu3H,aAAA,SAAA9kG,EAAA6B,GAGA,IAFA,IACA8iG,EADA9qG,EAAA/N,KAAAo+F,QAEAp+F,KAAAo4G,cAAAvxF,WAAA7mB,KAAAy4G,8BACA/0G,EAAA,EAAAxiB,qCAAA,CAEA,GADA23H,EAAA74G,KAAAo4G,cAAA9wF,WAQAvZ,EAAA82F,cAAAgU,EAAA5S,aAPA,CACA,IAAAjmG,KAAAo4G,cAAA7wF,eAAAxR,EAAA1Y,MACA,QAEA2C,KAAAy4G,8BAKAz4G,KAAAo4G,cAAApoG,QAQA4nG,GAAAn2H,UAAA+P,WAAA,WACA,OAAAwO,KAAAi2E,UAOA2hC,GAAAn2H,UAAA28G,MAAA,WACA,OAAAp+F,KAAAojG,KAOAwU,GAAAn2H,UAAAw3H,oBAAA,WACA,OAAAj5G,KAAAs4G,mBAOAV,GAAAn2H,UAAA8f,QAAA,WACA,OAAAkqE,GAAA99D,OAQAiqG,GAAAn2H,UAAAoiH,uBAAA,SAAAvxF,GACAA,EAAA/D,iBACAvO,KAAAo4G,cAAAxsH,QACAoU,KAAAy4G,8BAAA,EAEA,IAAAS,EAAAl5G,KAAA8hF,oBACA,QAAAvlD,KAAA28E,EAAA,CACsDA,EAAA38E,GACtDsnE,2BAQA+T,GAAAn2H,UAAAqiH,2BAAA,WACA9jG,KAAA04G,gBACA14G,KAAA+tC,SAAA73B,UAOA0hG,GAAAn2H,UAAAi3H,cAAA,WACA,IAAA3qG,EAAA/N,KAAAojG,IACAr1F,EAAAorG,cAAAre,GAAA,EAAA3pG,UACA4c,EAAAqrG,kBACAte,GAAA,EAAAzrG,UAAAyrG,GAAA,EAAAprG,oBACAorG,GAAA,EAAA1rG,IAAA0rG,GAAA,EAAAprG,qBACAqe,EAAA+W,QAAAg2E,GAAA,EAAA9qG,WACA+d,EAAA+W,QAAAg2E,GAAA,EAAA3qG,YACA4d,EAAA+W,QAAAg2E,GAAA,EAAA1qG,cACA2d,EAAA+W,QAAAg2E,GAAA,EAAA5qG,eAQA0nH,GAAAn2H,UAAA43H,oBAAA,SAAAjkF,GACA,OAAAp1B,KAAAo4G,cAAArxF,YAAAqO,EAAA9c,WAOAs/F,GAAAn2H,UAAAswF,YAAA,SAAAh8D,GAEA,IAAApkB,EAAAqO,KAAAxO,aACAuc,EAAA/N,KAAAo+F,QAEA,GAAArwF,EAAAy2F,gBACA,SAGA,IAAAzuF,EAKA,OAJA/V,KAAA4vC,mBACA5vC,KAAAi6B,QAAA1kC,MAAAi5C,QAAA,OACAxuC,KAAA4vC,kBAAA,IAEA,EAGA5vC,KAAAguE,OAAAj4D,EAAA06D,MAEAzwE,KAAAo4G,cAAAvrH,MAAAkpB,EAAA1Y,OAAAqZ,WAAA,QACA1W,KAAAy4G,8BAEAz4G,KAAA29E,sBAAAK,GAAA,EAAApoE,WAAAG,GAGA,IAAAujG,KACAtjG,EAAAD,EAAAC,iBACA7F,EAAA,EAAAhT,WAAA6Y,EAAAqsE,GAAAH,cAEA,IACA1/F,EAAAC,EAAAiyB,EADAkrE,EAAA7pE,EAAAk6B,UAAApoD,WAEA,IAAArF,EAAA,EAAAC,EAAAuzB,EAAAtzB,OAA2CF,EAAAC,IAAQD,EACnDkyB,EAAAsB,EAAAxzB,GACA0tD,GAAA,EAAAz7B,oBAAAC,EAAAkrE,IACAlrE,EAAAsiB,aAAA0zC,EAAA,EAAA9wD,OACyD5Z,KAAAyhF,iBAAA/sE,EAAAmiB,OACzDunD,aAAAroE,EAAArB,EAAA/iB,IACA2nH,EAAArtH,KAAAyoB,GAKA,IAAAxgB,EAAA6hB,EAAAhuB,KAAA,GAAAguB,EAAA+f,WACA3gC,EAAA4gB,EAAAhuB,KAAA,GAAAguB,EAAA+f,WAaA,IAZA91B,KAAAi6B,QAAA/lC,UAAA8L,KAAAi6B,QAAA9kC,YACA6K,KAAAi6B,QAAA/lC,QACA8L,KAAAi6B,QAAA9kC,UAGA4Y,EAAAi4F,gBAAAlL,GAAA,EAAAxpG,YAAA,MAEAyc,EAAAwrG,WAAA,SACAxrG,EAAAniB,MAAAkvG,GAAA,EAAAvrG,kBACAwe,EAAA8wF,OAAA/D,GAAA,EAAA7qG,OACA8d,EAAAyrG,SAAA,IAAAx5G,KAAAi6B,QAAA/lC,MAAA8L,KAAAi6B,QAAA9kC,QAEA3S,EAAA,EAAAC,EAAA62H,EAAA52H,OAA4CF,EAAAC,IAAQD,EACpDkyB,EAAA4kG,EAAA92H,GACuDwd,KAAAyhF,iBAAA/sE,EAAAmiB,OACvDsnD,aAAApoE,EAAArB,EAAA/iB,GAGAqO,KAAA4vC,mBACA5vC,KAAAi6B,QAAA1kC,MAAAi5C,QAAA,GACAxuC,KAAA4vC,kBAAA,GAGA5vC,KAAAohF,oBAAArrE,GAEA/V,KAAAo4G,cAAAvxF,WAAA7mB,KAAAy4G,8BACA/0G,EAAA,EAAAxiB,qCACA60B,EAAAi7D,oBAAA/kF,KACyC+T,KAAAg5G,aAAA9oG,KAAAlQ,OAIzCA,KAAAs4G,kBAAAzxH,YACAkvB,EAAAi7D,oBAAA/kF,KAAA+T,KAAAu4G,sBACAxiG,EAAA0yB,SAAA,GAGAzoC,KAAA29E,sBAAAK,GAAA,EAAAtmE,YAAA3B,GAEA/V,KAAAiiF,mCAAAlsE,GACA/V,KAAAgiF,wBAAAjsE,IAQA6hG,GAAAn2H,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,EACA01C,EAAAK,GACA,IAAAn4D,EAEA,GAAAxX,KAAAo+F,QAAAoG,gBACA,SAGA,IAIAhiH,EAJAytD,EAAAl6B,EAAAk6B,UAEAh6B,EAAAF,EAAAC,iBAGA,IAAAxzB,EAFAyzB,EAAAvzB,OAEA,EAAyBF,GAAA,IAAQA,EAAA,CACjC,IAAAkyB,EAAAuB,EAAAzzB,GACAq0C,EAAAniB,EAAAmiB,MACA,GAAAqZ,GAAA,EAAAz7B,oBAAAC,EAAAu7B,EAAApoD,aACAynF,EAAAhpF,KAAAqpF,EAAA94C,GAIA,GAFArf,EADAxX,KAAAyhF,iBAAA5qD,GACAlD,2BACAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GAEA,OAAApiB,IAWAogG,GAAAn2H,UAAAouF,uBAAA,SAAA1rF,EAAA4xB,EAAAs5D,EAAAC,EAAA11C,GACA,IAAA6/E,GAAA,EAEA,GAAAz5G,KAAAo+F,QAAAoG,gBACA,SAGA,IAIAhiH,EAJAytD,EAAAl6B,EAAAk6B,UAEAh6B,EAAAF,EAAAC,iBAGA,IAAAxzB,EAFAyzB,EAAAvzB,OAEA,EAAyBF,GAAA,IAAQA,EAAA,CACjC,IAAAkyB,EAAAuB,EAAAzzB,GACAq0C,EAAAniB,EAAAmiB,MACA,GAAAqZ,GAAA,EAAAz7B,oBAAAC,EAAAu7B,EAAApoD,aACAynF,EAAAhpF,KAAAszC,EAAA/C,GAIA,GAFA4iF,EADAz5G,KAAAyhF,iBAAA5qD,GAEAg5C,uBAAA1rF,EAAA4xB,GAEA,SAIA,OAAA0jG,GAOA7B,GAAAn2H,UAAA+tF,oBAAA,SAAAzpC,EAAAhwB,EAAA5vB,EAAAyzC,EACA01C,EAAAK,GACA,GAAA3vE,KAAAo+F,QAAAoG,gBACA,SAGA,IACAhtF,EAIAh1B,EALAytD,EAAAl6B,EAAAk6B,UAGAh6B,EAAAF,EAAAC,iBAGA,IAAAxzB,EAFAyzB,EAAAvzB,OAEA,EAAyBF,GAAA,IAAQA,EAAA,CACjC,IAAAkyB,EAAAuB,EAAAzzB,GACAq0C,EAAAniB,EAAAmiB,MACA,GAAAqZ,GAAA,EAAAz7B,oBAAAC,EAAAu7B,EAAApoD,aACAynF,EAAAhpF,KAAAszC,EAAA/C,GAIA,GAFArf,EAD6DxX,KAAAyhF,iBAAA5qD,GAC7D24C,oBACAzpC,EAAAhwB,EAAA5vB,EAAAyzC,GAEA,OAAApiB,IAMA,IAAAkiG,GAAA,GC7kBAC,MAGAA,GAAA5e,SAAA,IAAAA,GAAAr3F,EAAA,EAAAljB,YACA,qKACA,4GAEAm5H,GAAA1e,OAAA,IAAAA,GAAAv3F,EAAA,EAAAljB,YACA,4PACA,6HACA,IAAAo5H,GAAA,GCsBAC,GA3BA,SAAA9rG,EAAAstF,GAKAr7F,KAAA85G,aAAA/rG,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,oBAKAwf,KAAAm2G,UAAApoG,EAAAwtF,mBACAF,EAAA33F,EAAA,EAAAljB,YAAA,iBAKAwf,KAAAg8F,WAAAjuF,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,kBAKAwf,KAAA4iG,WAAA70F,EAAAkuF,kBACAZ,EAAA33F,EAAA,EAAAljB,YAAA,mBCPAu5H,GAAA,SAAAv6B,EAAAoD,GAEAi0B,GAAAvwH,KAAA0Z,KAAAw/E,EAAAoD,GAMA5iF,KAAAg6G,gBAAAJ,GAAA7e,SAMA/6F,KAAAi6G,cAAAL,GAAA3e,OAMAj7F,KAAAk6G,WAAA,KAMAl6G,KAAAm6G,mBAAA,IAAAtZ,IACA,QACA,QACA,QACA,UAOA7gG,KAAAo6G,mBAAA,KAMAp6G,KAAAq6G,2BAAA,KAMAr6G,KAAA22F,mBAAA,EAMA32F,KAAAygB,UAAA,MAIA/c,EAAA,EAAApiB,SAAAy4H,GAAAlD,IASAkD,GAAA,iBAAA3uH,EAAAyrC,GACA,OAAAzrC,IAAAqgF,GAAA99D,OAAAkpB,EAAAt1B,YAAA4uD,GAAA,EAAA3+C,MAUAuoG,GAAA,gBAAAv6B,EAAA3oD,GACA,WAAAkjF,GACuC,EACR,IAQ/BA,GAAAt4H,UAAAgxB,gBAAA,WACAzS,KAAAw/E,YAAAhuF,aACA+vG,aAAAvhG,KAAAm6G,oBACAtD,GAAAp1H,UAAAgxB,gBAAAnsB,KAAA0Z,OAOA+5G,GAAAt4H,UAAA46F,uBAAA,SAAAnhF,EAAAoG,EAAAg7E,GACA,IAAAkD,EAAAx/E,KAAAw/E,YAEA,gBAMAz+D,EAAA3H,GAWA,OAAAle,EAAAi6B,kBAAA7zB,EAAAyf,EAAA3H,EAVA,SAAAgc,GACA,IAAAE,EAAAkqD,EAAA65B,oBAAAjkF,GAOA,OANAE,IACAgnD,EAAAv7D,KACAu7D,EAAAv7D,OAEAu7D,EAAAv7D,GAAAqU,EAAA7c,UAAA7B,YAAA0e,GAEAE,MAUAykF,GAAAt4H,UAAAoiH,uBAAA,WACAgT,GAAAp1H,UAAAoiH,uBAAAv9G,KAAA0Z,MACAA,KAAAk6G,WAAA,MAOAH,GAAAt4H,UAAA28F,aAAA,SAAAroE,EAAArB,EAAA/iB,GAEA,IAuBA2oH,EAvBA96B,EAAAx/E,KAAAw/E,YACAzxE,EAAApc,EAAAysG,QAEAnuD,EAAAl6B,EAAAk6B,UACA3uC,EAAA2uC,EAAA3uC,WAEAshF,EAA2C5iF,KAAAu8E,WAC3CM,EAAA+F,EAAAztE,YACArQ,EAAA+3E,EAAA7mD,yBAAA10B,GACA6W,EAAArT,EAAAkd,kBAAAiuB,EAAApoD,YACA0oF,EAAAzrE,EAAAuc,cAAAlJ,GAEA0rE,EACAhH,EAAAxmD,iBAAAle,EAAApC,EAAA+f,WAAAx0B,GACAw0B,EAAA+tD,EAAA,GACApiE,GAAA,EAAA9H,OAAA7U,EAAA4c,YAAAvJ,GAAAnY,KAAAygB,UAAA,GACA85F,EAAAhqC,EAAAz6C,EACAmuD,EAAApH,EAAAzmD,kBAAAN,GAAA+mD,EAAAnnD,UAAAp0B,GAEA1Z,EAAAqoD,EAAAroD,OACAtF,EAAAyzB,EAAAzzB,OACA82B,EAAAtU,EAAAuU,0BAAA/2B,EAAA61B,GAGA,GAAAnY,KAAAo6G,oBACAp6G,KAAAo6G,mBAAAr0H,OAAAqzB,IACApZ,KAAA22F,mBAAA9Z,EAAAhiE,cACAy/F,EAAAt6G,KAAAq6G,+BACG,CAEH,IAAAG,EAAAphG,EAAA/vB,UAEAoxH,EAAAx3H,KAAAK,IACAk3H,EAAA,GAAA32B,EAAA,GACA22B,EAAA,GAAA32B,EAAA,IACAyyB,EAAA91G,GAAA,EAAAxH,oBAAAyhH,GACAC,EAAAH,EAAAjE,EACAp2F,EAAApb,EAAAsc,UAAAjJ,GACAn1B,EAAAk9B,EAAA,GACA9G,EAAAp2B,KAAA6gG,EAAA,GAAA02B,EACAn3H,EAAA88B,EAAA,GACA9G,EAAAh2B,KAAAygG,EAAA,GAAA02B,EACAD,GACAt3H,EAAAI,EACAJ,EAAA03H,EAAAt3H,EAAAs3H,GAGA16G,KAAAgmG,gBAAAjwF,EAAAugG,GACAvoG,EAAAyrG,SAAA,IAAAlD,KAEAvoG,EAAAwrG,WAAA,SACAxrG,EAAAniB,MAAAkvG,GAAA,EAAAvrG,kBACAwe,EAAA+W,QAAAg2E,GAAA,EAAA7qG,OAEA,IAAAorG,EAAA1pG,EAAA+vG,WAAA1hG,KAAAg6G,gBAAAh6G,KAAAi6G,eACAtoH,EAAAgwG,WAAAtG,GACAr7F,KAAAk6G,aACAl6G,KAAAk6G,WAAA,IAAAL,GAAA9rG,EAAAstF,IAGA1pG,EAAA2tG,WAAAxE,GAAA,EAAAnrG,aAAAqQ,KAAAm6G,oBACApsG,EAAA6zF,wBAAA5hG,KAAAk6G,WAAAle,YACAjuF,EAAA8zF,oBACA7hG,KAAAk6G,WAAAle,WAAA,EAAAlB,GAAA,EAAAtqG,OAAA,QACAud,EAAA6zF,wBAAA5hG,KAAAk6G,WAAAtX,YACA70F,EAAA8zF,oBACA7hG,KAAAk6G,WAAAtX,WAAA,EAAA9H,GAAA,EAAAtqG,OAAA,QACAud,EAAAyoG,UAAAx2G,KAAAk6G,WAAA/D,UAAA,GAKA,IAAA5yB,KACAA,EAAAprE,MAEA,IAOAwrE,EAAAvuD,EAAA+pB,EACAr7D,EAAAC,EAAAigG,EARAR,EAAAxjF,KAAAq8E,uBACAQ,EAAAv7E,EAAAiiF,GAEAvzB,EAAA4yB,EAAAvyB,4BACAsqD,GAAA,EACA13B,EAAAh5E,EAAA,EAAA1nB,cACAkhG,EAAA,IAAA9iE,GAAA,WAGA,IAAA78B,EAAAs1B,EAAAp2B,KAA4Bc,GAAAs1B,EAAA/1B,OAAqBS,EACjD,IAAAC,EAAAq1B,EAAAh2B,KAA8BW,GAAAq1B,EAAA71B,OAAqBQ,EAGnD,GADAqxC,EAAAynD,EAAAhnD,QAAA1d,EAAAr0B,EAAAC,EAAA+xC,EAAAx0B,QACA/V,IAAAmpB,EAAApyB,SAEA0hG,EAAAl/E,EAAAqc,mBAAAiU,EAAA7c,UAAA0qE,GACAh5E,EAAA,EAAA9gB,WAAA66F,EAAAtvE,EAAApyB,SAHA,CAeA,IARA68D,EAAA/pB,EAAA/f,aACAq+B,EAAA,EAAAj7C,QACA0mD,GAAAzL,EAAA,EAAAh7C,OACAymD,GAAAzL,EAAA,EAAAl8C,QAAAw4D,IAEA56B,IAAAqe,mBAEA0L,EAAA/pB,EAAA/f,aACAq+B,EAAA,EAAAj7C,QACA,GAAA+mF,EAAA65B,oBAAAjkF,GAAA,CACAmuD,EAAAprE,GAAAid,EAAA7c,UAAA7B,YAAA0e,EACA,eAES,GAAA+pB,GAAAzL,EAAA,EAAAh7C,OACTymD,GAAAzL,EAAA,EAAAl8C,QACAw4D,EACA,SAGA2qD,GAAA,EACA71G,EAAAkc,gCACAoU,EAAA7c,UAAAirE,EAAA,KAAAC,EAAAR,KAEAU,EAAA7+E,EAAAyc,2BACA6T,EAAA7c,UAAAkrE,EAAAR,KAEAO,EAAArrE,EAAA,EAAAwrE,GASA,IAAAQ,EAAAziG,OAAAmK,KAAA03F,GAAArvE,IAAAmD,QACA8sE,EAAA7mF,KAAA6S,EAAA,EAAAnU,2BACA,IACAxZ,EAAAC,EAAA0mF,EAAA+a,EADA41B,EAAA,IAAA1V,aAAA,GAEA,IAAA5hH,EAAA,EAAAC,EAAA0hG,EAAAzhG,OAA+BF,EAAAC,IAAQD,EAEvC,IAAA2mF,KADA+a,EAAAX,EAAAY,EAAA3hG,IAEA4yC,EAAA8uD,EAAA/a,GACA6a,EAAAl/E,EAAAqc,mBAAAiU,EAAA7c,UAAA0qE,GACA62B,EAAA,MAAA91B,EAAA,GAAAA,EAAA,IACA02B,EACAZ,EAAA,MAAA91B,EAAA,GAAAA,EAAA,IACA02B,EACAZ,EAAA,MAAA91B,EAAA,GAAAs2B,EAAA,IACAI,EAAA,EACAZ,EAAA,MAAA91B,EAAA,GAAAs2B,EAAA,IACAI,EAAA,EACA3sG,EAAAu0F,WAAAtiG,KAAAk6G,WAAAJ,gBACAt6B,EAAAg5B,gBAAApjF,EAAAyuD,EACAI,EAAAnuD,EAAAglE,GAAA,EAAAjqG,OAAAiqG,GAAA,EAAAjqG,QACAkd,EAAA6oG,WAAA9b,GAAA,EAAArrG,eAAA,KAIAkrH,GACA36G,KAAAo6G,mBAAAhhG,EACApZ,KAAAq6G,2BAAAC,EACAt6G,KAAA22F,kBAAA9Z,EAAAhiE,gBAEA7a,KAAAo6G,mBAAA,KACAp6G,KAAAq6G,2BAAA,KACAr6G,KAAA22F,mBAAA,EACA5gF,EAAA0yB,SAAA,GAKAzoC,KAAAg9E,gBAAAjnE,EAAAkf,UAAA4nD,EAAA1kE,EAAAiB,GACA,IAAAwhG,EAAAp7B,EAAAy5B,sBACAj5G,KAAAi9E,kBACAlnE,EAAA8mE,EAAA/3E,EAAAgxB,EAAAx0B,EAAAhf,EAAA61B,EACAyqE,EAAAxyB,aAIA,SAAAh7B,GACAA,EAAA/f,YAAAq+B,EAAA,EAAAj7C,QACA+mF,EAAA65B,oBAAAjkF,IACAwlF,EAAA3yC,YAAA7yC,EAAA9c,WACAsiG,EAAAlzC,SACAtyC,EACAtwB,EAAA8c,mBAAAwT,EAAA7c,WACAzT,EAAAuc,cAAA+T,EAAA7c,UAAA,IACAsrE,EAAAI,EAAAnuD,KAGO91B,MACPA,KAAA48E,oBAAA7mE,EAAA8mE,GACA78E,KAAA+8E,YAAAhnE,EAAA8mE,GAEA,IAAA05B,EAAAv2G,KAAAu2G,eAiBA,OAhBAjqC,GAAA,EAAA3/E,MAAA4pH,GACAjqC,GAAA,EAAA/9E,UAAAgoH,GACAtzH,KAAAyuC,MAAA9pC,EAAA,GAAA2oF,KAAA+pC,EAAA,KACAA,EAAA,GAAAA,EAAA,KACAr3H,KAAAyuC,MAAA9pC,EAAA,GAAA2oF,KAAA+pC,EAAA,KACAA,EAAA,GAAAA,EAAA,KACA,IAAArqE,EAAAnoD,UACAwkF,GAAA,EAAAl+E,OAAAmoH,EAAAtmE,EAAAnoD,UAEAwkF,GAAA,EAAAh+E,MAAAioH,EACAxgG,EAAAhuB,KAAA,GAAAkoD,EAAApoD,YACAyyH,EAAA,GAAAA,EAAA,IACAvkG,EAAAhuB,KAAA,GAAAkoD,EAAApoD,YACAyyH,EAAA,GAAAA,EAAA,KACAhuC,GAAA,EAAA/9E,UAAAgoH,GAAA,SAEA,GAOAwD,GAAAt4H,UAAA+tF,oBAAA,SAAAzpC,EAAAhwB,EAAA5vB,EAAAyzC,GACA,GAAA55B,KAAA8lG,YAAA,CAIA,IAAA+U,GACA90E,EAAA,GAAAhwB,EAAAhuB,KAAA,IACAguB,EAAAhuB,KAAA,GAAAg+C,EAAA,IAAAhwB,EAAAhuB,KAAA,IAEA+yH,EAAAxuC,GAAA,EAAAnpF,MACA6c,KAAAu2G,eAAAsE,EAAAj3H,SACA2zH,GACAuD,EAAA,GAAA96G,KAAAs2G,qBACAwE,EAAA,GAAA96G,KAAAs2G,sBAEAvoG,EAAA/N,KAAAw/E,YAAAhuF,aAAA4sG,QACArwF,EAAAi4F,gBAAAj4F,EAAAzc,YAAA0O,KAAA8lG,aACA,IAAA/mB,EAAA,IAAAs2B,WAAA,GAIA,OAHAtnG,EAAAunG,WAAAiC,EAAA,GAAAA,EAAA,OACAxpG,EAAAtd,KAAAsd,EAAA1d,cAAA0uF,GAEAA,EAAA,KACA54F,EAAAG,KAAAszC,EAAA55B,KAAAu8E,WAAAwC,QAEA,IAGA,IAAAg8B,GAAA,GCrYAC,GAAA,SAAAx7B,EAAAgX,GAEAqgB,GAAAvwH,KAAA0Z,KAAAw/E,EAAAgX,GAMAx2F,KAAA02F,QAAA,EAMA12F,KAAA22F,mBAAA,EAMA32F,KAAA42F,oBAAAr2D,IAMAvgC,KAAA8iF,gBAAA74E,EAAA,EAAA1nB,cAMAyd,KAAA62F,qBAAA,KAMA72F,KAAA82F,aAAA,KAOA92F,KAAAi7G,YAAA,MAIAv3G,EAAA,EAAApiB,SAAA05H,GAAAnE,IASAmE,GAAA,iBAAA5vH,EAAAyrC,GACA,OAAAzrC,IAAAqgF,GAAA99D,OAAAkpB,EAAAt1B,YAAA4uD,GAAA,EAAAz+C,QAUAspG,GAAA,gBAAAx7B,EAAA3oD,GACA,WAAAmkF,GACuC,EACN,IAQjCA,GAAAv5H,UAAA08F,aAAA,SAAApoE,EAAArB,EAAA/iB,GACAqO,KAAAi7G,YAAAvmG,EACA,IAAAu7B,EAAAl6B,EAAAk6B,UACA6kD,EAAA90F,KAAA82F,aACA/uG,EAAAguB,EAAAhuB,KACA+tC,EAAA/f,EAAA+f,WACA/nB,EAAA/N,KAAAw/E,YAAA4e,QACAtJ,MAAAjuG,YACAknB,EAAA8wF,OAAA9wF,EAAA3d,cACA2d,EAAAmtG,QAAA,IAAAnzH,EAAA,GAAA+tC,EAAA/tC,EAAA,GAAA+tC,GACAg/D,EAAA5I,OAAAv6F,EACAs+C,EAAAroD,OAAAqoD,EAAApoD,WAAAooD,EAAAnoD,SACAC,EAAA+tC,EAAAphB,EAAAle,QACAke,EAAAmB,QAAAE,EAAA+7D,uBACA/jE,EAAA+W,QAAA/W,EAAA3d,gBASA4qH,GAAAv5H,UAAAgxB,gBAAA,WACA,IAAAqiF,EAAA90F,KAAA82F,aACA,GAAAhC,EAAA,CACA,IAAAnjG,EAAAqO,KAAAw/E,YAAAhuF,aACAsjG,EAAAmI,2BAAAtrG,EAAAmjG,GACA90F,KAAA82F,aAAA,KAEA+f,GAAAp1H,UAAAgxB,gBAAAnsB,KAAA0Z,OAOAg7G,GAAAv5H,UAAAkyC,2BAAA,SAAAxvC,EAAA4xB,EAAAs5D,EAAAlpF,EAAAyzC,GACA,GAAA55B,KAAA82F,cAAA92F,KAAAi7G,YAEG,CACH,IAAAtpH,EAAAqO,KAAAw/E,YAAAhuF,aACAy+C,EAAAl6B,EAAAk6B,UACApZ,EAAA72B,KAAAu8E,WACA7nE,EAAA1U,KAAAi7G,YAEAnlD,KACA,OAAA91D,KAAA82F,aAAAnjE,2BAAAxvC,EACAwN,EAAAs+C,EAAAroD,OAAAqoD,EAAApoD,WAAAooD,EAAAnoD,SACAiuB,EAAAhuB,KAAAguB,EAAA+f,WAAAphB,EAAAle,WAMA,SAAAsoC,GACA,IAAA1yC,EAAAsX,EAAA,EAAA5hB,OAAAg9C,GAAApoB,WACA,KAAAtqB,KAAA0pE,GAEA,OADAA,EAAA1pE,IAAA,EACAjG,EAAAG,KAAAszC,EAAAkF,EAAAjI,OAUAmkF,GAAAv5H,UAAAouF,uBAAA,SAAA1rF,EAAA4xB,GACA,GAAA/V,KAAA82F,cAAA92F,KAAAi7G,YAEG,CACH,IAAAtpH,EAAAqO,KAAAw/E,YAAAhuF,aACAy+C,EAAAl6B,EAAAk6B,UACAv7B,EAAA1U,KAAAi7G,YACA,OAAAj7G,KAAA82F,aAAAjnB,uBAAA1rF,EACAwN,EAAAs+C,EAAAroD,OAAAqoD,EAAApoD,WAAAooD,EAAAnoD,SACAiuB,EAAAhuB,KAAAguB,EAAA+f,WAAAphB,EAAAle,QACAuf,EAAA+7D,oBARA,UAgBAkpC,GAAAv5H,UAAA+tF,oBAAA,SAAAzpC,EAAAhwB,EAAA5vB,EAAAyzC,GACA,IAAAz1C,EAAAmoF,GAAA,EAAAnpF,MACA4yB,EAAAm6D,2BAAAnqC,EAAAniD,SAGA,OAFAoc,KAAA6vE,uBAAA1rF,EAAA4xB,GAGA5vB,EAAAG,KAAAszC,EAAA55B,KAAAu8E,WAAA,WAEA,GAUAy+B,GAAAv5H,UAAAm2G,wBAAA,SAAAtlF,GACAtS,KAAAy8E,2BAOAu+B,GAAAv5H,UAAA28F,aAAA,SAAAroE,EAAArB,EAAA/iB,GAEA,IAAA6kG,EAA+Cx2F,KAAAu8E,WAC/Cya,EAAAR,EAAArhF,YAEAnV,KAAA+8E,YAAAhnE,EAAAihF,GAEA,IAAAa,EAAA9hF,EAAAg7D,UAAAjnC,EAAA,EAAAzrC,WACAy5F,EAAA/hF,EAAAg7D,UAAAjnC,EAAA,EAAAxrC,aACAyvD,EAAAyoC,EAAAnnC,0BACArB,EAAAwoC,EAAAlnC,4BAEA,IAAAtvD,KAAA02F,SAAA3oC,GAAA8pC,IACA7pC,GAAA8pC,EACA,SAGA,IAAAC,EAAAhiF,EAAAzzB,OACA2tD,EAAAl6B,EAAAk6B,UACA3uC,EAAA2uC,EAAA3uC,WACAzZ,EAAAooD,EAAApoD,WACAiuC,EAAA/f,EAAA+f,WACAkiE,EAAAxB,EAAA37E,cACAo9E,EAAAzB,EAAAxnC,kBACAkpC,EAAA1B,EAAAvnC,sBAEA1jE,IAAA2sG,IACAA,EAAA5B,GAAA9B,cAGA,IAAAlyG,EAAA2nB,EAAA,EAAAxmB,OAAAs0G,EACAE,EAAApwG,GAEA,IAAAmY,KAAA02F,QACA12F,KAAA42F,qBAAA/uG,GACAmY,KAAA22F,mBAAAqB,GACAh4F,KAAA62F,sBAAAqB,GACAjuF,EAAA,EAAA5lB,eAAA2b,KAAA8iF,gBAAAxgG,GACA,SAGA0d,KAAA82F,cACA/gF,EAAAi7D,oBAAA/kF,KACA+T,KAAA82F,aAAAmG,2BAAAtrG,IAGAqO,KAAA02F,QAAA,EAEA,IAAA5B,EAAA,IAAAygB,GACAjf,GAAA1B,aAAA/sG,EAAAiuC,GACAxzC,EAAAk0G,EAAAxnC,mBACAgoC,EAAA78B,aAAA73E,EAAAuF,EAAAyZ,GAKA,IAAA2zF,EAAA,SAAAn2D,GACA,IAAAG,EACAD,EAAAF,EAAAswB,mBASA,GARApwB,EACAC,EAAAD,EAAA14C,KAAAw4C,EAAAj3C,IAEAm3C,EAAAw3D,EAAApnC,sBAEAnwB,EAAAD,EAAAF,EAAAj3C,IAGAo3C,EAAA,CACA,IAAAk5D,EAAAn4F,KAAAi1F,cACAn2D,EAAAj3C,EAAAiuC,EAAAmJ,EAAA61D,GACA90F,KAAA02F,OAAA12F,KAAA02F,QAAAyB,IAGA,GAAAD,EAAA,CAEA,IAAApiC,KACAkhC,EAAA/9B,uBAAA32E,EAIA,SAAAw8C,GACAg3B,EAAA7pE,KAAA6yC,IACS9+B,MACT81D,EAAAx4D,KAAA46F,GACApiC,EAAA/tD,QAAAktF,EAAAj1F,WAEAg3F,EAAA/9B,uBAAA32E,EAAA2yG,EAAAj1F,MAUA,OARA80F,EAAA1H,OAAAz7F,GAEAqO,KAAA42F,oBAAA/uG,EACAmY,KAAA22F,kBAAAqB,EACAh4F,KAAA62F,qBAAAqB,EACAl4F,KAAA8iF,gBAAAxgG,EACA0d,KAAA82F,aAAAhC,GAEA,GAaAkmB,GAAAv5H,UAAAwzG,cAAA,SAAAn2D,EAAAj3C,EAAAiuC,EAAAmJ,EAAA61D,GACA,IAAA71D,EACA,SAEA,IAAAi2D,GAAA,EACA,GAAAxoG,MAAAkQ,QAAAqiC,GACA,QAAAz8C,EAAAy8C,EAAAv8C,OAAA,EAA2CF,GAA3C,IAAoDA,EACpD0yG,EAAAoB,GAAArB,cACAH,EAAAh2D,EAAAG,EAAAz8C,GACA8zG,GAAA3B,oBAAA9sG,EAAAiuC,GACA91B,KAAA43F,wBAAA53F,OAAAk1F,OAGAA,EAAAoB,GAAArB,cACAH,EAAAh2D,EAAAG,EACAq3D,GAAA3B,oBAAA9sG,EAAAiuC,GACA91B,KAAA43F,wBAAA53F,OAAAk1F,EAEA,OAAAA,GAEA,IAAAimB,GAAA,GCjUAz3G,EAAA,EAAAtjB,gBACAorF,GAAAJ,SAAAR,EAAAC,aAAA6X,IACAlX,GAAAF,iBAAAV,EAAAE,gBACAwV,GACAgE,GACA8T,GACAoC,MAIA92F,EAAA,EAAAnjB,eACAirF,GAAAJ,SAAAR,EAAAC,aAAA6uC,IACAluC,GAAAF,iBAAAV,EAAAE,gBACA6sC,GACAoD,GACAI,MAqDA,IAAAC,GAAA,SAAA/5G,IACAA,EAAAtf,EAAA,EAAA8Y,UAA8BwG,IAC9B0xC,WACA1xC,EAAA0xC,SAAA3E,GAAA,EAAA0E,YAEAzxC,EAAAurD,eACAvrD,EAAAurD,aAAAlK,GAAA,EAAA5P,YAGAmgC,GAAA3sF,KAAA0Z,KAAAqB,IAGAqC,EAAA,EAAApiB,SAAA85H,GAAAnoC,IACA/wF,EAAA,gEClFAm5H,EAAA,WAMAr7G,KAAAs7G,sBAAA,KAMAt7G,KAAAu7G,yBAAA,MAYAF,EAAA55H,UAAA+5H,eAAA,SAAAtgH,EAAAgG,GACA,IAAAG,EAQA,OAPAH,IACAG,GACA00D,eAAA70D,EAAA60D,eACA70D,EAAA60D,eAAA/1D,KAAA01D,eAAAx6D,GACAu6D,kBAAAv0D,EAAAu0D,oBAGAz1D,KAAAy7G,aAAAp6G,IAaAg6G,EAAA55H,UAAAg6H,aAAA,SAAAp6G,GACA,OAAAq6G,EAAA,EAAA7gH,QACAk7D,eAAA/1D,KAAAs7G,sBACA7lD,kBAAAz1D,KAAAu7G,0BACGl6G,IAQHg6G,EAAA55H,UAAAk0E,cAAA,WACA,aAQA0lD,EAAA55H,UAAA8f,QAAA,aAWA85G,EAAA55H,UAAAk6H,YAAA,SAAAzgH,EAAAgG,KAWAm6G,EAAA55H,UAAA+zE,aAAA,SAAAt6D,EAAAgG,KAWAm6G,EAAA55H,UAAAm6H,aAAA,SAAA1gH,EAAAgG,KAUAm6G,EAAA55H,UAAAi0E,eAAA,SAAAx6D,KAWAmgH,EAAA55H,UAAAo6H,aAAA,SAAA/8E,EAAA59B,KAWAm6G,EAAA55H,UAAAq6H,cAAA,SAAAhmD,EAAA50D,KAWAm6G,EAAA55H,UAAAs6H,cAAA,SAAA96G,EAAAC,KAWAm6G,EAAAW,qBAAA,SACA/6G,EAAAg7G,EAAA/6G,GACA,IAOAg7G,EAPAzmD,EAAAv0D,EACAi7G,EAAA,EAAA55G,IAAArB,EAAAu0D,mBAAA,KACAM,EAAA70D,EACAi7G,EAAA,EAAA55G,IAAArB,EAAA60D,gBAAA,KAsBA,GAdAmmD,EAHAzmD,GAAAM,IACAomD,EAAA,EAAA5yG,WAAAksD,EAAAM,GACA90D,aAAAm7G,EAAA,GACAH,EAAAh7G,EAAAtd,QAAAsd,GAAArU,UACAqvH,EAAAxmD,EAAAM,EACAkmD,EAAAlmD,EAAAN,GAIA0mD,EAAA,EAAAnyG,gBACA/I,EACA80D,EACAN,GAGAx0D,EAEAg7G,GAAA/6G,QAAA3V,IAAA2V,EAAAm7G,SAAA,CACA,IAAA71E,EAAAvjD,KAAAgW,IAAA,GAAAiI,EAAAm7G,UAYAH,IAAAj7G,IACAi7G,IAAAv4H,SAEAu4H,EAAA/xH,eATA,SAAA9H,GACA,QAAAG,EAAA,EAAAC,EAAAJ,EAAAK,OAA8CF,EAAAC,IAAQD,EACtDH,EAAAG,GAAAS,KAAAyuC,MAAArvC,EAAAG,GAAAgkD,KAEA,OAAAnkD,IAOA,OAAA65H,oBCvNA/vF,EAAAD,QAGC,WAAqB,aA8CtB,SAAAowF,EAAAjgH,EAAA7Z,EAAAwX,GACA,IAAAD,EAAAsC,EAAA7Z,GACA6Z,EAAA7Z,GAAA6Z,EAAArC,GACAqC,EAAArC,GAAAD,EAGA,SAAAwiH,EAAA1uH,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,IAGA,OAtDA,SAAAuO,EAAAnC,EAAAvE,EAAA6uB,EAAA1mB,IAIA,SAAA0+G,EAAAngH,EAAAnC,EAAAvE,EAAA6uB,EAAA1mB,GAEA,KAAA0mB,EAAA7uB,GAAA,CACA,GAAA6uB,EAAA7uB,EAAA,KACA,IAAA8D,EAAA+qB,EAAA7uB,EAAA,EACAyE,EAAAF,EAAAvE,EAAA,EACAwiB,EAAAl1B,KAAAkW,IAAAM,GACAqd,EAAA,GAAA7zB,KAAA8V,IAAA,EAAAof,EAAA,GACAskG,EAAA,GAAAx5H,KAAAgf,KAAAkW,EAAArB,GAAArd,EAAAqd,GAAArd,IAAAW,EAAAX,EAAA,UACAijH,EAAAz5H,KAAAK,IAAAqS,EAAA1S,KAAA46B,MAAA3jB,EAAAE,EAAA0c,EAAArd,EAAAgjH,IACAE,EAAA15H,KAAAC,IAAAshC,EAAAvhC,KAAA46B,MAAA3jB,GAAAT,EAAAW,GAAA0c,EAAArd,EAAAgjH,IACAD,EAAAngH,EAAAnC,EAAAwiH,EAAAC,EAAA7+G,GAGA,IAAAxE,EAAA+C,EAAAnC,GACA1X,EAAAmT,EACAqE,EAAAwqB,EAKA,IAHA83F,EAAAjgH,EAAA1G,EAAAuE,GACA4D,EAAAzB,EAAAmoB,GAAAlrB,GAAA,GAAAgjH,EAAAjgH,EAAA1G,EAAA6uB,GAEAhiC,EAAAwX,GAAA,CAIA,IAHAsiH,EAAAjgH,EAAA7Z,EAAAwX,GACAxX,IACAwX,IACA8D,EAAAzB,EAAA7Z,GAAA8W,GAAA,GAAA9W,IACA,KAAAsb,EAAAzB,EAAArC,GAAAV,GAAA,GAAAU,IAGA,IAAA8D,EAAAzB,EAAA1G,GAAA2D,GAAAgjH,EAAAjgH,EAAA1G,EAAAqE,GAGAsiH,EAAAjgH,IADArC,EACAwqB,GAGAxqB,GAAAE,IAAAvE,EAAAqE,EAAA,GACAE,GAAAF,IAAAwqB,EAAAxqB,EAAA,IAvCAwiH,CAAAngH,EAAAnC,EAAAvE,GAAA,EAAA6uB,GAAAnoB,EAAA3Z,OAAA,EAAAob,GAAAy+G,IANAK","file":"vendors~main.fe5b85d2.js","sourcesContent":["var _ol_ = {};\n\n\n/**\n * Constants defined with the define tag cannot be changed in application\n * code, but can be set at compile time.\n * Some reduce the size of the build in advanced compile mode.\n */\n\n\n/**\n * @define {boolean} Assume touch.  Default is `false`.\n */\n_ol_.ASSUME_TOUCH = false;\n\n\n/**\n * TODO: rename this to something having to do with tile grids\n * see https://github.com/openlayers/openlayers/issues/2076\n * @define {number} Default maximum zoom for default tile grids.\n */\n_ol_.DEFAULT_MAX_ZOOM = 42;\n\n\n/**\n * @define {number} Default min zoom level for the map view.  Default is `0`.\n */\n_ol_.DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @define {number} Default maximum allowed threshold  (in pixels) for\n *     reprojection triangulation. Default is `0.5`.\n */\n_ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD = 0.5;\n\n\n/**\n * @define {number} Default tile size.\n */\n_ol_.DEFAULT_TILE_SIZE = 256;\n\n\n/**\n * @define {string} Default WMS version.\n */\n_ol_.DEFAULT_WMS_VERSION = '1.3.0';\n\n\n/**\n * @define {boolean} Enable the Canvas renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the Canvas renderer from the build.\n */\n_ol_.ENABLE_CANVAS = true;\n\n\n/**\n * @define {boolean} Enable integration with the Proj4js library.  Default is\n *     `true`.\n */\n_ol_.ENABLE_PROJ4JS = true;\n\n\n/**\n * @define {boolean} Enable automatic reprojection of raster sources. Default is\n *     `true`.\n */\n_ol_.ENABLE_RASTER_REPROJECTION = true;\n\n\n/**\n * @define {boolean} Enable the WebGL renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the WebGL renderer from the build.\n */\n_ol_.ENABLE_WEBGL = true;\n\n\n/**\n * @define {boolean} Include debuggable shader sources.  Default is `true`.\n *     This should be set to `false` for production builds (if `ol.ENABLE_WEBGL`\n *     is `true`).\n */\n_ol_.DEBUG_WEBGL = true;\n\n\n/**\n * @define {number} The size in pixels of the first atlas image. Default is\n * `256`.\n */\n_ol_.INITIAL_ATLAS_SIZE = 256;\n\n\n/**\n * @define {number} The maximum size in pixels of atlas images. Default is\n * `-1`, meaning it is not used (and `ol.WEBGL_MAX_TEXTURE_SIZE` is\n * used instead).\n */\n_ol_.MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @define {number} Maximum mouse wheel delta.\n */\n_ol_.MOUSEWHEELZOOM_MAXDELTA = 1;\n\n\n/**\n * @define {number} Maximum width and/or height extent ratio that determines\n * when the overview map should be zoomed out.\n */\n_ol_.OVERVIEWMAP_MAX_RATIO = 0.75;\n\n\n/**\n * @define {number} Minimum width and/or height extent ratio that determines\n * when the overview map should be zoomed in.\n */\n_ol_.OVERVIEWMAP_MIN_RATIO = 0.1;\n\n\n/**\n * @define {number} Maximum number of source tiles for raster reprojection of\n *     a single tile.\n *     If too many source tiles are determined to be loaded to create a single\n *     reprojected tile the browser can become unresponsive or even crash.\n *     This can happen if the developer defines projections improperly and/or\n *     with unlimited extents.\n *     If too many tiles are required, no tiles are loaded and\n *     `ol.TileState.ERROR` state is set. Default is `100`.\n */\n_ol_.RASTER_REPROJECTION_MAX_SOURCE_TILES = 100;\n\n\n/**\n * @define {number} Maximum number of subdivision steps during raster\n *     reprojection triangulation. Prevents high memory usage and large\n *     number of proj4 calls (for certain transformations and areas).\n *     At most `2*(2^this)` triangles are created for each triangulated\n *     extent (tile/image). Default is `10`.\n */\n_ol_.RASTER_REPROJECTION_MAX_SUBDIVISION = 10;\n\n\n/**\n * @define {number} Maximum allowed size of triangle relative to world width.\n *     When transforming corners of world extent between certain projections,\n *     the resulting triangulation seems to have zero error and no subdivision\n *     is performed.\n *     If the triangle width is more than this (relative to world width; 0-1),\n *     subdivison is forced (up to `ol.RASTER_REPROJECTION_MAX_SUBDIVISION`).\n *     Default is `0.25`.\n */\n_ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @define {number} Tolerance for geometry simplification in device pixels.\n */\n_ol_.SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @define {number} Texture cache high water mark.\n */\n_ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @define {string} OpenLayers version.\n */\n_ol_.VERSION = 'v4.6.5';\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @const\n * @type {number|undefined}\n */\n_ol_.WEBGL_MAX_TEXTURE_SIZE; // value is set in `ol.has`\n\n\n/**\n * List of supported WebGL extensions.\n * @const\n * @type {Array.<string>}\n */\n_ol_.WEBGL_EXTENSIONS; // value is set in `ol.has`\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     ol.inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function\n * @api\n */\n_ol_.inherits = function(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n};\n\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\n_ol_.nullFunction = function() {};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\n_ol_.getUid = function(obj) {\n  return obj.ol_uid ||\n      (obj.ol_uid = ++_ol_.uidCounter_);\n};\n\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\n_ol_.uidCounter_ = 0;\nexport default _ol_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_extent_Corner_ from './extent/corner.js';\nimport _ol_extent_Relationship_ from './extent/relationship.js';\nvar _ol_extent_ = {};\n\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @return {ol.Extent} Bounding extent.\n * @api\n */\n_ol_extent_.boundingExtent = function(coordinates) {\n  var extent = _ol_extent_.createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    _ol_extent_.extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @private\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.boundingExtentXYs_ = function(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return _ol_extent_.createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Return extent increased by the provided value.\n * @param {ol.Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_extent_.buffer = function(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n};\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {ol.Extent} extent Extent to clone.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} The clone.\n */\n_ol_extent_.clone = function(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\n_ol_extent_.closestSquaredDistanceXY = function(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {ol.Extent} extent Extent.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\n_ol_extent_.containsCoordinate = function(extent, coordinate) {\n  return _ol_extent_.containsXY(extent, coordinate[0], coordinate[1]);\n};\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\n_ol_extent_.containsExtent = function(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n};\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {ol.Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\n_ol_extent_.containsXY = function(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n};\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {ol.Extent} extent The extent.\n * @param {ol.Coordinate} coordinate The coordinate.\n * @return {number} The relationship (bitwise compare with\n *     ol.extent.Relationship).\n */\n_ol_extent_.coordinateRelationship = function(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = _ol_extent_Relationship_.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | _ol_extent_Relationship_.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | _ol_extent_Relationship_.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | _ol_extent_Relationship_.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | _ol_extent_Relationship_.ABOVE;\n  }\n  if (relationship === _ol_extent_Relationship_.UNKNOWN) {\n    relationship = _ol_extent_Relationship_.INTERSECTING;\n  }\n  return relationship;\n};\n\n\n/**\n * Create an empty extent.\n * @return {ol.Extent} Empty extent.\n * @api\n */\n_ol_extent_.createEmpty = function() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n};\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdate = function(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n};\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateEmpty = function(opt_extent) {\n  return _ol_extent_.createOrUpdate(\n      Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromCoordinate = function(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return _ol_extent_.createOrUpdate(x, y, x, y, opt_extent);\n};\n\n\n/**\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromCoordinates = function(coordinates, opt_extent) {\n  var extent = _ol_extent_.createOrUpdateEmpty(opt_extent);\n  return _ol_extent_.extendCoordinates(extent, coordinates);\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromFlatCoordinates = function(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = _ol_extent_.createOrUpdateEmpty(opt_extent);\n  return _ol_extent_.extendFlatCoordinates(\n      extent, flatCoordinates, offset, end, stride);\n};\n\n\n/**\n * @param {Array.<Array.<ol.Coordinate>>} rings Rings.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromRings = function(rings, opt_extent) {\n  var extent = _ol_extent_.createOrUpdateEmpty(opt_extent);\n  return _ol_extent_.extendRings(extent, rings);\n};\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\n_ol_extent_.equals = function(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n};\n\n\n/**\n * Modify an extent to include another extent.\n * @param {ol.Extent} extent1 The extent to be modified.\n * @param {ol.Extent} extent2 The extent that will be included in the first.\n * @return {ol.Extent} A reference to the first (extended) extent.\n * @api\n */\n_ol_extent_.extend = function(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Coordinate} coordinate Coordinate.\n */\n_ol_extent_.extendCoordinate = function(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.extendCoordinates = function(extent, coordinates) {\n  var i, ii;\n  for (i = 0, ii = coordinates.length; i < ii; ++i) {\n    _ol_extent_.extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.extendFlatCoordinates = function(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    _ol_extent_.extendXY(\n        extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {Array.<Array.<ol.Coordinate>>} rings Rings.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.extendRings = function(extent, rings) {\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    _ol_extent_.extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\n_ol_extent_.extendXY = function(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n};\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {ol.Extent} extent Extent.\n * @param {function(this:T, ol.Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\n_ol_extent_.forEachCorner = function(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, _ol_extent_.getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, _ol_extent_.getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, _ol_extent_.getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, _ol_extent_.getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n};\n\n\n/**\n * Get the size of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\n_ol_extent_.getArea = function(extent) {\n  var area = 0;\n  if (!_ol_extent_.isEmpty(extent)) {\n    area = _ol_extent_.getWidth(extent) * _ol_extent_.getHeight(extent);\n  }\n  return area;\n};\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Bottom left coordinate.\n * @api\n */\n_ol_extent_.getBottomLeft = function(extent) {\n  return [extent[0], extent[1]];\n};\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Bottom right coordinate.\n * @api\n */\n_ol_extent_.getBottomRight = function(extent) {\n  return [extent[2], extent[1]];\n};\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Center.\n * @api\n */\n_ol_extent_.getCenter = function(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n};\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @param {ol.extent.Corner} corner Corner.\n * @return {ol.Coordinate} Corner coordinate.\n */\n_ol_extent_.getCorner = function(extent, corner) {\n  var coordinate;\n  if (corner === _ol_extent_Corner_.BOTTOM_LEFT) {\n    coordinate = _ol_extent_.getBottomLeft(extent);\n  } else if (corner === _ol_extent_Corner_.BOTTOM_RIGHT) {\n    coordinate = _ol_extent_.getBottomRight(extent);\n  } else if (corner === _ol_extent_Corner_.TOP_LEFT) {\n    coordinate = _ol_extent_.getTopLeft(extent);\n  } else if (corner === _ol_extent_Corner_.TOP_RIGHT) {\n    coordinate = _ol_extent_.getTopRight(extent);\n  } else {\n    _ol_asserts_.assert(false, 13); // Invalid corner\n  }\n  return /** @type {!ol.Coordinate} */ (coordinate);\n};\n\n\n/**\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\n_ol_extent_.getEnlargedArea = function(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n};\n\n\n/**\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.getForViewAndSize = function(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return _ol_extent_.createOrUpdate(\n      Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n      Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n      opt_extent);\n};\n\n\n/**\n * Get the height of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\n_ol_extent_.getHeight = function(extent) {\n  return extent[3] - extent[1];\n};\n\n\n/**\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\n_ol_extent_.getIntersectionArea = function(extent1, extent2) {\n  var intersection = _ol_extent_.getIntersection(extent1, extent2);\n  return _ol_extent_.getArea(intersection);\n};\n\n\n/**\n * Get the intersection of two extents.\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @param {ol.Extent=} opt_extent Optional extent to populate with intersection.\n * @return {ol.Extent} Intersecting extent.\n * @api\n */\n_ol_extent_.getIntersection = function(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : _ol_extent_.createEmpty();\n  if (_ol_extent_.intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  }\n  return intersection;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @return {number} Margin.\n */\n_ol_extent_.getMargin = function(extent) {\n  return _ol_extent_.getWidth(extent) + _ol_extent_.getHeight(extent);\n};\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {ol.Extent} extent The extent.\n * @return {ol.Size} The extent size.\n * @api\n */\n_ol_extent_.getSize = function(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n};\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Top left coordinate.\n * @api\n */\n_ol_extent_.getTopLeft = function(extent) {\n  return [extent[0], extent[3]];\n};\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Top right coordinate.\n * @api\n */\n_ol_extent_.getTopRight = function(extent) {\n  return [extent[2], extent[3]];\n};\n\n\n/**\n * Get the width of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\n_ol_extent_.getWidth = function(extent) {\n  return extent[2] - extent[0];\n};\n\n\n/**\n * Determine if one extent intersects another.\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\n_ol_extent_.intersects = function(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n};\n\n\n/**\n * Determine if an extent is empty.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\n_ol_extent_.isEmpty = function(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.returnOrUpdate = function(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} value Value.\n */\n_ol_extent_.scaleFromCenter = function(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n};\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {ol.Extent} extent The extent.\n * @param {ol.Coordinate} start Segment start coordinate.\n * @param {ol.Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\n_ol_extent_.intersectsSegment = function(extent, start, end) {\n  var intersects = false;\n  var startRel = _ol_extent_.coordinateRelationship(extent, start);\n  var endRel = _ol_extent_.coordinateRelationship(extent, end);\n  if (startRel === _ol_extent_Relationship_.INTERSECTING ||\n      endRel === _ol_extent_Relationship_.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & _ol_extent_Relationship_.ABOVE) &&\n        !(startRel & _ol_extent_Relationship_.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & _ol_extent_Relationship_.RIGHT) &&\n        !(startRel & _ol_extent_Relationship_.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & _ol_extent_Relationship_.BELOW) &&\n        !(startRel & _ol_extent_Relationship_.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & _ol_extent_Relationship_.LEFT) &&\n        !(startRel & _ol_extent_Relationship_.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n};\n\n\n/**\n * Apply a transform function to the extent.\n * @param {ol.Extent} extent Extent.\n * @param {ol.TransformFunction} transformFn Transform function.  Called with\n * [minX, minY, maxX, maxY] extent coordinates.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_extent_.applyTransform = function(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _ol_extent_.boundingExtentXYs_(xs, ys, opt_extent);\n};\nexport default _ol_extent_;\n","import _ol_obj_ from './obj.js';\nvar _ol_events_ = {};\n\n\n/**\n * @param {ol.EventsKey} listenerObj Listener object.\n * @return {ol.EventsListenerFunctionType} Bound listener.\n */\n_ol_events_.bindListener_ = function(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n};\n\n\n/**\n * Finds the matching {@link ol.EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!ol.EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link ol.events.unlistenByKey}.\n * @return {ol.EventsKey|undefined} The matching listener object.\n * @private\n */\n_ol_events_.findListener_ = function(listeners, listener, opt_this,\n    opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<ol.EventsKey>|undefined} Listeners.\n */\n_ol_events_.getListeners = function(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n};\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {ol.EventTargetLike} target Target.\n * @return {!Object.<string, Array.<ol.EventsKey>>} Map of\n *     listeners by event type.\n * @private\n */\n_ol_events_.getListenerMap_ = function(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n};\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @private\n */\n_ol_events_.removeListeners_ = function(target, type) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      _ol_obj_.clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n};\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link ol.events.unlistenByKey}.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {ol.EventsKey} Unique key for the listener.\n */\n_ol_events_.listen = function(target, type, listener, opt_this, opt_once) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this,\n      false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {ol.EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, _ol_events_.bindListener_(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n};\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link ol.events.unlistenByKey} in case the listener needs to be unregistered\n * before it is called.\n *\n * When {@link ol.events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {ol.EventsKey} Key for unlistenByKey.\n */\n_ol_events_.listenOnce = function(target, type, listener, opt_this) {\n  return _ol_events_.listen(target, type, listener, opt_this, true);\n};\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link ol.events.listen} call.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\n_ol_events_.unlisten = function(target, type, listener, opt_this) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this,\n        true);\n    if (listenerObj) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n  }\n};\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link ol.events.listen} or {@link ol.events.listenOnce}.\n *\n * @param {ol.EventsKey} key The key.\n */\n_ol_events_.unlistenByKey = function(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = _ol_events_.getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        _ol_events_.removeListeners_(key.target, key.type);\n      }\n    }\n    _ol_obj_.clear(key);\n  }\n};\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {ol.EventTargetLike} target Target.\n */\n_ol_events_.unlistenAll = function(target) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  for (var type in listenerMap) {\n    _ol_events_.removeListeners_(target, type);\n  }\n};\nexport default _ol_events_;\n","import _ol_asserts_ from './asserts.js';\nvar _ol_transform_ = {};\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3x3 martrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {ol.Transform}\n */\n_ol_transform_.tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!ol.Transform} Identity transform.\n */\n_ol_transform_.create = function() {\n  return [1, 0, 0, 1, 0, 0];\n};\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!ol.Transform} transform Transform.\n * @return {!ol.Transform} Transform.\n */\n_ol_transform_.reset = function(transform) {\n  return _ol_transform_.set(transform, 1, 0, 0, 1, 0, 0);\n};\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!ol.Transform} transform1 Transform parameters of matrix 1.\n * @param {!ol.Transform} transform2 Transform parameters of matrix 2.\n * @return {!ol.Transform} transform1 multiplied with transform2.\n */\n_ol_transform_.multiply = function(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n};\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!ol.Transform} Matrix with transform applied.\n */\n_ol_transform_.set = function(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n};\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!ol.Transform} transform1 Matrix to set transform to.\n * @param {!ol.Transform} transform2 Matrix to set transform from.\n * @return {!ol.Transform} transform1 with transform from transform2 applied.\n */\n_ol_transform_.setFromArray = function(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n};\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {ol.Transform} transform The transformation.\n * @param {ol.Coordinate|ol.Pixel} coordinate The coordinate to transform.\n * @return {ol.Coordinate|ol.Pixel} return coordinate so that operations can be\n *     chained together.\n */\n_ol_transform_.apply = function(transform, coordinate) {\n  var x = coordinate[0], y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n};\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!ol.Transform} The rotated transform.\n */\n_ol_transform_.rotate = function(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return _ol_transform_.multiply(transform,\n      _ol_transform_.set(_ol_transform_.tmp_, cos, sin, -sin, cos, 0, 0));\n};\n\n\n/**\n * Applies scale to a given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!ol.Transform} The scaled transform.\n */\n_ol_transform_.scale = function(transform, x, y) {\n  return _ol_transform_.multiply(transform,\n      _ol_transform_.set(_ol_transform_.tmp_, x, 0, 0, y, 0, 0));\n};\n\n\n/**\n * Applies translation to the given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!ol.Transform} The translated transform.\n */\n_ol_transform_.translate = function(transform, dx, dy) {\n  return _ol_transform_.multiply(transform,\n      _ol_transform_.set(_ol_transform_.tmp_, 1, 0, 0, 1, dx, dy));\n};\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!ol.Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!ol.Transform} The composite transform.\n */\n_ol_transform_.compose = function(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n};\n\n\n/**\n * Invert the given transform.\n * @param {!ol.Transform} transform Transform.\n * @return {!ol.Transform} Inverse of the transform.\n */\n_ol_transform_.invert = function(transform) {\n  var det = _ol_transform_.determinant(transform);\n  _ol_asserts_.assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n};\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!ol.Transform} mat Matrix.\n * @return {number} Determinant.\n */\n_ol_transform_.determinant = function(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n};\nexport default _ol_transform_;\n","var _ol_webgl_ = {};\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_webgl_.CONTEXT_IDS_ = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\n_ol_webgl_.getContext = function(canvas, opt_attributes) {\n  var context, i, ii = _ol_webgl_.CONTEXT_IDS_.length;\n  for (i = 0; i < ii; ++i) {\n    try {\n      context = canvas.getContext(_ol_webgl_.CONTEXT_IDS_[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n};\nexport default _ol_webgl_;\n","/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nvar _ol_geom_GeometryType_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\nexport default _ol_geom_GeometryType_;\n","import _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_structs_LRUCache_ from '../structs/lrucache.js';\nimport _ol_transform_ from '../transform.js';\nvar _ol_render_canvas_ = {};\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_canvas_.defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_canvas_.defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_canvas_.defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_canvas_.defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultLineWidth = 1;\n\n\n/**\n * @type {ol.structs.LRUCache.<HTMLCanvasElement>}\n */\n_ol_render_canvas_.labelCache = new _ol_structs_LRUCache_();\n\n\n/**\n * @type {!Object.<string, number>}\n */\n_ol_render_canvas_.checkedFonts_ = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\n_ol_render_canvas_.measureContext_ = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\n_ol_render_canvas_.textHeights_ = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n_ol_render_canvas_.checkFont = (function() {\n  var retries = 60;\n  var checked = _ol_render_canvas_.checkedFonts_;\n  var labelCache = _ol_render_canvas_.labelCache;\n  var font = '32px monospace';\n  var text = 'wmytzilWMYTZIL@#/&?$%10';\n  var interval, referenceWidth;\n\n  function isAvailable(fontFamily) {\n    var context = _ol_render_canvas_.getMeasureContext();\n    context.font = font;\n    referenceWidth = context.measureText(text).width;\n    var available = true;\n    if (fontFamily != 'monospace') {\n      context.font = '32px ' + fontFamily + ',monospace';\n      var width = context.measureText(text).width;\n      // If width and referenceWidth are the same, then the 'monospace'\n      // fallback was used instead of the font we wanted, so the font is not\n      // available.\n      available = width != referenceWidth;\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          _ol_obj_.clear(_ol_render_canvas_.textHeights_);\n          // Make sure that loaded fonts are picked up by Safari\n          _ol_render_canvas_.measureContext_ = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      window.clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = _ol_css_.getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = window.setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\n_ol_render_canvas_.getMeasureContext = function() {\n  var context = _ol_render_canvas_.measureContext_;\n  if (!context) {\n    context = _ol_render_canvas_.measureContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n  }\n  return context;\n};\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {ol.Size} Measurement.\n */\n_ol_render_canvas_.measureTextHeight = (function() {\n  var span;\n  var heights = _ol_render_canvas_.textHeights_;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n_ol_render_canvas_.measureTextWidth = function(font, text) {\n  var measureContext = _ol_render_canvas_.getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n_ol_render_canvas_.rotateAtOffset = function(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n};\n\n\n_ol_render_canvas_.resetTransform_ = _ol_transform_.create();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\n_ol_render_canvas_.drawImage = function(context,\n    transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, _ol_render_canvas_.resetTransform_);\n  }\n};\nexport default _ol_render_canvas_;\n","/**\n * @enum {string}\n * @const\n */\nvar _ol_events_EventType_ = {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event ol.events.Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\nexport default _ol_events_EventType_;\n","/**\n * @enum {number}\n */\nvar _ol_TileState_ = {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\nexport default _ol_TileState_;\n","import _ol_asserts_ from './asserts.js';\nvar _ol_math_ = {};\n\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\n_ol_math_.clamp = function(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n};\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\n_ol_math_.cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\n_ol_math_.roundUpToPowerOfTwo = function(x) {\n  _ol_asserts_.assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n};\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\n_ol_math_.squaredSegmentDistance = function(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return _ol_math_.squaredDistance(x, y, x1, y1);\n};\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\n_ol_math_.squaredDistance = function(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\n_ol_math_.solveLinearSystem = function(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n};\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\n_ol_math_.toDegrees = function(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n};\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\n_ol_math_.toRadians = function(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n};\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\n_ol_math_.modulo = function(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n};\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\n_ol_math_.lerp = function(a, b, x) {\n  return a + x * (b - a);\n};\nexport default _ol_math_;\n","var _ol_obj_ = {};\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\n_ol_obj_.assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\n_ol_obj_.clear = function(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n};\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\n_ol_obj_.getValues = function(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n};\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\n_ol_obj_.isEmpty = function(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n};\nexport default _ol_obj_;\n","var _ol_array_ = {};\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\n_ol_array_.binarySearch = function(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || _ol_array_.numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n};\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\n_ol_array_.numberSafeCompareFunction = function(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n};\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\n_ol_array_.includes = function(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n};\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\n_ol_array_.linearFindNearest = function(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n};\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\n_ol_array_.reverseSubArray = function(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n};\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {Array.<VALUE>|VALUE} data The elements or arrays of elements\n *     to add to arr.\n * @template VALUE\n */\n_ol_array_.extend = function(arr, data) {\n  var i;\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n};\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\n_ol_array_.remove = function(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n};\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE} The element found.\n */\n_ol_array_.find = function(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\n_ol_array_.equals = function(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\n_ol_array_.stableSort = function(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n};\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\n_ol_array_.findIndex = function(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n};\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\n_ol_array_.isSorted = function(arr, opt_func, opt_strict) {\n  var compare = opt_func || _ol_array_.numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n};\nexport default _ol_array_;\n","import _ol_AssertionError_ from './assertionerror.js';\nvar _ol_asserts_ = {};\n\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\n_ol_asserts_.assert = function(assertion, errorCode) {\n  if (!assertion) {\n    throw new _ol_AssertionError_(errorCode);\n  }\n};\nexport default _ol_asserts_;\n","/**\n * @enum {number}\n */\nvar _ol_ViewHint_ = {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\nexport default _ol_ViewHint_;\n","var _ol_dom_ = {};\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\n_ol_dom_.createCanvasContext2D = function(opt_width, opt_height) {\n  var canvas = document.createElement('CANVAS');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return canvas.getContext('2d');\n};\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\n_ol_dom_.outerWidth = function(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n};\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\n_ol_dom_.outerHeight = function(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n};\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\n_ol_dom_.replaceNode = function(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n};\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\n_ol_dom_.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\n\n/**\n * @param {Node} node The node to remove the children from.\n */\n_ol_dom_.removeChildren = function(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n};\nexport default _ol_dom_;\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\nimport _ol_math_ from './math.js';\nimport _ol_geom_GeometryType_ from './geom/geometrytype.js';\n\n/**\n * @classdesc\n * Class to create objects that can be used with {@link\n * ol.geom.Polygon.circular}.\n *\n * For example to create a sphere whose radius is equal to the semi-major\n * axis of the WGS84 ellipsoid:\n *\n * ```js\n * var wgs84Sphere= new ol.Sphere(6378137);\n * ```\n *\n * @constructor\n * @param {number} radius Radius.\n * @api\n */\nvar _ol_Sphere_ = function(radius) {\n\n  /**\n   * @type {number}\n   */\n  this.radius = radius;\n\n};\n\n\n/**\n * Returns the geodesic area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<ol.Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @return {number} Area.\n * @api\n */\n_ol_Sphere_.prototype.geodesicArea = function(coordinates) {\n  return _ol_Sphere_.getArea_(coordinates, this.radius);\n};\n\n\n/**\n * Returns the distance from c1 to c2 using the haversine formula.\n *\n * @param {ol.Coordinate} c1 Coordinate 1.\n * @param {ol.Coordinate} c2 Coordinate 2.\n * @return {number} Haversine distance.\n * @api\n */\n_ol_Sphere_.prototype.haversineDistance = function(c1, c2) {\n  return _ol_Sphere_.getDistance_(c1, c2, this.radius);\n};\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {ol.Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @return {ol.Coordinate} The target point.\n */\n_ol_Sphere_.prototype.offset = function(c1, distance, bearing) {\n  var lat1 = _ol_math_.toRadians(c1[1]);\n  var lon1 = _ol_math_.toRadians(c1[0]);\n  var dByR = distance / this.radius;\n  var lat = Math.asin(\n      Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [_ol_math_.toDegrees(lon), _ol_math_.toDegrees(lat)];\n};\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\n_ol_Sphere_.DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {ol.geom.Geometry} geometry A geometry.\n * @param {olx.SphereMetricOptions=} opt_options Options for the length\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\n_ol_Sphere_.getLength = function(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || _ol_Sphere_.DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  var type = geometry.getType();\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n    case _ol_geom_GeometryType_.MULTI_POINT: {\n      break;\n    }\n    case _ol_geom_GeometryType_.LINE_STRING:\n    case _ol_geom_GeometryType_.LINEAR_RING: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      length = _ol_Sphere_.getLength_(coordinates, radius);\n      break;\n    }\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n    case _ol_geom_GeometryType_.POLYGON: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += _ol_Sphere_.getLength_(coordinates[i], radius);\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.MULTI_POLYGON: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += _ol_Sphere_.getLength_(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += _ol_Sphere_.getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n};\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\n_ol_Sphere_.getLength_ = function(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += _ol_Sphere_.getDistance_(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n};\n\n\n/**\n * Get the great circle distance between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} radius The sphere radius to use.\n * @return {number} The great circle distance between the points (in meters).\n */\n_ol_Sphere_.getDistance_ = function(c1, c2, radius) {\n  var lat1 = _ol_math_.toRadians(c1[1]);\n  var lat2 = _ol_math_.toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = _ol_math_.toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n};\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {ol.geom.Geometry} geometry A geometry.\n * @param {olx.SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\n_ol_Sphere_.getArea = function(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || _ol_Sphere_.DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  var type = geometry.getType();\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n    case _ol_geom_GeometryType_.MULTI_POINT:\n    case _ol_geom_GeometryType_.LINE_STRING:\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n    case _ol_geom_GeometryType_.LINEAR_RING: {\n      break;\n    }\n    case _ol_geom_GeometryType_.POLYGON: {\n      coordinates = /** @type {ol.geom.Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(_ol_Sphere_.getArea_(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(_ol_Sphere_.getArea_(coordinates[i], radius));\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.MULTI_POLYGON: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(_ol_Sphere_.getArea_(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(_ol_Sphere_.getArea_(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += _ol_Sphere_.getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n};\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<ol.Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\n_ol_Sphere_.getArea_ = function(coordinates, radius) {\n  var area = 0, len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0], y2 = coordinates[i][1];\n    area += _ol_math_.toRadians(x2 - x1) *\n        (2 + Math.sin(_ol_math_.toRadians(y1)) +\n        Math.sin(_ol_math_.toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n};\nexport default _ol_Sphere_;\n","var _ol_proj_proj4_ = {};\n\n\n/**\n * @private\n * @type {Proj4}\n */\n_ol_proj_proj4_.cache_ = null;\n\n\n/**\n * Store the proj4 function.\n * @param {Proj4} proj4 The proj4 function.\n */\n_ol_proj_proj4_.set = function(proj4) {\n  _ol_proj_proj4_.cache_ = proj4;\n};\n\n\n/**\n * Get proj4.\n * @return {Proj4} The proj4 function set above or available globally.\n */\n_ol_proj_proj4_.get = function() {\n  return _ol_proj_proj4_.cache_ || window['proj4'];\n};\nexport default _ol_proj_proj4_;\n","import _ol_ from '../index.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nimport _ol_proj_proj4_ from '../proj/proj4.js';\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link ol.proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link ol.ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link ol.proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link ol.proj.setProj4}.\n *\n * @constructor\n * @param {olx.ProjectionOptions} options Projection options.\n * @struct\n * @api\n */\nvar _ol_proj_Projection_ = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `ol.proj.Units.TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {ol.proj.Units}\n   */\n  this.units_ = /** @type {ol.proj.Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `ol.proj.Units.TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `ol.proj.Units.TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {ol.Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, ol.Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n\n  var code = options.code;\n  if (_ol_.ENABLE_PROJ4JS) {\n    var proj4js = _ol_proj_proj4_.get();\n    if (typeof proj4js == 'function') {\n      var def = proj4js.defs(code);\n      if (def !== undefined) {\n        if (def.axis !== undefined && options.axisOrientation === undefined) {\n          this.axisOrientation_ = def.axis;\n        }\n        if (options.metersPerUnit === undefined) {\n          this.metersPerUnit_ = def.to_meter;\n        }\n        if (options.units === undefined) {\n          this.units_ = def.units;\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\n_ol_proj_Projection_.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\n_ol_proj_Projection_.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_proj_Projection_.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {ol.proj.Units} Units.\n * @api\n */\n_ol_proj_Projection_.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\n_ol_proj_Projection_.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || _ol_proj_Units_.METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_proj_Projection_.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\n_ol_proj_Projection_.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\n_ol_proj_Projection_.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\n_ol_proj_Projection_.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {ol.tilegrid.TileGrid} The default tile grid.\n */\n_ol_proj_Projection_.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {ol.tilegrid.TileGrid} tileGrid The default tile grid.\n */\n_ol_proj_Projection_.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {ol.Extent} extent Extent.\n * @api\n */\n_ol_proj_Projection_.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {ol.Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\n_ol_proj_Projection_.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link ol.proj#getPointResolution}\n * for this projection.\n * @param {function(number, ol.Coordinate):number} func Function\n * @api\n */\n_ol_proj_Projection_.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, ol.Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\n_ol_proj_Projection_.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default _ol_proj_Projection_;\n","import _ol_ from '../index.js';\nimport _ol_math_ from '../math.js';\nimport _ol_proj_Projection_ from '../proj/projection.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nvar _ol_proj_EPSG3857_ = {};\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {ol.proj.Projection}\n * @param {string} code Code.\n * @private\n */\n_ol_proj_EPSG3857_.Projection_ = function(code) {\n  _ol_proj_Projection_.call(this, {\n    code: code,\n    units: _ol_proj_Units_.METERS,\n    extent: _ol_proj_EPSG3857_.EXTENT,\n    global: true,\n    worldExtent: _ol_proj_EPSG3857_.WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / _ol_math_.cosh(point[1] / _ol_proj_EPSG3857_.RADIUS);\n    }\n  });\n};\n_ol_.inherits(_ol_proj_EPSG3857_.Projection_, _ol_proj_Projection_);\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\n_ol_proj_EPSG3857_.RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_proj_EPSG3857_.HALF_SIZE = Math.PI * _ol_proj_EPSG3857_.RADIUS;\n\n\n/**\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG3857_.EXTENT = [\n  -_ol_proj_EPSG3857_.HALF_SIZE, -_ol_proj_EPSG3857_.HALF_SIZE,\n  _ol_proj_EPSG3857_.HALF_SIZE, _ol_proj_EPSG3857_.HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG3857_.WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<ol.proj.Projection>}\n */\n_ol_proj_EPSG3857_.PROJECTIONS = [\n  new _ol_proj_EPSG3857_.Projection_('EPSG:3857'),\n  new _ol_proj_EPSG3857_.Projection_('EPSG:102100'),\n  new _ol_proj_EPSG3857_.Projection_('EPSG:102113'),\n  new _ol_proj_EPSG3857_.Projection_('EPSG:900913'),\n  new _ol_proj_EPSG3857_.Projection_('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new _ol_proj_EPSG3857_.Projection_('urn:ogc:def:crs:EPSG::3857'),\n  new _ol_proj_EPSG3857_.Projection_('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\n_ol_proj_EPSG3857_.fromEPSG4326 = function(input, opt_output, opt_dimension) {\n  var length = input.length,\n      dimension = opt_dimension > 1 ? opt_dimension : 2,\n      output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = _ol_proj_EPSG3857_.HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = _ol_proj_EPSG3857_.RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n};\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\n_ol_proj_EPSG3857_.toEPSG4326 = function(input, opt_output, opt_dimension) {\n  var length = input.length,\n      dimension = opt_dimension > 1 ? opt_dimension : 2,\n      output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / _ol_proj_EPSG3857_.HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n        Math.exp(input[i + 1] / _ol_proj_EPSG3857_.RADIUS)) / Math.PI - 90;\n  }\n  return output;\n};\nexport default _ol_proj_EPSG3857_;\n","import _ol_ from '../index.js';\nimport _ol_proj_Projection_ from '../proj/projection.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nvar _ol_proj_EPSG4326_ = {};\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {ol.proj.Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n * @private\n */\n_ol_proj_EPSG4326_.Projection_ = function(code, opt_axisOrientation) {\n  _ol_proj_Projection_.call(this, {\n    code: code,\n    units: _ol_proj_Units_.DEGREES,\n    extent: _ol_proj_EPSG4326_.EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: _ol_proj_EPSG4326_.METERS_PER_UNIT,\n    worldExtent: _ol_proj_EPSG4326_.EXTENT\n  });\n};\n_ol_.inherits(_ol_proj_EPSG4326_.Projection_, _ol_proj_Projection_);\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG4326_.EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.METERS_PER_UNIT = Math.PI * _ol_proj_EPSG4326_.RADIUS / 180;\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<ol.proj.Projection>}\n */\n_ol_proj_EPSG4326_.PROJECTIONS = [\n  new _ol_proj_EPSG4326_.Projection_('CRS:84'),\n  new _ol_proj_EPSG4326_.Projection_('EPSG:4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:2:84'),\n  new _ol_proj_EPSG4326_.Projection_('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\nexport default _ol_proj_EPSG4326_;\n","var _ol_proj_projections_ = {};\n\n\n/**\n * @private\n * @type {Object.<string, ol.proj.Projection>}\n */\n_ol_proj_projections_.cache_ = {};\n\n\n/**\n * Clear the projections cache.\n */\n_ol_proj_projections_.clear = function() {\n  _ol_proj_projections_.cache_ = {};\n};\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {ol.proj.Projection} The projection (if cached).\n */\n_ol_proj_projections_.get = function(code) {\n  var projections = _ol_proj_projections_.cache_;\n  return projections[code] || null;\n};\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {ol.proj.Projection} projection The projection to cache.\n */\n_ol_proj_projections_.add = function(code, projection) {\n  var projections = _ol_proj_projections_.cache_;\n  projections[code] = projection;\n};\nexport default _ol_proj_projections_;\n","import _ol_obj_ from '../obj.js';\nvar _ol_proj_transforms_ = {};\n\n\n/**\n * @private\n * @type {Object.<string, Object.<string, ol.TransformFunction>>}\n */\n_ol_proj_transforms_.cache_ = {};\n\n\n/**\n * Clear the transform cache.\n */\n_ol_proj_transforms_.clear = function() {\n  _ol_proj_transforms_.cache_ = {};\n};\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {ol.proj.Projection} source Source.\n * @param {ol.proj.Projection} destination Destination.\n * @param {ol.TransformFunction} transformFn Transform.\n */\n_ol_proj_transforms_.add = function(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n};\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {ol.proj.Projection} source Source projection.\n * @param {ol.proj.Projection} destination Destination projection.\n * @return {ol.TransformFunction} transformFn The unregistered transform.\n */\n_ol_proj_transforms_.remove = function(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (_ol_obj_.isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n};\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {ol.TransformFunction|undefined} The transform function (if found).\n */\n_ol_proj_transforms_.get = function(sourceCode, destinationCode) {\n  var transform;\n  var transforms = _ol_proj_transforms_.cache_;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n};\nexport default _ol_proj_transforms_;\n","import _ol_ from './index.js';\nimport _ol_Sphere_ from './sphere.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_math_ from './math.js';\nimport _ol_proj_EPSG3857_ from './proj/epsg3857.js';\nimport _ol_proj_EPSG4326_ from './proj/epsg4326.js';\nimport _ol_proj_Projection_ from './proj/projection.js';\nimport _ol_proj_Units_ from './proj/units.js';\nimport _ol_proj_proj4_ from './proj/proj4.js';\nimport _ol_proj_projections_ from './proj/projections.js';\nimport _ol_proj_transforms_ from './proj/transforms.js';\nvar _ol_proj_ = {};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<ol.proj.Units, number>}\n * @api\n */\n_ol_proj_.METERS_PER_UNIT = _ol_proj_Units_.METERS_PER_UNIT;\n\n\n/**\n * A place to store the mean radius of the Earth.\n * @private\n * @type {ol.Sphere}\n */\n_ol_proj_.SPHERE_ = new _ol_Sphere_(_ol_Sphere_.DEFAULT_RADIUS);\n\n\nif (_ol_.ENABLE_PROJ4JS) {\n  /**\n   * Register proj4. If not explicitly registered, it will be assumed that\n   * proj4js will be loaded in the global namespace. For example in a\n   * browserify ES6 environment you could use:\n   *\n   *     import ol from 'openlayers';\n   *     import proj4 from 'proj4';\n   *     ol.proj.setProj4(proj4);\n   *\n   * @param {Proj4} proj4 Proj4.\n   * @api\n   */\n  _ol_proj_.setProj4 = function(proj4) {\n    _ol_proj_proj4_.set(proj4);\n  };\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link ol.proj.Projection} constructor or by using\n * {@link ol.proj.Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ol.ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {ol.Coordinate} point Point to find adjusted resolution at.\n * @param {ol.proj.Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\n_ol_proj_.getPointResolution = function(projection, resolution, point, opt_units) {\n  projection = _ol_proj_.get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == _ol_proj_Units_.DEGREES && !opt_units || opt_units == _ol_proj_Units_.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = _ol_proj_.getTransformFromProjections(projection, _ol_proj_.get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = _ol_proj_.SPHERE_.haversineDistance(\n          vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = _ol_proj_.SPHERE_.haversineDistance(\n          vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        _ol_proj_Units_.METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n};\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<ol.proj.Projection>} projections Projections.\n * @api\n */\n_ol_proj_.addEquivalentProjections = function(projections) {\n  _ol_proj_.addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        _ol_proj_transforms_.add(source, destination, _ol_proj_.cloneTransform);\n      }\n    });\n  });\n};\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<ol.proj.Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<ol.proj.Projection>} projections2 Projections with equal\n *     meaning.\n * @param {ol.TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {ol.TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\n_ol_proj_.addEquivalentTransforms = function(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      _ol_proj_transforms_.add(projection1, projection2, forwardTransform);\n      _ol_proj_transforms_.add(projection2, projection1, inverseTransform);\n    });\n  });\n};\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {ol.proj.Projection} projection Projection instance.\n * @api\n */\n_ol_proj_.addProjection = function(projection) {\n  _ol_proj_projections_.add(projection.getCode(), projection);\n  _ol_proj_transforms_.add(projection, projection, _ol_proj_.cloneTransform);\n};\n\n\n/**\n * @param {Array.<ol.proj.Projection>} projections Projections.\n */\n_ol_proj_.addProjections = function(projections) {\n  projections.forEach(_ol_proj_.addProjection);\n};\n\n\n/**\n * Clear all cached projections and transforms.\n */\n_ol_proj_.clearAllProjections = function() {\n  _ol_proj_projections_.clear();\n  _ol_proj_transforms_.clear();\n};\n\n\n/**\n * @param {ol.proj.Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {ol.proj.Projection} Projection.\n */\n_ol_proj_.createProjection = function(projection, defaultCode) {\n  if (!projection) {\n    return _ol_proj_.get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return _ol_proj_.get(projection);\n  } else {\n    return /** @type {ol.proj.Projection} */ (projection);\n  }\n};\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ol.ProjectionLike} source Source projection.\n * @param {ol.ProjectionLike} destination Destination projection.\n * @param {function(ol.Coordinate): ol.Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link ol.Coordinate} as argument and returns\n *     the transformed {@link ol.Coordinate}.\n * @param {function(ol.Coordinate): ol.Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link ol.Coordinate} as argument and returns\n *     the transformed {@link ol.Coordinate}.\n * @api\n */\n_ol_proj_.addCoordinateTransforms = function(source, destination, forward, inverse) {\n  var sourceProj = _ol_proj_.get(source);\n  var destProj = _ol_proj_.get(destination);\n  _ol_proj_transforms_.add(sourceProj, destProj,\n      _ol_proj_.createTransformFromCoordinateTransform(forward));\n  _ol_proj_transforms_.add(destProj, sourceProj,\n      _ol_proj_.createTransformFromCoordinateTransform(inverse));\n};\n\n\n/**\n * Creates a {@link ol.TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(ol.Coordinate): ol.Coordinate} transform Coordinate\n *     transform.\n * @return {ol.TransformFunction} Transform function.\n */\n_ol_proj_.createTransformFromCoordinateTransform = function(transform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      var point, i, j;\n      for (i = 0; i < length; i += dimension) {\n        point = transform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n};\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {ol.Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ol.ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {ol.Coordinate} Coordinate projected to the target projection.\n * @api\n */\n_ol_proj_.fromLonLat = function(coordinate, opt_projection) {\n  return _ol_proj_.transform(coordinate, 'EPSG:4326',\n      opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n};\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {ol.Coordinate} coordinate Projected coordinate.\n * @param {ol.ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {ol.Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\n_ol_proj_.toLonLat = function(coordinate, opt_projection) {\n  var lonLat = _ol_proj_.transform(coordinate,\n      opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = _ol_math_.modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n};\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ol.ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {ol.proj.Projection} Projection object, or null if not in list.\n * @api\n */\n_ol_proj_.get = function(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof _ol_proj_Projection_) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = _ol_proj_projections_.get(code);\n    if (_ol_.ENABLE_PROJ4JS && !projection) {\n      var proj4js = _ol_proj_proj4_.get();\n      if (typeof proj4js == 'function' &&\n          proj4js.defs(code) !== undefined) {\n        projection = new _ol_proj_Projection_({code: code});\n        _ol_proj_.addProjection(projection);\n      }\n    }\n  }\n  return projection;\n};\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {ol.proj.Projection} projection1 Projection 1.\n * @param {ol.proj.Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\n_ol_proj_.equivalent = function(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFn = _ol_proj_.getTransformFromProjections(\n        projection1, projection2);\n    return transformFn === _ol_proj_.cloneTransform && equalUnits;\n  }\n};\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ol.ProjectionLike} source Source.\n * @param {ol.ProjectionLike} destination Destination.\n * @return {ol.TransformFunction} Transform function.\n * @api\n */\n_ol_proj_.getTransform = function(source, destination) {\n  var sourceProjection = _ol_proj_.get(source);\n  var destinationProjection = _ol_proj_.get(destination);\n  return _ol_proj_.getTransformFromProjections(\n      sourceProjection, destinationProjection);\n};\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {ol.proj.Projection} sourceProjection Source Projection object.\n * @param {ol.proj.Projection} destinationProjection Destination Projection\n *     object.\n * @return {ol.TransformFunction} Transform function.\n */\n_ol_proj_.getTransformFromProjections = function(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transform = _ol_proj_transforms_.get(sourceCode, destinationCode);\n  if (_ol_.ENABLE_PROJ4JS && !transform) {\n    var proj4js = _ol_proj_proj4_.get();\n    if (typeof proj4js == 'function') {\n      var sourceDef = proj4js.defs(sourceCode);\n      var destinationDef = proj4js.defs(destinationCode);\n\n      if (sourceDef !== undefined && destinationDef !== undefined) {\n        if (sourceDef === destinationDef) {\n          _ol_proj_.addEquivalentProjections([destinationProjection, sourceProjection]);\n        } else {\n          var proj4Transform = proj4js(destinationCode, sourceCode);\n          _ol_proj_.addCoordinateTransforms(destinationProjection, sourceProjection,\n              proj4Transform.forward, proj4Transform.inverse);\n        }\n        transform = _ol_proj_transforms_.get(sourceCode, destinationCode);\n      }\n    }\n  }\n  if (!transform) {\n    transform = _ol_proj_.identityTransform;\n  }\n  return transform;\n};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\n_ol_proj_.identityTransform = function(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\n_ol_proj_.cloneTransform = function(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n};\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link ol.proj.transformExtent} for extent transformation.\n * See the transform method of {@link ol.geom.Geometry} and its subclasses for\n * geometry transforms.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.ProjectionLike} source Source projection-like.\n * @param {ol.ProjectionLike} destination Destination projection-like.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_proj_.transform = function(coordinate, source, destination) {\n  var transformFn = _ol_proj_.getTransform(source, destination);\n  return transformFn(coordinate, undefined, coordinate.length);\n};\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {ol.Extent} extent The extent to transform.\n * @param {ol.ProjectionLike} source Source projection-like.\n * @param {ol.ProjectionLike} destination Destination projection-like.\n * @return {ol.Extent} The transformed extent.\n * @api\n */\n_ol_proj_.transformExtent = function(extent, source, destination) {\n  var transformFn = _ol_proj_.getTransform(source, destination);\n  return _ol_extent_.applyTransform(extent, transformFn);\n};\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {ol.Coordinate} point Point.\n * @param {ol.proj.Projection} sourceProjection Source projection.\n * @param {ol.proj.Projection} destinationProjection Destination projection.\n * @return {ol.Coordinate} Point.\n */\n_ol_proj_.transformWithProjections = function(point, sourceProjection, destinationProjection) {\n  var transformFn = _ol_proj_.getTransformFromProjections(\n      sourceProjection, destinationProjection);\n  return transformFn(point);\n};\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `ol.proj.clearAllProjections()` is called (e.g. in tests).\n */\n_ol_proj_.addCommon = function() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  _ol_proj_.addEquivalentProjections(_ol_proj_EPSG3857_.PROJECTIONS);\n  _ol_proj_.addEquivalentProjections(_ol_proj_EPSG4326_.PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  _ol_proj_.addEquivalentTransforms(\n      _ol_proj_EPSG4326_.PROJECTIONS,\n      _ol_proj_EPSG3857_.PROJECTIONS,\n      _ol_proj_EPSG3857_.fromEPSG4326,\n      _ol_proj_EPSG3857_.toEPSG4326);\n};\n\n_ol_proj_.addCommon();\nexport default _ol_proj_;\n","var _ol_functions_ = {};\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\n_ol_functions_.TRUE = function() {\n  return true;\n};\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\n_ol_functions_.FALSE = function() {\n  return false;\n};\nexport default _ol_functions_;\n","import _ol_ from './index.js';\nimport _ol_ObjectEventType_ from './objecteventtype.js';\nimport _ol_Observable_ from './observable.js';\nimport _ol_events_Event_ from './events/event.js';\nimport _ol_obj_ from './obj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link ol.Observable} with observable properties, where each\n * property is observable as well as the object as a whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link ol.Map} has a `target` property, accessed with `getTarget()`  and\n * changed with `setTarget()`. Not all properties are however settable. There\n * are also general-purpose accessors `get()` and `set()`. For example,\n * `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link ol.View} has a `center`\n * property, so `view.on('change:center', function(evt) {...});` would call the\n * function whenever the value of the center property changes. Within the\n * function, `evt.target` would be the view, so `evt.target.getCenter()` would\n * return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link ol.Object#getProperties object.getProperties()}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {ol.Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires ol.Object.Event\n * @api\n */\nvar _ol_Object_ = function(opt_values) {\n  _ol_Observable_.call(this);\n\n  // Call ol.getUid to ensure that the order of objects' ids is the same as\n  // the order in which they were created.  This also helps to ensure that\n  // object properties are always added in the same order, which helps many\n  // JavaScript engines generate faster code.\n  _ol_.getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\n_ol_.inherits(_ol_Object_, _ol_Observable_);\n\n\n/**\n * @private\n * @type {Object.<string, string>}\n */\n_ol_Object_.changeEventTypeCache_ = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\n_ol_Object_.getChangeEventType = function(key) {\n  return _ol_Object_.changeEventTypeCache_.hasOwnProperty(key) ?\n    _ol_Object_.changeEventTypeCache_[key] :\n    (_ol_Object_.changeEventTypeCache_[key] = 'change:' + key);\n};\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\n_ol_Object_.prototype.get = function(key) {\n  var value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\n_ol_Object_.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\n_ol_Object_.prototype.getProperties = function() {\n  return _ol_obj_.assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\n_ol_Object_.prototype.notify = function(key, oldValue) {\n  var eventType;\n  eventType = _ol_Object_.getChangeEventType(key);\n  this.dispatchEvent(new _ol_Object_.Event(eventType, key, oldValue));\n  eventType = _ol_ObjectEventType_.PROPERTYCHANGE;\n  this.dispatchEvent(new _ol_Object_.Event(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\n_ol_Object_.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    var oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\n_ol_Object_.prototype.setProperties = function(values, opt_silent) {\n  var key;\n  for (key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\n_ol_Object_.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    var oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.Object} instances are instances of this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {ol.events.Event}\n * @implements {oli.Object.Event}\n * @constructor\n */\n_ol_Object_.Event = function(type, key, oldValue) {\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\n_ol_.inherits(_ol_Object_.Event, _ol_events_Event_);\nexport default _ol_Object_;\n","import _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nvar _ol_MapBrowserEventType_ = {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event ol.MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event ol.MapBrowserEvent#click\n   * @api\n   */\n  CLICK: _ol_events_EventType_.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event ol.MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: _ol_events_EventType_.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event ol.MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event ol.MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\nexport default _ol_MapBrowserEventType_;\n","import _ol_ from './index.js';\nimport _ol_webgl_ from './webgl.js';\nvar _ol_has_ = {};\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\n_ol_has_.FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\n_ol_has_.SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\n_ol_has_.WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\n_ol_has_.MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\n_ol_has_.DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\n_ol_has_.CANVAS_LINE_DASH = false;\n\n\n/**\n * True if both the library and browser support Canvas.  Always `false`\n * if `ol.ENABLE_CANVAS` is set to `false` at compile time.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.CANVAS = _ol_.ENABLE_CANVAS && (\n  /**\n   * @return {boolean} Canvas supported.\n   */\n  function() {\n    if (!('HTMLCanvasElement' in window)) {\n      return false;\n    }\n    try {\n      var context = document.createElement('CANVAS').getContext('2d');\n      if (!context) {\n        return false;\n      } else {\n        if (context.setLineDash !== undefined) {\n          _ol_has_.CANVAS_LINE_DASH = true;\n        }\n        return true;\n      }\n    } catch (e) {\n      return false;\n    }\n  })();\n\n\n/**\n * Indicates if DeviceOrientation is supported in the user's browser.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.DEVICE_ORIENTATION = 'DeviceOrientationEvent' in window;\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.TOUCH = _ol_.ASSUME_TOUCH || 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\n_ol_has_.POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\n_ol_has_.MSPOINTER = !!(navigator.msPointerEnabled);\n\n\n/**\n * True if both OpenLayers and browser support WebGL.  Always `false`\n * if `ol.ENABLE_WEBGL` is set to `false` at compile time.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.WEBGL;\n\n\n(function() {\n  if (_ol_.ENABLE_WEBGL) {\n    var hasWebGL = false;\n    var textureSize;\n    var /** @type {Array.<string>} */ extensions = [];\n\n    if ('WebGLRenderingContext' in window) {\n      try {\n        var canvas = /** @type {HTMLCanvasElement} */\n            (document.createElement('CANVAS'));\n        var gl = _ol_webgl_.getContext(canvas, {\n          failIfMajorPerformanceCaveat: true\n        });\n        if (gl) {\n          hasWebGL = true;\n          textureSize = /** @type {number} */\n            (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n          extensions = gl.getSupportedExtensions();\n        }\n      } catch (e) {\n        // pass\n      }\n    }\n    _ol_has_.WEBGL = hasWebGL;\n    _ol_.WEBGL_EXTENSIONS = extensions;\n    _ol_.WEBGL_MAX_TEXTURE_SIZE = textureSize;\n  }\n})();\nexport default _ol_has_;\n","/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link ol.events.EventTarget}.\n *\n * @constructor\n * @implements {oli.events.Event}\n * @param {string} type Type.\n */\nvar _ol_events_Event_ = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @override\n * @api\n */\n_ol_events_Event_.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @override\n   * @api\n   */\n  _ol_events_Event_.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|ol.events.Event} evt Event\n */\n_ol_events_Event_.stopPropagation = function(evt) {\n  evt.stopPropagation();\n};\n\n\n/**\n * @param {Event|ol.events.Event} evt Event\n */\n_ol_events_Event_.preventDefault = function(evt) {\n  evt.preventDefault();\n};\nexport default _ol_events_Event_;\n","var _ol_geom_flat_transform_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.transform2D = function(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  var j;\n  for (j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.rotate = function(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.scale = function(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.translate = function(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  var j, k;\n  for (j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\nexport default _ol_geom_flat_transform_;\n","/**\n * @enum {string}\n */\nvar _ol_layer_Property_ = {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\nexport default _ol_layer_Property_;\n","/**\n * An implementation of Google Maps' MVCArray.\n * @see https://developers.google.com/maps/documentation/javascript/reference\n */\n\nimport _ol_ from './index.js';\nimport _ol_AssertionError_ from './assertionerror.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_Object_ from './object.js';\nimport _ol_events_Event_ from './events/event.js';\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {ol.Object}\n * @fires ol.Collection.Event\n * @param {Array.<T>=} opt_array Array.\n * @param {olx.CollectionOptions=} opt_options Collection options.\n * @template T\n * @api\n */\nvar _ol_Collection_ = function(opt_array, opt_options) {\n\n  _ol_Object_.call(this);\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\n_ol_.inherits(_ol_Collection_, _ol_Object_);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\n_ol_Collection_.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {ol.Collection.<T>} This collection.\n * @api\n */\n_ol_Collection_.prototype.extend = function(arr) {\n  var i, ii;\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(this: S, T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n * @api\n */\n_ol_Collection_.prototype.forEach = function(f, opt_this) {\n  var fn = (opt_this) ? f.bind(opt_this) : f;\n  var array = this.array_;\n  for (var i = 0, ii = array.length; i < ii; ++i) {\n    fn(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\n_ol_Collection_.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\n_ol_Collection_.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\n_ol_Collection_.prototype.getLength = function() {\n  return (\n    /** @type {number} */ this.get(_ol_Collection_.Property_.LENGTH)\n  );\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n_ol_Collection_.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n      new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\n_ol_Collection_.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\n_ol_Collection_.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  var n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\n_ol_Collection_.prototype.remove = function(elem) {\n  var arr = this.array_;\n  var i, ii;\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\n_ol_Collection_.prototype.removeAt = function(index) {\n  var prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(\n      new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n_ol_Collection_.prototype.setAt = function(index, elem) {\n  var n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    var prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n        new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n    this.dispatchEvent(\n        new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n  } else {\n    var j;\n    for (j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\n_ol_Collection_.prototype.updateLength_ = function() {\n  this.set(_ol_Collection_.Property_.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\n_ol_Collection_.prototype.assertUnique_ = function(elem, opt_except) {\n  for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new _ol_AssertionError_(58);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_Collection_.Property_ = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.Collection.Event}\n * @param {ol.CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\n_ol_Collection_.Event = function(type, opt_element) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n_ol_.inherits(_ol_Collection_.Event, _ol_events_Event_);\nexport default _ol_Collection_;\n","/**\n * @enum {number}\n */\nvar _ol_ImageState_ = {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\nexport default _ol_ImageState_;\n","/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nvar _ol_geom_GeometryLayout_ = {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\nexport default _ol_geom_GeometryLayout_;\n","/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nvar _ol_LayerType_ = {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\nexport default _ol_LayerType_;\n","var _ol_easing_ = {};\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.easeIn = function(t) {\n  return Math.pow(t, 3);\n};\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.easeOut = function(t) {\n  return 1 - _ol_easing_.easeIn(1 - t);\n};\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.inAndOut = function(t) {\n  return 3 * t * t - 2 * t * t * t;\n};\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.linear = function(t) {\n  return t;\n};\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link ol.easing.inAndOut}, but the final slowdown\n * is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.upAndDown = function(t) {\n  if (t < 0.5) {\n    return _ol_easing_.inAndOut(2 * t);\n  } else {\n    return 1 - _ol_easing_.inAndOut(2 * (t - 0.5));\n  }\n};\nexport default _ol_easing_;\n","import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_Event_ from '../events/event.js';\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {ol.Disposable}\n */\nvar _ol_events_EventTarget_ = function() {\n\n  _ol_Disposable_.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<ol.EventsListenerFunctionType>>}\n   */\n  this.listeners_ = {};\n\n};\n\n_ol_.inherits(_ol_events_EventTarget_, _ol_Disposable_);\n\n\n/**\n * @param {string} type Type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n */\n_ol_events_EventTarget_.prototype.addEventListener = function(type, listener) {\n  var listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|ol.events.EventTarget|undefined)}|ol.events.Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\n_ol_events_EventTarget_.prototype.dispatchEvent = function(event) {\n  var evt = typeof event === 'string' ? new _ol_events_Event_(event) : event;\n  var type = evt.type;\n  evt.target = this;\n  var listeners = this.listeners_[type];\n  var propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      var pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, _ol_.nullFunction);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_events_EventTarget_.prototype.disposeInternal = function() {\n  _ol_events_.unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<ol.EventsListenerFunctionType>} Listeners.\n */\n_ol_events_EventTarget_.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\n_ol_events_EventTarget_.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n */\n_ol_events_EventTarget_.prototype.removeEventListener = function(type, listener) {\n  var listeners = this.listeners_[type];\n  if (listeners) {\n    var index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = _ol_.nullFunction;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default _ol_events_EventTarget_;\n","/**\n * Relationship to an extent.\n * @enum {number}\n */\nvar _ol_extent_Relationship_ = {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\nexport default _ol_extent_Relationship_;\n","/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar _ol_proj_Units_ = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<ol.proj.Units, number>}\n * @api\n */\n_ol_proj_Units_.METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES] =\n    2 * Math.PI * 6370997 / 360;\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.FEET] = 0.3048;\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.METERS] = 1;\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.USFEET] = 1200 / 3937;\nexport default _ol_proj_Units_;\n","var _ol_css_ = {};\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_CONTROL = 'ol-control';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\n_ol_css_.getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\nexport default _ol_css_;\n","import _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_layer_Base_ from '../layer/base.js';\nimport _ol_layer_Property_ from '../layer/property.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_render_EventType_ from '../render/eventtype.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link ol.Map#addLayer}. Components\n * like {@link ol.interaction.Select} use unmanaged layers internally. These\n * unmanaged layers are associated with the map using\n * {@link ol.layer.Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {ol.layer.Base}\n * @fires ol.render.Event\n * @param {olx.layer.LayerOptions} options Layer options.\n * @api\n */\nvar _ol_layer_Layer_ = function(options) {\n\n  var baseOptions = _ol_obj_.assign({}, options);\n  delete baseOptions.source;\n\n  _ol_layer_Base_.call(this, /** @type {olx.layer.BaseOptions} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  _ol_events_.listen(this,\n      _ol_Object_.getChangeEventType(_ol_layer_Property_.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n  var source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\n_ol_.inherits(_ol_layer_Layer_, _ol_layer_Base_);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {ol.LayerState} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\n_ol_layer_Layer_.visibleAtResolution = function(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Layer_.prototype.getLayersArray = function(opt_array) {\n  var array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Layer_.prototype.getLayerStatesArray = function(opt_states) {\n  var states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {ol.source.Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\n_ol_layer_Layer_.prototype.getSource = function() {\n  var source = this.get(_ol_layer_Property_.SOURCE);\n  return /** @type {ol.source.Source} */ (source) || null;\n};\n\n\n/**\n  * @inheritDoc\n  */\n_ol_layer_Layer_.prototype.getSourceState = function() {\n  var source = this.getSource();\n  return !source ? _ol_source_State_.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\n_ol_layer_Layer_.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\n_ol_layer_Layer_.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    _ol_events_.unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  var source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = _ol_events_.listen(source,\n        _ol_events_EventType_.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link ol.Map#addLayer} instead.\n * @param {ol.PluggableMap} map Map.\n * @api\n */\n_ol_layer_Layer_.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    _ol_events_.unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    _ol_events_.unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = _ol_events_.listen(\n        map, _ol_render_EventType_.PRECOMPOSE, function(evt) {\n          var layerState = this.getLayerState();\n          layerState.managed = false;\n          layerState.zIndex = Infinity;\n          evt.frameState.layerStatesArray.push(layerState);\n          evt.frameState.layerStates[_ol_.getUid(this)] = layerState;\n        }, this);\n    this.mapRenderKey_ = _ol_events_.listen(\n        this, _ol_events_EventType_.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {ol.source.Source} source The layer source.\n * @observable\n * @api\n */\n_ol_layer_Layer_.prototype.setSource = function(source) {\n  this.set(_ol_layer_Property_.SOURCE, source);\n};\nexport default _ol_layer_Layer_;\n","/**\n * @enum {string}\n */\nvar _ol_CollectionEventType_ = {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event ol.Collection.Event#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event ol.Collection.Event#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\nexport default _ol_CollectionEventType_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_math_ from './math.js';\nvar _ol_color_ = {};\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\n_ol_color_.HEX_COLOR_RE_ = /^#(?:[0-9a-f]{3,4}){1,2}$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\n_ol_color_.NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {ol.Color|string} color Color.\n * @return {ol.Color} Color.\n * @api\n */\n_ol_color_.asArray = function(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return _ol_color_.fromString(/** @type {string} */ (color));\n  }\n};\n\n\n/**\n * Return the color as an rgba string.\n * @param {ol.Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\n_ol_color_.asString = function(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return _ol_color_.toString(color);\n  }\n};\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\n_ol_color_.fromNamed = function(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  document.body.appendChild(el);\n  var rgb = getComputedStyle(el).color;\n  document.body.removeChild(el);\n  return rgb;\n};\n\n\n/**\n * @param {string} s String.\n * @return {ol.Color} Color.\n */\n_ol_color_.fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, ol.Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {ol.Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            var key;\n            for (key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = _ol_color_.fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n\n/**\n * @param {string} s String.\n * @private\n * @return {ol.Color} Color.\n */\n_ol_color_.fromStringInternal_ = function(s) {\n  var r, g, b, a, color, parts;\n\n  if (_ol_color_.NAMED_COLOR_RE_.exec(s)) {\n    s = _ol_color_.fromNamed(s);\n  }\n\n  if (_ol_color_.HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    parts = s.slice(5, -1).split(',').map(Number);\n    color = _ol_color_.normalize(parts);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    parts = s.slice(4, -1).split(',').map(Number);\n    parts.push(1);\n    color = _ol_color_.normalize(parts);\n  } else {\n    _ol_asserts_.assert(false, 14); // Invalid color\n  }\n  return /** @type {ol.Color} */ (color);\n};\n\n\n/**\n * @param {ol.Color} color Color.\n * @param {ol.Color=} opt_color Color.\n * @return {ol.Color} Clamped color.\n */\n_ol_color_.normalize = function(color, opt_color) {\n  var result = opt_color || [];\n  result[0] = _ol_math_.clamp((color[0] + 0.5) | 0, 0, 255);\n  result[1] = _ol_math_.clamp((color[1] + 0.5) | 0, 0, 255);\n  result[2] = _ol_math_.clamp((color[2] + 0.5) | 0, 0, 255);\n  result[3] = _ol_math_.clamp(color[3], 0, 1);\n  return result;\n};\n\n\n/**\n * @param {ol.Color} color Color.\n * @return {string} String.\n */\n_ol_color_.toString = function(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n};\nexport default _ol_color_;\n","/**\n * @enum {string}\n */\nvar _ol_render_EventType_ = {\n  /**\n   * @event ol.render.Event#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event ol.render.Event#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event ol.render.Event#render\n   * @api\n   */\n  RENDER: 'render'\n};\n\nexport default _ol_render_EventType_;\n","import _ol_color_ from './color.js';\nvar _ol_colorlike_ = {};\n\n\n/**\n * @param {ol.Color|ol.ColorLike} color Color.\n * @return {ol.ColorLike} The color as an ol.ColorLike\n * @api\n */\n_ol_colorlike_.asColorLike = function(color) {\n  if (_ol_colorlike_.isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return _ol_color_.asString(/** @type {ol.Color} */ (color));\n  }\n};\n\n\n/**\n * @param {?} color The value that is potentially an ol.ColorLike\n * @return {boolean} Whether the color is an ol.ColorLike\n */\n_ol_colorlike_.isColorLike = function(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n};\nexport default _ol_colorlike_;\n","var _ol_tilecoord_ = {};\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {ol.TileCoord=} opt_tileCoord Tile coordinate.\n * @return {ol.TileCoord} Tile coordinate.\n */\n_ol_tilecoord_.createOrUpdate = function(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\n_ol_tilecoord_.getKeyZXY = function(z, x, y) {\n  return z + '/' + x + '/' + y;\n};\n\n\n/**\n * Get the key for a tile coord.\n * @param {ol.TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\n_ol_tilecoord_.getKey = function(tileCoord) {\n  return _ol_tilecoord_.getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {ol.TileCoord} The tile coord.\n */\n_ol_tilecoord_.fromKey = function(key) {\n  return key.split('/').map(Number);\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\n_ol_tilecoord_.hash = function(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\n_ol_tilecoord_.quadKey = function(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {!ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\n_ol_tilecoord_.withinExtentAndZ = function(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n};\nexport default _ol_tilecoord_;\n","var _ol_size_ = {};\n\n\n/**\n * Returns a buffered size.\n * @param {ol.Size} size Size.\n * @param {number} buffer Buffer.\n * @param {ol.Size=} opt_size Optional reusable size array.\n * @return {ol.Size} The buffered size.\n */\n_ol_size_.buffer = function(size, buffer, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * buffer;\n  opt_size[1] = size[1] + 2 * buffer;\n  return opt_size;\n};\n\n\n/**\n * Determines if a size has a positive area.\n * @param {ol.Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\n_ol_size_.hasArea = function(size) {\n  return size[0] > 0 && size[1] > 0;\n};\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {ol.Size} size Size.\n * @param {number} ratio Ratio.\n * @param {ol.Size=} opt_size Optional reusable size array.\n * @return {ol.Size} The scaled size.\n */\n_ol_size_.scale = function(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n};\n\n\n/**\n * Returns an `ol.Size` array for the passed in number (meaning: square) or\n * `ol.Size` array.\n * (meaning: non-square),\n * @param {number|ol.Size} size Width and height.\n * @param {ol.Size=} opt_size Optional reusable size array.\n * @return {ol.Size} Size.\n * @api\n */\n_ol_size_.toSize = function(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n};\nexport default _ol_size_;\n","/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nvar _ol_source_State_ = {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\nexport default _ol_source_State_;\n\n","import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {ol.geom.Geometry}\n * @api\n */\nvar _ol_geom_SimpleGeometry_ = function() {\n\n  _ol_geom_Geometry_.call(this);\n\n  /**\n   * @protected\n   * @type {ol.geom.GeometryLayout}\n   */\n  this.layout = _ol_geom_GeometryLayout_.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\n_ol_.inherits(_ol_geom_SimpleGeometry_, _ol_geom_Geometry_);\n\n\n/**\n * @param {number} stride Stride.\n * @private\n * @return {ol.geom.GeometryLayout} layout Layout.\n */\n_ol_geom_SimpleGeometry_.getLayoutForStride_ = function(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = _ol_geom_GeometryLayout_.XY;\n  } else if (stride == 3) {\n    layout = _ol_geom_GeometryLayout_.XYZ;\n  } else if (stride == 4) {\n    layout = _ol_geom_GeometryLayout_.XYZM;\n  }\n  return /** @type {ol.geom.GeometryLayout} */ (layout);\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.getStrideForLayout = function(layout) {\n  var stride;\n  if (layout == _ol_geom_GeometryLayout_.XY) {\n    stride = 2;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZ || layout == _ol_geom_GeometryLayout_.XYM) {\n    stride = 3;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.containsXY = _ol_functions_.FALSE;\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.computeExtent = function(extent) {\n  return _ol_extent_.createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {ol.Coordinate} First coordinate.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {ol.Coordinate} Last point.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link ol.geom.GeometryLayout layout} of the geometry.\n * @return {ol.geom.GeometryLayout} Layout.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.SimpleGeometry} Simplified geometry.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n */\n_ol_geom_SimpleGeometry_.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  var stride;\n  if (layout) {\n    stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  } else {\n    var i;\n    for (i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = _ol_geom_GeometryLayout_.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = _ol_geom_SimpleGeometry_.getLayoutForStride_(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.rotate = function(angle, anchor) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = _ol_extent_.getCenter(this.getExtent());\n  }\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.translate = function(deltaX, deltaY) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} simpleGeometry Simple geometry.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\n_ol_geom_SimpleGeometry_.transform2D = function(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return _ol_geom_flat_transform_.transform2D(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        transform, opt_dest);\n  }\n};\nexport default _ol_geom_SimpleGeometry_;\n","var _ol_string_ = {};\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n*/\n_ol_string_.padNumber = function(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n};\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\n_ol_string_.compareVersions = function(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n};\nexport default _ol_string_;\n","import _ol_math_ from './math.js';\nimport _ol_string_ from './string.js';\nvar _ol_coordinate_ = {};\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     var coord = [7.85, 47.983333];\n *     ol.coordinate.add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Coordinate} delta Delta.\n * @return {ol.Coordinate} The input coordinate adjusted by the given delta.\n * @api\n */\n_ol_coordinate_.add = function(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n};\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {ol.Coordinate} coordinate The coordinate.\n * @param {ol.geom.Circle} circle The circle.\n * @return {ol.Coordinate} Closest point on the circumference\n */\n_ol_coordinate_.closestOnCircle = function(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x, y;\n\n  x = x0 + r * dx / d;\n  y = y0 + r * dy / d;\n\n  return [x, y];\n};\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {ol.Coordinate} coordinate The coordinate.\n * @param {Array.<ol.Coordinate>} segment The two coordinates of the segment.\n * @return {ol.Coordinate} The foot of the perpendicular of the coordinate to\n *     the segment.\n */\n_ol_coordinate_.closestOnSegment = function(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n};\n\n\n/**\n * Returns a {@link ol.CoordinateFormatType} function that can be used to format\n * a {ol.Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = ol.coordinate.createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = ol.coordinate.createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {ol.CoordinateFormatType} Coordinate format.\n * @api\n */\n_ol_coordinate_.createStringXY = function(opt_fractionDigits) {\n  return (\n    /**\n     * @param {ol.Coordinate|undefined} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return _ol_coordinate_.toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n};\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\n_ol_coordinate_.degreesToStringHDMS = function(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = _ol_math_.modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + _ol_string_.padNumber(min, 2) + '\\u2032 ' +\n    _ol_string_.padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n};\n\n\n/**\n * Transforms the given {@link ol.Coordinate} to a string using the given string\n * template. The strings `{x}` and `{y}` in the template will be replaced with\n * the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = ol.coordinate.format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = ol.coordinate.format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {ol.Coordinate|undefined} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\n_ol_coordinate_.format = function(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n        .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n        .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate1 First coordinate.\n * @param {ol.Coordinate} coordinate2 Second coordinate.\n * @return {boolean} Whether the passed coordinates are equal.\n */\n_ol_coordinate_.equals = function(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n};\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     ol.coordinate.rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_coordinate_.rotate = function(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n};\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     ol.coordinate.scale(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {ol.Coordinate} Coordinate.\n */\n_ol_coordinate_.scale = function(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n};\n\n\n/**\n * Subtract `delta` to `coordinate`. `coordinate` is modified in place and\n * returned by the function.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Coordinate} delta Delta.\n * @return {ol.Coordinate} Coordinate.\n */\n_ol_coordinate_.sub = function(coordinate, delta) {\n  coordinate[0] -= delta[0];\n  coordinate[1] -= delta[1];\n  return coordinate;\n};\n\n\n/**\n * @param {ol.Coordinate} coord1 First coordinate.\n * @param {ol.Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\n_ol_coordinate_.squaredDistance = function(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @param {ol.Coordinate} coord1 First coordinate.\n * @param {ol.Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\n_ol_coordinate_.distance = function(coord1, coord2) {\n  return Math.sqrt(_ol_coordinate_.squaredDistance(coord1, coord2));\n};\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {ol.Coordinate} coordinate Coordinate of the point.\n * @param {Array.<ol.Coordinate>} segment Line segment (2 coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\n_ol_coordinate_.squaredDistanceToSegment = function(coordinate, segment) {\n  return _ol_coordinate_.squaredDistance(coordinate,\n      _ol_coordinate_.closestOnSegment(coordinate, segment));\n};\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {ol.Coordinate|undefined} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\n_ol_coordinate_.toStringHDMS = function(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return _ol_coordinate_.degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        _ol_coordinate_.degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n};\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {ol.Coordinate|undefined} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\n_ol_coordinate_.toStringXY = function(coordinate, opt_fractionDigits) {\n  return _ol_coordinate_.format(coordinate, '{x}, {y}', opt_fractionDigits);\n};\nexport default _ol_coordinate_;\n","import _ol_extent_ from '../../extent.js';\nvar _ol_geom_flat_contains_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\n_ol_geom_flat_contains_.linearRingContainsExtent = function(flatCoordinates, offset, end, stride, extent) {\n  var outside = _ol_extent_.forEachCorner(extent,\n      /**\n       * @param {ol.Coordinate} coordinate Coordinate.\n       * @return {boolean} Contains (x, y).\n       */\n      function(coordinate) {\n        return !_ol_geom_flat_contains_.linearRingContainsXY(flatCoordinates,\n            offset, end, stride, coordinate[0], coordinate[1]);\n      });\n  return !outside;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_flat_contains_.linearRingContainsXY = function(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_flat_contains_.linearRingsContainsXY = function(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  var i, ii;\n  for (i = 1, ii = ends.length; i < ii; ++i) {\n    if (_ol_geom_flat_contains_.linearRingContainsXY(\n        flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_flat_contains_.linearRingssContainsXY = function(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (_ol_geom_flat_contains_.linearRingsContainsXY(\n        flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n};\nexport default _ol_geom_flat_contains_;\n","/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nvar _ol_TileRange_ = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {ol.TileRange|undefined} tileRange TileRange.\n * @return {ol.TileRange} Tile range.\n */\n_ol_TileRange_.createOrUpdate = function(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new _ol_TileRange_(minX, maxX, minY, maxY);\n  }\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\n_ol_TileRange_.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\n_ol_TileRange_.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\n_ol_TileRange_.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\n_ol_TileRange_.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n */\n_ol_TileRange_.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\n_ol_TileRange_.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {ol.Size} Size.\n */\n_ol_TileRange_.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\n_ol_TileRange_.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\n_ol_TileRange_.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default _ol_TileRange_;\n","import _ol_ from '../index.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_TileRange_ from '../tilerange.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_math_ from '../math.js';\nimport _ol_size_ from '../size.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {olx.tilegrid.TileGridOptions} options Tile grid options.\n * @struct\n * @api\n */\nvar _ol_tilegrid_TileGrid_ = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  _ol_asserts_.assert(_ol_array_.isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<ol.Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    _ol_asserts_.assert(this.origins_.length == this.resolutions_.length,\n        20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = _ol_extent_.getTopLeft(extent);\n  }\n\n  _ol_asserts_.assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|ol.Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    _ol_asserts_.assert(this.tileSizes_.length == this.resolutions_.length,\n        19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|ol.Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? _ol_.DEFAULT_TILE_SIZE : null;\n  _ol_asserts_.assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<ol.TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new _ol_TileRange_(\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {ol.TileCoord}\n */\n_ol_tilegrid_TileGrid_.tmpTileCoord_ = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {ol.Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(ol.TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, ol.TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {ol.TileRange=} opt_tileRange Temporary ol.TileRange object.\n * @param {ol.Extent=} opt_extent Temporary ol.Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\n_ol_tilegrid_TileGrid_.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = _ol_TileRange_.createOrUpdate(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {ol.Extent} Extent.\n */\n_ol_tilegrid_TileGrid_.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {ol.Coordinate} Origin.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileRange=} opt_tileRange Temporary ol.TileRange object.\n * @param {ol.Extent=} opt_extent Temporary ol.Extent object.\n * @return {ol.TileRange} Tile range.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return _ol_TileRange_.createOrUpdate(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {ol.TileRange} tileRange Tile range.\n * @param {ol.Extent=} opt_extent Temporary ol.Extent object.\n * @return {ol.Extent} Extent.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = _ol_size_.toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return _ol_extent_.createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {ol.Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {ol.TileRange=} opt_tileRange Temporary tile range object.\n * @return {ol.TileRange} Tile range.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  var tileCoord = _ol_tilegrid_TileGrid_.tmpTileCoord_;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return _ol_TileRange_.createOrUpdate(\n      minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {ol.Coordinate} Tile center.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordCenter = function(tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = _ol_size_.toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Extent=} opt_extent Temporary extent object.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = _ol_size_.toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return _ol_extent_.createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.TileCoord=} opt_tileCoord Destination ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {ol.TileCoord=} opt_tileCoord Temporary ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @private\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForXYAndResolution_ = function(\n    x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = _ol_size_.toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return _ol_tilecoord_.createOrUpdate(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {ol.TileCoord=} opt_tileCoord Temporary ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @private\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = _ol_size_.toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return _ol_tilecoord_.createOrUpdate(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {ol.TileCoord=} opt_tileCoord Destination ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `ol.Size`, run the result through `ol.size.toSize()`.\n * @param {number} z Z.\n * @return {number|ol.Size} Tile size.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {ol.TileRange} Extent tile range for the specified zoom level.\n */\n_ol_tilegrid_TileGrid_.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getZForResolution = function(\n    resolution, opt_direction) {\n  var z = _ol_array_.linearFindNearest(this.resolutions_, resolution,\n      opt_direction || 0);\n  return _ol_math_.clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!ol.Extent} extent Extent for this tile grid.\n * @private\n */\n_ol_tilegrid_TileGrid_.prototype.calculateTileRanges_ = function(extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default _ol_tilegrid_TileGrid_;\n","import _ol_ from './index.js';\nimport _ol_size_ from './size.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_extent_Corner_ from './extent/corner.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_proj_ from './proj.js';\nimport _ol_proj_Units_ from './proj/units.js';\nimport _ol_tilegrid_TileGrid_ from './tilegrid/tilegrid.js';\nvar _ol_tilegrid_ = {};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {!ol.tilegrid.TileGrid} Default tile grid for the passed projection.\n */\n_ol_tilegrid_.getForProjection = function(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = _ol_tilegrid_.createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n};\n\n\n/**\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.TileCoord} Tile coordinate.\n */\n_ol_tilegrid_.wrapX = function(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = _ol_tilegrid_.extentFromProjection(projection);\n  if (!_ol_extent_.containsCoordinate(projectionExtent, center)) {\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     ol.DEFAULT_MAX_ZOOM).\n * @param {number|ol.Size=} opt_tileSize Tile size (default uses\n *     ol.DEFAULT_TILE_SIZE).\n * @param {ol.extent.Corner=} opt_corner Extent corner (default is\n *     ol.extent.Corner.TOP_LEFT).\n * @return {!ol.tilegrid.TileGrid} TileGrid instance.\n */\n_ol_tilegrid_.createForExtent = function(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ?\n    opt_corner : _ol_extent_Corner_.TOP_LEFT;\n\n  var resolutions = _ol_tilegrid_.resolutionsFromExtent(\n      extent, opt_maxZoom, opt_tileSize);\n\n  return new _ol_tilegrid_TileGrid_({\n    extent: extent,\n    origin: _ol_extent_.getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n};\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {olx.tilegrid.XYZOptions=} opt_options Tile grid options.\n * @return {!ol.tilegrid.TileGrid} Tile grid instance.\n * @api\n */\n_ol_tilegrid_.createXYZ = function(opt_options) {\n  var options = /** @type {olx.tilegrid.TileGridOptions} */ ({});\n  _ol_obj_.assign(options, opt_options !== undefined ?\n    opt_options : /** @type {olx.tilegrid.XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = _ol_proj_.get('EPSG:3857').getExtent();\n  }\n  options.resolutions = _ol_tilegrid_.resolutionsFromExtent(\n      options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new _ol_tilegrid_TileGrid_(options);\n};\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {ol.Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     ol.DEFAULT_MAX_ZOOM).\n * @param {number|ol.Size=} opt_tileSize Tile size (default uses\n *     ol.DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\n_ol_tilegrid_.resolutionsFromExtent = function(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : _ol_.DEFAULT_MAX_ZOOM;\n\n  var height = _ol_extent_.getHeight(extent);\n  var width = _ol_extent_.getWidth(extent);\n\n  var tileSize = _ol_size_.toSize(opt_tileSize !== undefined ?\n    opt_tileSize : _ol_.DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n      width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n};\n\n\n/**\n * @param {ol.ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     ol.DEFAULT_MAX_ZOOM).\n * @param {number|ol.Size=} opt_tileSize Tile size (default uses\n *     ol.DEFAULT_TILE_SIZE).\n * @param {ol.extent.Corner=} opt_corner Extent corner (default is\n *     ol.extent.Corner.BOTTOM_LEFT).\n * @return {!ol.tilegrid.TileGrid} TileGrid instance.\n */\n_ol_tilegrid_.createForProjection = function(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = _ol_tilegrid_.extentFromProjection(projection);\n  return _ol_tilegrid_.createForExtent(\n      extent, opt_maxZoom, opt_tileSize, opt_corner);\n};\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {ol.ProjectionLike} projection Projection.\n * @return {ol.Extent} Extent.\n */\n_ol_tilegrid_.extentFromProjection = function(projection) {\n  projection = _ol_proj_.get(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * _ol_proj_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES] /\n        projection.getMetersPerUnit();\n    extent = _ol_extent_.createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n};\nexport default _ol_tilegrid_;\n","import _ol_ from './index.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nvar _ol_Disposable_ = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\n_ol_Disposable_.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\n_ol_Disposable_.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\n_ol_Disposable_.prototype.disposeInternal = _ol_.nullFunction;\nexport default _ol_Disposable_;\n","/**\n * @enum {string}\n */\nvar _ol_ObjectEventType_ = {\n  /**\n   * Triggered when a property is changed.\n   * @event ol.Object.Event#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\nexport default _ol_ObjectEventType_;\n","var _ol_geom_flat_reverse_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_geom_flat_reverse_.coordinates = function(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    var i;\n    for (i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n};\nexport default _ol_geom_flat_reverse_;\n","import _ol_geom_flat_reverse_ from '../flat/reverse.js';\nvar _ol_geom_flat_orient_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\n_ol_geom_flat_orient_.linearRingIsClockwise = function(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n};\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\n_ol_geom_flat_orient_.linearRingsAreOriented = function(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = _ol_geom_flat_orient_.linearRingIsClockwise(\n        flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n};\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\n_ol_geom_flat_orient_.linearRingssAreOriented = function(flatCoordinates, offset, endss, stride, opt_right) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    if (!_ol_geom_flat_orient_.linearRingsAreOriented(\n        flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\n_ol_geom_flat_orient_.orientLinearRings = function(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = _ol_geom_flat_orient_.linearRingIsClockwise(\n        flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      _ol_geom_flat_reverse_.coordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\n_ol_geom_flat_orient_.orientLinearRingss = function(flatCoordinates, offset, endss, stride, opt_right) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    offset = _ol_geom_flat_orient_.orientLinearRings(\n        flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n};\nexport default _ol_geom_flat_orient_;\n","import _ol_math_ from './math.js';\nvar _ol_RotationConstraint_ = {};\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n_ol_RotationConstraint_.disable = function(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n_ol_RotationConstraint_.none = function(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {number} n N.\n * @return {ol.RotationConstraintType} Rotation constraint.\n */\n_ol_RotationConstraint_.createSnapToN = function(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n};\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {ol.RotationConstraintType} Rotation constraint.\n */\n_ol_RotationConstraint_.createSnapToZero = function(opt_tolerance) {\n  var tolerance = opt_tolerance || _ol_math_.toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n};\nexport default _ol_RotationConstraint_;\n","import _ol_ from './index.js';\nimport _ol_MapBrowserEvent_ from './mapbrowserevent.js';\n\n/**\n * @constructor\n * @extends {ol.MapBrowserEvent}\n * @param {string} type Event type.\n * @param {ol.PluggableMap} map Map.\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?olx.FrameState=} opt_frameState Frame state.\n */\nvar _ol_MapBrowserPointerEvent_ = function(type, map, pointerEvent, opt_dragging,\n    opt_frameState) {\n\n  _ol_MapBrowserEvent_.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n      opt_frameState);\n\n  /**\n   * @const\n   * @type {ol.pointer.PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\n_ol_.inherits(_ol_MapBrowserPointerEvent_, _ol_MapBrowserEvent_);\nexport default _ol_MapBrowserPointerEvent_;\n","import _ol_ from './index.js';\nimport _ol_events_Event_ from './events/event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link ol.Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.MapEvent}\n * @param {string} type Event type.\n * @param {ol.PluggableMap} map Map.\n * @param {?olx.FrameState=} opt_frameState Frame state.\n */\nvar _ol_MapEvent_ = function(type, map, opt_frameState) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {ol.PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?olx.FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\n_ol_.inherits(_ol_MapEvent_, _ol_events_Event_);\nexport default _ol_MapEvent_;\n","var _ol_geom_flat_inflate_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<ol.Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<ol.Coordinate>} Coordinates.\n */\n_ol_geom_flat_inflate_.coordinates = function(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  var j;\n  for (j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<ol.Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinatess.\n */\n_ol_geom_flat_inflate_.coordinatess = function(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = _ol_geom_flat_inflate_.coordinates(\n        flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinatesss.\n */\n_ol_geom_flat_inflate_.coordinatesss = function(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = _ol_geom_flat_inflate_.coordinatess(\n        flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n};\nexport default _ol_geom_flat_inflate_;\n","import _ol_ from '../index.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_EventTarget_ from '../events/eventtarget.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {ol.events.EventTarget}\n * @fires ol.events.Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nvar _ol_structs_LRUCache_ = function(opt_highWaterMark) {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, ol.LRUCacheEntry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?ol.LRUCacheEntry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?ol.LRUCacheEntry}\n   */\n  this.newest_ = null;\n\n};\n\n_ol_.inherits(_ol_structs_LRUCache_, _ol_events_EventTarget_);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\n_ol_structs_LRUCache_.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_structs_LRUCache_.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(_ol_events_EventType_.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\n_ol_structs_LRUCache_.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, ol.structs.LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\n_ol_structs_LRUCache_.prototype.forEach = function(f, opt_this) {\n  var entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\n_ol_structs_LRUCache_.prototype.get = function(key) {\n  var entry = this.entries_[key];\n  _ol_asserts_.assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {ol.LRUCacheEntry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\n_ol_structs_LRUCache_.prototype.remove = function(key) {\n  var entry = this.entries_[key];\n  _ol_asserts_.assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {ol.LRUCacheEntry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {ol.LRUCacheEntry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\n_ol_structs_LRUCache_.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\n_ol_structs_LRUCache_.prototype.getKeys = function() {\n  var keys = new Array(this.count_);\n  var i = 0;\n  var entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\n_ol_structs_LRUCache_.prototype.getValues = function() {\n  var values = new Array(this.count_);\n  var i = 0;\n  var entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\n_ol_structs_LRUCache_.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\n_ol_structs_LRUCache_.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\n_ol_structs_LRUCache_.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\n_ol_structs_LRUCache_.prototype.pop = function() {\n  var entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {ol.LRUCacheEntry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\n_ol_structs_LRUCache_.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\n_ol_structs_LRUCache_.prototype.set = function(key, value) {\n  _ol_asserts_.assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n  var entry = /** @type {ol.LRUCacheEntry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Prune the cache.\n */\n_ol_structs_LRUCache_.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default _ol_structs_LRUCache_;\n","import _ol_ from '../index.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../extent.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nvar _ol_structs_RBush_ = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = _ol_ext_rbush_(opt_maxEntries);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, ol.RBushEntry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {ol.Extent} extent Extent.\n * @param {T} value Value.\n */\n_ol_structs_RBush_.prototype.insert = function(extent, value) {\n  /** @type {ol.RBushEntry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[_ol_.getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<ol.Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\n_ol_structs_RBush_.prototype.load = function(extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {ol.RBushEntry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[_ol_.getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\n_ol_structs_RBush_.prototype.remove = function(value) {\n  var uid = _ol_.getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {ol.Extent} extent Extent.\n * @param {T} value Value.\n */\n_ol_structs_RBush_.prototype.update = function(extent, value) {\n  var item = this.items_[_ol_.getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!_ol_extent_.equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\n_ol_structs_RBush_.prototype.getAll = function() {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {ol.Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\n_ol_structs_RBush_.prototype.getInExtent = function(extent) {\n  /** @type {ol.RBushEntry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\n_ol_structs_RBush_.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {ol.Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\n_ol_structs_RBush_.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\n_ol_structs_RBush_.prototype.forEach_ = function(values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_structs_RBush_.prototype.isEmpty = function() {\n  return _ol_obj_.isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\n_ol_structs_RBush_.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_structs_RBush_.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return _ol_extent_.createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {ol.structs.RBush} rbush R-Tree.\n */\n_ol_structs_RBush_.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default _ol_structs_RBush_;\n","import _ol_ from '../index.js';\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {olx.style.StrokeOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Stroke_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Color|ol.ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {ol.style.Stroke} The cloned style.\n * @api\n */\n_ol_style_Stroke_.prototype.clone = function() {\n  var color = this.getColor();\n  return new _ol_style_Stroke_({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {ol.Color|ol.ColorLike} Color.\n * @api\n */\n_ol_style_Stroke_.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\n_ol_style_Stroke_.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\n_ol_style_Stroke_.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {ol.Color|ol.ColorLike} color Color.\n * @api\n */\n_ol_style_Stroke_.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\n_ol_style_Stroke_.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\n_ol_style_Stroke_.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_Stroke_.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += _ol_.getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default _ol_style_Stroke_;\n","/**\n * Extent corner.\n * @enum {string}\n */\nvar _ol_extent_Corner_ = {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\nexport default _ol_extent_Corner_;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","'use strict';\n\nmodule.exports = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_math_ from '../../math.js';\nvar _ol_geom_flat_simplify_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\n_ol_geom_flat_simplify_.lineString = function(flatCoordinates, offset, end,\n    stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = _ol_geom_flat_simplify_.radialDistance(flatCoordinates, offset, end,\n        stride, squaredTolerance,\n        simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.douglasPeucker = function(flatCoordinates, offset, end,\n    stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  var i;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = _ol_math_.squaredSegmentDistance(\n          x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.douglasPeuckers = function(flatCoordinates, offset,\n    ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n    simplifiedOffset, simplifiedEnds) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = _ol_geom_flat_simplify_.douglasPeucker(\n        flatCoordinates, offset, end, stride, squaredTolerance,\n        simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.douglasPeuckerss = function(\n    flatCoordinates, offset, endss, stride, squaredTolerance,\n    simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = _ol_geom_flat_simplify_.douglasPeuckers(\n        flatCoordinates, offset, ends, stride, squaredTolerance,\n        simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.radialDistance = function(flatCoordinates, offset, end,\n    stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (_ol_math_.squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\n_ol_geom_flat_simplify_.snap = function(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n};\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.quantize = function(flatCoordinates, offset, end, stride,\n    tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset], tolerance);\n  var y1 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset], tolerance);\n    y2 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    var x3, y3;\n    // snap the next coordinate (P3)\n    x3 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset], tolerance);\n    y3 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.quantizes = function(\n    flatCoordinates, offset, ends, stride,\n    tolerance,\n    simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = _ol_geom_flat_simplify_.quantize(\n        flatCoordinates, offset, end, stride,\n        tolerance,\n        simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.quantizess = function(\n    flatCoordinates, offset, endss, stride,\n    tolerance,\n    simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = _ol_geom_flat_simplify_.quantizes(\n        flatCoordinates, offset, ends, stride,\n        tolerance,\n        simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n};\nexport default _ol_geom_flat_simplify_;\n","var _ol_geom_flat_area_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n_ol_geom_flat_area_.linearRing = function(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n_ol_geom_flat_area_.linearRings = function(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += _ol_geom_flat_area_.linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n_ol_geom_flat_area_.linearRingss = function(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area +=\n        _ol_geom_flat_area_.linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n};\nexport default _ol_geom_flat_area_;\n","import _ol_TileRange_ from './tilerange.js';\nimport _ol_math_ from './math.js';\nimport _ol_tilegrid_ from './tilegrid.js';\n\n/**\n * @classdesc\n * An attribution for a layer source.\n *\n * Example:\n *\n *     source: new ol.source.OSM({\n *       attributions: [\n *         new ol.Attribution({\n *           html: 'All maps &copy; ' +\n *               '<a href=\"https://www.opencyclemap.org/\">OpenCycleMap</a>'\n *         }),\n *         ol.source.OSM.ATTRIBUTION\n *       ],\n *     ..\n *\n * @constructor\n * @deprecated This class is deprecated and will removed in the next major release.\n * @param {olx.AttributionOptions} options Attribution options.\n * @struct\n * @api\n */\nvar _ol_Attribution_ = function(options) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.html_ = options.html;\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<ol.TileRange>>}\n   */\n  this.tileRanges_ = options.tileRanges ? options.tileRanges : null;\n\n};\n\n\n/**\n * Get the attribution markup.\n * @return {string} The attribution HTML.\n * @api\n */\n_ol_Attribution_.prototype.getHTML = function() {\n  return this.html_;\n};\n\n\n/**\n * @param {Object.<string, ol.TileRange>} tileRanges Tile ranges.\n * @param {!ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @param {!ol.proj.Projection} projection Projection.\n * @return {boolean} Intersects any tile range.\n */\n_ol_Attribution_.prototype.intersectsAnyTileRange = function(tileRanges, tileGrid, projection) {\n  if (!this.tileRanges_) {\n    return true;\n  }\n  var i, ii, tileRange, zKey;\n  for (zKey in tileRanges) {\n    if (!(zKey in this.tileRanges_)) {\n      continue;\n    }\n    tileRange = tileRanges[zKey];\n    var testTileRange;\n    for (i = 0, ii = this.tileRanges_[zKey].length; i < ii; ++i) {\n      testTileRange = this.tileRanges_[zKey][i];\n      if (testTileRange.intersects(tileRange)) {\n        return true;\n      }\n      var extentTileRange = tileGrid.getTileRangeForExtentAndZ(\n          _ol_tilegrid_.extentFromProjection(projection), parseInt(zKey, 10));\n      var width = extentTileRange.getWidth();\n      if (tileRange.minX < extentTileRange.minX ||\n          tileRange.maxX > extentTileRange.maxX) {\n        if (testTileRange.intersects(new _ol_TileRange_(\n            _ol_math_.modulo(tileRange.minX, width),\n            _ol_math_.modulo(tileRange.maxX, width),\n            tileRange.minY, tileRange.maxY))) {\n          return true;\n        }\n        if (tileRange.getWidth() > width &&\n            testTileRange.intersects(extentTileRange)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\nexport default _ol_Attribution_;\n","import _ol_ from '../index.js';\nimport _ol_Attribution_ from '../attribution.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link ol.layer.Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @param {ol.SourceSourceOptions} options Source options.\n * @api\n */\nvar _ol_source_Source_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {ol.proj.Projection}\n   */\n  this.projection_ = _ol_proj_.get(options.projection);\n\n  /**\n   * @private\n   * @type {Array.<ol.Attribution>}\n   */\n  this.attributions_ = null;\n\n  /**\n   * @private\n   * @type {?ol.Attribution2}\n   */\n  this.attributions2_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {string|olx.LogoOptions|undefined}\n   */\n  this.logo_ = options.logo;\n\n  /**\n   * @private\n   * @type {ol.source.State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : _ol_source_State_.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\n_ol_.inherits(_ol_source_Source_, _ol_Object_);\n\n/**\n * Turns the attributions option into an attributions function.\n * @suppress {deprecated}\n * @param {ol.AttributionLike|undefined} attributionLike The attribution option.\n * @return {?ol.Attribution2} An attribution function (or null).\n */\n_ol_source_Source_.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (attributionLike instanceof _ol_Attribution_) {\n\n    // TODO: remove attributions_ in next major release\n    this.attributions_ = [attributionLike];\n\n    return function(frameState) {\n      return [attributionLike.getHTML()];\n    };\n  }\n  if (Array.isArray(attributionLike)) {\n    if (attributionLike[0] instanceof _ol_Attribution_) {\n\n      // TODO: remove attributions_ in next major release\n      this.attributions_ = attributionLike;\n\n      var attributions = attributionLike.map(function(attribution) {\n        return attribution.getHTML();\n      });\n      return function(frameState) {\n        return attributions;\n      };\n    }\n\n    // TODO: remove attributions_ in next major release\n    this.attributions_ = attributionLike.map(function(attribution) {\n      return new _ol_Attribution_({html: attribution});\n    });\n\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  // TODO: remove attributions_ in next major release\n  this.attributions_ = [\n    new _ol_Attribution_({html: attributionLike})\n  ];\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((ol.Feature|ol.render.Feature)): T} callback Feature\n *     callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_source_Source_.prototype.forEachFeatureAtCoordinate = _ol_.nullFunction;\n\n\n/**\n * Get the attributions of the source.\n * @return {Array.<ol.Attribution>} Attributions.\n * @api\n */\n_ol_source_Source_.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the attribution function for the source.\n * @return {?ol.Attribution2} Attribution function.\n */\n_ol_source_Source_.prototype.getAttributions2 = function() {\n  return this.attributions2_;\n};\n\n\n/**\n * Get the logo of the source.\n * @return {string|olx.LogoOptions|undefined} Logo.\n * @api\n */\n_ol_source_Source_.prototype.getLogo = function() {\n  return this.logo_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\n_ol_source_Source_.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\n_ol_source_Source_.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link ol.source.State} for possible states.\n * @return {ol.source.State} State.\n * @api\n */\n_ol_source_Source_.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\n_ol_source_Source_.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\n_ol_source_Source_.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {ol.AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link ol.Attribution2}`,\n *     or `undefined`.\n * @api\n */\n_ol_source_Source_.prototype.setAttributions = function(attributions) {\n  this.attributions2_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the logo of the source.\n * @param {string|olx.LogoOptions|undefined} logo Logo.\n */\n_ol_source_Source_.prototype.setLogo = function(logo) {\n  this.logo_ = logo;\n};\n\n\n/**\n * Set the state of the source.\n * @param {ol.source.State} state State.\n * @protected\n */\n_ol_source_Source_.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default _ol_source_Source_;\n","import _ol_ from '../index.js';\nimport _ol_TileCache_ from '../tilecache.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_size_ from '../size.js';\nimport _ol_source_Source_ from '../source/source.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {ol.source.Source}\n * @param {ol.SourceTileOptions} options Tile source options.\n * @api\n */\nvar _ol_source_Tile_ = function(options) {\n\n  _ol_source_Source_.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    logo: options.logo,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {ol.TileCache}\n   */\n  this.tileCache = new _ol_TileCache_(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {ol.Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {olx.TileOptions}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\n_ol_.inherits(_ol_source_Tile_, _ol_source_Source_);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\n_ol_source_Tile_.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object.<string, ol.TileRange>} usedTiles Used tiles.\n */\n_ol_source_Tile_.prototype.expireCache = function(projection, usedTiles) {\n  var tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {ol.TileRange} tileRange Tile range.\n * @param {function(ol.Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\n_ol_source_Tile_.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  var tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  var covered = true;\n  var tile, tileCoordKey, loaded;\n  for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = _ol_tilecoord_.getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!ol.Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === _ol_TileState_.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {number} Gutter.\n */\n_ol_source_Tile_.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\n_ol_source_Tile_.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\n_ol_source_Tile_.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {boolean} Opaque.\n */\n_ol_source_Tile_.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_Tile_.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {!ol.Tile} Tile.\n */\n_ol_source_Tile_.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {ol.tilegrid.TileGrid} Tile grid.\n * @api\n */\n_ol_source_Tile_.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {!ol.tilegrid.TileGrid} Tile grid.\n */\n_ol_source_Tile_.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return _ol_tilegrid_.getForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.TileCache} Tile cache.\n * @protected\n */\n_ol_source_Tile_.prototype.getTileCacheForProjection = function(projection) {\n  var thisProj = this.getProjection();\n  if (thisProj && !_ol_proj_.equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\n_ol_source_Tile_.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.Size} Tile size.\n */\n_ol_source_Tile_.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  var tileGrid = this.getTileGridForProjection(projection);\n  var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return _ol_size_.scale(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.proj.Projection=} opt_projection Projection.\n * @return {ol.TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\n_ol_source_Tile_.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  var projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  var tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = _ol_tilegrid_.wrapX(tileGrid, tileCoord, projection);\n  }\n  return _ol_tilecoord_.withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_Tile_.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {ol.proj.Projection} projection Projection.\n */\n_ol_source_Tile_.prototype.useTile = _ol_.nullFunction;\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.source.Tile} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.source.Tile.Event}\n * @param {string} type Type.\n * @param {ol.Tile} tile The tile.\n */\n_ol_source_Tile_.Event = function(type, tile) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {ol.Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\n_ol_.inherits(_ol_source_Tile_.Event, _ol_events_Event_);\nexport default _ol_source_Tile_;\n","import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_layer_Property_ from '../layer/property.js';\nimport _ol_math_ from '../math.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with `ol.layer.Base` and all its subclasses, any property set in\n * the options is set as a {@link ol.Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @param {olx.layer.BaseOptions} options Layer options.\n * @api\n */\nvar _ol_layer_Base_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var properties = _ol_obj_.assign({}, options);\n  properties[_ol_layer_Property_.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[_ol_layer_Property_.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[_ol_layer_Property_.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[_ol_layer_Property_.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[_ol_layer_Property_.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {ol.LayerState}\n   * @private\n   */\n  this.state_ = /** @type {ol.LayerState} */ ({\n    layer: /** @type {ol.layer.Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {ol.LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\n_ol_.inherits(_ol_layer_Base_, _ol_Object_);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {ol.LayerType} The layer type.\n */\n_ol_layer_Base_.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {ol.LayerState} Layer state.\n */\n_ol_layer_Base_.prototype.getLayerState = function() {\n  this.state_.opacity = _ol_math_.clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.layer.Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<ol.layer.Layer>} Array of layers.\n */\n_ol_layer_Base_.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<ol.LayerState>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<ol.LayerState>} List of layer states.\n */\n_ol_layer_Base_.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link ol.Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {ol.Extent|undefined} The layer extent.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getExtent = function() {\n  return (\n  /** @type {ol.Extent|undefined} */ this.get(_ol_layer_Property_.EXTENT)\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getMaxResolution = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.MAX_RESOLUTION)\n  );\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getMinResolution = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.MIN_RESOLUTION)\n  );\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getOpacity = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.OPACITY)\n  );\n};\n\n\n/**\n * @abstract\n * @return {ol.source.State} Source state.\n */\n_ol_layer_Base_.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getVisible = function() {\n  return (\n  /** @type {boolean} */ this.get(_ol_layer_Property_.VISIBLE)\n  );\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getZIndex = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.Z_INDEX)\n  );\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {ol.Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setExtent = function(extent) {\n  this.set(_ol_layer_Property_.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setMaxResolution = function(maxResolution) {\n  this.set(_ol_layer_Property_.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setMinResolution = function(minResolution) {\n  this.set(_ol_layer_Property_.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setOpacity = function(opacity) {\n  this.set(_ol_layer_Property_.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setVisible = function(visible) {\n  this.set(_ol_layer_Property_.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setZIndex = function(zindex) {\n  this.set(_ol_layer_Property_.Z_INDEX, zindex);\n};\nexport default _ol_layer_Base_;\n","/**\n * @enum {string}\n */\nvar _ol_MapEventType_ = {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event ol.MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event ol.MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event ol.MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\nexport default _ol_MapEventType_;\n","import _ol_ from './index.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link ol.Observable#changed}.\n *\n * @constructor\n * @extends {ol.events.EventTarget}\n * @fires ol.events.Event\n * @struct\n * @api\n */\nvar _ol_Observable_ = function() {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\n_ol_.inherits(_ol_Observable_, _ol_events_EventTarget_);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {ol.EventsKey|Array.<ol.EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\n_ol_Observable_.unByKey = function(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      _ol_events_.unlistenByKey(key[i]);\n    }\n  } else {\n    _ol_events_.unlistenByKey(/** @type {ol.EventsKey} */ (key));\n  }\n};\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\n_ol_Observable_.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(_ol_events_EventType_.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|ol.events.EventTarget|undefined)}|ol.events.Event|\n *     string} event Event object.\n * @function\n * @api\n */\n_ol_Observable_.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\n_ol_Observable_.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @param {Object=} opt_this The object to use as `this` in `listener`.\n * @return {ol.EventsKey|Array.<ol.EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\n_ol_Observable_.prototype.on = function(type, listener, opt_this) {\n  if (Array.isArray(type)) {\n    var len = type.length;\n    var keys = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      keys[i] = _ol_events_.listen(this, type[i], listener, opt_this);\n    }\n    return keys;\n  } else {\n    return _ol_events_.listen(\n        this, /** @type {string} */ (type), listener, opt_this);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @param {Object=} opt_this The object to use as `this` in `listener`.\n * @return {ol.EventsKey|Array.<ol.EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\n_ol_Observable_.prototype.once = function(type, listener, opt_this) {\n  if (Array.isArray(type)) {\n    var len = type.length;\n    var keys = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      keys[i] = _ol_events_.listenOnce(this, type[i], listener, opt_this);\n    }\n    return keys;\n  } else {\n    return _ol_events_.listenOnce(\n        this, /** @type {string} */ (type), listener, opt_this);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @param {Object=} opt_this The object which was used as `this` by the\n * `listener`.\n * @api\n */\n_ol_Observable_.prototype.un = function(type, listener, opt_this) {\n  if (Array.isArray(type)) {\n    for (var i = 0, ii = type.length; i < ii; ++i) {\n      _ol_events_.unlisten(this, type[i], listener, opt_this);\n    }\n    return;\n  } else {\n    _ol_events_.unlisten(this, /** @type {string} */ (type), listener, opt_this);\n  }\n};\nexport default _ol_Observable_;\n","/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link ol.style.Icon}, {@link ol.style.Circle} and\n * {@link ol.style.RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {ol.StyleImageOptions} options Options.\n * @api\n */\nvar _ol_style_Image_ = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\n_ol_style_Image_.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\n_ol_style_Image_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\n_ol_style_Image_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\n_ol_style_Image_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\n_ol_style_Image_.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\n_ol_style_Image_.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {ol.ImageState} Image state.\n */\n_ol_style_Image_.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Image size.\n */\n_ol_style_Image_.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Size of the hit-detection image.\n */\n_ol_style_Image_.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\n_ol_style_Image_.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {ol.Size} Size.\n */\n_ol_style_Image_.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\n_ol_style_Image_.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n */\n_ol_style_Image_.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\n_ol_style_Image_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\n_ol_style_Image_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n */\n_ol_style_Image_.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {ol.EventsKey|undefined} Listener key.\n * @template T\n */\n_ol_style_Image_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n_ol_style_Image_.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\n_ol_style_Image_.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default _ol_style_Image_;\n","import _ol_ from '../index.js';\nimport _ol_colorlike_ from '../colorlike.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_has_ from '../has.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_render_canvas_ from '../render/canvas.js';\nimport _ol_style_Image_ from '../style/image.js';\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {olx.style.RegularShapeOptions} options Options.\n * @extends {ol.style.Image}\n * @api\n */\nvar _ol_style_RegularShape_ = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {ol.style.AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  var snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  var rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  _ol_style_Image_.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\n_ol_.inherits(_ol_style_RegularShape_, _ol_style_Image_);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.RegularShape} The cloned style.\n * @api\n */\n_ol_style_RegularShape_.prototype.clone = function() {\n  var style = new _ol_style_RegularShape_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\n_ol_style_RegularShape_.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageState = function() {\n  return _ol_ImageState_.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\n_ol_style_RegularShape_.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {ol.style.AtlasManager|undefined} atlasManager An atlas manager.\n */\n_ol_style_RegularShape_.prototype.render_ = function(atlasManager) {\n  var imageSize;\n  var lineCap = '';\n  var lineJoin = '';\n  var miterLimit = 0;\n  var lineDash = null;\n  var lineDashOffset = 0;\n  var strokeStyle;\n  var strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = _ol_render_canvas_.defaultStrokeStyle;\n    }\n    strokeStyle = _ol_colorlike_.asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = _ol_render_canvas_.defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!_ol_has_.CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = _ol_render_canvas_.defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = _ol_render_canvas_.defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = _ol_render_canvas_.defaultMiterLimit;\n    }\n  }\n\n  var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {ol.RegularShapeRenderOptions} */\n  var renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    var context = _ol_dom_.createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    var hasCustomHitDetectionImage = !this.fill_;\n    var renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    var id = this.getChecksum();\n    var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.draw_ = function(renderOptions, context, x, y) {\n  var i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    var color = this.fill_.getColor();\n    if (color === null) {\n      color = _ol_render_canvas_.defaultFillStyle;\n    }\n    context.fillStyle = _ol_colorlike_.asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n */\n_ol_style_RegularShape_.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  var context = _ol_dom_.createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    var i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = _ol_render_canvas_.defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_RegularShape_.prototype.getChecksum = function() {\n  var strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  var fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  var recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    var checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default _ol_style_RegularShape_;\n","import _ol_ from '../index.js';\nimport _ol_style_RegularShape_ from '../style/regularshape.js';\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {olx.style.CircleOptions=} opt_options Options.\n * @extends {ol.style.RegularShape}\n * @api\n */\nvar _ol_style_Circle_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_style_RegularShape_.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\n_ol_.inherits(_ol_style_Circle_, _ol_style_RegularShape_);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.Circle} The cloned style.\n * @override\n * @api\n */\n_ol_style_Circle_.prototype.clone = function() {\n  var style = new _ol_style_Circle_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\n_ol_style_Circle_.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default _ol_style_Circle_;\n","import _ol_ from '../index.js';\nimport _ol_color_ from '../color.js';\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {olx.style.FillOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Fill_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Color|ol.ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link ol.ColorLike}.\n * @return {ol.style.Fill} The cloned style.\n * @api\n */\n_ol_style_Fill_.prototype.clone = function() {\n  var color = this.getColor();\n  return new _ol_style_Fill_({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {ol.Color|ol.ColorLike} Color.\n * @api\n */\n_ol_style_Fill_.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {ol.Color|ol.ColorLike} color Color.\n * @api\n */\n_ol_style_Fill_.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_Fill_.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = _ol_.getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ?\n        _ol_color_.asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default _ol_style_Fill_;\n","import _ol_asserts_ from '../asserts.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_style_Circle_ from '../style/circle.js';\nimport _ol_style_Fill_ from '../style/fill.js';\nimport _ol_style_Stroke_ from '../style/stroke.js';\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {olx.style.StyleOptions=} opt_options Style options.\n * @api\n */\nvar _ol_style_Style_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!ol.StyleGeometryFunction}\n   */\n  this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Image}\n   */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {ol.StyleRenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {ol.style.Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {ol.style.Style} The cloned style.\n * @api\n */\n_ol_style_Style_.prototype.clone = function() {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new _ol_style_Style_({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {ol.StyleRenderFunction|null} Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {ol.StyleRenderFunction|null} renderer Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\n_ol_style_Style_.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!ol.StyleGeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\n_ol_style_Style_.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Style_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Style_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {ol.style.Image} Image style.\n * @api\n */\n_ol_style_Style_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {ol.style.Image} image Image style.\n * @api\n */\n_ol_style_Style_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {ol.style.Text} Text style.\n * @api\n */\n_ol_style_Style_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {ol.style.Text} text Text style.\n * @api\n */\n_ol_style_Style_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|ol.geom.Geometry|ol.StyleGeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\n_ol_style_Style_.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return /** @type {ol.geom.Geometry} */ (feature.get(geometry));\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return /** @type {ol.geom.Geometry} */ (geometry);\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of ol.style.Style or single style objects wrapped in a\n * new style function.\n * @param {ol.StyleFunction|Array.<ol.style.Style>|ol.style.Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {ol.StyleFunction} A style function.\n */\n_ol_style_Style_.createFunction = function(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<ol.style.Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      _ol_asserts_.assert(obj instanceof _ol_style_Style_,\n          41); // Expected an `ol.style.Style` or an array of `ol.style.Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n};\n\n\n/**\n * @type {Array.<ol.style.Style>}\n * @private\n */\n_ol_style_Style_.default_ = null;\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>} Style.\n */\n_ol_style_Style_.defaultFunction = function(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (ol.style.Circle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!_ol_style_Style_.default_) {\n    var fill = new _ol_style_Fill_({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new _ol_style_Stroke_({\n      color: '#3399CC',\n      width: 1.25\n    });\n    _ol_style_Style_.default_ = [\n      new _ol_style_Style_({\n        image: new _ol_style_Circle_({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return _ol_style_Style_.default_;\n};\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} Styles\n */\n_ol_style_Style_.createDefaultEditing = function() {\n  /** @type {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[_ol_geom_GeometryType_.POLYGON] = [\n    new _ol_style_Style_({\n      fill: new _ol_style_Fill_({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POLYGON] =\n      styles[_ol_geom_GeometryType_.POLYGON];\n\n  styles[_ol_geom_GeometryType_.LINE_STRING] = [\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_LINE_STRING] =\n      styles[_ol_geom_GeometryType_.LINE_STRING];\n\n  styles[_ol_geom_GeometryType_.CIRCLE] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING]\n      );\n\n\n  styles[_ol_geom_GeometryType_.POINT] = [\n    new _ol_style_Style_({\n      image: new _ol_style_Circle_({\n        radius: width * 2,\n        fill: new _ol_style_Fill_({\n          color: blue\n        }),\n        stroke: new _ol_style_Stroke_({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POINT] =\n      styles[_ol_geom_GeometryType_.POINT];\n\n  styles[_ol_geom_GeometryType_.GEOMETRY_COLLECTION] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING],\n          styles[_ol_geom_GeometryType_.POINT]\n      );\n\n  return styles;\n};\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature to get the geometry\n *     for.\n * @return {ol.geom.Geometry|ol.render.Feature|undefined} Geometry to render.\n */\n_ol_style_Style_.defaultGeometryFunction = function(feature) {\n  return feature.getGeometry();\n};\nexport default _ol_style_Style_;\n","import _ol_math_ from '../../math.js';\nvar _ol_geom_flat_closest_ = {};\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\n_ol_geom_flat_closest_.point = function(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var i, offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = _ol_math_.lerp(flatCoordinates[offset1 + i],\n            flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n};\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxSquaredDelta Max squared delta.\n * @return {number} Max squared delta.\n */\n_ol_geom_flat_closest_.getMaxSquaredDelta = function(flatCoordinates, offset, end, stride, maxSquaredDelta) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = _ol_math_.squaredDistance(x1, y1, x2, y2);\n    if (squaredDelta > maxSquaredDelta) {\n      maxSquaredDelta = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return maxSquaredDelta;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxSquaredDelta Max squared delta.\n * @return {number} Max squared delta.\n */\n_ol_geom_flat_closest_.getsMaxSquaredDelta = function(flatCoordinates, offset, ends, stride, maxSquaredDelta) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    maxSquaredDelta = _ol_geom_flat_closest_.getMaxSquaredDelta(\n        flatCoordinates, offset, end, stride, maxSquaredDelta);\n    offset = end;\n  }\n  return maxSquaredDelta;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxSquaredDelta Max squared delta.\n * @return {number} Max squared delta.\n */\n_ol_geom_flat_closest_.getssMaxSquaredDelta = function(flatCoordinates, offset, endss, stride, maxSquaredDelta) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    maxSquaredDelta = _ol_geom_flat_closest_.getsMaxSquaredDelta(\n        flatCoordinates, offset, ends, stride, maxSquaredDelta);\n    offset = ends[ends.length - 1];\n  }\n  return maxSquaredDelta;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_flat_closest_.getClosestPoint = function(flatCoordinates, offset, end,\n    stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n    opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = _ol_math_.squaredDistance(\n        x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    _ol_geom_flat_closest_.point(\n        flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = _ol_math_.squaredDistance(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n          ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    _ol_geom_flat_closest_.point(\n        flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = _ol_math_.squaredDistance(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_flat_closest_.getsClosestPoint = function(flatCoordinates, offset, ends,\n    stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n    opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = _ol_geom_flat_closest_.getClosestPoint(\n        flatCoordinates, offset, end, stride,\n        maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_flat_closest_.getssClosestPoint = function(flatCoordinates, offset,\n    endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n    opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = _ol_geom_flat_closest_.getsClosestPoint(\n        flatCoordinates, offset, ends, stride,\n        maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n};\nexport default _ol_geom_flat_closest_;\n","var _ol_geom_flat_deflate_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\n_ol_geom_flat_deflate_.coordinate = function(flatCoordinates, offset, coordinate, stride) {\n  var i, ii;\n  for (i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\n_ol_geom_flat_deflate_.coordinates = function(flatCoordinates, offset, coordinates, stride) {\n  var i, ii;\n  for (i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    var j;\n    for (j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<ol.Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\n_ol_geom_flat_deflate_.coordinatess = function(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = _ol_geom_flat_deflate_.coordinates(\n        flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\n_ol_geom_flat_deflate_.coordinatesss = function(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n};\nexport default _ol_geom_flat_deflate_;\n","import _ol_ from '../index.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_LinearRing_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_LinearRing_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.LinearRing} Clone.\n * @override\n * @api\n */\n_ol_geom_LinearRing_.prototype.clone = function() {\n  var linearRing = new _ol_geom_LinearRing_(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LinearRing_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getMaxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\n_ol_geom_LinearRing_.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRing(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_LinearRing_.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LinearRing_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n  var simplifiedLinearRing = new _ol_geom_LinearRing_(null);\n  simplifiedLinearRing.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_LinearRing_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LinearRing_.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_LinearRing_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\n_ol_geom_LinearRing_.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default _ol_geom_LinearRing_;\n","import _ol_ from '../index.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_Point_ = function(coordinates, opt_layout) {\n  _ol_geom_SimpleGeometry_.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\n_ol_.inherits(_ol_geom_Point_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Point} Clone.\n * @override\n * @api\n */\n_ol_geom_Point_.prototype.clone = function() {\n  var point = new _ol_geom_Point_(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Point_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var squaredDistance = _ol_math_.squaredDistance(\n      x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    var stride = this.stride;\n    var i;\n    for (i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {ol.Coordinate} Coordinates.\n * @override\n * @api\n */\n_ol_geom_Point_.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Point_.prototype.computeExtent = function(extent) {\n  return _ol_extent_.createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Point_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Point_.prototype.intersectsExtent = function(extent) {\n  return _ol_extent_.containsXY(extent,\n      this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Point_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinate(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\n_ol_geom_Point_.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default _ol_geom_Point_;\n","import _ol_array_ from '../../array.js';\nimport _ol_geom_flat_contains_ from '../flat/contains.js';\nvar _ol_geom_flat_interiorpoint_ = {};\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRings = function(flatCoordinates, offset,\n    ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(_ol_array_.numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (_ol_geom_flat_contains_.linearRingsContainsXY(\n          flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRingss = function(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = _ol_geom_flat_interiorpoint_.linearRings(flatCoordinates,\n        offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n};\nexport default _ol_geom_flat_interiorpoint_;\n","var _ol_geom_flat_segments_ = {};\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, ol.Coordinate, ol.Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\n_ol_geom_flat_segments_.forEach = function(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n};\nexport default _ol_geom_flat_segments_;\n","import _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_contains_ from '../flat/contains.js';\nimport _ol_geom_flat_segments_ from '../flat/segments.js';\nvar _ol_geom_flat_intersectsextent_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.lineString = function(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = _ol_extent_.extendFlatCoordinates(\n      _ol_extent_.createEmpty(), flatCoordinates, offset, end, stride);\n  if (!_ol_extent_.intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (_ol_extent_.containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return _ol_geom_flat_segments_.forEach(flatCoordinates, offset, end, stride,\n      /**\n       * @param {ol.Coordinate} point1 Start point.\n       * @param {ol.Coordinate} point2 End point.\n       * @return {boolean} `true` if the segment and the extent intersect,\n       *     `false` otherwise.\n       */\n      function(point1, point2) {\n        return _ol_extent_.intersectsSegment(extent, point1, point2);\n      });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.lineStrings = function(flatCoordinates, offset, ends, stride, extent) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    if (_ol_geom_flat_intersectsextent_.lineString(\n        flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.linearRing = function(flatCoordinates, offset, end, stride, extent) {\n  if (_ol_geom_flat_intersectsextent_.lineString(\n      flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.linearRings = function(flatCoordinates, offset, ends, stride, extent) {\n  if (!_ol_geom_flat_intersectsextent_.linearRing(\n      flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  var i, ii;\n  for (i = 1, ii = ends.length; i < ii; ++i) {\n    if (_ol_geom_flat_contains_.linearRingContainsExtent(\n        flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.linearRingss = function(flatCoordinates, offset, endss, stride, extent) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (_ol_geom_flat_intersectsextent_.linearRings(\n        flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n};\nexport default _ol_geom_flat_intersectsextent_;\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_LinearRing_ from '../geom/linearring.js';\nimport _ol_geom_Point_ from '../geom/point.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_Polygon_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_Polygon_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @api\n */\n_ol_geom_Polygon_.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    _ol_array_.extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Polygon} Clone.\n * @override\n * @api\n */\n_ol_geom_Polygon_.prototype.clone = function() {\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Polygon_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Polygon_.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\n_ol_geom_Polygon_.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRings(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_Polygon_.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatess(\n      flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\n_ol_geom_Polygon_.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\n_ol_geom_Polygon_.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    var flatCenter = _ol_extent_.getCenter(this.getExtent());\n    this.flatInteriorPoint_ = _ol_geom_flat_interiorpoint_.linearRings(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {ol.geom.Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\n_ol_geom_Polygon_.prototype.getInteriorPoint = function() {\n  return new _ol_geom_Point_(this.getFlatInteriorPoint(), _ol_geom_GeometryLayout_.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\n_ol_geom_Polygon_.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {ol.geom.LinearRing} Linear ring.\n * @api\n */\n_ol_geom_Polygon_.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var linearRing = new _ol_geom_LinearRing_(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<ol.geom.LinearRing>} Linear rings.\n * @api\n */\n_ol_geom_Polygon_.prototype.getLinearRings = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var linearRings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var linearRing = new _ol_geom_LinearRing_(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\n_ol_geom_Polygon_.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingsAreOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Polygon_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizes(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedPolygon = new _ol_geom_Polygon_(null);\n  simplifiedPolygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Polygon_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Polygon_.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRings(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_Polygon_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\n_ol_geom_Polygon_.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {ol.Sphere} sphere The sphere.\n * @param {ol.Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @return {ol.geom.Polygon} The \"circular\" polygon.\n * @api\n */\n_ol_geom_Polygon_.circular = function(sphere, center, radius, opt_n) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  var i;\n  for (i = 0; i < n; ++i) {\n    _ol_array_.extend(\n        flatCoordinates, sphere.offset(center, radius, 2 * Math.PI * i / n));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n};\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {ol.Extent} extent The extent.\n * @return {ol.geom.Polygon} The polygon.\n * @api\n */\n_ol_geom_Polygon_.fromExtent = function(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n};\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {ol.geom.Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {ol.geom.Polygon} Polygon geometry.\n * @api\n */\n_ol_geom_Polygon_.fromCircle = function(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var polygon = new _ol_geom_Polygon_(null, layout);\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  var ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  _ol_geom_Polygon_.makeRegular(\n      polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n};\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {ol.Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\n_ol_geom_Polygon_.makeRegular = function(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var layout = polygon.getLayout();\n  var stride = polygon.getStride();\n  var ends = polygon.getEnds();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  var angle, offset;\n  for (var i = 0; i <= sides; ++i) {\n    offset = i * stride;\n    angle = startAngle + (_ol_math_.modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default _ol_geom_Polygon_;\n","import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nimport _ol_transform_ from '../transform.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @api\n */\nvar _ol_geom_Geometry_ = function() {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, ol.geom.Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpTransform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_geom_Geometry_, _ol_Object_);\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!ol.geom.Geometry} Clone.\n */\n_ol_geom_Geometry_.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {ol.Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_Geometry_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} point Point.\n * @param {ol.Coordinate=} opt_closestPoint Closest point.\n * @return {ol.Coordinate} Closest point.\n * @api\n */\n_ol_geom_Geometry_.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\n_ol_geom_Geometry_.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {ol.Extent} extent Extent.\n * @protected\n * @return {ol.Extent} extent Extent.\n */\n_ol_geom_Geometry_.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_Geometry_.prototype.containsXY = _ol_functions_.FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} extent Extent.\n * @api\n */\n_ol_geom_Geometry_.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return _ol_extent_.returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {ol.Coordinate} anchor The rotation center.\n * @api\n */\n_ol_geom_Geometry_.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {ol.Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\n_ol_geom_Geometry_.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {ol.geom.Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\n_ol_geom_Geometry_.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.Geometry} Simplified geometry.\n */\n_ol_geom_Geometry_.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {ol.geom.GeometryType} Geometry type.\n */\n_ol_geom_Geometry_.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {ol.TransformFunction} transformFn Transform.\n */\n_ol_geom_Geometry_.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {ol.Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\n_ol_geom_Geometry_.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\n_ol_geom_Geometry_.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\n_ol_geom_Geometry_.prototype.transform = function(source, destination) {\n  var tmpTransform = this.tmpTransform_;\n  source = _ol_proj_.get(source);\n  var transformFn = source.getUnits() == _ol_proj_Units_.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      var pixelExtent = source.getExtent();\n      var projectedExtent = source.getWorldExtent();\n      var scale = _ol_extent_.getHeight(projectedExtent) / _ol_extent_.getHeight(pixelExtent);\n      _ol_transform_.compose(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n      _ol_geom_flat_transform_.transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n      return _ol_proj_.getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    _ol_proj_.getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default _ol_geom_Geometry_;\n","import _ol_ from './index.js';\nimport _ol_MapEvent_ from './mapevent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link ol.Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {ol.MapEvent}\n * @implements {oli.MapBrowserEvent}\n * @param {string} type Event type.\n * @param {ol.PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?olx.FrameState=} opt_frameState Frame state.\n */\nvar _ol_MapBrowserEvent_ = function(type, map, browserEvent, opt_dragging,\n    opt_frameState) {\n\n  _ol_MapEvent_.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {ol.Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\n_ol_.inherits(_ol_MapBrowserEvent_, _ol_MapEvent_);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\n_ol_MapBrowserEvent_.prototype.preventDefault = function() {\n  _ol_MapEvent_.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\n_ol_MapBrowserEvent_.prototype.stopPropagation = function() {\n  _ol_MapEvent_.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default _ol_MapBrowserEvent_;\n","import _ol_math_ from './math.js';\nvar _ol_CenterConstraint_ = {};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @return {ol.CenterConstraintType} The constraint.\n */\n_ol_CenterConstraint_.createExtent = function(extent) {\n  return (\n    /**\n     * @param {ol.Coordinate|undefined} center Center.\n     * @return {ol.Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          _ol_math_.clamp(center[0], extent[0], extent[2]),\n          _ol_math_.clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n};\n\n\n/**\n * @param {ol.Coordinate|undefined} center Center.\n * @return {ol.Coordinate|undefined} Center.\n */\n_ol_CenterConstraint_.none = function(center) {\n  return center;\n};\nexport default _ol_CenterConstraint_;\n","import _ol_array_ from './array.js';\nimport _ol_math_ from './math.js';\nvar _ol_ResolutionConstraint_ = {};\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {ol.ResolutionConstraintType} Zoom function.\n */\n_ol_ResolutionConstraint_.createSnapToResolutions = function(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z =\n              _ol_array_.linearFindNearest(resolutions, resolution, direction);\n        z = _ol_math_.clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n};\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {ol.ResolutionConstraintType} Zoom function.\n */\n_ol_ResolutionConstraint_.createSnapToPower = function(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n            Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n};\nexport default _ol_ResolutionConstraint_;\n","/**\n * @enum {string}\n */\nvar _ol_ViewProperty_ = {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\nexport default _ol_ViewProperty_;\n","import _ol_ from './index.js';\nimport _ol_CenterConstraint_ from './centerconstraint.js';\nimport _ol_Object_ from './object.js';\nimport _ol_ResolutionConstraint_ from './resolutionconstraint.js';\nimport _ol_RotationConstraint_ from './rotationconstraint.js';\nimport _ol_ViewHint_ from './viewhint.js';\nimport _ol_ViewProperty_ from './viewproperty.js';\nimport _ol_array_ from './array.js';\nimport _ol_asserts_ from './asserts.js';\nimport _ol_coordinate_ from './coordinate.js';\nimport _ol_easing_ from './easing.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_geom_GeometryType_ from './geom/geometrytype.js';\nimport _ol_geom_Polygon_ from './geom/polygon.js';\nimport _ol_geom_SimpleGeometry_ from './geom/simplegeometry.js';\nimport _ol_math_ from './math.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_proj_ from './proj.js';\nimport _ol_proj_Units_ from './proj/units.js';\n\n/**\n * @classdesc\n * An ol.View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An `ol.View` is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An `ol.View` has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But an `ol.View` object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {ol.Object}\n * @param {olx.ViewOptions=} opt_options View options.\n * @api\n */\nvar _ol_View_ = function(opt_options) {\n  _ol_Object_.call(this);\n\n  var options = _ol_obj_.assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<ol.ViewAnimation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {ol.proj.Projection}\n   */\n  this.projection_ = _ol_proj_.createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\n_ol_.inherits(_ol_View_, _ol_Object_);\n\n\n/**\n * Set up the view with the given options.\n * @param {olx.ViewOptions} options View options.\n */\n_ol_View_.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var properties = {};\n  properties[_ol_ViewProperty_.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  var resolutionConstraintInfo = _ol_View_.createResolutionConstraint_(\n      options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  var centerConstraint = _ol_View_.createCenterConstraint_(options);\n  var resolutionConstraint = resolutionConstraintInfo.constraint;\n  var rotationConstraint = _ol_View_.createRotationConstraint_(options);\n\n  /**\n   * @private\n   * @type {ol.Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[_ol_ViewProperty_.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[_ol_ViewProperty_.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[_ol_ViewProperty_.RESOLUTION] = _ol_math_.clamp(\n          Number(this.getResolution() || properties[_ol_ViewProperty_.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[_ol_ViewProperty_.ROTATION] =\n      options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {olx.ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be uesd to apply new min/max zoom or\n * resolution limits.\n * @param {olx.ViewOptions} newOptions New options to be applied.\n * @return {olx.ViewOptions} New options updated with the current view state.\n */\n_ol_View_.prototype.getUpdatedOptions_ = function(newOptions) {\n  var options = _ol_obj_.assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return _ol_obj_.assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link ol.easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(olx.AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\n_ol_View_.prototype.animate = function(var_args) {\n  var animationCount = arguments.length;\n  var callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    var state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      callback(true);\n    }\n    return;\n  }\n  var start = Date.now();\n  var center = this.getCenter().slice();\n  var resolution = this.getResolution();\n  var rotation = this.getRotation();\n  var series = [];\n  for (var i = 0; i < animationCount; ++i) {\n    var options = /** @type {olx.AnimationOptions} */ (arguments[i]);\n\n    var animation = /** @type {ol.ViewAnimation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || _ol_easing_.inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      var delta = _ol_math_.modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (_ol_View_.isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(_ol_ViewHint_.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\n_ol_View_.prototype.getAnimating = function() {\n  return this.hints_[_ol_ViewHint_.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\n_ol_View_.prototype.getInteracting = function() {\n  return this.hints_[_ol_ViewHint_.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\n_ol_View_.prototype.cancelAnimations = function() {\n  this.setHint(_ol_ViewHint_.ANIMATING, -this.hints_[_ol_ViewHint_.ANIMATING]);\n  for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n    var series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\n_ol_View_.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  var now = Date.now();\n  var more = false;\n  for (var i = this.animations_.length - 1; i >= 0; --i) {\n    var series = this.animations_[i];\n    var seriesComplete = true;\n    for (var j = 0, jj = series.length; j < jj; ++j) {\n      var animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      var elapsed = now - animation.start;\n      var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      var progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        var x0 = animation.sourceCenter[0];\n        var y0 = animation.sourceCenter[1];\n        var x1 = animation.targetCenter[0];\n        var y1 = animation.targetCenter[1];\n        var x = x0 + progress * (x1 - x0);\n        var y = y0 + progress * (y1 - y0);\n        this.set(_ol_ViewProperty_.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        var resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(_ol_ViewProperty_.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(_ol_ViewProperty_.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        var rotation = progress === 1 ?\n          _ol_math_.modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(_ol_ViewProperty_.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(_ol_ViewProperty_.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(_ol_ViewHint_.ANIMATING, -1);\n      var callback = series[0].callback;\n      if (callback) {\n        callback(true);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {ol.Coordinate} anchor Rotation anchor.\n * @return {ol.Coordinate|undefined} Center for rotation and anchor.\n */\n_ol_View_.prototype.calculateCenterRotate = function(rotation, anchor) {\n  var center;\n  var currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    _ol_coordinate_.rotate(center, rotation - this.getRotation());\n    _ol_coordinate_.add(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {ol.Coordinate} anchor Zoom anchor.\n * @return {ol.Coordinate|undefined} Center for resolution and anchor.\n */\n_ol_View_.prototype.calculateCenterZoom = function(resolution, anchor) {\n  var center;\n  var currentCenter = this.getCenter();\n  var currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    var x = anchor[0] -\n        resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    var y = anchor[1] -\n        resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {ol.Size} Viewport size or `[100, 100]` when no viewport is found.\n */\n_ol_View_.prototype.getSizeFromViewport_ = function() {\n  var size = [100, 100];\n  var selector = '.ol-viewport[data-view=\"' + _ol_.getUid(this) + '\"]';\n  var element = document.querySelector(selector);\n  if (element) {\n    var metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {ol.Coordinate|undefined} center Center.\n * @return {ol.Coordinate|undefined} Constrained center.\n * @api\n */\n_ol_View_.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\n_ol_View_.prototype.constrainResolution = function(\n    resolution, opt_delta, opt_direction) {\n  var delta = opt_delta || 0;\n  var direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\n_ol_View_.prototype.constrainRotation = function(rotation, opt_delta) {\n  var delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {ol.Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.getCenter = function() {\n  return (\n    /** @type {ol.Coordinate|undefined} */ this.get(_ol_ViewProperty_.CENTER)\n  );\n};\n\n\n/**\n * @return {ol.Constraints} Constraints.\n */\n_ol_View_.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\n_ol_View_.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {ol.Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_View_.prototype.calculateExtent = function(opt_size) {\n  var size = opt_size || this.getSizeFromViewport_();\n  var center = /** @type {!ol.Coordinate} */ (this.getCenter());\n  _ol_asserts_.assert(center, 1); // The view center is not defined\n  var resolution = /** @type {!number} */ (this.getResolution());\n  _ol_asserts_.assert(resolution !== undefined, 2); // The view resolution is not defined\n  var rotation = /** @type {!number} */ (this.getRotation());\n  _ol_asserts_.assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return _ol_extent_.getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\n_ol_View_.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\n_ol_View_.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\n_ol_View_.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\n_ol_View_.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\n_ol_View_.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\n_ol_View_.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {ol.proj.Projection} The projection of the view.\n * @api\n */\n_ol_View_.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.getResolution = function() {\n  return (\n    /** @type {number|undefined} */ this.get(_ol_ViewProperty_.RESOLUTION)\n  );\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the {ol.View}, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\n_ol_View_.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\n_ol_View_.prototype.getResolutionForExtent = function(extent, opt_size) {\n  var size = opt_size || this.getSizeFromViewport_();\n  var xResolution = _ol_extent_.getWidth(extent) / size[0];\n  var yResolution = _ol_extent_.getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\n_ol_View_.prototype.getResolutionForValueFunction = function(opt_power) {\n  var power = opt_power || 2;\n  var maxResolution = this.maxResolution_;\n  var minResolution = this.minResolution_;\n  var max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      var resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\n_ol_View_.prototype.getRotation = function() {\n  return (\n    /** @type {number} */ this.get(_ol_ViewProperty_.ROTATION)\n  );\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\n_ol_View_.prototype.getValueForResolutionFunction = function(opt_power) {\n  var power = opt_power || 2;\n  var maxResolution = this.maxResolution_;\n  var minResolution = this.minResolution_;\n  var max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      var value =\n            (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {olx.ViewState} View state.\n */\n_ol_View_.prototype.getState = function() {\n  var center = /** @type {ol.Coordinate} */ (this.getCenter());\n  var projection = this.getProjection();\n  var resolution = /** @type {number} */ (this.getResolution());\n  var rotation = this.getRotation();\n  return /** @type {olx.ViewState} */ ({\n    center: center.slice(),\n    projection: projection !== undefined ? projection : null,\n    resolution: resolution,\n    rotation: rotation,\n    zoom: this.getZoom()\n  });\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\n_ol_View_.prototype.getZoom = function() {\n  var zoom;\n  var resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\n_ol_View_.prototype.getZoomForResolution = function(resolution) {\n  var offset = this.minZoom_ || 0;\n  var max, zoomFactor;\n  if (this.resolutions_) {\n    var nearest = _ol_array_.linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\n_ol_View_.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {ol.geom.SimpleGeometry|ol.Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {olx.view.FitOptions=} opt_options Options.\n * @api\n */\n_ol_View_.prototype.fit = function(geometryOrExtent, opt_options) {\n  var options = opt_options || {};\n  var size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {ol.geom.SimpleGeometry} */\n  var geometry;\n  if (!(geometryOrExtent instanceof _ol_geom_SimpleGeometry_)) {\n    _ol_asserts_.assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n    _ol_asserts_.assert(!_ol_extent_.isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n    geometry = _ol_geom_Polygon_.fromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === _ol_geom_GeometryType_.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = _ol_geom_Polygon_.fromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), _ol_extent_.getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  var constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  var nearest = options.nearest !== undefined ? options.nearest : false;\n  var minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  var coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  var rotation = this.getRotation();\n  var cosAngle = Math.cos(-rotation);\n  var sinAngle = Math.sin(-rotation);\n  var minRotX = +Infinity;\n  var minRotY = +Infinity;\n  var maxRotX = -Infinity;\n  var maxRotY = -Infinity;\n  var stride = geometry.getStride();\n  for (var i = 0, ii = coords.length; i < ii; i += stride) {\n    var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  var centerRotX = (minRotX + maxRotX) / 2;\n  var centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  var center = [centerX, centerY];\n  var callback = options.callback ? options.callback : _ol_.nullFunction;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Size} size Box pixel size.\n * @param {ol.Pixel} position Position on the view to center on.\n * @api\n */\n_ol_View_.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  var rotation = this.getRotation();\n  var cosAngle = Math.cos(-rotation);\n  var sinAngle = Math.sin(-rotation);\n  var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  var resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  var centerX = rotX * cosAngle - rotY * sinAngle;\n  var centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\n_ol_View_.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {ol.Coordinate=} opt_anchor The rotation center.\n * @api\n */\n_ol_View_.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    var center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {ol.Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.setCenter = function(center) {\n  this.set(_ol_ViewProperty_.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {ol.ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\n_ol_View_.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.setResolution = function(resolution) {\n  this.set(_ol_ViewProperty_.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\n_ol_View_.prototype.setRotation = function(rotation) {\n  this.set(_ol_ViewProperty_.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\n_ol_View_.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {olx.ViewOptions} options View options.\n * @private\n * @return {ol.CenterConstraintType} The constraint.\n */\n_ol_View_.createCenterConstraint_ = function(options) {\n  if (options.extent !== undefined) {\n    return _ol_CenterConstraint_.createExtent(options.extent);\n  } else {\n    return _ol_CenterConstraint_.none;\n  }\n};\n\n\n/**\n * @private\n * @param {olx.ViewOptions} options View options.\n * @return {{constraint: ol.ResolutionConstraintType, maxResolution: number,\n *     minResolution: number, zoomFactor: number}} The constraint.\n */\n_ol_View_.createResolutionConstraint_ = function(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : _ol_.DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = _ol_ResolutionConstraint_.createSnapToResolutions(\n        resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = _ol_proj_.createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * _ol_proj_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(_ol_extent_.getWidth(extent), _ol_extent_.getHeight(extent));\n\n    var defaultMaxResolution = size / _ol_.DEFAULT_TILE_SIZE / Math.pow(\n        defaultZoomFactor, _ol_.DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n        defaultZoomFactor, defaultMaxZoom - _ol_.DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = _ol_ResolutionConstraint_.createSnapToPower(\n        zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n};\n\n\n/**\n * @private\n * @param {olx.ViewOptions} options View options.\n * @return {ol.RotationConstraintType} Rotation constraint.\n */\n_ol_View_.createRotationConstraint_ = function(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return _ol_RotationConstraint_.createSnapToZero();\n    } else if (constrainRotation === false) {\n      return _ol_RotationConstraint_.none;\n    } else if (typeof constrainRotation === 'number') {\n      return _ol_RotationConstraint_.createSnapToN(constrainRotation);\n    } else {\n      return _ol_RotationConstraint_.none;\n    }\n  } else {\n    return _ol_RotationConstraint_.disable;\n  }\n};\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {ol.ViewAnimation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\n_ol_View_.isNoopAnimation = function(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!_ol_coordinate_.equals(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n};\nexport default _ol_View_;\n","import _ol_ from '../index.js';\nimport _ol_MapEventType_ from '../mapeventtype.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_events_ from '../events.js';\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new ol.control.Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be `ol.Object`s in a `ol.Collection`, so you can use their\n * methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {ol.Object}\n * @implements {oli.control.Control}\n * @param {olx.control.ControlOptions} options Control options.\n * @api\n */\nvar _ol_control_Control_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<ol.EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(ol.MapEvent)}\n   */\n  this.render = options.render ? options.render : _ol_.nullFunction;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\n_ol_.inherits(_ol_control_Control_, _ol_Object_);\n\n\n/**\n * @inheritDoc\n */\n_ol_control_Control_.prototype.disposeInternal = function() {\n  _ol_dom_.removeNode(this.element);\n  _ol_Object_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {ol.PluggableMap} Map.\n * @api\n */\n_ol_control_Control_.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n * @api\n */\n_ol_control_Control_.prototype.setMap = function(map) {\n  if (this.map_) {\n    _ol_dom_.removeNode(this.element);\n  }\n  for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    _ol_events_.unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    var target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== _ol_.nullFunction) {\n      this.listenerKeys.push(_ol_events_.listen(map,\n          _ol_MapEventType_.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\n_ol_control_Control_.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default _ol_control_Control_;\n","// FIXME handle date line wrap\n\nimport _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.AttributionOptions=} opt_options Attribution options.\n * @api\n */\nvar _ol_control_Attribution_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.logoLi_ = document.createElement('LI');\n\n  this.ulElement_.appendChild(this.logoLi_);\n  this.logoLi_.style.display = 'none';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  var label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  var button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  _ol_events_.listen(button, _ol_events_EventType_.CLICK, this.handleClick_, this);\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' +\n      _ol_css_.CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ol-collapsed' : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  var render = options.render ? options.render : _ol_control_Attribution_.render;\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    render: render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {Object.<string, Element>}\n   */\n  this.logoElements_ = {};\n\n};\n\n_ol_.inherits(_ol_control_Attribution_, _ol_control_Control_);\n\n\n/**\n * Get a list of visible attributions.\n * @param {olx.FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\n_ol_control_Attribution_.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {Object.<string, boolean>}\n   */\n  var lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  var visibleAttributions = [];\n\n  var layerStatesArray = frameState.layerStatesArray;\n  var resolution = frameState.viewState.resolution;\n  for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    var layerState = layerStatesArray[i];\n    if (!_ol_layer_Layer_.visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    var source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    var attributionGetter = source.getAttributions2();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    var attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (var j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.Attribution}\n * @api\n */\n_ol_control_Attribution_.render = function(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n};\n\n\n/**\n * @private\n * @param {?olx.FrameState} frameState Frame state.\n */\n_ol_control_Attribution_.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var attributions = this.getSourceAttributions_(frameState);\n  if (_ol_array_.equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  // remove everything but the logo\n  while (this.ulElement_.lastChild !== this.logoLi_) {\n    this.ulElement_.removeChild(this.ulElement_.lastChild);\n  }\n\n  // append the attributions\n  for (var i = 0, ii = attributions.length; i < ii; ++i) {\n    var element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n\n  if (attributions.length === 0 && this.renderedAttributions_.length > 0) {\n    this.element.classList.add('ol-logo-only');\n  } else if (this.renderedAttributions_.length === 0 && attributions.length > 0) {\n    this.element.classList.remove('ol-logo-only');\n  }\n\n  var visible = attributions.length > 0 || !_ol_obj_.isEmpty(frameState.logos);\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  this.renderedAttributions_ = attributions;\n  this.insertLogos_(frameState);\n};\n\n\n/**\n * @param {?olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_control_Attribution_.prototype.insertLogos_ = function(frameState) {\n\n  var logo;\n  var logos = frameState.logos;\n  var logoElements = this.logoElements_;\n\n  for (logo in logoElements) {\n    if (!(logo in logos)) {\n      _ol_dom_.removeNode(logoElements[logo]);\n      delete logoElements[logo];\n    }\n  }\n\n  var image, logoElement, logoKey;\n  for (logoKey in logos) {\n    var logoValue = logos[logoKey];\n    if (logoValue instanceof HTMLElement) {\n      this.logoLi_.appendChild(logoValue);\n      logoElements[logoKey] = logoValue;\n    }\n    if (!(logoKey in logoElements)) {\n      image = new Image();\n      image.src = logoKey;\n      if (logoValue === '') {\n        logoElement = image;\n      } else {\n        logoElement = document.createElement('a');\n        logoElement.href = logoValue;\n        logoElement.appendChild(image);\n      }\n      this.logoLi_.appendChild(logoElement);\n      logoElements[logoKey] = logoElement;\n    }\n  }\n\n  this.logoLi_.style.display = !_ol_obj_.isEmpty(logos) ? '' : 'none';\n\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\n_ol_control_Attribution_.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\n_ol_control_Attribution_.prototype.handleToggle_ = function() {\n  this.element.classList.toggle('ol-collapsed');\n  if (this.collapsed_) {\n    _ol_dom_.replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    _ol_dom_.replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\n_ol_control_Attribution_.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\n_ol_control_Attribution_.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\n_ol_control_Attribution_.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\n_ol_control_Attribution_.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default _ol_control_Attribution_;\n","import _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_ from '../index.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_easing_ from '../easing.js';\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.RotateOptions=} opt_options Rotate options.\n * @api\n */\nvar _ol_control_Rotate_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  var label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  var button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  _ol_events_.listen(button, _ol_events_EventType_.CLICK,\n      _ol_control_Rotate_.prototype.handleClick_, this);\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' +\n      _ol_css_.CLASS_CONTROL;\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  var render = options.render ? options.render : _ol_control_Rotate_.render;\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    render: render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(_ol_css_.CLASS_HIDDEN);\n  }\n\n};\n\n_ol_.inherits(_ol_control_Rotate_, _ol_control_Control_);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\n_ol_control_Rotate_.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\n_ol_control_Rotate_.prototype.resetNorth_ = function() {\n  var map = this.getMap();\n  var view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.Rotate}\n * @api\n */\n_ol_control_Rotate_.render = function(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(_ol_css_.CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(_ol_css_.CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(_ol_css_.CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n};\nexport default _ol_control_Rotate_;\n","import _ol_ from '../index.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_easing_ from '../easing.js';\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.ZoomOptions=} opt_options Zoom options.\n * @api\n */\nvar _ol_control_Zoom_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  var delta = options.delta !== undefined ? options.delta : 1;\n\n  var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  var inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  _ol_events_.listen(inElement, _ol_events_EventType_.CLICK,\n      _ol_control_Zoom_.prototype.handleClick_.bind(this, delta));\n\n  var outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  _ol_events_.listen(outElement, _ol_events_EventType_.CLICK,\n      _ol_control_Zoom_.prototype.handleClick_.bind(this, -delta));\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' +\n      _ol_css_.CLASS_CONTROL;\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\n_ol_.inherits(_ol_control_Zoom_, _ol_control_Control_);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\n_ol_control_Zoom_.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\n_ol_control_Zoom_.prototype.zoomByDelta_ = function(delta) {\n  var map = this.getMap();\n  var view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  var currentResolution = view.getResolution();\n  if (currentResolution) {\n    var newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default _ol_control_Zoom_;\n","import _ol_Collection_ from './collection.js';\nimport _ol_control_Attribution_ from './control/attribution.js';\nimport _ol_control_Rotate_ from './control/rotate.js';\nimport _ol_control_Zoom_ from './control/zoom.js';\nvar _ol_control_ = {};\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link ol.control.Zoom}\n * * {@link ol.control.Rotate}\n * * {@link ol.control.Attribution}\n *\n * @param {olx.control.DefaultsOptions=} opt_options Defaults options.\n * @return {ol.Collection.<ol.control.Control>} Controls.\n * @api\n */\n_ol_control_.defaults = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new _ol_Collection_();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new _ol_control_Zoom_(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new _ol_control_Rotate_(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new _ol_control_Attribution_(options.attributionOptions));\n  }\n\n  return controls;\n\n};\nexport default _ol_control_;\n","import _ol_ from './index.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_easing_ from './easing.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {ol.events.EventTarget}\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileState} state State.\n * @param {olx.TileOptions=} opt_options Tile options.\n */\nvar _ol_Tile_ = function(tileCoord, state, opt_options) {\n  _ol_events_EventTarget_.call(this);\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {ol.TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {ol.Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ?\n    250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\n_ol_.inherits(_ol_Tile_, _ol_events_EventTarget_);\n\n\n/**\n * @protected\n */\n_ol_Tile_.prototype.changed = function() {\n  this.dispatchEvent(_ol_events_EventType_.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\n_ol_Tile_.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!ol.Tile} Best tile for rendering.\n */\n_ol_Tile_.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  var tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == _ol_TileState_.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\n_ol_Tile_.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  var tile = this.interimTile;\n  var prev = this;\n\n  do {\n    if (tile.getState() == _ol_TileState_.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == _ol_TileState_.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == _ol_TileState_.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {ol.TileCoord} The tile coordinate.\n * @api\n */\n_ol_Tile_.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {ol.TileState} State.\n */\n_ol_Tile_.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {ol.TileState} state State.\n */\n_ol_Tile_.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\n_ol_Tile_.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\n_ol_Tile_.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  var start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  var delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return _ol_easing_.easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\n_ol_Tile_.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\n_ol_Tile_.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default _ol_Tile_;\n","import _ol_ from './index.js';\nimport _ol_Tile_ from './tile.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @constructor\n * @extends {ol.Tile}\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.TileLoadFunctionType} tileLoadFunction Tile load function.\n * @param {olx.TileOptions=} opt_options Tile options.\n */\nvar _ol_ImageTile_ = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  _ol_Tile_.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {ol.TileLoadFunctionType}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\n_ol_.inherits(_ol_ImageTile_, _ol_Tile_);\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageTile_.prototype.disposeInternal = function() {\n  if (this.state == _ol_TileState_.LOADING) {\n    this.unlistenImage_();\n    this.image_ = _ol_ImageTile_.getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = _ol_TileState_.ABORT;\n  this.changed();\n  _ol_Tile_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\n_ol_ImageTile_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageTile_.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_ImageTile_.prototype.handleImageError_ = function() {\n  this.state = _ol_TileState_.ERROR;\n  this.unlistenImage_();\n  this.image_ = _ol_ImageTile_.getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_ImageTile_.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = _ol_TileState_.LOADED;\n  } else {\n    this.state = _ol_TileState_.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_ImageTile_.prototype.load = function() {\n  if (this.state == _ol_TileState_.ERROR) {\n    this.state = _ol_TileState_.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == _ol_TileState_.IDLE) {\n    this.state = _ol_TileState_.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_ImageTile_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\n_ol_ImageTile_.getBlankImage = function() {\n  var ctx = _ol_dom_.createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n};\nexport default _ol_ImageTile_;\n","import _ol_dom_ from './dom.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_math_ from './math.js';\nimport _ol_proj_ from './proj.js';\nvar _ol_reproj_ = {};\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {ol.proj.Projection} sourceProj Source projection.\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\n_ol_reproj_.calculateSourceResolution = function(sourceProj, targetProj,\n    targetCenter, targetResolution) {\n\n  var sourceCenter = _ol_proj_.transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution =\n      _ol_proj_.getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || _ol_extent_.containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor =\n        _ol_proj_.getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n};\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {ol.Coordinate} New point 1 px farther from the centroid.\n * @private\n */\n_ol_reproj_.enlargeClipPoint_ = function(centroidX, centroidY, x, y) {\n  var dX = x - centroidX, dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n};\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {ol.Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {ol.Extent} targetExtent Target extent.\n * @param {ol.reproj.Triangulation} triangulation Calculated triangulation.\n * @param {Array.<{extent: ol.Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n *             Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\n_ol_reproj_.render = function(width, height, pixelRatio,\n    sourceResolution, sourceExtent, targetResolution, targetExtent,\n    triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = _ol_dom_.createCanvasContext2D(Math.round(pixelRatio * width),\n      Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = _ol_extent_.createEmpty();\n  sources.forEach(function(src, i, arr) {\n    _ol_extent_.extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = _ol_extent_.getWidth(sourceDataExtent);\n  var canvasHeightInUnits = _ol_extent_.getHeight(sourceDataExtent);\n  var stitchContext = _ol_dom_.createCanvasContext2D(\n      Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n      Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = _ol_extent_.getWidth(src.extent);\n    var srcHeight = _ol_extent_.getHeight(src.extent);\n\n    stitchContext.drawImage(\n        src.image,\n        gutter, gutter,\n        src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n        xPos * stitchScale, yPos * stitchScale,\n        srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = _ol_extent_.getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source, target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1],\n        x1 = source[1][0], y1 = source[1][1],\n        x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution,\n        v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution,\n        v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution,\n        v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0, sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = _ol_math_.solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3, centroidY = (v0 + v1 + v2) / 3;\n    var p0 = _ol_reproj_.enlargeClipPoint_(centroidX, centroidY, u0, v0);\n    var p1 = _ol_reproj_.enlargeClipPoint_(centroidX, centroidY, u1, v1);\n    var p2 = _ol_reproj_.enlargeClipPoint_(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n        affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n        sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution,\n          v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution,\n          v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution,\n          v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n};\nexport default _ol_reproj_;\n","import _ol_ from '../index.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_math_ from '../math.js';\nimport _ol_proj_ from '../proj.js';\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {ol.proj.Projection} sourceProj Source projection.\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.Extent} targetExtent Target extent to triangulate.\n * @param {ol.Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nvar _ol_reproj_Triangulation_ = function(sourceProj, targetProj, targetExtent,\n    maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {ol.proj.Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {ol.proj.Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, ol.Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = _ol_proj_.getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {ol.Coordinate} c A coordinate.\n   * @return {ol.Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {ol.Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<ol.ReprojTriangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (_ol_extent_.getWidth(maxSourceExtent) ==\n       _ol_extent_.getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    _ol_extent_.getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    _ol_extent_.getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = _ol_extent_.getTopLeft(targetExtent);\n  var destinationTopRight = _ol_extent_.getTopRight(targetExtent);\n  var destinationBottomRight = _ol_extent_.getBottomRight(targetExtent);\n  var destinationBottomLeft = _ol_extent_.getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n      destinationTopLeft, destinationTopRight,\n      destinationBottomRight, destinationBottomLeft,\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n      _ol_.RASTER_REPROJECTION_MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }, this);\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {ol.Coordinate} a The target a coordinate.\n * @param {ol.Coordinate} b The target b coordinate.\n * @param {ol.Coordinate} c The target c coordinate.\n * @param {ol.Coordinate} aSrc The source a coordinate.\n * @param {ol.Coordinate} bSrc The source b coordinate.\n * @param {ol.Coordinate} cSrc The source c coordinate.\n * @private\n */\n_ol_reproj_Triangulation_.prototype.addTriangle_ = function(a, b, c,\n    aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {ol.Coordinate} a The target a coordinate.\n * @param {ol.Coordinate} b The target b coordinate.\n * @param {ol.Coordinate} c The target c coordinate.\n * @param {ol.Coordinate} d The target d coordinate.\n * @param {ol.Coordinate} aSrc The source a coordinate.\n * @param {ol.Coordinate} bSrc The source b coordinate.\n * @param {ol.Coordinate} cSrc The source c coordinate.\n * @param {ol.Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\n_ol_reproj_Triangulation_.prototype.addQuad_ = function(a, b, c, d,\n    aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = _ol_extent_.boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    _ol_extent_.getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = _ol_extent_.boundingExtent([a, b, c, d]);\n      var targetCoverageX =\n          _ol_extent_.getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > _ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > _ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!_ol_extent_.intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (_ol_math_.modulo(aSrc[0], sourceWorldWidth) +\n             _ol_math_.modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            _ol_math_.modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {ol.Extent} Calculated extent.\n */\n_ol_reproj_Triangulation_.prototype.calculateSourceExtent = function() {\n  var extent = _ol_extent_.createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    _ol_extent_.extendCoordinate(extent, src[0]);\n    _ol_extent_.extendCoordinate(extent, src[1]);\n    _ol_extent_.extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<ol.ReprojTriangle>} Array of the calculated triangles.\n */\n_ol_reproj_Triangulation_.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default _ol_reproj_Triangulation_;\n","import _ol_ from '../index.js';\nimport _ol_Tile_ from '../tile.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_math_ from '../math.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_reproj_Triangulation_ from '../reproj/triangulation.js';\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link ol.source.TileImage}.\n *\n * @constructor\n * @extends {ol.Tile}\n * @param {ol.proj.Projection} sourceProj Source projection.\n * @param {ol.tilegrid.TileGrid} sourceTileGrid Source tile grid.\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.tilegrid.TileGrid} targetTileGrid Target tile grid.\n * @param {ol.TileCoord} tileCoord Coordinate of the tile.\n * @param {ol.TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {ol.ReprojTileFunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nvar _ol_reproj_Tile_ = function(sourceProj, sourceTileGrid,\n    targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n    pixelRatio, gutter, getTileFunction,\n    opt_errorThreshold, opt_renderEdges) {\n  _ol_Tile_.call(this, tileCoord, _ol_TileState_.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {ol.TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<ol.Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  var maxTargetExtent = this.targetTileGrid_.getExtent();\n  var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  var limitedTargetExtent = maxTargetExtent ?\n    _ol_extent_.getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (_ol_extent_.getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = _ol_TileState_.EMPTY;\n    return;\n  }\n\n  var sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = _ol_extent_.getIntersection(\n          maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n  var targetCenter = _ol_extent_.getCenter(limitedTargetExtent);\n  var sourceResolution = _ol_reproj_.calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = _ol_TileState_.EMPTY;\n    return;\n  }\n\n  var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : _ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!ol.reproj.Triangulation}\n   */\n  this.triangulation_ = new _ol_reproj_Triangulation_(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = _ol_TileState_.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = _ol_math_.clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = _ol_math_.clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = _ol_extent_.getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!_ol_extent_.getArea(sourceExtent)) {\n    this.state = _ol_TileState_.EMPTY;\n  } else {\n    var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n    for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = _ol_TileState_.EMPTY;\n    }\n  }\n};\n\n_ol_.inherits(_ol_reproj_Tile_, _ol_Tile_);\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Tile_.prototype.disposeInternal = function() {\n  if (this.state == _ol_TileState_.LOADING) {\n    this.unlistenSources_();\n  }\n  _ol_Tile_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\n_ol_reproj_Tile_.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Tile_.prototype.reproject_ = function() {\n  var sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == _ol_TileState_.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }, this);\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = _ol_TileState_.ERROR;\n  } else {\n    var z = this.wrappedTileCoord_[0];\n    var size = this.targetTileGrid_.getTileSize(z);\n    var width = typeof size === 'number' ? size : size[0];\n    var height = typeof size === 'number' ? size : size[1];\n    var targetResolution = this.targetTileGrid_.getResolution(z);\n    var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n    this.canvas_ = _ol_reproj_.render(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n    this.state = _ol_TileState_.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Tile_.prototype.load = function() {\n  if (this.state == _ol_TileState_.IDLE) {\n    this.state = _ol_TileState_.LOADING;\n    this.changed();\n\n    var leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      var state = tile.getState();\n      if (state == _ol_TileState_.IDLE || state == _ol_TileState_.LOADING) {\n        leftToLoad++;\n\n        var sourceListenKey;\n        sourceListenKey = _ol_events_.listen(tile, _ol_events_EventType_.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == _ol_TileState_.LOADED ||\n                  state == _ol_TileState_.ERROR ||\n                  state == _ol_TileState_.EMPTY) {\n                _ol_events_.unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }, this);\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      var state = tile.getState();\n      if (state == _ol_TileState_.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Tile_.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default _ol_reproj_Tile_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_math_ from './math.js';\nimport _ol_tilecoord_ from './tilecoord.js';\nvar _ol_TileUrlFunction_ = {};\n\n\n/**\n * @param {string} template Template.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTemplate = function(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n            .replace(xRegEx, tileCoord[1].toString())\n            .replace(yRegEx, function() {\n              var y = -tileCoord[2] - 1;\n              return y.toString();\n            })\n            .replace(dashYRegEx, function() {\n              var z = tileCoord[0];\n              var range = tileGrid.getFullTileRange(z);\n              _ol_asserts_.assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n              var y = range.getHeight() + tileCoord[2];\n              return y.toString();\n            });\n      }\n    }\n  );\n};\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTemplates = function(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = _ol_TileUrlFunction_.createFromTemplate(\n        templates[i], tileGrid);\n  }\n  return _ol_TileUrlFunction_.createFromTileUrlFunctions(tileUrlFunctions);\n};\n\n\n/**\n * @param {Array.<ol.TileUrlFunctionType>} tileUrlFunctions Tile URL Functions.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTileUrlFunctions = function(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = _ol_tilecoord_.hash(tileCoord);\n        var index = _ol_math_.modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n_ol_TileUrlFunction_.nullTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n  return undefined;\n};\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\n_ol_TileUrlFunction_.expandUrl = function(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n};\nexport default _ol_TileUrlFunction_;\n","/**\n * @enum {string}\n */\nvar _ol_source_TileEventType_ = {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event ol.source.Tile.Event#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event ol.source.Tile.Event#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event ol.source.Tile.Event#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\nexport default _ol_source_TileEventType_;\n","import _ol_ from '../index.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_TileUrlFunction_ from '../tileurlfunction.js';\nimport _ol_source_Tile_ from '../source/tile.js';\nimport _ol_source_TileEventType_ from '../source/tileeventtype.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires ol.source.Tile.Event\n * @extends {ol.source.Tile}\n * @param {ol.SourceUrlTileOptions} options Image tile options.\n */\nvar _ol_source_UrlTile_ = function(options) {\n\n  _ol_source_Tile_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    logo: options.logo,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {ol.TileLoadFunctionType}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {ol.TileUrlFunctionType}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\n_ol_.inherits(_ol_source_UrlTile_, _ol_source_Tile_);\n\n\n/**\n * @type {ol.TileUrlFunctionType|undefined}\n * @protected\n */\n_ol_source_UrlTile_.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {ol.TileLoadFunctionType} TileLoadFunction\n * @api\n */\n_ol_source_UrlTile_.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {ol.TileUrlFunctionType} TileUrlFunction\n * @api\n */\n_ol_source_UrlTile_.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\n_ol_source_UrlTile_.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_source_UrlTile_.prototype.handleTileChange = function(event) {\n  var tile = /** @type {ol.Tile} */ (event.target);\n  var uid = _ol_.getUid(tile);\n  var tileState = tile.getState();\n  var type;\n  if (tileState == _ol_TileState_.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = _ol_source_TileEventType_.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == _ol_TileState_.ERROR ? _ol_source_TileEventType_.TILELOADERROR :\n      (tileState == _ol_TileState_.LOADED || tileState == _ol_TileState_.ABORT) ?\n        _ol_source_TileEventType_.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new _ol_source_Tile_.Event(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {ol.TileLoadFunctionType} tileLoadFunction Tile load function.\n * @api\n */\n_ol_source_UrlTile_.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {ol.TileUrlFunctionType} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\n_ol_source_UrlTile_.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\n_ol_source_UrlTile_.prototype.setUrl = function(url) {\n  var urls = this.urls = _ol_TileUrlFunction_.expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\n_ol_source_UrlTile_.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  var key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_UrlTile_.prototype.useTile = function(z, x, y) {\n  var tileCoordKey = _ol_tilecoord_.getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default _ol_source_UrlTile_;\n","import _ol_ from '../index.js';\nimport _ol_ImageTile_ from '../imagetile.js';\nimport _ol_TileCache_ from '../tilecache.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_reproj_Tile_ from '../reproj/tile.js';\nimport _ol_source_UrlTile_ from '../source/urltile.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires ol.source.Tile.Event\n * @extends {ol.source.UrlTile}\n * @param {olx.source.TileImageOptions} options Image tile options.\n * @api\n */\nvar _ol_source_TileImage_ = function(options) {\n\n  _ol_source_UrlTile_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    logo: options.logo,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : _ol_source_TileImage_.defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: ol.ImageTile, ol.TileCoord, ol.TileState, string,\n   *        ?string, ol.TileLoadFunctionType, olx.TileOptions=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : _ol_ImageTile_;\n\n  /**\n   * @protected\n   * @type {Object.<string, ol.TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {Object.<string, ol.tilegrid.TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\n_ol_.inherits(_ol_source_TileImage_, _ol_source_UrlTile_);\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.canExpireCache = function() {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    return _ol_source_UrlTile_.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (var key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.expireCache = function(projection, usedTiles) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    _ol_source_UrlTile_.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  var usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (var id in this.tileCacheForProjection) {\n    var tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getGutter = function(projection) {\n  if (_ol_.ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection &&\n      !_ol_proj_.equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\n_ol_source_TileImage_.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getOpaque = function(projection) {\n  if (_ol_.ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection &&\n      !_ol_proj_.equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return _ol_source_UrlTile_.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getTileGridForProjection = function(projection) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    return _ol_source_UrlTile_.prototype.getTileGridForProjection.call(this, projection);\n  }\n  var thisProj = this.getProjection();\n  if (this.tileGrid &&\n      (!thisProj || _ol_proj_.equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    var projKey = _ol_.getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n          _ol_tilegrid_.getForProjection(projection);\n    }\n    return /** @type {!ol.tilegrid.TileGrid} */ (this.tileGridForProjection[projKey]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getTileCacheForProjection = function(projection) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    return _ol_source_UrlTile_.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  var thisProj = this.getProjection();\n  if (!thisProj || _ol_proj_.equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    var projKey = _ol_.getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new _ol_TileCache_(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!ol.Tile} Tile.\n * @private\n */\n_ol_source_TileImage_.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  var tileCoord = [z, x, y];\n  var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n  var tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? _ol_TileState_.IDLE : _ol_TileState_.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n  tile.key = key;\n  _ol_events_.listen(tile, _ol_events_EventType_.CHANGE,\n      this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  var sourceProjection = /** @type {!ol.proj.Projection} */ (this.getProjection());\n  if (!_ol_.ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection ||\n      _ol_proj_.equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    var cache = this.getTileCacheForProjection(projection);\n    var tileCoord = [z, x, y];\n    var tile;\n    var tileCoordKey = _ol_tilecoord_.getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!ol.Tile} */ (cache.get(tileCoordKey));\n    }\n    var key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      var targetTileGrid = this.getTileGridForProjection(projection);\n      var wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var newTile = new _ol_reproj_Tile_(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutterInternal(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!ol.proj.Projection} projection Projection.\n * @return {!ol.Tile} Tile.\n * @protected\n */\n_ol_source_TileImage_.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  var tile = null;\n  var tileCoordKey = _ol_tilecoord_.getKeyZXY(z, x, y);\n  var key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      var interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == _ol_TileState_.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\n_ol_source_TileImage_.prototype.setRenderReprojectionEdges = function(render) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (var id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {ol.ProjectionLike} projection Projection.\n * @param {ol.tilegrid.TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\n_ol_source_TileImage_.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (_ol_.ENABLE_RASTER_REPROJECTION) {\n    var proj = _ol_proj_.get(projection);\n    if (proj) {\n      var projKey = _ol_.getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\n_ol_source_TileImage_.defaultTileLoadFunction = function(imageTile, src) {\n  imageTile.getImage().src = src;\n};\nexport default _ol_source_TileImage_;\n","import _ol_ from '../index.js';\nimport _ol_source_TileImage_ from '../source/tileimage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar _ol_source_XYZ_ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  _ol_source_TileImage_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    logo: options.logo,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\n_ol_.inherits(_ol_source_XYZ_, _ol_source_TileImage_);\nexport default _ol_source_XYZ_;\n","import _ol_ from '../index.js';\nimport _ol_source_XYZ_ from '../source/xyz.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar _ol_source_OSM_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [_ol_source_OSM_.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  _ol_source_XYZ_.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\n_ol_.inherits(_ol_source_OSM_, _ol_source_XYZ_);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\n_ol_source_OSM_.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default _ol_source_OSM_;\n","/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nvar _ol_Kinetic_ = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_Kinetic_.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\n_ol_Kinetic_.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\n_ol_Kinetic_.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\n_ol_Kinetic_.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\n_ol_Kinetic_.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default _ol_Kinetic_;\n","/**\n * @enum {string}\n */\nvar _ol_interaction_Property_ = {\n  ACTIVE: 'active'\n};\n\nexport default _ol_interaction_Property_;\n","// FIXME factor out key precondition (shift et. al)\n\nimport _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_interaction_Property_ from '../interaction/property.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link ol.interaction.KeyboardZoom} is functionally the same as\n * {@link ol.control.Zoom}, but triggered by a keyboard event not a button\n * element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {olx.interaction.InteractionOptions} options Options.\n * @extends {ol.Object}\n * @api\n */\nvar _ol_interaction_Interaction_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(ol.MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\n_ol_.inherits(_ol_interaction_Interaction_, _ol_Object_);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\n_ol_interaction_Interaction_.prototype.getActive = function() {\n  return (\n    /** @type {boolean} */ this.get(_ol_interaction_Property_.ACTIVE)\n  );\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {ol.PluggableMap} Map.\n * @api\n */\n_ol_interaction_Interaction_.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\n_ol_interaction_Interaction_.prototype.setActive = function(active) {\n  this.set(_ol_interaction_Property_.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n */\n_ol_interaction_Interaction_.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {ol.Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.pan = function(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n        [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: _ol_easing_.linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.rotate = function(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  _ol_interaction_Interaction_.rotateWithoutConstraints(\n      view, rotation, opt_anchor, opt_duration);\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.rotateWithoutConstraints = function(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\n_ol_interaction_Interaction_.zoom = function(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  _ol_interaction_Interaction_.zoomWithoutConstraints(\n      view, resolution, opt_anchor, opt_duration);\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.zoomByDelta = function(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = _ol_math_.clamp(\n        resolution,\n        view.getMinResolution() || resolutions[resolutions.length - 1],\n        view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  _ol_interaction_Interaction_.zoomWithoutConstraints(\n      view, resolution, opt_anchor, opt_duration);\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.zoomWithoutConstraints = function(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n};\nexport default _ol_interaction_Interaction_;\n","import _ol_ from '../index.js';\nimport _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.DoubleClickZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DoubleClickZoom_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_DoubleClickZoom_.handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\n_ol_.inherits(_ol_interaction_DoubleClickZoom_, _ol_interaction_Interaction_);\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.DoubleClickZoom}\n * @api\n */\n_ol_interaction_DoubleClickZoom_.handleEvent = function(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == _ol_MapBrowserEventType_.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    _ol_interaction_Interaction_.zoomByDelta(\n        view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n};\nexport default _ol_interaction_DoubleClickZoom_;\n","import _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_has_ from '../has.js';\nvar _ol_events_condition_ = {};\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\n_ol_events_condition_.altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\n_ol_events_condition_.altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return always true.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\n_ol_events_condition_.always = _ol_functions_.TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\n_ol_events_condition_.click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == _ol_MapBrowserEventType_.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\n_ol_events_condition_.mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(_ol_has_.WEBKIT && _ol_has_.MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\n_ol_events_condition_.never = _ol_functions_.FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\n_ol_events_condition_.pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\n_ol_events_condition_.singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == _ol_MapBrowserEventType_.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\n_ol_events_condition_.doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == _ol_MapBrowserEventType_.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\n_ol_events_condition_.noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\n_ol_events_condition_.platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (_ol_has_.MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\n_ol_events_condition_.shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\n_ol_events_condition_.targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\n_ol_events_condition_.mouseOnly = function(mapBrowserEvent) {\n  _ol_asserts_.assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return /** @type {ol.MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\n_ol_events_condition_.primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\nexport default _ol_events_condition_;\n","import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_MapBrowserPointerEvent_ from '../mapbrowserpointerevent.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {olx.interaction.PointerOptions=} opt_options Options.\n * @extends {ol.interaction.Interaction}\n * @api\n */\nvar _ol_interaction_Pointer_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var handleEvent = options.handleEvent ?\n    options.handleEvent : _ol_interaction_Pointer_.handleEvent;\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : _ol_interaction_Pointer_.handleDownEvent;\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : _ol_interaction_Pointer_.handleDragEvent;\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : _ol_interaction_Pointer_.handleMoveEvent;\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : _ol_interaction_Pointer_.handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {Object.<string, ol.pointer.PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<ol.pointer.PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\n_ol_.inherits(_ol_interaction_Pointer_, _ol_interaction_Interaction_);\n\n\n/**\n * @param {Array.<ol.pointer.PointerEvent>} pointerEvents List of events.\n * @return {ol.Pixel} Centroid pixel.\n */\n_ol_interaction_Pointer_.centroid = function(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n * @private\n */\n_ol_interaction_Pointer_.prototype.isPointerDraggingEvent_ = function(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === _ol_MapBrowserEventType_.POINTERDOWN ||\n    type === _ol_MapBrowserEventType_.POINTERDRAG ||\n    type === _ol_MapBrowserEventType_.POINTERUP;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\n_ol_interaction_Pointer_.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (this.isPointerDraggingEvent_(mapBrowserEvent)) {\n    var event = mapBrowserEvent.pointerEvent;\n\n    var id = event.pointerId.toString();\n    if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        _ol_MapBrowserEventType_.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = _ol_obj_.getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleDragEvent = _ol_.nullFunction;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleUpEvent = _ol_functions_.FALSE;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleDownEvent = _ol_functions_.FALSE;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleMoveEvent = _ol_.nullFunction;\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Pointer}\n * @api\n */\n_ol_interaction_Pointer_.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof _ol_MapBrowserPointerEvent_)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n};\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overidden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\n_ol_interaction_Pointer_.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\nexport default _ol_interaction_Pointer_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.DragPanOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragPan_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_DragPan_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_DragPan_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_DragPan_.handleUpEvent_\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {ol.Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {ol.Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\n_ol_.inherits(_ol_interaction_DragPan_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.DragPan}\n * @private\n */\n_ol_interaction_DragPan_.handleDragEvent_ = function(mapBrowserEvent) {\n  var targetPointers = this.targetPointers;\n  var centroid =\n      _ol_interaction_Pointer_.centroid(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var viewState = view.getState();\n      var center = [deltaX, deltaY];\n      _ol_coordinate_.scale(center, viewState.resolution);\n      _ol_coordinate_.rotate(center, viewState.rotation);\n      _ol_coordinate_.add(center, viewState.center);\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.DragPan}\n * @private\n */\n_ol_interaction_DragPan_.handleUpEvent_ = function(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!ol.Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: _ol_easing_.easeOut\n      });\n    }\n    view.setHint(_ol_ViewHint_.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.DragPan}\n * @private\n */\n_ol_interaction_DragPan_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_DragPan_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_DragPan_;\n","import _ol_ from '../index.js';\nimport _ol_RotationConstraint_ from '../rotationconstraint.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.DragRotateOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragRotate_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_DragRotate_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_DragRotate_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_DragRotate_.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\n_ol_.inherits(_ol_interaction_DragRotate_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.DragRotate}\n * @private\n */\n_ol_interaction_DragRotate_.handleDragEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === _ol_RotationConstraint_.disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    _ol_interaction_Interaction_.rotateWithoutConstraints(\n        view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.DragRotate}\n * @private\n */\n_ol_interaction_DragRotate_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(_ol_ViewHint_.INTERACTING, -1);\n  var rotation = view.getRotation();\n  _ol_interaction_Interaction_.rotate(view, rotation,\n      undefined, this.duration_);\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.DragRotate}\n * @private\n */\n_ol_interaction_DragRotate_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (_ol_events_condition_.mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(_ol_ViewHint_.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_DragRotate_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_DragRotate_;\n","// FIXME add rotation\n\nimport _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\n\n/**\n * @constructor\n * @extends {ol.Disposable}\n * @param {string} className CSS class name.\n */\nvar _ol_render_Box_ = function(className) {\n\n  /**\n   * @type {ol.geom.Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {ol.Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {ol.Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\n_ol_.inherits(_ol_render_Box_, _ol_Disposable_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_Box_.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\n_ol_render_Box_.prototype.render_ = function() {\n  var startPixel = this.startPixel_;\n  var endPixel = this.endPixel_;\n  var px = 'px';\n  var style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n */\n_ol_render_Box_.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    var style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {ol.Pixel} startPixel Start pixel.\n * @param {ol.Pixel} endPixel End pixel.\n */\n_ol_render_Box_.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\n_ol_render_Box_.prototype.createOrUpdateGeometry = function() {\n  var startPixel = this.startPixel_;\n  var endPixel = this.endPixel_;\n  var pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new _ol_geom_Polygon_([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {ol.geom.Polygon} Geometry.\n */\n_ol_render_Box_.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default _ol_render_Box_;\n","// FIXME draw drag box\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_ from '../index.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\nimport _ol_render_Box_ from '../render/box.js';\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link ol.interaction.DragZoom} and\n * {@link ol.interaction.DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.DragBox.Event\n * @param {olx.interaction.DragBoxOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragBox_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_DragBox_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_DragBox_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_DragBox_.handleUpEvent_\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.render.Box}\n   * @private\n   */\n  this.box_ = new _ol_render_Box_(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.always;\n\n  /**\n   * @private\n   * @type {ol.DragBoxEndConditionType}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : _ol_interaction_DragBox_.defaultBoxEndCondition;\n};\n\n_ol_.inherits(_ol_interaction_DragBox_, _ol_interaction_Pointer_);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {ol.MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {ol.Pixel} startPixel The starting pixel of the box.\n * @param {ol.Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {ol.interaction.DragBox}\n */\n_ol_interaction_DragBox_.defaultBoxEndCondition = function(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.DragBox}\n * @private\n */\n_ol_interaction_DragBox_.handleDragEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new _ol_interaction_DragBox_.Event(_ol_interaction_DragBox_.EventType_.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n};\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {ol.geom.Polygon} Geometry.\n * @api\n */\n_ol_interaction_DragBox_.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\n_ol_interaction_DragBox_.prototype.onBoxEnd = _ol_.nullFunction;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.DragBox}\n * @private\n */\n_ol_interaction_DragBox_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n      this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new _ol_interaction_DragBox_.Event(_ol_interaction_DragBox_.EventType_.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.DragBox}\n * @private\n */\n_ol_interaction_DragBox_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (_ol_events_condition_.mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new _ol_interaction_DragBox_.Event(_ol_interaction_DragBox_.EventType_.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_interaction_DragBox_.EventType_ = {\n  /**\n   * Triggered upon drag box start.\n   * @event ol.interaction.DragBox.Event#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event ol.interaction.DragBox.Event#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event ol.interaction.DragBox.Event#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {ol.Coordinate} coordinate The event coordinate.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {ol.events.Event}\n * @constructor\n * @implements {oli.DragBoxEvent}\n */\n_ol_interaction_DragBox_.Event = function(type, coordinate, mapBrowserEvent) {\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n_ol_.inherits(_ol_interaction_DragBox_.Event, _ol_events_Event_);\nexport default _ol_interaction_DragBox_;\n","import _ol_ from '../index.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_interaction_DragBox_ from '../interaction/dragbox.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {ol.interaction.DragBox}\n * @param {olx.interaction.DragZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragZoom_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  var condition = options.condition ?\n    options.condition : _ol_events_condition_.shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  _ol_interaction_DragBox_.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\n_ol_.inherits(_ol_interaction_DragZoom_, _ol_interaction_DragBox_);\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_DragZoom_.prototype.onBoxEnd = function() {\n  var map = this.getMap();\n\n  var view = /** @type {!ol.View} */ (map.getView());\n\n  var size = /** @type {!ol.Size} */ (map.getSize());\n\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = _ol_extent_.createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(_ol_extent_.getBottomLeft(extent)),\n      map.getPixelFromCoordinate(_ol_extent_.getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    _ol_extent_.scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n      view.getResolutionForExtent(extent, size));\n\n  var center = _ol_extent_.getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: _ol_easing_.easeOut\n  });\n\n};\nexport default _ol_interaction_DragZoom_;\n","/**\n * @enum {number}\n * @const\n */\nvar _ol_events_KeyCode_ = {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\nexport default _ol_events_KeyCode_;\n","import _ol_ from '../index.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_events_KeyCode_ from '../events/keycode.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link ol.Map}. `document` never loses focus but, for any other element,\n * focus will have to be on, and returned to, this element if the keys are to\n * function.\n * See also {@link ol.interaction.KeyboardZoom}.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.KeyboardPanOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_KeyboardPan_ = function(opt_options) {\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_KeyboardPan_.handleEvent\n  });\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.noModifierKeys(mapBrowserEvent) &&\n      _ol_events_condition_.targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\n_ol_.inherits(_ol_interaction_KeyboardPan_, _ol_interaction_Interaction_);\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.KeyboardPan}\n * @api\n */\n_ol_interaction_KeyboardPan_.handleEvent = function(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == _ol_events_EventType_.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == _ol_events_KeyCode_.DOWN ||\n        keyCode == _ol_events_KeyCode_.LEFT ||\n        keyCode == _ol_events_KeyCode_.RIGHT ||\n        keyCode == _ol_events_KeyCode_.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == _ol_events_KeyCode_.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == _ol_events_KeyCode_.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == _ol_events_KeyCode_.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      _ol_coordinate_.rotate(delta, view.getRotation());\n      _ol_interaction_Interaction_.pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n};\nexport default _ol_interaction_KeyboardPan_;\n","import _ol_ from '../index.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link ol.Map}. `document` never loses focus but, for any other element,\n * focus will have to be on, and returned to, this element if the keys are to\n * function.\n * See also {@link ol.interaction.KeyboardPan}.\n *\n * @constructor\n * @param {olx.interaction.KeyboardZoomOptions=} opt_options Options.\n * @extends {ol.interaction.Interaction}\n * @api\n */\nvar _ol_interaction_KeyboardZoom_ = function(opt_options) {\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_KeyboardZoom_.handleEvent\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ? options.condition :\n    _ol_events_condition_.targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\n_ol_.inherits(_ol_interaction_KeyboardZoom_, _ol_interaction_Interaction_);\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.KeyboardZoom}\n * @api\n */\n_ol_interaction_KeyboardZoom_.handleEvent = function(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == _ol_events_EventType_.KEYDOWN ||\n      mapBrowserEvent.type == _ol_events_EventType_.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      _ol_interaction_Interaction_.zoomByDelta(\n          view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n};\nexport default _ol_interaction_KeyboardZoom_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_has_ from '../has.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.MouseWheelZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_MouseWheelZoom_ = function(opt_options) {\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_MouseWheelZoom_.handleEvent\n  });\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {?ol.Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {ol.interaction.MouseWheelZoom.Mode_|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\n_ol_.inherits(_ol_interaction_MouseWheelZoom_, _ol_interaction_Interaction_);\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {ol.interaction.MouseWheelZoom}\n * @api\n */\n_ol_interaction_MouseWheelZoom_.handleEvent = function(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  if (type !== _ol_events_EventType_.WHEEL && type !== _ol_events_EventType_.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == _ol_events_EventType_.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (_ol_has_.FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= _ol_has_.DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == _ol_events_EventType_.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (_ol_has_.SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      _ol_interaction_MouseWheelZoom_.Mode_.TRACKPAD :\n      _ol_interaction_MouseWheelZoom_.Mode_.WHEEL;\n  }\n\n  if (this.mode_ === _ol_interaction_MouseWheelZoom_.Mode_.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: _ol_easing_.easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: _ol_easing_.easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: _ol_easing_.easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n};\n\n\n/**\n * @private\n */\n_ol_interaction_MouseWheelZoom_.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  var view = this.getMap().getView();\n  view.setHint(_ol_ViewHint_.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {ol.PluggableMap} map Map.\n */\n_ol_interaction_MouseWheelZoom_.prototype.handleWheelZoom_ = function(map) {\n  var view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  var maxDelta = _ol_.MOUSEWHEELZOOM_MAXDELTA;\n  var delta = _ol_math_.clamp(this.delta_, -maxDelta, maxDelta);\n  _ol_interaction_Interaction_.zoomByDelta(view, -delta, this.lastAnchor_,\n      this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\n_ol_interaction_MouseWheelZoom_.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_interaction_MouseWheelZoom_.Mode_ = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\nexport default _ol_interaction_MouseWheelZoom_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\nimport _ol_RotationConstraint_ from '../rotationconstraint.js';\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PinchRotateOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_PinchRotate_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_PinchRotate_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_PinchRotate_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_PinchRotate_.handleUpEvent_\n  });\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\n_ol_.inherits(_ol_interaction_PinchRotate_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.PinchRotate}\n * @private\n */\n_ol_interaction_PinchRotate_.handleDragEvent_ = function(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === _ol_RotationConstraint_.disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = _ol_interaction_Pointer_.centroid(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    _ol_interaction_Interaction_.rotateWithoutConstraints(view,\n        rotation + rotationDelta, this.anchor_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.PinchRotate}\n * @private\n */\n_ol_interaction_PinchRotate_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(_ol_ViewHint_.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      _ol_interaction_Interaction_.rotate(\n          view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.PinchRotate}\n * @private\n */\n_ol_interaction_PinchRotate_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_PinchRotate_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_PinchRotate_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PinchZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_PinchZoom_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_PinchZoom_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_PinchZoom_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_PinchZoom_.handleUpEvent_\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\n_ol_.inherits(_ol_interaction_PinchZoom_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.PinchZoom}\n * @private\n */\n_ol_interaction_PinchZoom_.handleDragEvent_ = function(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = _ol_interaction_Pointer_.centroid(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  _ol_interaction_Interaction_.zoomWithoutConstraints(view, newResolution, this.anchor_);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.PinchZoom}\n * @private\n */\n_ol_interaction_PinchZoom_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(_ol_ViewHint_.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      _ol_interaction_Interaction_.zoom(view, resolution,\n          this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.PinchZoom}\n * @private\n */\n_ol_interaction_PinchZoom_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_PinchZoom_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_PinchZoom_;\n","import _ol_Collection_ from './collection.js';\nimport _ol_Kinetic_ from './kinetic.js';\nimport _ol_interaction_DoubleClickZoom_ from './interaction/doubleclickzoom.js';\nimport _ol_interaction_DragPan_ from './interaction/dragpan.js';\nimport _ol_interaction_DragRotate_ from './interaction/dragrotate.js';\nimport _ol_interaction_DragZoom_ from './interaction/dragzoom.js';\nimport _ol_interaction_KeyboardPan_ from './interaction/keyboardpan.js';\nimport _ol_interaction_KeyboardZoom_ from './interaction/keyboardzoom.js';\nimport _ol_interaction_MouseWheelZoom_ from './interaction/mousewheelzoom.js';\nimport _ol_interaction_PinchRotate_ from './interaction/pinchrotate.js';\nimport _ol_interaction_PinchZoom_ from './interaction/pinchzoom.js';\nvar _ol_interaction_ = {};\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link ol.interaction.Interaction} instances and insert them into a\n * {@link ol.Collection} in the order you want before creating your\n * {@link ol.Map} instance. The default set of interactions, in sequence, is:\n * * {@link ol.interaction.DragRotate}\n * * {@link ol.interaction.DoubleClickZoom}\n * * {@link ol.interaction.DragPan}\n * * {@link ol.interaction.PinchRotate}\n * * {@link ol.interaction.PinchZoom}\n * * {@link ol.interaction.KeyboardPan}\n * * {@link ol.interaction.KeyboardZoom}\n * * {@link ol.interaction.MouseWheelZoom}\n * * {@link ol.interaction.DragZoom}\n *\n * @param {olx.interaction.DefaultsOptions=} opt_options Defaults options.\n * @return {ol.Collection.<ol.interaction.Interaction>} A collection of\n * interactions to be used with the ol.Map constructor's interactions option.\n * @api\n */\n_ol_interaction_.defaults = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new _ol_Collection_();\n\n  var kinetic = new _ol_Kinetic_(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new _ol_interaction_DragRotate_());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new _ol_interaction_DoubleClickZoom_({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new _ol_interaction_DragPan_({\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new _ol_interaction_PinchRotate_());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new _ol_interaction_PinchZoom_({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new _ol_interaction_KeyboardPan_());\n    interactions.push(new _ol_interaction_KeyboardZoom_({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new _ol_interaction_MouseWheelZoom_({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new _ol_interaction_DragZoom_({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n};\nexport default _ol_interaction_;\n","import _ol_ from './index.js';\nimport _ol_structs_LRUCache_ from './structs/lrucache.js';\nimport _ol_tilecoord_ from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {ol.structs.LRUCache.<ol.Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nvar _ol_TileCache_ = function(opt_highWaterMark) {\n\n  _ol_structs_LRUCache_.call(this, opt_highWaterMark);\n\n};\n\n_ol_.inherits(_ol_TileCache_, _ol_structs_LRUCache_);\n\n\n/**\n * @param {Object.<string, ol.TileRange>} usedTiles Used tiles.\n */\n_ol_TileCache_.prototype.expireCache = function(usedTiles) {\n  var tile, zKey;\n  while (this.canExpireCache()) {\n    tile = this.peekLast();\n    zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\n_ol_TileCache_.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  var key = this.peekFirstKey();\n  var tileCoord = _ol_tilecoord_.fromKey(key);\n  var z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(_ol_tilecoord_.getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default _ol_TileCache_;\n","/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nvar _ol_layer_VectorRenderType_ = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\nexport default _ol_layer_VectorRenderType_;\n","import _ol_ from './index.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @implements {oli.AssertionError}\n * @param {number} code Error code.\n */\nvar _ol_AssertionError_ = function(code) {\n\n  var path = _ol_.VERSION ? _ol_.VERSION.split('-')[0] : 'latest';\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\n_ol_.inherits(_ol_AssertionError_, Error);\nexport default _ol_AssertionError_;\n","import _ol_ from '../index.js';\nimport _ol_LayerType_ from '../layertype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_layer_VectorRenderType_ from '../layer/vectorrendertype.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_style_Style_ from '../style/style.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link ol.Object}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {ol.layer.Layer}\n * @fires ol.render.Event\n * @param {olx.layer.VectorOptions=} opt_options Options.\n * @api\n */\nvar _ol_layer_Vector_ = function(opt_options) {\n  var options = opt_options ?\n    opt_options : /** @type {olx.layer.VectorOptions} */ ({});\n\n  var baseOptions = _ol_obj_.assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  _ol_layer_Layer_.call(this, /** @type {olx.layer.LayerOptions} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {ol.StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {ol.layer.VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || _ol_layer_VectorRenderType_.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {ol.LayerType}\n   */\n  this.type = _ol_LayerType_.VECTOR;\n\n};\n\n_ol_.inherits(_ol_layer_Vector_, _ol_layer_Layer_);\n\n\n/**\n * @return {boolean} Declutter.\n */\n_ol_layer_Vector_.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\n_ol_layer_Vector_.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\n_ol_layer_Vector_.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(ol.Feature, ol.Feature): number|null|undefined} Render\n *     order.\n */\n_ol_layer_Vector_.prototype.getRenderOrder = function() {\n  return (\n  /** @type {ol.RenderOrderFunction|null|undefined} */ this.get(_ol_layer_Vector_.Property_.RENDER_ORDER)\n  );\n};\n\n\n/**\n * Return the associated {@link ol.source.Vector vectorsource} of the layer.\n * @function\n * @return {ol.source.Vector} Source.\n * @api\n */\n_ol_layer_Vector_.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n *     Layer style.\n * @api\n */\n_ol_layer_Vector_.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {ol.StyleFunction|undefined} Layer style function.\n * @api\n */\n_ol_layer_Vector_.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\n_ol_layer_Vector_.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\n_ol_layer_Vector_.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {ol.RenderOrderFunction|null|undefined} renderOrder\n *     Render order.\n */\n_ol_layer_Vector_.prototype.setRenderOrder = function(renderOrder) {\n  this.set(_ol_layer_Vector_.Property_.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link ol.style} for information on the default style.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\n_ol_layer_Vector_.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : _ol_style_Style_.defaultFunction;\n  this.styleFunction_ = style === null ?\n    undefined : _ol_style_Style_.createFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {ol.layer.VectorRenderType|string} The render mode.\n */\n_ol_layer_Vector_.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_layer_Vector_.Property_ = {\n  RENDER_ORDER: 'renderOrder'\n};\nexport default _ol_layer_Vector_;\n","/**\n * @enum {string}\n */\nvar _ol_layer_TileProperty_ = {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\nexport default _ol_layer_TileProperty_;\n","import _ol_ from '../index.js';\nimport _ol_LayerType_ from '../layertype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_layer_TileProperty_ from '../layer/tileproperty.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link ol.Object}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {ol.layer.Layer}\n * @fires ol.render.Event\n * @param {olx.layer.TileOptions=} opt_options Tile layer options.\n * @api\n */\nvar _ol_layer_Tile_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  var baseOptions = _ol_obj_.assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  _ol_layer_Layer_.call(this,  /** @type {olx.layer.LayerOptions} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {ol.LayerType}\n   */\n  this.type = _ol_LayerType_.TILE;\n\n};\n\n_ol_.inherits(_ol_layer_Tile_, _ol_layer_Layer_);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.getPreload = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_TileProperty_.PRELOAD)\n  );\n};\n\n\n/**\n * Return the associated {@link ol.source.Tile tilesource} of the layer.\n * @function\n * @return {ol.source.Tile} Source.\n * @api\n */\n_ol_layer_Tile_.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.setPreload = function(preload) {\n  this.set(_ol_layer_TileProperty_.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.getUseInterimTilesOnError = function() {\n  return (\n  /** @type {boolean} */ this.get(_ol_layer_TileProperty_.USE_INTERIM_TILES_ON_ERROR)\n  );\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(\n      _ol_layer_TileProperty_.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default _ol_layer_Tile_;\n","/**\n * @enum {string}\n */\nvar _ol_format_FormatType_ = {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\nexport default _ol_format_FormatType_;\n","import _ol_array_ from './array.js';\nvar _ol_xml_ = {};\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link ol.xml.createElementNS} and\n * {@link ol.xml.setAttributeNS}\n * @const\n * @type {Document}\n */\n_ol_xml_.DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\n_ol_xml_.createElementNS = function(namespaceURI, qualifiedName) {\n  return _ol_xml_.DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n};\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\n_ol_xml_.getAllTextContent = function(node, normalizeWhitespace) {\n  return _ol_xml_.getAllTextContent_(node, normalizeWhitespace, []).join('');\n};\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\n_ol_xml_.getAllTextContent_ = function(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      _ol_xml_.getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n};\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\n_ol_xml_.isDocument = function(value) {\n  return value instanceof Document;\n};\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\n_ol_xml_.isNode = function(value) {\n  return value instanceof Node;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\n_ol_xml_.getAttributeNS = function(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @param {string|number} value Value.\n */\n_ol_xml_.setAttributeNS = function(node, namespaceURI, name, value) {\n  node.setAttributeNS(namespaceURI, name, value);\n};\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\n_ol_xml_.parse = function(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n};\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeArrayExtender = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array.<*>} */\n              (objectStack[objectStack.length - 1]);\n        _ol_array_.extend(array, value);\n      }\n    }\n  );\n};\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeArrayPusher = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var array = objectStack[objectStack.length - 1];\n        array.push(value);\n      }\n    });\n};\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeReplacer = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n};\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeObjectPropertyPusher = function(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {Object} */\n              (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ?\n          opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n};\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeObjectPropertySetter = function(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {Object} */\n              (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ?\n          opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n};\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link ol.XmlNodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {ol.XmlSerializer} Serializer.\n * @template T, V\n */\n_ol_xml_.makeChildAppender = function(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this,\n        node, value, objectStack);\n    var parent = objectStack[objectStack.length - 1];\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n};\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link ol.xml.serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {ol.XmlSerializer} Serializer.\n * @template T, V\n */\n_ol_xml_.makeArraySerializer = function(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = _ol_xml_.makeSimpleNodeFactory(node.localName);\n    }\n    _ol_xml_.serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n};\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link ol.xml.serialize} or {@link ol.xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\n_ol_xml_.makeSimpleNodeFactory = function(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = objectStack[objectStack.length - 1];\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n      var namespaceURI = opt_namespaceURI;\n      if (opt_namespaceURI === undefined) {\n        namespaceURI = node.namespaceURI;\n      }\n      return _ol_xml_.createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n};\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link ol.xml.serialize} or\n * {@link ol.xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\n_ol_xml_.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link ol.xml.serialize} or\n * {@link ol.xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\n_ol_xml_.makeSequence = function(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n};\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\n_ol_xml_.makeStructureNS = function(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, *>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n};\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, ol.XmlParser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\n_ol_xml_.parseNode = function(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n};\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, ol.XmlParser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\n_ol_xml_.pushParseAndPop = function(\n    object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  _ol_xml_.parseNode(parsersNS, node, objectStack, opt_this);\n  return objectStack.pop();\n};\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, ol.XmlSerializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link ol.Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\n_ol_xml_.serialize = function(\n    serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this, value, objectStack,\n          opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n            .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, ol.XmlSerializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link ol.Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\n_ol_xml_.pushSerializeAndPop = function(object,\n    serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  _ol_xml_.serialize(\n      serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return objectStack.pop();\n};\nexport default _ol_xml_;\n","import _ol_ from './index.js';\nimport _ol_format_FormatType_ from './format/formattype.js';\nimport _ol_xml_ from './xml.js';\nvar _ol_featureloader_ = {};\n\n\n/**\n * @param {string|ol.FeatureUrlFunction} url Feature URL service.\n * @param {ol.format.Feature} format Feature format.\n * @param {function(this:ol.VectorTile, Array.<ol.Feature>, ol.proj.Projection, ol.Extent)|function(this:ol.source.Vector, Array.<ol.Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:ol.VectorTile)|function(this:ol.source.Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {ol.FeatureLoader} The feature loader.\n */\n_ol_featureloader_.loadFeaturesXhr = function(url, format, success, failure) {\n  return (\n    /**\n     * @param {ol.Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {ol.proj.Projection} projection Projection.\n     * @this {ol.source.Vector|ol.VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n          typeof url === 'function' ? url(extent, resolution, projection) : url,\n          true);\n      if (format.getType() == _ol_format_FormatType_.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == _ol_format_FormatType_.JSON ||\n                type == _ol_format_FormatType_.TEXT) {\n            source = xhr.responseText;\n          } else if (type == _ol_format_FormatType_.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = _ol_xml_.parse(xhr.responseText);\n            }\n          } else if (type == _ol_format_FormatType_.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n                {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n};\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|ol.FeatureUrlFunction} url Feature URL service.\n * @param {ol.format.Feature} format Feature format.\n * @return {ol.FeatureLoader} The feature loader.\n * @api\n */\n_ol_featureloader_.xhr = function(url, format) {\n  return _ol_featureloader_.loadFeaturesXhr(url, format,\n      /**\n       * @param {Array.<ol.Feature>} features The loaded features.\n       * @param {ol.proj.Projection} dataProjection Data projection.\n       * @this {ol.source.Vector}\n       */\n      function(features, dataProjection) {\n        this.addFeatures(features);\n      }, /* FIXME handle error */ _ol_.nullFunction);\n};\nexport default _ol_featureloader_;\n","var _ol_loadingstrategy_ = {};\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.Extent>} Extents.\n * @api\n */\n_ol_loadingstrategy_.all = function(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n};\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.Extent>} Extents.\n * @api\n */\n_ol_loadingstrategy_.bbox = function(extent, resolution) {\n  return [extent];\n};\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {function(ol.Extent, number): Array.<ol.Extent>} Loading strategy.\n * @api\n */\n_ol_loadingstrategy_.tile = function(tileGrid) {\n  return (\n  /**\n       * @param {ol.Extent} extent Extent.\n       * @param {number} resolution Resolution.\n       * @return {Array.<ol.Extent>} Extents.\n       */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<ol.Extent>} */\n      var extents = [];\n      /** @type {ol.TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    });\n};\nexport default _ol_loadingstrategy_;\n","/**\n * @enum {string}\n */\nvar _ol_source_VectorEventType_ = {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol.source.Vector.Event#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol.source.Vector.Event#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol.source.Vector.Event#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link ol.source.Vector#clear source.clear()} for exceptions.\n   * @event ol.source.Vector.Event#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\nexport default _ol_source_VectorEventType_;\n","// FIXME bulk feature upload - suppress events\n// FIXME make change-detection more refined (notably, geometry hint)\n\nimport _ol_ from '../index.js';\nimport _ol_Collection_ from '../collection.js';\nimport _ol_CollectionEventType_ from '../collectioneventtype.js';\nimport _ol_ObjectEventType_ from '../objecteventtype.js';\nimport _ol_array_ from '../array.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_featureloader_ from '../featureloader.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_loadingstrategy_ from '../loadingstrategy.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_source_Source_ from '../source/source.js';\nimport _ol_source_State_ from '../source/state.js';\nimport _ol_source_VectorEventType_ from '../source/vectoreventtype.js';\nimport _ol_structs_RBush_ from '../structs/rbush.js';\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link ol.source.VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {ol.source.Source}\n * @fires ol.source.Vector.Event\n * @param {olx.source.VectorOptions=} opt_options Vector source options.\n * @api\n */\nvar _ol_source_Vector_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_source_Source_.call(this, {\n    attributions: options.attributions,\n    logo: options.logo,\n    projection: undefined,\n    state: _ol_source_State_.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {ol.FeatureLoader}\n   */\n  this.loader_ = _ol_.nullFunction;\n\n  /**\n   * @private\n   * @type {ol.format.Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|ol.FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    _ol_asserts_.assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = _ol_featureloader_.xhr(this.url_, /** @type {ol.format.Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {ol.LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy :\n    _ol_loadingstrategy_.all;\n\n  var useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {ol.structs.RBush.<ol.Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new _ol_structs_RBush_() : null;\n\n  /**\n   * @private\n   * @type {ol.structs.RBush.<{extent: ol.Extent}>}\n   */\n  this.loadedExtentsRtree_ = new _ol_structs_RBush_();\n\n  /**\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by ol.getUid(feature)).\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<ol.EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  var collection, features;\n  if (options.features instanceof _ol_Collection_) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new _ol_Collection_(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\n_ol_.inherits(_ol_source_Vector_, _ol_source_Source_);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {ol.Feature} feature Feature to add.\n * @api\n */\n_ol_source_Vector_.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {ol.Feature} feature Feature.\n * @protected\n */\n_ol_source_Vector_.prototype.addFeatureInternal = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    var extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n      new _ol_source_Vector_.Event(_ol_source_VectorEventType_.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {ol.Feature} feature The feature.\n * @private\n */\n_ol_source_Vector_.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    _ol_events_.listen(feature, _ol_events_EventType_.CHANGE,\n        this.handleFeatureChange_, this),\n    _ol_events_.listen(feature, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {ol.Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\n_ol_source_Vector_.prototype.addToIndex_ = function(featureKey, feature) {\n  var valid = true;\n  var id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    _ol_asserts_.assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<ol.Feature>} features Features to add.\n * @api\n */\n_ol_source_Vector_.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<ol.Feature>} features Features.\n * @protected\n */\n_ol_source_Vector_.prototype.addFeaturesInternal = function(features) {\n  var featureKey, i, length, feature;\n\n  var extents = [];\n  var newFeatures = [];\n  var geometryFeatures = [];\n\n  for (i = 0, length = features.length; i < length; i++) {\n    feature = features[i];\n    featureKey = _ol_.getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (i = 0, length = newFeatures.length; i < length; i++) {\n    feature = newFeatures[i];\n    featureKey = _ol_.getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new _ol_source_Vector_.Event(\n        _ol_source_VectorEventType_.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!ol.Collection.<ol.Feature>} collection Collection.\n * @private\n */\n_ol_source_Vector_.prototype.bindFeaturesCollection_ = function(collection) {\n  var modifyingCollection = false;\n  _ol_events_.listen(this, _ol_source_VectorEventType_.ADDFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n  _ol_events_.listen(this, _ol_source_VectorEventType_.REMOVEFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n  _ol_events_.listen(collection, _ol_CollectionEventType_.ADD,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {ol.Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n  _ol_events_.listen(collection, _ol_CollectionEventType_.REMOVE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {ol.Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link removefeature} events.\n * @api\n */\n_ol_source_Vector_.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (var featureId in this.featureChangeKeys_) {\n      var keys = this.featureChangeKeys_[featureId];\n      keys.forEach(_ol_events_.unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (var id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  var clearEvent = new _ol_source_Vector_.Event(_ol_source_VectorEventType_.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n *\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeature = function(callback, opt_this) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback, opt_this);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback, opt_this);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n */\n_ol_source_Vector_.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback, opt_this) {\n  var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    var geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback.call(opt_this, feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link ol.source.Vector#forEachFeatureIntersectingExtent\n * source.forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link ol.source.Vector#forEachFeature}.\n *\n * @param {ol.Extent} extent Extent.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeatureInExtent = function(extent, callback, opt_this) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback, opt_this);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback, opt_this);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link ol.source.Vector#forEachFeatureInExtent\n * source.forEachFeatureInExtent()} method instead.\n *\n * @param {ol.Extent} extent Extent.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeatureIntersectingExtent = function(extent, callback, opt_this) {\n  return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {ol.Feature} feature Feature.\n       * @return {S|undefined} The return value from the last call to the callback.\n       * @template S\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback.call(opt_this, feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link ol.Collection} as `features`.\n * @return {ol.Collection.<ol.Feature>} The collection of features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeatures = function() {\n  var features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!_ol_obj_.isEmpty(this.nullGeometryFeatures_)) {\n      _ol_array_.extend(\n          features, _ol_obj_.getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return /** @type {Array.<ol.Feature>} */ (features);\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  var features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Extent} extent Extent.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {function(ol.Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link ol.Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {ol.Feature} Closest feature.\n * @api\n */\n_ol_source_Vector_.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var closestFeature = null;\n  var closestPoint = [NaN, NaN];\n  var minSquaredDistance = Infinity;\n  var extent = [-Infinity, -Infinity, Infinity, Infinity];\n  var filter = opt_filter ? opt_filter : _ol_functions_.TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {ol.Feature} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n              x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_source_Vector_.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {ol.Feature} The feature (or `null` if not found).\n * @api\n */\n_ol_source_Vector_.prototype.getFeatureById = function(id) {\n  var feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {ol.format.Feature|undefined} The feature format.\n * @api\n */\n_ol_source_Vector_.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\n_ol_source_Vector_.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\n_ol_source_Vector_.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|ol.FeatureUrlFunction|undefined} The url.\n * @api\n */\n_ol_source_Vector_.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @private\n */\n_ol_source_Vector_.prototype.handleFeatureChange_ = function(event) {\n  var feature = /** @type {ol.Feature} */ (event.target);\n  var featureKey = _ol_.getUid(feature).toString();\n  var geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    var extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  var id = feature.getId();\n  if (id !== undefined) {\n    var sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new _ol_source_Vector_.Event(\n      _ol_source_VectorEventType_.CHANGEFEATURE, feature));\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_source_Vector_.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() &&\n      _ol_obj_.isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {ol.proj.Projection} projection Projection.\n */\n_ol_source_Vector_.prototype.loadFeatures = function(\n    extent, resolution, projection) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var extentsToLoad = this.strategy_(extent, resolution);\n  var i, ii;\n  for (i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    var extentToLoad = extentsToLoad[i];\n    var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: ol.Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return _ol_extent_.containsExtent(object.extent, extentToLoad);\n        });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {ol.Extent} extent Extent.\n * @api\n */\n_ol_source_Vector_.prototype.removeLoadedExtent = function(extent) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (_ol_extent_.equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link ol.source.Vector#clear source.clear()} method\n * instead.\n * @param {ol.Feature} feature Feature to remove.\n * @api\n */\n_ol_source_Vector_.prototype.removeFeature = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {ol.Feature} feature Feature.\n * @protected\n */\n_ol_source_Vector_.prototype.removeFeatureInternal = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(_ol_events_.unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  var id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new _ol_source_Vector_.Event(\n      _ol_source_VectorEventType_.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {ol.Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\n_ol_source_Vector_.prototype.removeFromIdIndex_ = function(feature) {\n  var removed = false;\n  for (var id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {ol.FeatureLoader} loader The loader to set.\n * @api\n */\n_ol_source_Vector_.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.source.Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.source.Vector.Event}\n * @param {string} type Type.\n * @param {ol.Feature=} opt_feature Feature.\n */\n_ol_source_Vector_.Event = function(type, opt_feature) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {ol.Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\n_ol_.inherits(_ol_source_Vector_.Event, _ol_events_Event_);\nexport default _ol_source_Vector_;\n","/**\n * Constants for event names.\n * @enum {string}\n */\nvar _ol_pointer_EventType_ = {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\nexport default _ol_pointer_EventType_;\n","/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event\n *     mapping.\n * @constructor\n */\nvar _ol_pointer_EventSource_ = function(dispatcher, mapping) {\n  /**\n   * @type {ol.pointer.PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\n_ol_pointer_EventSource_.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\n_ol_pointer_EventSource_.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default _ol_pointer_EventSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_MouseSource_ = function(dispatcher) {\n  var mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<ol.Pixel>}\n   */\n  this.lastTouches = [];\n};\n\n_ol_.inherits(_ol_pointer_MouseSource_, _ol_pointer_EventSource_);\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_pointer_MouseSource_.POINTER_ID = 1;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_pointer_MouseSource_.POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @const\n * @type {number}\n */\n_ol_pointer_MouseSource_.DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\n_ol_pointer_MouseSource_.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  var lts = this.lastTouches;\n  var x = inEvent.clientX, y = inEvent.clientY;\n  for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    var dx = Math.abs(x - t[0]), dy = Math.abs(y - t[1]);\n    if (dx <= _ol_pointer_MouseSource_.DEDUP_DIST &&\n        dy <= _ol_pointer_MouseSource_.DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\n_ol_pointer_MouseSource_.prepareEvent = function(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = _ol_pointer_MouseSource_.POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = _ol_pointer_MouseSource_.POINTER_TYPE;\n\n  return e;\n};\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (_ol_pointer_MouseSource_.POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[_ol_pointer_MouseSource_.POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[_ol_pointer_MouseSource_.POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.cancel = function(inEvent) {\n  var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\n_ol_pointer_MouseSource_.prototype.cleanupMouse = function() {\n  delete this.pointerMap[_ol_pointer_MouseSource_.POINTER_ID.toString()];\n};\nexport default _ol_pointer_MouseSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_MsSource_ = function(dispatcher) {\n  var mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<string>}\n   */\n  this.POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n  ];\n};\n\n_ol_.inherits(_ol_pointer_MsSource_, _ol_pointer_EventSource_);\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {Object} The copied event.\n */\n_ol_pointer_MsSource_.prototype.prepareEvent_ = function(inEvent) {\n  var e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\n_ol_pointer_MsSource_.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerMove = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerUp = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerOut = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerOver = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerCancel = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msLostPointerCapture = function(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture',\n      inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msGotPointerCapture = function(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture',\n      inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default _ol_pointer_MsSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_NativeSource_ = function(dispatcher) {\n  var mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n};\n\n_ol_.inherits(_ol_pointer_NativeSource_, _ol_pointer_EventSource_);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default _ol_pointer_NativeSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_events_Event_ from '../events/event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nvar _ol_pointer_PointerEvent_ = function(type, originalEvent, opt_eventDict) {\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  var eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\n_ol_.inherits(_ol_pointer_PointerEvent_, _ol_events_Event_);\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\n_ol_pointer_PointerEvent_.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || _ol_pointer_PointerEvent_.HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\n_ol_pointer_PointerEvent_.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\n_ol_pointer_PointerEvent_.HAS_BUTTONS = false;\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    _ol_pointer_PointerEvent_.HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default _ol_pointer_PointerEvent_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\nimport _ol_pointer_MouseSource_ from '../pointer/mousesource.js';\n\n/**\n * @constructor\n * @param {ol.pointer.PointerEventHandler} dispatcher The event handler.\n * @param {ol.pointer.MouseSource} mouseSource Mouse source.\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_TouchSource_ = function(dispatcher, mouseSource) {\n  var mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {ol.pointer.MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n};\n\n_ol_.inherits(_ol_pointer_TouchSource_, _ol_pointer_EventSource_);\n\n\n/**\n * Mouse event timeout: This should be long enough to\n * ignore compat mouse events made by touch.\n * @const\n * @type {number}\n */\n_ol_pointer_TouchSource_.DEDUP_TIMEOUT = 2500;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_pointer_TouchSource_.CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_pointer_TouchSource_.POINTER_TYPE = 'touch';\n\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\n_ol_pointer_TouchSource_.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\n_ol_pointer_TouchSource_.prototype.setPrimaryTouch_ = function(inTouch) {\n  var count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 &&\n      _ol_pointer_MouseSource_.POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\n_ol_pointer_TouchSource_.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\n_ol_pointer_TouchSource_.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      _ol_pointer_TouchSource_.CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\n_ol_pointer_TouchSource_.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\n_ol_pointer_TouchSource_.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\n_ol_pointer_TouchSource_.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = _ol_pointer_TouchSource_.POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\n_ol_pointer_TouchSource_.prototype.processTouches_ = function(inEvent, inFunction) {\n  var touches = Array.prototype.slice.call(\n      inEvent.changedTouches);\n  var count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  var i, pointer;\n  for (i = 0; i < count; ++i) {\n    pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\n_ol_pointer_TouchSource_.prototype.findTouch_ = function(touchList, searchId) {\n  var l = touchList.length;\n  var touch;\n  for (var i = 0; i < l; i++) {\n    touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.vacuumTouches_ = function(inEvent) {\n  var touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  var keys = Object.keys(this.pointerMap);\n  var count = keys.length;\n  if (count >= touchList.length) {\n    var d = [];\n    var i, key, value;\n    for (i = 0; i < count; ++i) {\n      key = keys[i];\n      value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != _ol_pointer_MouseSource_.POINTER_ID &&\n          !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\n_ol_pointer_TouchSource_.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\n_ol_pointer_TouchSource_.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  var event = inPointer;\n  var pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  var outEvent = pointer.out;\n  var outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\n_ol_pointer_TouchSource_.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\n_ol_pointer_TouchSource_.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\n_ol_pointer_TouchSource_.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\n_ol_pointer_TouchSource_.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.dedupSynthMouse_ = function(inEvent) {\n  var lts = this.mouseSource.lastTouches;\n  var t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    var lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      _ol_array_.remove(lts, lt);\n    }, _ol_pointer_TouchSource_.DEDUP_TIMEOUT);\n  }\n};\nexport default _ol_pointer_TouchSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventTarget_ from '../events/eventtarget.js';\nimport _ol_has_ from '../has.js';\nimport _ol_pointer_EventType_ from '../pointer/eventtype.js';\nimport _ol_pointer_MouseSource_ from '../pointer/mousesource.js';\nimport _ol_pointer_MsSource_ from '../pointer/mssource.js';\nimport _ol_pointer_NativeSource_ from '../pointer/nativesource.js';\nimport _ol_pointer_PointerEvent_ from '../pointer/pointerevent.js';\nimport _ol_pointer_TouchSource_ from '../pointer/touchsource.js';\n\n/**\n * @constructor\n * @extends {ol.events.EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nvar _ol_pointer_PointerEventHandler_ = function(element) {\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<ol.pointer.EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\n_ol_.inherits(_ol_pointer_PointerEventHandler_, _ol_events_EventTarget_);\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\n_ol_pointer_PointerEventHandler_.prototype.registerSources = function() {\n  if (_ol_has_.POINTER) {\n    this.registerSource('native', new _ol_pointer_NativeSource_(this));\n  } else if (_ol_has_.MSPOINTER) {\n    this.registerSource('ms', new _ol_pointer_MsSource_(this));\n  } else {\n    var mouseSource = new _ol_pointer_MouseSource_(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (_ol_has_.TOUCH) {\n      this.registerSource('touch',\n          new _ol_pointer_TouchSource_(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {ol.pointer.EventSource} source The source event.\n */\n_ol_pointer_PointerEventHandler_.prototype.registerSource = function(name, source) {\n  var s = source;\n  var newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      var handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }, this);\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\n_ol_pointer_PointerEventHandler_.prototype.register_ = function() {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\n_ol_pointer_PointerEventHandler_.prototype.unregister_ = function() {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\n_ol_pointer_PointerEventHandler_.prototype.eventHandler_ = function(inEvent) {\n  var type = inEvent.type;\n  var handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n_ol_pointer_PointerEventHandler_.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    _ol_events_.listen(this.element_, eventName, this.eventHandler_, this);\n  }, this);\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n_ol_pointer_PointerEventHandler_.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    _ol_events_.unlisten(this.element_, e, this.eventHandler_, this);\n  }, this);\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\n_ol_pointer_PointerEventHandler_.prototype.cloneEvent = function(event, inEvent) {\n  var eventCopy = {}, p;\n  for (var i = 0, ii = _ol_pointer_PointerEventHandler_.CLONE_PROPS.length; i < ii; i++) {\n    p = _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.down = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.move = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.up = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.cancel = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\n_ol_pointer_PointerEventHandler_.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} A PointerEvent of type `inType`.\n */\n_ol_pointer_PointerEventHandler_.prototype.makeEvent = function(inType, data, event) {\n  return new _ol_pointer_PointerEvent_(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.fireEvent = function(inType, data, event) {\n  var e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\n_ol_pointer_PointerEventHandler_.prototype.fireNativeEvent = function(event) {\n  var e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} The wrapped event.\n */\n_ol_pointer_PointerEventHandler_.prototype.wrapMouseEvent = function(eventType, event) {\n  var pointerEvent = this.makeEvent(\n      eventType, _ol_pointer_MouseSource_.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_pointer_PointerEventHandler_.prototype.disposeInternal = function() {\n  this.unregister_();\n  _ol_events_EventTarget_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\n_ol_pointer_PointerEventHandler_.CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\nexport default _ol_pointer_PointerEventHandler_;\n","import _ol_ from './index.js';\nimport _ol_has_ from './has.js';\nimport _ol_MapBrowserEventType_ from './mapbrowsereventtype.js';\nimport _ol_MapBrowserPointerEvent_ from './mapbrowserpointerevent.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_pointer_EventType_ from './pointer/eventtype.js';\nimport _ol_pointer_PointerEventHandler_ from './pointer/pointereventhandler.js';\n\n/**\n * @param {ol.PluggableMap} map The map with the viewport to listen to events on.\n * @param {number|undefined} moveTolerance The minimal distance the pointer must travel to trigger a move.\n * @constructor\n * @extends {ol.events.EventTarget}\n */\nvar _ol_MapBrowserEventHandler_ = function(map, moveTolerance) {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {ol.PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * _ol_has_.DEVICE_PIXEL_RATIO : _ol_has_.DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {ol.pointer.PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  var element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {ol.pointer.PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new _ol_pointer_PointerEventHandler_(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {ol.pointer.PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = _ol_events_.listen(this.pointerEventHandler_,\n      _ol_pointer_EventType_.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = _ol_events_.listen(this.pointerEventHandler_,\n      _ol_pointer_EventType_.POINTERMOVE,\n      this.relayEvent_, this);\n\n};\n\n_ol_.inherits(_ol_MapBrowserEventHandler_, _ol_events_EventTarget_);\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.emulateClick_ = function(pointerEvent) {\n  var newEvent = new _ol_MapBrowserPointerEvent_(\n      _ol_MapBrowserEventType_.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new _ol_MapBrowserPointerEvent_(\n        _ol_MapBrowserEventType_.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      var newEvent = new _ol_MapBrowserPointerEvent_(\n          _ol_MapBrowserEventType_.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.updateActivePointers_ = function(pointerEvent) {\n  var event = pointerEvent;\n\n  if (event.type == _ol_MapBrowserEventType_.POINTERUP ||\n      event.type == _ol_MapBrowserEventType_.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == _ol_MapBrowserEventType_.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  var newEvent = new _ol_MapBrowserPointerEvent_(\n      _ol_MapBrowserEventType_.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(_ol_events_.unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  var newEvent = new _ol_MapBrowserPointerEvent_(\n      _ol_MapBrowserEventType_.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new _ol_pointer_PointerEventHandler_(document);\n\n    this.dragListenerKeys_.push(\n        _ol_events_.listen(this.documentPointerEventHandler_,\n            _ol_MapBrowserEventType_.POINTERMOVE,\n            this.handlePointerMove_, this),\n        _ol_events_.listen(this.documentPointerEventHandler_,\n            _ol_MapBrowserEventType_.POINTERUP,\n            this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n        _ol_events_.listen(this.pointerEventHandler_,\n            _ol_MapBrowserEventType_.POINTERCANCEL,\n            this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    var newEvent = new _ol_MapBrowserPointerEvent_(\n        _ol_MapBrowserEventType_.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.relayEvent_ = function(pointerEvent) {\n  var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new _ol_MapBrowserPointerEvent_(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @return {boolean} Is moving.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.isMoving_ = function(pointerEvent) {\n  return Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_MapBrowserEventHandler_.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    _ol_events_.unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    _ol_events_.unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  _ol_events_EventTarget_.prototype.disposeInternal.call(this);\n};\nexport default _ol_MapBrowserEventHandler_;\n","/**\n * @enum {string}\n */\nvar _ol_MapProperty_ = {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\nexport default _ol_MapProperty_;\n","import _ol_asserts_ from '../asserts.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nvar _ol_structs_PriorityQueue_ = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_structs_PriorityQueue_.DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_structs_PriorityQueue_.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  _ol_obj_.clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\n_ol_structs_PriorityQueue_.prototype.dequeue = function() {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\n_ol_structs_PriorityQueue_.prototype.enqueue = function(element) {\n  _ol_asserts_.assert(!(this.keyFunction_(element) in this.queuedElements_),\n      31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != _ol_structs_PriorityQueue_.DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\n_ol_structs_PriorityQueue_.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.heapify_ = function() {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_structs_PriorityQueue_.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\n_ol_structs_PriorityQueue_.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\n_ol_structs_PriorityQueue_.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.siftUp_ = function(index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.siftDown_ = function(startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_structs_PriorityQueue_.prototype.reprioritize = function() {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == _ol_structs_PriorityQueue_.DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default _ol_structs_PriorityQueue_;\n","import _ol_ from './index.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_structs_PriorityQueue_ from './structs/priorityqueue.js';\n\n/**\n * @constructor\n * @extends {ol.structs.PriorityQueue.<Array>}\n * @param {ol.TilePriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nvar _ol_TileQueue_ = function(tilePriorityFunction, tileChangeCallback) {\n\n  _ol_structs_PriorityQueue_.call(\n      this,\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return /** @type {ol.Tile} */ (element[0]).getKey();\n      });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\n_ol_.inherits(_ol_TileQueue_, _ol_structs_PriorityQueue_);\n\n\n/**\n * @inheritDoc\n */\n_ol_TileQueue_.prototype.enqueue = function(element) {\n  var added = _ol_structs_PriorityQueue_.prototype.enqueue.call(this, element);\n  if (added) {\n    var tile = element[0];\n    _ol_events_.listen(tile, _ol_events_EventType_.CHANGE,\n        this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\n_ol_TileQueue_.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_TileQueue_.prototype.handleTileChange = function(event) {\n  var tile = /** @type {ol.Tile} */ (event.target);\n  var state = tile.getState();\n  if (state === _ol_TileState_.LOADED || state === _ol_TileState_.ERROR ||\n      state === _ol_TileState_.EMPTY || state === _ol_TileState_.ABORT) {\n    _ol_events_.unlisten(tile, _ol_events_EventType_.CHANGE,\n        this.handleTileChange, this);\n    var tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\n_ol_TileQueue_.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  var newLoads = 0;\n  var abortedTiles = false;\n  var state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {ol.Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === _ol_TileState_.ABORT) {\n      abortedTiles = true;\n    } else if (state === _ol_TileState_.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default _ol_TileQueue_;\n","import _ol_ from '../index.js';\nimport _ol_Collection_ from '../collection.js';\nimport _ol_CollectionEventType_ from '../collectioneventtype.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_ObjectEventType_ from '../objecteventtype.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_layer_Base_ from '../layer/base.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @classdesc\n * A {@link ol.Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {ol.layer.Base}\n * @param {olx.layer.GroupOptions=} opt_options Layer options.\n * @api\n */\nvar _ol_layer_Group_ = function(opt_options) {\n\n  var options = opt_options || {};\n  var baseOptions = /** @type {olx.layer.GroupOptions} */\n      (_ol_obj_.assign({}, options));\n  delete baseOptions.layers;\n\n  var layers = options.layers;\n\n  _ol_layer_Base_.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<ol.EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  _ol_events_.listen(this,\n      _ol_Object_.getChangeEventType(_ol_layer_Group_.Property_.LAYERS),\n      this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new _ol_Collection_(layers.slice(), {unique: true});\n    } else {\n      _ol_asserts_.assert(layers instanceof _ol_Collection_,\n          43); // Expected `layers` to be an array or an `ol.Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new _ol_Collection_(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\n_ol_.inherits(_ol_layer_Group_, _ol_layer_Base_);\n\n\n/**\n * @private\n */\n_ol_layer_Group_.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @private\n */\n_ol_layer_Group_.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  var layers = this.getLayers();\n  this.layersListenerKeys_.push(\n      _ol_events_.listen(layers, _ol_CollectionEventType_.ADD,\n          this.handleLayersAdd_, this),\n      _ol_events_.listen(layers, _ol_CollectionEventType_.REMOVE,\n          this.handleLayersRemove_, this));\n\n  for (var id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(_ol_events_.unlistenByKey);\n  }\n  _ol_obj_.clear(this.listenerKeys_);\n\n  var layersArray = layers.getArray();\n  var i, ii, layer;\n  for (i = 0, ii = layersArray.length; i < ii; i++) {\n    layer = layersArray[i];\n    this.listenerKeys_[_ol_.getUid(layer).toString()] = [\n      _ol_events_.listen(layer, _ol_ObjectEventType_.PROPERTYCHANGE,\n          this.handleLayerChange_, this),\n      _ol_events_.listen(layer, _ol_events_EventType_.CHANGE,\n          this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {ol.Collection.Event} collectionEvent Collection event.\n * @private\n */\n_ol_layer_Group_.prototype.handleLayersAdd_ = function(collectionEvent) {\n  var layer = /** @type {ol.layer.Base} */ (collectionEvent.element);\n  var key = _ol_.getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    _ol_events_.listen(layer, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleLayerChange_, this),\n    _ol_events_.listen(layer, _ol_events_EventType_.CHANGE,\n        this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {ol.Collection.Event} collectionEvent Collection event.\n * @private\n */\n_ol_layer_Group_.prototype.handleLayersRemove_ = function(collectionEvent) {\n  var layer = /** @type {ol.layer.Base} */ (collectionEvent.element);\n  var key = _ol_.getUid(layer).toString();\n  this.listenerKeys_[key].forEach(_ol_events_.unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link ol.Collection collection} of {@link ol.layer.Layer layers}\n * in this group.\n * @return {!ol.Collection.<ol.layer.Base>} Collection of\n *   {@link ol.layer.Base layers} that are part of this group.\n * @observable\n * @api\n */\n_ol_layer_Group_.prototype.getLayers = function() {\n  return (\n    /** @type {!ol.Collection.<ol.layer.Base>} */ this.get(\n        _ol_layer_Group_.Property_.LAYERS)\n  );\n};\n\n\n/**\n * Set the {@link ol.Collection collection} of {@link ol.layer.Layer layers}\n * in this group.\n * @param {!ol.Collection.<ol.layer.Base>} layers Collection of\n *   {@link ol.layer.Base layers} that are part of this group.\n * @observable\n * @api\n */\n_ol_layer_Group_.prototype.setLayers = function(layers) {\n  this.set(_ol_layer_Group_.Property_.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Group_.prototype.getLayersArray = function(opt_array) {\n  var array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Group_.prototype.getLayerStatesArray = function(opt_states) {\n  var states = opt_states !== undefined ? opt_states : [];\n\n  var pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  var ownLayerState = this.getLayerState();\n  var i, ii, layerState;\n  for (i = pos, ii = states.length; i < ii; i++) {\n    layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = _ol_extent_.getIntersection(\n            layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Group_.prototype.getSourceState = function() {\n  return _ol_source_State_.READY;\n};\n\n/**\n * @enum {string}\n * @private\n */\n_ol_layer_Group_.Property_ = {\n  LAYERS: 'layers'\n};\nexport default _ol_layer_Group_;\n","/**\n * A plugin type used when registering a plugin.  The supported plugin types are\n * 'MAP_RENDERER', and 'LAYER_RENDERER'.\n * @enum {string}\n */\nvar _ol_PluginType_ = {\n  MAP_RENDERER: 'MAP_RENDERER',\n  LAYER_RENDERER: 'LAYER_RENDERER'\n};\n\nexport default _ol_PluginType_;\n","import _ol_PluginType_ from './plugintype.js';\nvar _ol_plugins_ = {};\n\n/**\n * The registry of map renderer plugins.\n * @type {Array<olx.MapRendererPlugin>}\n * @private\n */\n_ol_plugins_.mapRendererPlugins_ = [];\n\n\n/**\n * Get all registered map renderer plugins.\n * @return {Array<olx.MapRendererPlugin>} The registered map renderer plugins.\n */\n_ol_plugins_.getMapRendererPlugins = function() {\n  return _ol_plugins_.mapRendererPlugins_;\n};\n\n\n/**\n * The registry of layer renderer plugins.\n * @type {Array<olx.LayerRendererPlugin>}\n * @private\n */\n_ol_plugins_.layerRendererPlugins_ = [];\n\n\n/**\n * Get all registered layer renderer plugins.\n * @return {Array<olx.LayerRendererPlugin>} The registered layer renderer plugins.\n */\n_ol_plugins_.getLayerRendererPlugins = function() {\n  return _ol_plugins_.layerRendererPlugins_;\n};\n\n\n/**\n * Register a plugin.\n * @param {ol.PluginType} type The plugin type.\n * @param {*} plugin The plugin.\n */\n_ol_plugins_.register = function(type, plugin) {\n  var plugins;\n  switch (type) {\n    case _ol_PluginType_.MAP_RENDERER: {\n      plugins = _ol_plugins_.mapRendererPlugins_;\n      plugins.push(/** @type {olx.MapRendererPlugin} */ (plugin));\n      break;\n    }\n    case _ol_PluginType_.LAYER_RENDERER: {\n      plugins = _ol_plugins_.layerRendererPlugins_;\n      plugins.push(/** @type {olx.LayerRendererPlugin} */ (plugin));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported plugin type: ' + type);\n    }\n  }\n};\n\n\n/**\n * Register multiple plugins.\n * @param {ol.PluginType} type The plugin type.\n * @param {Array} plugins The plugins.\n */\n_ol_plugins_.registerMultiple = function(type, plugins) {\n  for (var i = 0, ii = plugins.length; i < ii; ++i) {\n    _ol_plugins_.register(type, plugins[i]);\n  }\n};\nexport default _ol_plugins_;\n","/**\n * Available renderers: `'canvas'` or `'webgl'`.\n * @enum {string}\n */\nvar _ol_renderer_Type_ = {\n  CANVAS: 'canvas',\n  WEBGL: 'webgl'\n};\n\nexport default _ol_renderer_Type_;\n","import _ol_ from './index.js';\nimport _ol_Collection_ from './collection.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_MapBrowserEvent_ from './mapbrowserevent.js';\nimport _ol_MapBrowserEventHandler_ from './mapbrowsereventhandler.js';\nimport _ol_MapBrowserEventType_ from './mapbrowsereventtype.js';\nimport _ol_MapEvent_ from './mapevent.js';\nimport _ol_MapEventType_ from './mapeventtype.js';\nimport _ol_MapProperty_ from './mapproperty.js';\nimport _ol_Object_ from './object.js';\nimport _ol_ObjectEventType_ from './objecteventtype.js';\nimport _ol_TileQueue_ from './tilequeue.js';\nimport _ol_View_ from './view.js';\nimport _ol_ViewHint_ from './viewhint.js';\nimport _ol_asserts_ from './asserts.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_Event_ from './events/event.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_functions_ from './functions.js';\nimport _ol_has_ from './has.js';\nimport _ol_layer_Group_ from './layer/group.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_plugins_ from './plugins.js';\nimport _ol_renderer_Type_ from './renderer/type.js';\nimport _ol_size_ from './size.js';\nimport _ol_structs_PriorityQueue_ from './structs/priorityqueue.js';\nimport _ol_transform_ from './transform.js';\n\n/**\n * @constructor\n * @extends {ol.Object}\n * @param {olx.MapOptions} options Map options.\n * @fires ol.MapBrowserEvent\n * @fires ol.MapEvent\n * @fires ol.render.Event#postcompose\n * @fires ol.render.Event#precompose\n * @api\n */\nvar _ol_PluggableMap_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  var optionsInternal = _ol_PluggableMap_.createOptionsInternal(options);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : _ol_has_.DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {Object.<string, string>}\n   */\n  this.logos_ = optionsInternal.logos;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.coordinateToPixelTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.pixelToCoordinateTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?olx.FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {ol.Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (_ol_has_.TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  var overlayEvents = [\n    _ol_events_EventType_.CLICK,\n    _ol_events_EventType_.DBLCLICK,\n    _ol_events_EventType_.MOUSEDOWN,\n    _ol_events_EventType_.TOUCHSTART,\n    _ol_events_EventType_.MSPOINTERDOWN,\n    _ol_MapBrowserEventType_.POINTERDOWN,\n    _ol_events_EventType_.MOUSEWHEEL,\n    _ol_events_EventType_.WHEEL\n  ];\n  for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    _ol_events_.listen(this.overlayContainerStopEvent_, overlayEvents[i],\n        _ol_events_Event_.stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {ol.MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new _ol_MapBrowserEventHandler_(this, options.moveTolerance);\n  for (var key in _ol_MapBrowserEventType_) {\n    _ol_events_.listen(this.mapBrowserEventHandler_, _ol_MapBrowserEventType_[key],\n        this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.WHEEL,\n      this.handleBrowserEvent, this);\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.MOUSEWHEEL,\n      this.handleBrowserEvent, this);\n\n  /**\n   * @type {ol.Collection.<ol.control.Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new _ol_Collection_();\n\n  /**\n   * @type {ol.Collection.<ol.interaction.Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new _ol_Collection_();\n\n  /**\n   * @type {ol.Collection.<ol.Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, ol.Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {ol.renderer.Map}\n   * @private\n   */\n  this.renderer_ = optionsInternal.mapRendererPlugin['create'](this.viewport_, this);\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {Array.<ol.PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {ol.TileQueue}\n   */\n  this.tileQueue_ = new _ol_TileQueue_(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(_ol_MapProperty_.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.VIEW),\n      this.handleViewChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.SIZE),\n      this.handleSizeChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.TARGET),\n      this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n      /**\n       * @param {ol.control.Control} control Control.\n       * @this {ol.PluggableMap}\n       */\n      function(control) {\n        control.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n  this.interactions.forEach(\n      /**\n       * @param {ol.interaction.Interaction} interaction Interaction.\n       * @this {ol.PluggableMap}\n       */\n      function(interaction) {\n        interaction.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {ol.Overlay} */ (event.element));\n      }, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        var overlay = /** @type {ol.Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n};\n\n_ol_.inherits(_ol_PluggableMap_, _ol_Object_);\n\n\n/**\n * Add the given control to the map.\n * @param {ol.control.Control} control Control.\n * @api\n */\n_ol_PluggableMap_.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {ol.interaction.Interaction} interaction Interaction to add.\n * @api\n */\n_ol_PluggableMap_.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link ol.Collection}.\n * @param {ol.layer.Base} layer Layer.\n * @api\n */\n_ol_PluggableMap_.prototype.addLayer = function(layer) {\n  var layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {ol.Overlay} overlay Overlay.\n * @api\n */\n_ol_PluggableMap_.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {ol.Overlay} overlay Overlay.\n * @private\n */\n_ol_PluggableMap_.prototype.addOverlayInternal_ = function(overlay) {\n  var id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\n_ol_PluggableMap_.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.WHEEL,\n      this.handleBrowserEvent, this);\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.MOUSEWHEEL,\n      this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    window.removeEventListener(_ol_events_EventType_.RESIZE,\n        this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  _ol_Object_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, (ol.Feature|ol.render.Feature),\n *     ol.layer.Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link ol.Feature feature} or\n *     {@link ol.render.Feature render feature} at the pixel, the second is\n *     the {@link ol.layer.Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\n_ol_PluggableMap_.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  var layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : _ol_functions_.TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {Array.<ol.Feature|ol.render.Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\n_ol_PluggableMap_.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  var features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link ol.layer.Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {S=} opt_this Value to use as `this` when executing `callback`.\n * @param {(function(this: U, ol.layer.Layer): boolean)=} opt_layerFilter Layer\n *     filter function. The filter function will receive one argument, the\n *     {@link ol.layer.Layer layer-candidate} and it should return a boolean\n *     value. Only layers which are visible and for which this function returns\n *     `true` will be tested for features. By default, all visible layers will\n *     be tested.\n * @param {U=} opt_this2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T,U\n * @api\n */\n_ol_PluggableMap_.prototype.forEachLayerAtPixel = function(pixel, callback, opt_this, opt_layerFilter, opt_this2) {\n  if (!this.frameState_) {\n    return;\n  }\n  var thisArg = opt_this !== undefined ? opt_this : null;\n  var layerFilter = opt_layerFilter !== undefined ?\n    opt_layerFilter : _ol_functions_.TRUE;\n  var thisArg2 = opt_this2 !== undefined ? opt_this2 : null;\n  return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, callback, thisArg,\n      layerFilter, thisArg2);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\n_ol_PluggableMap_.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : _ol_functions_.TRUE;\n  var hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_PluggableMap_.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {ol.Pixel} Pixel.\n * @api\n */\n_ol_PluggableMap_.prototype.getEventPixel = function(event) {\n  var viewportPosition = this.viewport_.getBoundingClientRect();\n  var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getTarget = function() {\n  return (\n    /** @type {Element|string|undefined} */ this.get(_ol_MapProperty_.TARGET)\n  );\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\n_ol_PluggableMap_.prototype.getTargetElement = function() {\n  var target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {ol.Pixel} pixel Pixel position in the map viewport.\n * @return {ol.Coordinate} The coordinate for the pixel position.\n * @api\n */\n_ol_PluggableMap_.prototype.getCoordinateFromPixel = function(pixel) {\n  var frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {ol.Collection.<ol.control.Control>} Controls.\n * @api\n */\n_ol_PluggableMap_.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {ol.Collection.<ol.Overlay>} Overlays.\n * @api\n */\n_ol_PluggableMap_.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {ol.Overlay} Overlay.\n * @api\n */\n_ol_PluggableMap_.prototype.getOverlayById = function(id) {\n  var overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {ol.Collection.<ol.interaction.Interaction>} Interactions.\n * @api\n */\n_ol_PluggableMap_.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {ol.layer.Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getLayerGroup = function() {\n  return (\n    /** @type {ol.layer.Group} */ this.get(_ol_MapProperty_.LAYERGROUP)\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!ol.Collection.<ol.layer.Base>} Layers.\n * @api\n */\n_ol_PluggableMap_.prototype.getLayers = function() {\n  var layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {ol.Coordinate} coordinate A map coordinate.\n * @return {ol.Pixel} A pixel position in the map viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.getPixelFromCoordinate = function(coordinate) {\n  var frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {ol.renderer.Map} Renderer\n */\n_ol_PluggableMap_.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {ol.Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getSize = function() {\n  return (\n    /** @type {ol.Size|undefined} */ this.get(_ol_MapProperty_.SIZE)\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {ol.View} The view that controls this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getView = function() {\n  return (\n    /** @type {ol.View} */ this.get(_ol_MapProperty_.VIEW)\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link ol.MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\n_ol_PluggableMap_.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link ol.MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\n_ol_PluggableMap_.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {ol.Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\n_ol_PluggableMap_.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  var frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return _ol_structs_PriorityQueue_.DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return _ol_structs_PriorityQueue_.DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  var deltaX = tileCenter[0] - frameState.focus[0];\n  var deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\n_ol_PluggableMap_.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  var type = opt_type || browserEvent.type;\n  var mapBrowserEvent = new _ol_MapBrowserEvent_(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent The event to handle.\n */\n_ol_PluggableMap_.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  var interactionsArray = this.getInteractions().getArray();\n  var i;\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (i = interactionsArray.length - 1; i >= 0; i--) {\n      var interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      var cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\n_ol_PluggableMap_.prototype.handlePostRender = function() {\n\n  var frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  var tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    var maxTotalLoading = 16;\n    var maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      var hints = frameState.viewHints;\n      if (hints[_ol_ViewHint_.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[_ol_ViewHint_.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  var postRenderFunctions = this.postRenderFunctions_;\n  var i, ii;\n  for (i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  var targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      _ol_events_.unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    _ol_dom_.removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      window.removeEventListener(_ol_events_EventType_.RESIZE,\n          this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    var keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      _ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYDOWN,\n          this.handleBrowserEvent, this),\n      _ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYPRESS,\n          this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      window.addEventListener(_ol_events_EventType_.RESIZE,\n          this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  var view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', _ol_.getUid(view));\n    this.viewPropertyListenerKey_ = _ol_events_.listen(\n        view, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = _ol_events_.listen(\n        view, _ol_events_EventType_.CHANGE,\n        this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(_ol_events_.unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  var layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      _ol_events_.listen(\n          layerGroup, _ol_ObjectEventType_.PROPERTYCHANGE,\n          this.render, this),\n      _ol_events_.listen(\n          layerGroup, _ol_events_EventType_.CHANGE,\n          this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\n_ol_PluggableMap_.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\n_ol_PluggableMap_.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\n_ol_PluggableMap_.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(\n        this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {ol.control.Control} control Control.\n * @return {ol.control.Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {ol.interaction.Interaction} interaction Interaction to remove.\n * @return {ol.interaction.Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {ol.layer.Base} layer Layer.\n * @return {ol.layer.Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeLayer = function(layer) {\n  var layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {ol.Overlay} overlay Overlay.\n * @return {ol.Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\n_ol_PluggableMap_.prototype.renderFrame_ = function(time) {\n  var i, ii, viewState;\n\n  var size = this.getSize();\n  var view = this.getView();\n  var extent = _ol_extent_.createEmpty();\n  var previousFrameState = this.frameState_;\n  /** @type {?olx.FrameState} */\n  var frameState = null;\n  if (size !== undefined && _ol_size_.hasArea(size) && view && view.isDef()) {\n    var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    var layerStates = {};\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[_ol_.getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    var center = viewState.center;\n    var pixelResolution = viewState.resolution / this.pixelRatio_;\n    center[0] = Math.round(center[0] / pixelResolution) * pixelResolution;\n    center[1] = Math.round(center[1] / pixelResolution) * pixelResolution;\n    frameState = /** @type {olx.FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: !this.focus_ ? center : this.focus_,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      logos: _ol_obj_.assign({}, this.logos_),\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = _ol_extent_.getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(\n        this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      var moveStart = !this.previousExtent_ ||\n                  (!_ol_extent_.isEmpty(this.previousExtent_) &&\n                  !_ol_extent_.equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n            new _ol_MapEvent_(_ol_MapEventType_.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = _ol_extent_.createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    var idle = this.previousExtent_ &&\n        !frameState.viewHints[_ol_ViewHint_.ANIMATING] &&\n        !frameState.viewHints[_ol_ViewHint_.INTERACTING] &&\n        !_ol_extent_.equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(\n          new _ol_MapEvent_(_ol_MapEventType_.MOVEEND, this, frameState));\n      _ol_extent_.clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(\n      new _ol_MapEvent_(_ol_MapEventType_.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {ol.layer.Group} layerGroup A layer group containing the layers in\n *     this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setLayerGroup = function(layerGroup) {\n  this.set(_ol_MapProperty_.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {ol.Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setSize = function(size) {\n  this.set(_ol_MapProperty_.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setTarget = function(target) {\n  this.set(_ol_MapProperty_.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {ol.View} view The view that controls this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setView = function(view) {\n  this.set(_ol_MapProperty_.VIEW, view);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n */\n_ol_PluggableMap_.prototype.skipFeature = function(feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.updateSize = function() {\n  var targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    var computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n */\n_ol_PluggableMap_.prototype.unskipFeature = function(feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @type {Array.<ol.renderer.Type>}\n * @const\n */\n_ol_PluggableMap_.DEFAULT_RENDERER_TYPES = [\n  _ol_renderer_Type_.CANVAS,\n  _ol_renderer_Type_.WEBGL\n];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_PluggableMap_.LOGO_URL = 'data:image/png;base64,' +\n    'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAAA3NCSVQICAjb4U/gAAAACXBI' +\n    'WXMAAAHGAAABxgEXwfpGAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAA' +\n    'AhNQTFRF////AP//AICAgP//AFVVQECA////K1VVSbbbYL/fJ05idsTYJFtbbcjbJllmZszW' +\n    'WMTOIFhoHlNiZszTa9DdUcHNHlNlV8XRIVdiasrUHlZjIVZjaMnVH1RlIFRkH1RkH1ZlasvY' +\n    'asvXVsPQH1VkacnVa8vWIVZjIFRjVMPQa8rXIVVkXsXRsNveIFVkIFZlIVVj3eDeh6GmbMvX' +\n    'H1ZkIFRka8rWbMvXIFVkIFVjIFVkbMvWH1VjbMvWIFVlbcvWIFVla8vVIFVkbMvWbMvVH1Vk' +\n    'bMvWIFVlbcvWIFVkbcvVbMvWjNPbIFVkU8LPwMzNIFVkbczWIFVkbsvWbMvXIFVkRnB8bcvW' +\n    '2+TkW8XRIFVkIlZlJVloJlpoKlxrLl9tMmJwOWd0Omh1RXF8TneCT3iDUHiDU8LPVMLPVcLP' +\n    'VcPQVsPPVsPQV8PQWMTQWsTQW8TQXMXSXsXRX4SNX8bSYMfTYcfTYsfTY8jUZcfSZsnUaIqT' +\n    'acrVasrVa8jTa8rWbI2VbMvWbcvWdJObdcvUdszUd8vVeJaee87Yfc3WgJyjhqGnitDYjaar' +\n    'ldPZnrK2oNbborW5o9bbo9fbpLa6q9ndrL3ArtndscDDutzfu8fJwN7gwt7gxc/QyuHhy+Hi' +\n    'zeHi0NfX0+Pj19zb1+Tj2uXk29/e3uLg3+Lh3+bl4uXj4ufl4+fl5Ofl5ufl5ujm5+jmySDn' +\n    'BAAAAFp0Uk5TAAECAgMEBAYHCA0NDg4UGRogIiMmKSssLzU7PkJJT1JTVFliY2hrdHZ3foSF' +\n    'hYeJjY2QkpugqbG1tre5w8zQ09XY3uXn6+zx8vT09vf4+Pj5+fr6/P39/f3+gz7SsAAAAVVJ' +\n    'REFUOMtjYKA7EBDnwCPLrObS1BRiLoJLnte6CQy8FLHLCzs2QUG4FjZ5GbcmBDDjxJBXDWxC' +\n    'Brb8aM4zbkIDzpLYnAcE9VXlJSWlZRU13koIeW57mGx5XjoMZEUqwxWYQaQbSzLSkYGfKFSe' +\n    '0QMsX5WbjgY0YS4MBplemI4BdGBW+DQ11eZiymfqQuXZIjqwyadPNoSZ4L+0FVM6e+oGI6g8' +\n    'a9iKNT3o8kVzNkzRg5lgl7p4wyRUL9Yt2jAxVh6mQCogae6GmflI8p0r13VFWTHBQ0rWPW7a' +\n    'hgWVcPm+9cuLoyy4kCJDzCm6d8PSFoh0zvQNC5OjDJhQopPPJqph1doJBUD5tnkbZiUEqaCn' +\n    'B3bTqLTFG1bPn71kw4b+GFdpLElKIzRxxgYgWNYc5SCENVHKeUaltHdXx0dZ8uBI1hJ2UUDg' +\n    'q82CM2MwKeibqAvSO7MCABq0wXEPiqWEAAAAAElFTkSuQmCC';\n\n\n/**\n * @param {olx.MapOptions} options Map options.\n * @return {ol.MapOptionsInternal} Internal map options.\n */\n_ol_PluggableMap_.createOptionsInternal = function(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var values = {};\n\n  var logos = {};\n  if (options.logo === undefined ||\n      (typeof options.logo === 'boolean' && options.logo)) {\n    logos[_ol_PluggableMap_.LOGO_URL] = 'https://openlayers.org/';\n  } else {\n    var logo = options.logo;\n    if (typeof logo === 'string') {\n      logos[logo] = '';\n    } else if (logo instanceof HTMLElement) {\n      logos[_ol_.getUid(logo).toString()] = logo;\n    } else if (logo) {\n      _ol_asserts_.assert(typeof logo.href == 'string', 44); // `logo.href` should be a string.\n      _ol_asserts_.assert(typeof logo.src == 'string', 45); // `logo.src` should be a string.\n      logos[logo.src] = logo.href;\n    }\n  }\n\n  var layerGroup = (options.layers instanceof _ol_layer_Group_) ?\n    options.layers : new _ol_layer_Group_({layers: options.layers});\n  values[_ol_MapProperty_.LAYERGROUP] = layerGroup;\n\n  values[_ol_MapProperty_.TARGET] = options.target;\n\n  values[_ol_MapProperty_.VIEW] = options.view !== undefined ?\n    options.view : new _ol_View_();\n\n  /**\n   * @type {Array.<ol.renderer.Type>}\n   */\n  var rendererTypes;\n\n  if (options.renderer !== undefined) {\n    if (Array.isArray(options.renderer)) {\n      rendererTypes = options.renderer;\n    } else if (typeof options.renderer === 'string') {\n      rendererTypes = [options.renderer];\n    } else {\n      _ol_asserts_.assert(false, 46); // Incorrect format for `renderer` option\n    }\n    if (rendererTypes.indexOf(/** @type {ol.renderer.Type} */ ('dom')) >= 0) {\n      rendererTypes = rendererTypes.concat(_ol_PluggableMap_.DEFAULT_RENDERER_TYPES);\n    }\n  } else {\n    rendererTypes = _ol_PluggableMap_.DEFAULT_RENDERER_TYPES;\n  }\n\n  /**\n   * @type {olx.MapRendererPlugin}\n   */\n  var mapRendererPlugin;\n\n  var mapRendererPlugins = _ol_plugins_.getMapRendererPlugins();\n  outer: for (var i = 0, ii = rendererTypes.length; i < ii; ++i) {\n    var rendererType = rendererTypes[i];\n    for (var j = 0, jj = mapRendererPlugins.length; j < jj; ++j) {\n      var candidate = mapRendererPlugins[j];\n      if (candidate['handles'](rendererType)) {\n        mapRendererPlugin = candidate;\n        break outer;\n      }\n    }\n  }\n\n  if (!mapRendererPlugin) {\n    throw new Error('Unable to create a map renderer for types: ' +  rendererTypes.join(', '));\n  }\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new _ol_Collection_(options.controls.slice());\n    } else {\n      _ol_asserts_.assert(options.controls instanceof _ol_Collection_,\n          47); // Expected `controls` to be an array or an `ol.Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new _ol_Collection_(options.interactions.slice());\n    } else {\n      _ol_asserts_.assert(options.interactions instanceof _ol_Collection_,\n          48); // Expected `interactions` to be an array or an `ol.Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new _ol_Collection_(options.overlays.slice());\n    } else {\n      _ol_asserts_.assert(options.overlays instanceof _ol_Collection_,\n          49); // Expected `overlays` to be an array or an `ol.Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new _ol_Collection_();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    logos: logos,\n    overlays: overlays,\n    mapRendererPlugin: mapRendererPlugin,\n    values: values\n  };\n\n};\nexport default _ol_PluggableMap_;\n","import _ol_ from './index.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.events.EventTarget}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.ImageState} state State.\n */\nvar _ol_ImageBase_ = function(extent, resolution, pixelRatio, state) {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @protected\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = state;\n\n};\n\n_ol_.inherits(_ol_ImageBase_, _ol_events_EventTarget_);\n\n\n/**\n * @protected\n */\n_ol_ImageBase_.prototype.changed = function() {\n  this.dispatchEvent(_ol_events_EventType_.CHANGE);\n};\n\n\n/**\n * @return {ol.Extent} Extent.\n */\n_ol_ImageBase_.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\n_ol_ImageBase_.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\n_ol_ImageBase_.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\n_ol_ImageBase_.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {ol.ImageState} State.\n */\n_ol_ImageBase_.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n_ol_ImageBase_.prototype.load = function() {};\nexport default _ol_ImageBase_;\n","import _ol_ from './index.js';\nimport _ol_ImageBase_ from './imagebase.js';\nimport _ol_ImageState_ from './imagestate.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {ol.ImageCanvasLoader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nvar _ol_ImageCanvas_ = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?ol.ImageCanvasLoader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  var state = opt_loader !== undefined ?\n    _ol_ImageState_.IDLE : _ol_ImageState_.LOADED;\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\n_ol_.inherits(_ol_ImageCanvas_, _ol_ImageBase_);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\n_ol_ImageCanvas_.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\n_ol_ImageCanvas_.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = _ol_ImageState_.ERROR;\n  } else {\n    this.state = _ol_ImageState_.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageCanvas_.prototype.load = function() {\n  if (this.state == _ol_ImageState_.IDLE) {\n    this.state = _ol_ImageState_.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageCanvas_.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default _ol_ImageCanvas_;\n","import _ol_ from '../index.js';\nimport _ol_events_Event_ from '../events/event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.render.Event}\n * @param {ol.render.EventType} type Type.\n * @param {ol.render.VectorContext=} opt_vectorContext Vector context.\n * @param {olx.FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?ol.webgl.Context=} opt_glContext WebGL Context.\n */\nvar _ol_render_Event_ = function(\n    type, opt_vectorContext, opt_frameState, opt_context,\n    opt_glContext) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link ol.render.canvas.Immediate}.\n   * @type {ol.render.VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {olx.FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {ol.webgl.Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\n_ol_.inherits(_ol_render_Event_, _ol_events_Event_);\nexport default _ol_render_Event_;\n","/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nvar _ol_render_VectorContext_ = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\n_ol_render_VectorContext_.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {ol.geom.Geometry} geometry The geometry to render.\n */\n_ol_render_VectorContext_.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {ol.style.Style} style The rendering style.\n */\n_ol_render_VectorContext_.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {ol.geom.Circle} circleGeometry Circle geometry.\n * @param {ol.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n */\n_ol_render_VectorContext_.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {ol.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.LineString|ol.render.Feature} lineStringGeometry Line\n *     string geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.MultiLineString|ol.render.Feature} multiLineStringGeometry\n *     MultiLineString geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.MultiPoint|ol.render.Feature} multiPointGeometry MultiPoint\n *     geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.Point|ol.render.Feature} pointGeometry Point geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.Polygon|ol.render.Feature} polygonGeometry Polygon\n *     geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n */\n_ol_render_VectorContext_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {ol.style.Image} imageStyle Image style.\n * @param {ol.DeclutterGroup=} opt_declutterGroup Declutter.\n */\n_ol_render_VectorContext_.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {ol.style.Text} textStyle Text style.\n * @param {ol.DeclutterGroup=} opt_declutterGroup Declutter.\n */\n_ol_render_VectorContext_.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default _ol_render_VectorContext_;\n","// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol.geom.flat.transform.transform2D?\n\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../../geom/simplegeometry.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link ol.render.VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link ol.render.Event} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.Extent} extent Extent.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nvar _ol_render_canvas_Immediate_ = function(context, pixelRatio, extent, transform, viewRotation) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpLocalTransform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_render_canvas_Immediate_, _ol_render_VectorContext_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n  var context = this.context_;\n  var localTransform = this.tmpLocalTransform_;\n  var alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  var rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  var i, ii;\n  for (i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    var x = pixelCoordinates[i] - this.imageAnchorX_;\n    var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      var centerX = x + this.imageAnchorX_;\n      var centerY = y + this.imageAnchorY_;\n      _ol_transform_.compose(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n  var context = this.context_;\n  var rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    var x = pixelCoordinates[offset] + this.textOffsetX_;\n    var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      var localTransform = _ol_transform_.compose(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\n_ol_render_canvas_Immediate_.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  var context = this.context_;\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  var length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (var i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\n_ol_render_canvas_Immediate_.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(\n        flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {ol.geom.Circle} geometry Circle geometry.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawCircle = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var pixelCoordinates = _ol_geom_SimpleGeometry_.transform2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n    var dx = pixelCoordinates[2] - pixelCoordinates[0];\n    var dy = pixelCoordinates[3] - pixelCoordinates[1];\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    var context = this.context_;\n    context.beginPath();\n    context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {ol.style.Style} style The rendering style.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol.render.canvas.Immediate#setStyle} first to set the rendering style.\n *\n * @param {ol.geom.Geometry|ol.render.Feature} geometry The geometry to render.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawGeometry = function(geometry) {\n  var type = geometry.getType();\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n      this.drawPoint(/** @type {ol.geom.Point} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.LINE_STRING:\n      this.drawLineString(/** @type {ol.geom.LineString} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.POLYGON:\n      this.drawPolygon(/** @type {ol.geom.Polygon} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_POINT:\n      this.drawMultiPoint(/** @type {ol.geom.MultiPoint} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {ol.geom.MultiLineString} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {ol.geom.MultiPolygon} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {ol.geom.GeometryCollection} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.CIRCLE:\n      this.drawCircle(/** @type {ol.geom.Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link ol.layer.Vector} instead.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawFeature = function(feature, style) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry ||\n      !_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {ol.geom.GeometryCollection} geometry Geometry collection.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawGeometryCollection = function(geometry) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Point|ol.render.Feature} geometry Point geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawPoint = function(geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {ol.geom.MultiPoint|ol.render.Feature} geometry MultiPoint geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiPoint = function(geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.LineString|ol.render.Feature} geometry LineString geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawLineString = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    var flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {ol.geom.MultiLineString|ol.render.Feature} geometry MultiLineString\n *     geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiLineString = function(geometry) {\n  var geometryExtent = geometry.getExtent();\n  if (!_ol_extent_.intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var offset = 0;\n    var ends = geometry.getEnds();\n    var stride = geometry.getStride();\n    context.beginPath();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n          flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    var flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Polygon|ol.render.Feature} geometry Polygon geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawPolygon = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    var flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiPolygon = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var context = this.context_;\n    var flatCoordinates = geometry.getOrientedFlatCoordinates();\n    var offset = 0;\n    var endss = geometry.getEndss();\n    var stride = geometry.getStride();\n    var i, ii;\n    context.beginPath();\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    var flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {ol.CanvasFillState} fillState Fill state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextFillState_ = function(fillState) {\n  var context = this.context_;\n  var contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {ol.CanvasStrokeState} strokeState Stroke state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextStrokeState_ = function(strokeState) {\n  var context = this.context_;\n  var contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      if (!_ol_array_.equals(\n          contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {ol.CanvasTextState} textState Text state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextTextState_ = function(textState) {\n  var context = this.context_;\n  var contextTextState = this.contextTextState_;\n  var textAlign = textState.textAlign ?\n    textState.textAlign : _ol_render_canvas_.defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    var fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: _ol_colorlike_.asColorLike(fillStyleColor ?\n        fillStyleColor : _ol_render_canvas_.defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    var strokeStyleColor = strokeStyle.getColor();\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    var strokeStyleWidth = strokeStyle.getWidth();\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : _ol_render_canvas_.defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n      strokeStyle: _ol_colorlike_.asColorLike(strokeStyleColor ?\n        strokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {ol.style.Image} imageStyle Image style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    var imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    var imageImage = imageStyle.getImage(1);\n    var imageOrigin = imageStyle.getOrigin();\n    var imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {ol.style.Text} textStyle Text style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    var textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      var textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: _ol_colorlike_.asColorLike(textFillStyleColor ?\n          textFillStyleColor : _ol_render_canvas_.defaultFillStyle)\n      };\n    }\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      var textStrokeStyleColor = textStrokeStyle.getColor();\n      var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      var textStrokeStyleWidth = textStrokeStyle.getWidth();\n      var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : _ol_render_canvas_.defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n        strokeStyle: _ol_colorlike_.asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n      };\n    }\n    var textFont = textStyle.getFont();\n    var textOffsetX = textStyle.getOffsetX();\n    var textOffsetY = textStyle.getOffsetY();\n    var textRotateWithView = textStyle.getRotateWithView();\n    var textRotation = textStyle.getRotation();\n    var textScale = textStyle.getScale();\n    var textText = textStyle.getText();\n    var textTextAlign = textStyle.getTextAlign();\n    var textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : _ol_render_canvas_.defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : _ol_render_canvas_.defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : _ol_render_canvas_.defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default _ol_render_canvas_Immediate_;\n","import _ol_ from '../index.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_Observable_ from '../observable.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @constructor\n * @extends {ol.Observable}\n * @param {ol.layer.Layer} layer Layer.\n * @struct\n */\nvar _ol_renderer_Layer_ = function(layer) {\n\n  _ol_Observable_.call(this);\n\n  /**\n   * @private\n   * @type {ol.layer.Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\n_ol_.inherits(_ol_renderer_Layer_, _ol_Observable_);\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (ol.Feature|ol.render.Feature), ol.layer.Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\n_ol_renderer_Layer_.prototype.forEachFeatureAtCoordinate = _ol_.nullFunction;\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\n_ol_renderer_Layer_.prototype.hasFeatureAtCoordinate = _ol_functions_.FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {ol.source.Tile} source Tile source.\n * @param {ol.proj.Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, ol.Tile>>} tiles Lookup of loaded\n *     tiles by zoom level.\n * @return {function(number, ol.TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the\n *     lookup.\n * @protected\n */\n_ol_renderer_Layer_.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {ol.TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    });\n};\n\n\n/**\n * @return {ol.layer.Layer} Layer.\n */\n_ol_renderer_Layer_.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {ol.events.Event} event Image change event.\n * @private\n */\n_ol_renderer_Layer_.prototype.handleImageChange_ = function(event) {\n  var image = /** @type {ol.Image} */ (event.target);\n  if (image.getState() === _ol_ImageState_.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {ol.ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false`\n *     otherwise.\n * @protected\n */\n_ol_renderer_Layer_.prototype.loadImage = function(image) {\n  var imageState = image.getState();\n  if (imageState != _ol_ImageState_.LOADED &&\n      imageState != _ol_ImageState_.ERROR) {\n    _ol_events_.listen(image, _ol_events_EventType_.CHANGE,\n        this.handleImageChange_, this);\n  }\n  if (imageState == _ol_ImageState_.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == _ol_ImageState_.LOADED;\n};\n\n\n/**\n * @protected\n */\n_ol_renderer_Layer_.prototype.renderIfReadyAndVisible = function() {\n  var layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == _ol_source_State_.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.source.Tile} tileSource Tile source.\n * @protected\n */\n_ol_renderer_Layer_.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {ol.source.Tile} tileSource Tile source.\n     * @param {ol.PluggableMap} map Map.\n     * @param {olx.FrameState} frameState Frame state.\n     */\n    var postRenderFunction = function(tileSource, map, frameState) {\n      var tileSourceKey = _ol_.getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n        /** @type {ol.PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.source.Source} source Source.\n * @protected\n */\n_ol_renderer_Layer_.prototype.updateLogos = function(frameState, source) {\n  var logo = source.getLogo();\n  if (logo !== undefined) {\n    if (typeof logo === 'string') {\n      frameState.logos[logo] = '';\n    } else if (logo) {\n      _ol_asserts_.assert(typeof logo.href == 'string', 44); // `logo.href` should be a string.\n      _ol_asserts_.assert(typeof logo.src == 'string', 45); // `logo.src` should be a string.\n      frameState.logos[logo.src] = logo.href;\n    }\n  }\n};\n\n\n/**\n * @param {Object.<string, Object.<string, ol.TileRange>>} usedTiles Used tiles.\n * @param {ol.source.Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {ol.TileRange} tileRange Tile range.\n * @protected\n */\n_ol_renderer_Layer_.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  var tileSourceKey = _ol_.getUid(tileSource).toString();\n  var zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.source.Tile} tileSource Tile source.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {ol.Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, ol.Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\n_ol_renderer_Layer_.prototype.manageTilePyramid = function(\n    frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n    currentZ, preload, opt_tileCallback, opt_this) {\n  var tileSourceKey = _ol_.getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  var wantedTiles = frameState.wantedTiles[tileSourceKey];\n  var tileQueue = frameState.tileQueue;\n  var minZoom = tileGrid.getMinZoom();\n  var tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == _ol_TileState_.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default _ol_renderer_Layer_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_functions_ from '../../functions.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_Immediate_ from '../../render/canvas/immediate.js';\nimport _ol_renderer_Layer_ from '../layer.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.renderer.Layer}\n * @param {ol.layer.Layer} layer Layer.\n */\nvar _ol_renderer_canvas_Layer_ = function(layer) {\n\n  _ol_renderer_Layer_.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.transform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_Layer_, _ol_renderer_Layer_);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Extent} extent Clip extent.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.clip = function(context, frameState, extent) {\n  var pixelRatio = frameState.pixelRatio;\n  var width = frameState.size[0] * pixelRatio;\n  var height = frameState.size[1] * pixelRatio;\n  var rotation = frameState.viewState.rotation;\n  var topLeft = _ol_extent_.getTopLeft(/** @type {ol.Extent} */ (extent));\n  var topRight = _ol_extent_.getTopRight(/** @type {ol.Extent} */ (extent));\n  var bottomRight = _ol_extent_.getBottomRight(/** @type {ol.Extent} */ (extent));\n  var bottomLeft = _ol_extent_.getBottomLeft(/** @type {ol.Extent} */ (extent));\n\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, topLeft);\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, topRight);\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, bottomRight);\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  _ol_render_canvas_.rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  _ol_render_canvas_.rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Transform=} opt_transform Transform.\n * @private\n */\n_ol_renderer_canvas_Layer_.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  var layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    _ol_render_canvas_.rotateAtOffset(context, -rotation, width / 2, height / 2);\n    var transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    var render = new _ol_render_canvas_Immediate_(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n    var composeEvent = new _ol_render_Event_(type, render, frameState,\n        context, null);\n    layer.dispatchEvent(composeEvent);\n    _ol_render_canvas_.rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState FrameState.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_canvas_Layer_.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, 0, _ol_functions_.TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {ol.Transform=} opt_transform Transform.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(_ol_render_EventType_.POSTCOMPOSE, context,\n      frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Transform=} opt_transform Transform.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(_ol_render_EventType_.PRECOMPOSE, context,\n      frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Transform=} opt_transform Transform.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(_ol_render_EventType_.RENDER, context,\n      frameState, opt_transform);\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!ol.Transform} Transform.\n */\n_ol_renderer_canvas_Layer_.prototype.getTransform = function(frameState, offsetX) {\n  var viewState = frameState.viewState;\n  var pixelRatio = frameState.pixelRatio;\n  var dx1 = pixelRatio * frameState.size[0] / 2;\n  var dy1 = pixelRatio * frameState.size[1] / 2;\n  var sx = pixelRatio / viewState.resolution;\n  var sy = -sx;\n  var angle = -viewState.rotation;\n  var dx2 = -viewState.center[0] + offsetX;\n  var dy2 = -viewState.center[1];\n  return _ol_transform_.compose(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\n_ol_renderer_canvas_Layer_.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\n_ol_renderer_canvas_Layer_.prototype.prepareFrame = function(frameState, layerState) {};\nexport default _ol_renderer_canvas_Layer_;\n","import _ol_ from '../../index.js';\nimport _ol_coordinate_ from '../../coordinate.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_renderer_canvas_Layer_ from '../canvas/layer.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.renderer.canvas.Layer}\n * @param {ol.layer.Layer} layer Layer.\n */\nvar _ol_renderer_canvas_IntermediateCanvas_ = function(layer) {\n\n  _ol_renderer_canvas_Layer_.call(this, layer);\n\n  /**\n   * @protected\n   * @type {ol.Transform}\n   */\n  this.coordinateToCanvasPixelTransform = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_IntermediateCanvas_, _ol_renderer_canvas_Layer_);\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  var image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    var extent = layerState.extent;\n    var clipped = extent !== undefined &&\n        !_ol_extent_.containsExtent(extent, frameState.extent) &&\n        _ol_extent_.intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {ol.Extent} */ (extent));\n    }\n\n    var imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    var alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    var dx = imageTransform[4];\n    var dy = imageTransform[5];\n    var dw = image.width * imageTransform[0];\n    var dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!ol.Transform} Image transform.\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  var layer = this.getLayer();\n  var source = layer.getSource();\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  var skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== _ol_.nullFunction) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return _ol_renderer_canvas_Layer_.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    var pixel = _ol_transform_.apply(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    _ol_coordinate_.scale(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\nexport default _ol_renderer_canvas_IntermediateCanvas_;\n","import _ol_ from '../../index.js';\nimport _ol_ImageCanvas_ from '../../imagecanvas.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_layer_VectorRenderType_ from '../../layer/vectorrendertype.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_plugins_ from '../../plugins.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_IntermediateCanvas_ from '../canvas/intermediatecanvas.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.IntermediateCanvas}\n * @param {ol.layer.Image} imageLayer Single image layer.\n * @api\n */\nvar _ol_renderer_canvas_ImageLayer_ = function(imageLayer) {\n\n  _ol_renderer_canvas_IntermediateCanvas_.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?ol.ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.imageTransform_ = _ol_transform_.create();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {ol.renderer.canvas.VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_ImageLayer_, _ol_renderer_canvas_IntermediateCanvas_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_ImageLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && (layer.getType() === _ol_LayerType_.IMAGE ||\n      layer.getType() === _ol_LayerType_.VECTOR &&\n      /** @type {ol.layer.Vector} */ (layer).getRenderMode() === _ol_layer_VectorRenderType_.IMAGE);\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.ImageLayer} The layer renderer.\n */\n_ol_renderer_canvas_ImageLayer_['create'] = function(mapRenderer, layer) {\n  var renderer = new _ol_renderer_canvas_ImageLayer_(/** @type {ol.layer.Image} */ (layer));\n  if (layer.getType() === _ol_LayerType_.VECTOR) {\n    var candidates = _ol_plugins_.getLayerRendererPlugins();\n    for (var i = 0, ii = candidates.length; i < ii; ++i) {\n      var candidate = /** @type {Object.<string, Function>} */ (candidates[i]);\n      if (candidate !== _ol_renderer_canvas_ImageLayer_ && candidate['handles'](_ol_renderer_Type_.CANVAS, layer)) {\n        renderer.setVectorRenderer(candidate['create'](mapRenderer, layer));\n      }\n    }\n  }\n  return renderer;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.prepareFrame = function(frameState, layerState) {\n\n  var pixelRatio = frameState.pixelRatio;\n  var size = frameState.size;\n  var viewState = frameState.viewState;\n  var viewCenter = viewState.center;\n  var viewResolution = viewState.resolution;\n\n  var image;\n  var imageLayer = /** @type {ol.layer.Image} */ (this.getLayer());\n  var imageSource = imageLayer.getSource();\n\n  var hints = frameState.viewHints;\n\n  var renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = _ol_extent_.getIntersection(\n        renderedExtent, layerState.extent);\n  }\n\n  if (!hints[_ol_ViewHint_.ANIMATING] && !hints[_ol_ViewHint_.INTERACTING] &&\n      !_ol_extent_.isEmpty(renderedExtent)) {\n    var projection = viewState.projection;\n    if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n      var sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    var vectorRenderer = this.vectorRenderer_;\n    if (vectorRenderer) {\n      var context = vectorRenderer.context;\n      var imageFrameState = /** @type {olx.FrameState} */ (_ol_obj_.assign({}, frameState, {\n        size: [\n          _ol_extent_.getWidth(renderedExtent) / viewResolution,\n          _ol_extent_.getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {olx.ViewState} */ (_ol_obj_.assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      var skippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n          (vectorRenderer.replayGroupChanged ||\n          !_ol_array_.equals(skippedFeatures, this.skippedFeatures_))) {\n        context.canvas.width = imageFrameState.size[0] * pixelRatio;\n        context.canvas.height = imageFrameState.size[1] * pixelRatio;\n        vectorRenderer.composeFrame(imageFrameState, layerState, context);\n        this.image_ = new _ol_ImageCanvas_(renderedExtent, viewResolution, pixelRatio, context.canvas);\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    } else {\n      image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      if (image) {\n        var loaded = this.loadImage(image);\n        if (loaded) {\n          this.image_ = image;\n        }\n      }\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    var imageExtent = image.getExtent();\n    var imageResolution = image.getResolution();\n    var imagePixelRatio = image.getPixelRatio();\n    var scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    var transform = _ol_transform_.compose(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    _ol_transform_.compose(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n    this.updateLogos(frameState, imageSource);\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return _ol_renderer_canvas_IntermediateCanvas_.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\n/**\n * @param {ol.renderer.canvas.VectorLayer} renderer Vector renderer.\n */\n_ol_renderer_canvas_ImageLayer_.prototype.setVectorRenderer = function(renderer) {\n  this.vectorRenderer_ = renderer;\n};\nexport default _ol_renderer_canvas_ImageLayer_;\n","import _ol_color_ from '../color.js';\n\n/**\n * Singleton class. Available through {@link ol.style.iconImageCache}.\n * @constructor\n */\nvar _ol_style_IconImageCache_ = function() {\n\n  /**\n   * @type {Object.<string, ol.style.IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {string} Cache key.\n */\n_ol_style_IconImageCache_.getKey = function(src, crossOrigin, color) {\n  var colorString = color ? _ol_color_.asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_style_IconImageCache_.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_style_IconImageCache_.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    var key, iconImage;\n    for (key in this.cache_) {\n      iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {ol.style.IconImage} Icon image.\n */\n_ol_style_IconImageCache_.prototype.get = function(src, crossOrigin, color) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @param {ol.style.IconImage} iconImage Icon image.\n */\n_ol_style_IconImageCache_.prototype.set = function(src, crossOrigin, color, iconImage) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\n_ol_style_IconImageCache_.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default _ol_style_IconImageCache_;\n","import _ol_style_IconImageCache_ from './style/iconimagecache.js';\nvar _ol_style_ = {};\n\n/**\n * The {@link ol.style.IconImageCache} for {@link ol.style.Icon} images.\n * @api\n */\n_ol_style_.iconImageCache = new _ol_style_IconImageCache_();\nexport default _ol_style_;\n","import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_plugins_ from '../plugins.js';\nimport _ol_style_ from '../style.js';\nimport _ol_transform_ from '../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.Disposable}\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @struct\n */\nvar _ol_renderer_Map_ = function(container, map) {\n\n  _ol_Disposable_.call(this);\n\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {Object.<string, ol.renderer.Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, ol.EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n};\n\n_ol_.inherits(_ol_renderer_Map_, _ol_Disposable_);\n\n\n/**\n * @param {olx.FrameState} frameState FrameState.\n * @protected\n */\n_ol_renderer_Map_.prototype.calculateMatrices2D = function(frameState) {\n  var viewState = frameState.viewState;\n  var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  _ol_transform_.compose(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n  _ol_transform_.invert(\n      _ol_transform_.setFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\n_ol_renderer_Map_.prototype.removeLayerRenderers = function() {\n  for (var key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_Map_.expireIconCache_ = function(map, frameState) {\n  var cache = _ol_style_.iconImageCache;\n  cache.expire();\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (ol.Feature|ol.render.Feature),\n *     ol.layer.Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, ol.layer.Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_Map_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n    layerFilter, thisArg2) {\n  var result;\n  var viewState = frameState.viewState;\n  var viewResolution = viewState.resolution;\n\n  /**\n   * @param {ol.Feature|ol.render.Feature} feature Feature.\n   * @param {ol.layer.Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    var key = _ol_.getUid(feature).toString();\n    var managed = frameState.layerStates[_ol_.getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  var projection = viewState.projection;\n\n  var translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    var projectionExtent = projection.getExtent();\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n    var x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      var layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.FrameState} frameState FrameState.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, ol.layer.Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_Map_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n    layerFilter, thisArg2) {};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, ol.layer.Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\n_ol_renderer_Map_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, _ol_functions_.TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer.\n * @protected\n * @return {ol.renderer.Layer} Layer renderer.\n */\n_ol_renderer_Map_.prototype.getLayerRenderer = function(layer) {\n  var layerKey = _ol_.getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    var layerRendererPlugins = _ol_plugins_.getLayerRendererPlugins();\n    var renderer;\n    var type = this.getType();\n    for (var i = 0, ii = layerRendererPlugins.length; i < ii; ++i) {\n      var plugin = layerRendererPlugins[i];\n      if (plugin['handles'](type, layer)) {\n        renderer = plugin['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = _ol_events_.listen(renderer,\n          _ol_events_EventType_.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {ol.renderer.Layer} Layer renderer.\n */\n_ol_renderer_Map_.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, ol.renderer.Layer>} Layer renderers.\n */\n_ol_renderer_Map_.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {ol.PluggableMap} Map.\n */\n_ol_renderer_Map_.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * @abstract\n * @return {ol.renderer.Type} Type\n */\n_ol_renderer_Map_.prototype.getType = function() {};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\n_ol_renderer_Map_.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {ol.renderer.Layer} Layer renderer.\n * @private\n */\n_ol_renderer_Map_.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  var layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  _ol_events_.unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?olx.FrameState} frameState Frame state.\n */\n_ol_renderer_Map_.prototype.renderFrame = _ol_.nullFunction;\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_Map_.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  var layerKey;\n  for (layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @protected\n */\n_ol_renderer_Map_.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(\n      /** @type {ol.PostRenderFunction} */ (_ol_renderer_Map_.expireIconCache_)\n  );\n};\n\n\n/**\n * @param {!olx.FrameState} frameState Frame state.\n * @protected\n */\n_ol_renderer_Map_.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  var layerKey;\n  for (layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n          /** @type {ol.PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {ol.LayerState} state1 First layer state.\n * @param {ol.LayerState} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\n_ol_renderer_Map_.sortByZIndex = function(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n};\nexport default _ol_renderer_Map_;\n","// FIXME offset panning\n\nimport _ol_transform_ from '../../transform.js';\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_css_ from '../../css.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_layer_Layer_ from '../../layer/layer.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_Immediate_ from '../../render/canvas/immediate.js';\nimport _ol_renderer_Map_ from '../map.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_source_State_ from '../../source/state.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.Map}\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @api\n */\nvar _ol_renderer_canvas_Map_ = function(container, map) {\n\n  _ol_renderer_Map_.call(this, container, map);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = _ol_dom_.createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = _ol_css_.CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.transform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_Map_, _ol_renderer_Map_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_Map_['handles'] = function(type) {\n  return type === _ol_renderer_Type_.CANVAS;\n};\n\n\n/**\n * Create the map renderer.\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @return {ol.renderer.canvas.Map} The map renderer.\n */\n_ol_renderer_canvas_Map_['create'] = function(container, map) {\n  return new _ol_renderer_canvas_Map_(container, map);\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_canvas_Map_.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  var map = this.getMap();\n  var context = this.context_;\n  if (map.hasListener(type)) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var rotation = viewState.rotation;\n\n    var transform = this.getTransform(frameState);\n\n    var vectorContext = new _ol_render_canvas_Immediate_(context, pixelRatio,\n        extent, transform, rotation);\n    var composeEvent = new _ol_render_Event_(type, vectorContext,\n        frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @protected\n * @return {!ol.Transform} Transform.\n */\n_ol_renderer_canvas_Map_.prototype.getTransform = function(frameState) {\n  var viewState = frameState.viewState;\n  var dx1 = this.canvas_.width / 2;\n  var dy1 = this.canvas_.height / 2;\n  var sx = frameState.pixelRatio / viewState.resolution;\n  var sy = -sx;\n  var angle = -viewState.rotation;\n  var dx2 = -viewState.center[0];\n  var dy2 = -viewState.center[1];\n  return _ol_transform_.compose(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_Map_.prototype.getType = function() {\n  return _ol_renderer_Type_.CANVAS;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_Map_.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var context = this.context_;\n  var pixelRatio = frameState.pixelRatio;\n  var width = Math.round(frameState.size[0] * pixelRatio);\n  var height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  var rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(_ol_render_EventType_.PRECOMPOSE, frameState);\n\n  var layerStatesArray = frameState.layerStatesArray;\n  _ol_array_.stableSort(layerStatesArray, _ol_renderer_Map_.sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    _ol_render_canvas_.rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  var viewResolution = frameState.viewState.resolution;\n  var i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {ol.renderer.canvas.Layer} */ (this.getLayerRenderer(layer));\n    if (!_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != _ol_source_State_.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(\n      _ol_render_EventType_.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_Map_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n    layerFilter, thisArg2) {\n  var result;\n  var viewState = frameState.viewState;\n  var viewResolution = viewState.resolution;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n\n  var coordinate = _ol_transform_.apply(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      var layerRenderer = /** @type {ol.renderer.canvas.Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\nexport default _ol_renderer_canvas_Map_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileRange_ from '../../tilerange.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_IntermediateCanvas_ from '../canvas/intermediatecanvas.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.IntermediateCanvas}\n * @param {ol.layer.Tile|ol.layer.VectorTile} tileLayer Tile layer.\n * @api\n */\nvar _ol_renderer_canvas_TileLayer_ = function(tileLayer) {\n\n  _ol_renderer_canvas_IntermediateCanvas_.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null :  _ol_dom_.createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<ol.Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @protected\n   * @type {ol.Extent}\n   */\n  this.tmpExtent = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {ol.TileRange}\n   */\n  this.tmpTileRange_ = new _ol_TileRange_(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.imageTransform_ = _ol_transform_.create();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_TileLayer_, _ol_renderer_canvas_IntermediateCanvas_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_TileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.TileLayer} The layer renderer.\n */\n_ol_renderer_canvas_TileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_TileLayer_(/** @type {ol.layer.Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {ol.Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\n_ol_renderer_canvas_TileLayer_.prototype.isDrawableTile_ = function(tile) {\n  var tileState = tile.getState();\n  var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == _ol_TileState_.LOADED ||\n      tileState == _ol_TileState_.EMPTY ||\n      tileState == _ol_TileState_.ERROR && !useInterimTilesOnError;\n};\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_TileLayer_.prototype.prepareFrame = function(frameState, layerState) {\n\n  var pixelRatio = frameState.pixelRatio;\n  var size = frameState.size;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var viewResolution = viewState.resolution;\n  var viewCenter = viewState.center;\n\n  var tileLayer = this.getLayer();\n  var tileSource = /** @type {ol.source.Tile} */ (tileLayer.getSource());\n  var sourceRevision = tileSource.getRevision();\n  var tileGrid = tileSource.getTileGridForProjection(projection);\n  var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  var tileResolution = tileGrid.getResolution(z);\n  var oversampling = Math.round(viewResolution / tileResolution) || 1;\n  var extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = _ol_extent_.getIntersection(extent, layerState.extent);\n  }\n  if (_ol_extent_.isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, ol.Tile>>}\n   */\n  var tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n  var tmpExtent = this.tmpExtent;\n  var tmpTileRange = this.tmpTileRange_;\n  var newTiles = false;\n  var tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n      if (tile.getState() == _ol_TileState_.ERROR) {\n        if (!tileLayer.getUseInterimTilesOnError()) {\n          // When useInterimTilesOnError is false, we consider the error tile as loaded.\n          tile.setState(_ol_TileState_.LOADED);\n        } else if (tileLayer.getPreload() > 0) {\n          // Preloaded tiles for lower resolutions might have finished loading.\n          newTiles = true;\n        }\n      }\n      if (!this.isDrawableTile_(tile)) {\n        tile = tile.getInterimTile();\n      }\n      if (this.isDrawableTile_(tile)) {\n        var uid = _ol_.getUid(this);\n        if (tile.getState() == _ol_TileState_.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          var inTransition = tile.inTransition(uid);\n          if (!newTiles && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            newTiles = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n      var covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  var hints = frameState.viewHints;\n  var animatingOrInteracting = hints[_ol_ViewHint_.ANIMATING] || hints[_ol_ViewHint_.INTERACTING];\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    newTiles ||\n        !(this.renderedExtent_ && _ol_extent_.containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    var context = this.context;\n    if (context) {\n      var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      var canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !_ol_extent_.equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    var tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (var tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  var scale = this.renderedResolution / viewResolution;\n  var transform = _ol_transform_.compose(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  _ol_transform_.compose(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n  this.updateLogos(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\n_ol_renderer_canvas_TileLayer_.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  var image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  var uid = _ol_.getUid(this);\n  var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  var alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_TileLayer_.prototype.getImage = function() {\n  var context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {ol.layer.Tile|ol.layer.VectorTile}\n */\n_ol_renderer_canvas_TileLayer_.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_TileLayer_.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default _ol_renderer_canvas_TileLayer_;\n","/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nvar _ol_render_ReplayGroup_ = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {ol.render.ReplayType} replayType Replay type.\n * @return {ol.render.VectorContext} Replay.\n */\n_ol_render_ReplayGroup_.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\n_ol_render_ReplayGroup_.prototype.isEmpty = function() {};\nexport default _ol_render_ReplayGroup_;\n","/**\n * @enum {string}\n */\nvar _ol_render_ReplayType_ = {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\nexport default _ol_render_ReplayType_;\n","var _ol_geom_flat_length_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\n_ol_geom_flat_length_.lineString = function(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  var i;\n  for (i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\n_ol_geom_flat_length_.linearRing = function(flatCoordinates, offset, end, stride) {\n  var perimeter =\n      _ol_geom_flat_length_.lineString(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n};\nexport default _ol_geom_flat_length_;\n","import _ol_math_ from '../../math.js';\nvar _ol_geom_flat_textpath_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\n_ol_geom_flat_textpath_.lineString = function(\n    flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = _ol_math_.lerp(x1, x2, interpolate);\n    var y = _ol_math_.lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n};\nexport default _ol_geom_flat_textpath_;\n","/**\n * @enum {number}\n */\nvar _ol_render_canvas_Instruction_ = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\nexport default _ol_render_canvas_Instruction_;\n","import _ol_render_ReplayType_ from '../render/replaytype.js';\nvar _ol_render_replay_ = {};\n\n\n/**\n * @const\n * @type {Array.<ol.render.ReplayType>}\n */\n_ol_render_replay_.ORDER = [\n  _ol_render_ReplayType_.POLYGON,\n  _ol_render_ReplayType_.CIRCLE,\n  _ol_render_ReplayType_.LINE_STRING,\n  _ol_render_ReplayType_.IMAGE,\n  _ol_render_ReplayType_.TEXT,\n  _ol_render_ReplayType_.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\n_ol_render_replay_.TEXT_ALIGN = {};\n_ol_render_replay_.TEXT_ALIGN['left'] = 0;\n_ol_render_replay_.TEXT_ALIGN['end'] = 0;\n_ol_render_replay_.TEXT_ALIGN['center'] = 0.5;\n_ol_render_replay_.TEXT_ALIGN['right'] = 1;\n_ol_render_replay_.TEXT_ALIGN['start'] = 1;\n_ol_render_replay_.TEXT_ALIGN['top'] = 0;\n_ol_render_replay_.TEXT_ALIGN['middle'] = 0.5;\n_ol_render_replay_.TEXT_ALIGN['hanging'] = 0.2;\n_ol_render_replay_.TEXT_ALIGN['alphabetic'] = 0.8;\n_ol_render_replay_.TEXT_ALIGN['ideographic'] = 0.8;\n_ol_render_replay_.TEXT_ALIGN['bottom'] = 1;\nexport default _ol_render_replay_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_extent_Relationship_ from '../../extent/relationship.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_geom_flat_inflate_ from '../../geom/flat/inflate.js';\nimport _ol_geom_flat_length_ from '../../geom/flat/length.js';\nimport _ol_geom_flat_textpath_ from '../../geom/flat/textpath.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_Replay_ = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {ol.Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.fillOrigin_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {Object.<number,ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!ol.Transform}\n   */\n  this.renderedTransform_ = _ol_transform_.create();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {ol.CanvasFillStrokeState}\n   */\n  this.state = /** @type {ol.CanvasFillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n  /**\n   * @private\n   * @type {!ol.Transform}\n   */\n  this.tmpLocalTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {!ol.Transform}\n   */\n  this.resetTransform_ = _ol_transform_.create();\n};\n\n_ol_.inherits(_ol_render_canvas_Replay_, _ol_render_VectorContext_);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Coordinate} p1 1st point of the background box.\n * @param {ol.Coordinate} p2 2nd point of the background box.\n * @param {ol.Coordinate} p3 3rd point of the background box.\n * @param {ol.Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\n_ol_render_canvas_Replay_.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n    fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.fillOrigin_ = /** @type {Array.<number>} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {ol.DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\n_ol_render_canvas_Replay_.prototype.replayImage_ = function(context, x, y, image,\n    anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n    rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  var fillStroke = fillInstruction || strokeInstruction;\n  var localTransform = this.tmpLocalTransform_;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  var w = (width + originX > image.width) ? image.width - originX : width;\n  var h = (height + originY > image.height) ? image.height - originY : height;\n  var box = this.tmpExtent_;\n  var boxW = padding[3] + w * scale + padding[1];\n  var boxH = padding[0] + h * scale + padding[2];\n  var boxX = x - padding[3];\n  var boxY = y - padding[0];\n\n  /** @type {ol.Coordinate} */\n  var p1;\n  /** @type {ol.Coordinate} */\n  var p2;\n  /** @type {ol.Coordinate} */\n  var p3;\n  /** @type {ol.Coordinate} */\n  var p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  var transform = null;\n  if (rotation !== 0) {\n    var centerX = x + anchorX;\n    var centerY = y + anchorY;\n    transform = _ol_transform_.compose(localTransform,\n        centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    _ol_extent_.createOrUpdateEmpty(box);\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p1));\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p2));\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p3));\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p4));\n  } else {\n    _ol_extent_.createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, box);\n  }\n  var canvas = context.canvas;\n  var intersects = box[0] <= canvas.width && box[2] >= 0 && box[1] <= canvas.height && box[3] >= 0;\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    _ol_extent_.extend(declutterGroup, box);\n    var declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array.<*>} */ (fillInstruction),\n          /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    _ol_render_canvas_.drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\n_ol_render_canvas_Replay_.prototype.applyPixelRatio = function(dashArray) {\n  var pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\n_ol_render_canvas_Replay_.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  var myEnd = this.coordinates.length;\n  var extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var nextCoord = [NaN, NaN];\n  var skipped = true;\n\n  var i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = _ol_extent_.coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === _ol_extent_Relationship_.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\n_ol_render_canvas_Replay_.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\n_ol_render_canvas_Replay_.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  var type = geometry.getType();\n  var stride = geometry.getStride();\n  var replayBegin = this.coordinates.length;\n  var flatCoordinates, replayEnd, replayEnds, replayEndss;\n  var offset;\n  if (type == _ol_geom_GeometryType_.MULTI_POLYGON) {\n    geometry = /** @type {ol.geom.MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    var endss = geometry.getEndss();\n    offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, _ol_geom_flat_inflate_.coordinatesss]);\n  } else if (type == _ol_geom_GeometryType_.POLYGON || type == _ol_geom_GeometryType_.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == _ol_geom_GeometryType_.POLYGON) ?\n      /** @type {ol.geom.Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {ol.geom.Polygon|ol.geom.MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, _ol_geom_flat_inflate_.coordinatess]);\n  } else if (type == _ol_geom_GeometryType_.LINE_STRING || type == _ol_geom_GeometryType_.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, _ol_geom_flat_inflate_.coordinates]);\n  } else if (type == _ol_geom_GeometryType_.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_canvas_Replay_.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ =\n      [_ol_render_canvas_Instruction_.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ =\n      [_ol_render_canvas_Instruction_.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\n_ol_render_canvas_Replay_.prototype.fill_ = function(context) {\n  if (this.fillOrigin_) {\n    var origin = _ol_transform_.apply(this.renderedTransform_, this.fillOrigin_.slice());\n    context.translate(origin[0], origin[1]);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.fillOrigin_) {\n    context.setTransform.apply(context, _ol_render_canvas_.resetTransform_);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\n_ol_render_canvas_Replay_.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {ol.ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (_ol_has_.CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {ol.DeclutterGroup} declutterGroup Declutter group.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_canvas_Replay_.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    var groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {ol.RBushEntry} */\n      var box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        var drawImage = _ol_render_canvas_.drawImage;\n        for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          var declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      _ol_extent_.createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {ol.Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_canvas_Replay_.prototype.replay_ = function(\n    context, transform, skippedFeaturesHash,\n    instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  var pixelCoordinates;\n  if (this.pixelCoordinates_ && _ol_array_.equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n    _ol_transform_.setFromArray(this.renderedTransform_, transform);\n  }\n  var skipFeatures = !_ol_obj_.isEmpty(skippedFeaturesHash);\n  var i = 0; // instruction index\n  var ii = instructions.length; // end of instructions\n  var d = 0; // data index\n  var dd; // end of per-instruction data\n  var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  var pendingFill = 0;\n  var pendingStroke = 0;\n  var lastFillInstruction = null;\n  var lastStrokeInstruction = null;\n  var coordinateCache = this.coordinateCache_;\n  var viewRotation = this.viewRotation_;\n\n  var state = /** @type {olx.render.State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  var batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n  while (i < ii) {\n    var instruction = instructions[i];\n    var type = /** @type {ol.render.canvas.Instruction} */ (instruction[0]);\n    var /** @type {ol.Feature|ol.render.Feature} */ feature, x, y;\n    switch (type) {\n      case _ol_render_canvas_Instruction_.BEGIN_GEOMETRY:\n        feature = /** @type {ol.Feature|ol.render.Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[_ol_.getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !_ol_extent_.intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case _ol_render_canvas_Instruction_.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        var x1 = pixelCoordinates[d];\n        var y1 = pixelCoordinates[d + 1];\n        var x2 = pixelCoordinates[d + 2];\n        var y2 = pixelCoordinates[d + 3];\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        var geometry = /** @type {ol.geom.SimpleGeometry} */ (instruction[3]);\n        var renderer = instruction[4];\n        var fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        var coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {ol.DeclutterGroup} */ (instruction[6]);\n        var height = /** @type {number} */ (instruction[7]);\n        var opacity = /** @type {number} */ (instruction[8]);\n        var originX = /** @type {number} */ (instruction[9]);\n        var originY = /** @type {number} */ (instruction[10]);\n        var rotateWithView = /** @type {boolean} */ (instruction[11]);\n        var rotation = /** @type {number} */ (instruction[12]);\n        var scale = /** @type {number} */ (instruction[13]);\n        var snapToPixel = /** @type {boolean} */ (instruction[14]);\n        var width = /** @type {number} */ (instruction[15]);\n\n        var padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = _ol_render_canvas_.defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.DRAW_CHARS:\n        var begin = /** @type {number} */ (instruction[1]);\n        var end = /** @type {number} */ (instruction[2]);\n        var baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {ol.DeclutterGroup} */ (instruction[4]);\n        var overflow = /** @type {number} */ (instruction[5]);\n        var fillKey = /** @type {string} */ (instruction[6]);\n        var maxAngle = /** @type {number} */ (instruction[7]);\n        var measure = /** @type {function(string):number} */ (instruction[8]);\n        var offsetY = /** @type {number} */ (instruction[9]);\n        var strokeKey = /** @type {string} */ (instruction[10]);\n        var strokeWidth =  /** @type {number} */ (instruction[11]);\n        var text = /** @type {string} */ (instruction[12]);\n        var textKey = /** @type {string} */ (instruction[13]);\n        var textScale = /** @type {number} */ (instruction[14]);\n\n        var pathLength = _ol_geom_flat_length_.lineString(pixelCoordinates, begin, end, 2);\n        var textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          var textAlign = /** @type {ol.render.canvas.TextReplay} */ (this).textStates[textKey].textAlign;\n          var startM = (pathLength - textLength) * _ol_render_replay_.TEXT_ALIGN[textAlign];\n          var parts = _ol_geom_flat_textpath_.lineString(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            var c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {ol.render.canvas.TextReplay} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    _ol_render_canvas_.defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {ol.render.canvas.TextReplay} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    _ol_render_canvas_.defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {ol.Feature|ol.render.Feature} */ (instruction[1]);\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.fillOrigin_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {ol.ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\n_ol_render_canvas_Replay_.prototype.replay = function(\n    context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {ol.Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_canvas_Replay_.prototype.replayHitDetection = function(\n    context, transform, viewRotation, skippedFeaturesHash,\n    opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\n_ol_render_canvas_Replay_.prototype.reverseHitDetectionInstructions = function() {\n  var hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  var i;\n  var n = hitDetectionInstructions.length;\n  var instruction;\n  var type;\n  var begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {ol.render.canvas.Instruction} */ (instruction[0]);\n    if (type == _ol_render_canvas_Instruction_.END_GEOMETRY) {\n      begin = i;\n    } else if (type == _ol_render_canvas_Instruction_.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      _ol_array_.reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_Replay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var state = this.state;\n  if (fillStyle) {\n    var fillStyleColor = fillStyle.getColor();\n    state.fillStyle = _ol_colorlike_.asColorLike(fillStyleColor ?\n      fillStyleColor : _ol_render_canvas_.defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    var strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = _ol_colorlike_.asColorLike(strokeStyleColor ?\n      strokeStyleColor : _ol_render_canvas_.defaultStrokeStyle);\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : _ol_render_canvas_.defaultLineCap;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : _ol_render_canvas_.defaultLineDash;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin;\n    var strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : _ol_render_canvas_.defaultLineWidth;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n */\n_ol_render_canvas_Replay_.prototype.applyFill = function(state, geometry) {\n  var fillStyle = state.fillStyle;\n  var fillInstruction = [_ol_render_canvas_Instruction_.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    var fillExtent = geometry.getExtent();\n    fillInstruction.push([fillExtent[0], fillExtent[3]]);\n  }\n  this.instructions.push(fillInstruction);\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n */\n_ol_render_canvas_Replay_.prototype.applyStroke = function(state) {\n  this.instructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ]);\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n * @param {function(this:ol.render.canvas.Replay, ol.CanvasFillStrokeState, (ol.geom.Geometry|ol.render.Feature))} applyFill Apply fill.\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n */\n_ol_render_canvas_Replay_.prototype.updateFillStyle = function(state, applyFill, geometry) {\n  var fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    applyFill.call(this, state, geometry);\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n * @param {function(this:ol.render.canvas.Replay, ol.CanvasFillStrokeState)} applyStroke Apply stroke.\n */\n_ol_render_canvas_Replay_.prototype.updateStrokeStyle = function(state, applyStroke) {\n  var strokeStyle = state.strokeStyle;\n  var lineCap = state.lineCap;\n  var lineDash = state.lineDash;\n  var lineDashOffset = state.lineDashOffset;\n  var lineJoin = state.lineJoin;\n  var lineWidth = state.lineWidth;\n  var miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !_ol_array_.equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    applyStroke.call(this, state);\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_canvas_Replay_.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  var endGeometryInstruction =\n      [_ol_render_canvas_Instruction_.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_render_canvas_Replay_.prototype.finish = _ol_.nullFunction;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {ol.Extent} The buffered rendering extent.\n * @protected\n */\n_ol_render_canvas_Replay_.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = _ol_extent_.clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      var width = this.resolution * (this.maxLineWidth + 1) / 2;\n      _ol_extent_.buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default _ol_render_canvas_Replay_;\n","import _ol_ from '../../index.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_ImageReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {ol.DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\n_ol_.inherits(_ol_render_canvas_ImageReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\n_ol_render_canvas_ImageReplay_.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  var flatCoordinates = pointGeometry.getFlatCoordinates();\n  var stride = pointGeometry.getStride();\n  var myBegin = this.coordinates.length;\n  var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd,\n    this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  var stride = multiPointGeometry.getStride();\n  var myBegin = this.coordinates.length;\n  var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd,\n    this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  var anchor = imageStyle.getAnchor();\n  var size = imageStyle.getSize();\n  var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  var image = imageStyle.getImage(1);\n  var origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {ol.DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default _ol_render_canvas_ImageReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_LineStringReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\n_ol_.inherits(_ol_render_canvas_LineStringReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  var myBegin = this.coordinates.length;\n  var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n  var moveToLineToInstruction =\n      [_ol_render_canvas_Instruction_.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawLineString = function(lineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], [\n    _ol_render_canvas_Instruction_.BEGIN_PATH\n  ]);\n  var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  var stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], [\n    _ol_render_canvas_Instruction_.BEGIN_PATH\n  ]);\n  var ends = multiLineStringGeometry.getEnds();\n  var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  var stride = multiLineStringGeometry.getStride();\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(\n        flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.finish = function() {\n  var state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\n_ol_render_canvas_LineStringReplay_.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  _ol_render_canvas_Replay_.prototype.applyStroke.call(this, state);\n  this.instructions.push([_ol_render_canvas_Instruction_.BEGIN_PATH]);\n};\nexport default _ol_render_canvas_LineStringReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_geom_flat_simplify_ from '../../geom/flat/simplify.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_PolygonReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\n_ol_.inherits(_ol_render_canvas_PolygonReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  var state = this.state;\n  var fill = state.fillStyle !== undefined;\n  var stroke = state.strokeStyle != undefined;\n  var numEnds = ends.length;\n  var beginPathInstruction = [_ol_render_canvas_Instruction_.BEGIN_PATH];\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (var i = 0; i < numEnds; ++i) {\n    var end = ends[i];\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n        flatCoordinates, offset, end, stride, true, !stroke);\n    var moveToLineToInstruction =\n        [_ol_render_canvas_Instruction_.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      var closePathInstruction = [_ol_render_canvas_Instruction_.CLOSE_PATH];\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  var fillInstruction = [_ol_render_canvas_Instruction_.FILL];\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (fill) {\n    this.instructions.push(fillInstruction);\n  }\n  if (stroke) {\n    var strokeInstruction = [_ol_render_canvas_Instruction_.STROKE];\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawCircle = function(circleGeometry, feature) {\n  var state = this.state;\n  var fillStyle = state.fillStyle;\n  var strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  // always fill the circle for hit detection\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_FILL_STYLE,\n    _ol_color_.asString(_ol_render_canvas_.defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  var flatCoordinates = circleGeometry.getFlatCoordinates();\n  var stride = circleGeometry.getStride();\n  var myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  var beginPathInstruction = [_ol_render_canvas_Instruction_.BEGIN_PATH];\n  var circleInstruction = [_ol_render_canvas_Instruction_.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  var fillInstruction = [_ol_render_canvas_Instruction_.FILL];\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    var strokeInstruction = [_ol_render_canvas_Instruction_.STROKE];\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawPolygon = function(polygonGeometry, feature) {\n  var state = this.state;\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  // always fill the polygon for hit detection\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_FILL_STYLE,\n    _ol_color_.asString(_ol_render_canvas_.defaultFillStyle)]\n  );\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  var ends = polygonGeometry.getEnds();\n  var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  var stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  var state = this.state;\n  var fillStyle = state.fillStyle;\n  var strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  // always fill the multi-polygon for hit detection\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_FILL_STYLE,\n    _ol_color_.asString(_ol_render_canvas_.defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  var endss = multiPolygonGeometry.getEndss();\n  var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  var stride = multiPolygonGeometry.getStride();\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(\n        flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  var tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    var coordinates = this.coordinates;\n    var i, ii;\n    for (i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = _ol_geom_flat_simplify_.snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n */\n_ol_render_canvas_PolygonReplay_.prototype.setFillStrokeStyles_ = function(geometry) {\n  var state = this.state;\n  var fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.applyFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default _ol_render_canvas_PolygonReplay_;\n","var _ol_geom_flat_straightchunk_ = {};\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\n_ol_geom_flat_straightchunk_.lineString = function(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n};\nexport default _ol_geom_flat_straightchunk_;\n","/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link ol.geom.LineString},\n * {@link ol.geom.Polygon}, {@link ol.geom.MultiLineString} or\n * {@link ol.geom.MultiPolygon}.\n * @enum {string}\n */\nvar _ol_style_TextPlacement_ = {\n  POINT: 'point',\n  LINE: 'line'\n};\n\nexport default _ol_style_TextPlacement_;\n","import _ol_ from '../../index.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_straightchunk_ from '../../geom/flat/straightchunk.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_style_TextPlacement_ from '../../style/textplacement.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_TextReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {ol.DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {Object.<string, ol.CanvasFillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {Object.<string, ol.CanvasStrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {ol.CanvasTextState}\n   */\n  this.textState_ = /** @type {ol.CanvasTextState} */ ({});\n\n  /**\n   * @type {Object.<string, ol.CanvasTextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  var labelCache = _ol_render_canvas_.labelCache;\n  labelCache.prune();\n\n};\n\n_ol_.inherits(_ol_render_canvas_TextReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\n_ol_render_canvas_TextReplay_.measureTextWidths = function(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  var currentWidth, i;\n  for (i = 0; i < numLines; ++i) {\n    currentWidth = _ol_render_canvas_.measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_TextReplay_.prototype.drawText = function(geometry, feature) {\n  var fillState = this.textFillState_;\n  var strokeState = this.textStrokeState_;\n  var textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  var begin = this.coordinates.length;\n\n  var geometryType = geometry.getType();\n  var flatCoordinates = null;\n  var end = 2;\n  var stride = 2;\n  var i, ii;\n\n  if (textState.placement === _ol_style_TextPlacement_.LINE) {\n    if (!_ol_extent_.intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    var ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == _ol_geom_GeometryType_.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == _ol_geom_GeometryType_.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == _ol_geom_GeometryType_.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == _ol_geom_GeometryType_.MULTI_POLYGON) {\n      var endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    var textAlign = textState.textAlign;\n    var flatOffset = 0;\n    var flatEnd;\n    for (var o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        var range = _ol_geom_flat_straightchunk_.lineString(\n            textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    var width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case _ol_geom_GeometryType_.POINT:\n      case _ol_geom_GeometryType_.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case _ol_geom_GeometryType_.LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case _ol_geom_GeometryType_.CIRCLE:\n        flatCoordinates = /** @type {ol.geom.Circle} */ (geometry).getCenter();\n        break;\n      case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case _ol_geom_GeometryType_.POLYGON:\n        flatCoordinates = /** @type {ol.geom.Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case _ol_geom_GeometryType_.MULTI_POLYGON:\n        var interiorPoints = /** @type {ol.geom.MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    this.beginGeometry(geometry, feature);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      this.updateFillStyle(this.state, this.applyFill, geometry);\n      this.updateStrokeStyle(this.state, this.applyStroke);\n    }\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\n_ol_render_canvas_TextReplay_.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  var label;\n  var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  var labelCache = _ol_render_canvas_.labelCache;\n  if (!labelCache.containsKey(key)) {\n    var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    var textState = this.textStates[textKey] || this.textState_;\n    var pixelRatio = this.pixelRatio;\n    var scale = textState.scale * pixelRatio;\n    var align =  _ol_render_replay_.TEXT_ALIGN[textState.textAlign || _ol_render_canvas_.defaultTextAlign];\n    var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var lines = text.split('\\n');\n    var numLines = lines.length;\n    var widths = [];\n    var width = _ol_render_canvas_TextReplay_.measureTextWidths(textState.font, lines, widths);\n    var lineHeight = _ol_render_canvas_.measureTextHeight(textState.font);\n    var height = lineHeight * numLines;\n    var renderWidth = (width + strokeWidth);\n    var context = _ol_dom_.createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth * (_ol_has_.SAFARI ? scale : 1);\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (_ol_has_.CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    var leftRight = (0.5 - align);\n    var x = align * label.width / scale + leftRight * strokeWidth;\n    var i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\n_ol_render_canvas_TextReplay_.prototype.drawTextImage_ = function(label, begin, end) {\n  var textState = this.textState_;\n  var strokeState = this.textStrokeState_;\n  var pixelRatio = this.pixelRatio;\n  var align = _ol_render_replay_.TEXT_ALIGN[textState.textAlign || _ol_render_canvas_.defaultTextAlign];\n  var baseline = _ol_render_replay_.TEXT_ALIGN[textState.textBaseline];\n  var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([_ol_render_canvas_Instruction_.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == _ol_render_canvas_.defaultPadding ?\n      _ol_render_canvas_.defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {ol.DeclutterGroup} declutterGroup Declutter group.\n */\n_ol_render_canvas_TextReplay_.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  var strokeState = this.textStrokeState_;\n  var textState = this.textState_;\n  var fillState = this.textFillState_;\n\n  var strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {ol.CanvasStrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  var textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {ol.CanvasTextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || _ol_render_canvas_.defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  var fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {ol.CanvasFillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  var pixelRatio = this.pixelRatio;\n  var baseline = _ol_render_replay_.TEXT_ALIGN[textState.textBaseline];\n\n  var offsetY = this.textOffsetY_ * pixelRatio;\n  var text = this.text_;\n  var font = textState.font;\n  var textScale = textState.scale;\n  var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  var widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([_ol_render_canvas_Instruction_.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      var width = widths[text];\n      if (!width) {\n        width = widths[text] = _ol_render_canvas_.measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      var width = widths[text];\n      if (!width) {\n        width = widths[text] = _ol_render_canvas_.measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_TextReplay_.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  var textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {ol.DeclutterGroup} */ (declutterGroup);\n\n    var textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {ol.CanvasFillState} */ ({});\n      }\n      fillState.fillStyle = _ol_colorlike_.asColorLike(\n          textFillStyle.getColor() || _ol_render_canvas_.defaultFillStyle);\n    }\n\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {ol.CanvasStrokeState} */ ({});\n      }\n      var lineDash = textStrokeStyle.getLineDash();\n      var lineDashOffset = textStrokeStyle.getLineDashOffset();\n      var lineWidth = textStrokeStyle.getWidth();\n      var miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || _ol_render_canvas_.defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : _ol_render_canvas_.defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? _ol_render_canvas_.defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || _ol_render_canvas_.defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? _ol_render_canvas_.defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? _ol_render_canvas_.defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = _ol_colorlike_.asColorLike(\n          textStrokeStyle.getColor() || _ol_render_canvas_.defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    var font = textStyle.getFont() || _ol_render_canvas_.defaultFont;\n    _ol_render_canvas_.checkFont(font);\n    var textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || _ol_render_canvas_.defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || _ol_render_canvas_.defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    var textOffsetX = textStyle.getOffsetX();\n    var textOffsetY = textStyle.getOffsetY();\n    var textRotateWithView = textStyle.getRotateWithView();\n    var textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : _ol_.getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + _ol_.getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default _ol_render_canvas_TextReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_ReplayGroup_ from '../replaygroup.js';\nimport _ol_render_ReplayType_ from '../replaytype.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\nimport _ol_render_canvas_ImageReplay_ from '../canvas/imagereplay.js';\nimport _ol_render_canvas_LineStringReplay_ from '../canvas/linestringreplay.js';\nimport _ol_render_canvas_PolygonReplay_ from '../canvas/polygonreplay.js';\nimport _ol_render_canvas_TextReplay_ from '../canvas/textreplay.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.render.ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nvar _ol_render_canvas_ReplayGroup_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  _ol_render_ReplayGroup_.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {ol.DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<ol.render.ReplayType, ol.render.canvas.Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.hitDetectionTransform_ = _ol_transform_.create();\n};\n\n_ol_.inherits(_ol_render_canvas_ReplayGroup_, _ol_render_ReplayGroup_);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n * @private\n */\n_ol_render_canvas_ReplayGroup_.circleArrayCache_ = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @private\n */\n_ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_ = function(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n};\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n * @private\n */\n_ol_render_canvas_ReplayGroup_.getCircleArray_ = function(radius) {\n  if (_ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] !== undefined) {\n    return _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius + y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius + x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius + x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius + y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius - y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius - x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius - x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] = arr;\n  return arr;\n};\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\n_ol_render_canvas_ReplayGroup_.replayDeclutter = function(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(_ol_array_.numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n};\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {ol.DeclutterGroup} Declutter instruction group.\n */\n_ol_render_canvas_ReplayGroup_.prototype.addDeclutter = function(group) {\n  var declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = _ol_extent_.createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n */\n_ol_render_canvas_ReplayGroup_.prototype.clip = function(context, transform) {\n  var flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<ol.render.ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\n_ol_render_canvas_ReplayGroup_.prototype.hasReplays = function(replays) {\n  for (var zIndex in this.replaysByZIndex_) {\n    var candidates = this.replaysByZIndex_[zIndex];\n    for (var i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.finish = function() {\n  var zKey;\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n    for (replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T} callback Feature\n *     callback.\n * @param {Object.<string, ol.DeclutterGroup>} declutterReplays Declutter\n *     replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_canvas_ReplayGroup_.prototype.forEachFeatureAtCoordinate = function(\n    coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  var contextSize = hitTolerance * 2 + 1;\n  var transform = _ol_transform_.compose(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n  var context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {ol.Extent}\n   */\n  var hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = _ol_extent_.createEmpty();\n    _ol_extent_.extendCoordinate(hitExtent, coordinate);\n    _ol_extent_.buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  var mask = _ol_render_canvas_ReplayGroup_.getCircleArray_(hitTolerance);\n  var declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  var replayType;\n\n  /**\n   * @param {ol.Feature|ol.render.Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (var i = 0; i < contextSize; i++) {\n      for (var j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            var result;\n            if (!(declutteredFeatures && (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  var i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = _ol_render_replay_.ORDER.length - 1; j >= 0; --j) {\n      replayType = _ol_render_replay_.ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\n_ol_render_canvas_ReplayGroup_.prototype.getClipCoords = function(transform) {\n  var maxExtent = this.maxExtent_;\n  var minX = maxExtent[0];\n  var minY = maxExtent[1];\n  var maxX = maxExtent[2];\n  var maxY = maxExtent[3];\n  var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  _ol_geom_flat_transform_.transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.getReplay = function(zIndex, replayType) {\n  var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  var replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  var replay = replays[replayType];\n  if (replay === undefined) {\n    var Constructor = _ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<ol.render.ReplayType, ol.render.canvas.Replay>>} Replays.\n */\n_ol_render_canvas_ReplayGroup_.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.isEmpty = function() {\n  return _ol_obj_.isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<ol.render.ReplayType>=} opt_replayTypes Ordered replay types\n *     to replay. Default is {@link ol.render.replay.ORDER}\n * @param {Object.<string, ol.DeclutterGroup>=} opt_declutterReplays Declutter\n *     replays.\n */\n_ol_render_canvas_ReplayGroup_.prototype.replay = function(context,\n    transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  var replayTypes = opt_replayTypes ? opt_replayTypes : _ol_render_replay_.ORDER;\n  var i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      var replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<ol.render.ReplayType,\n *                function(new: ol.render.canvas.Replay, number, ol.Extent,\n *                number, number, boolean, Array.<ol.DeclutterGroup>)>}\n */\n_ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_ = {\n  'Circle': _ol_render_canvas_PolygonReplay_,\n  'Default': _ol_render_canvas_Replay_,\n  'Image': _ol_render_canvas_ImageReplay_,\n  'LineString': _ol_render_canvas_LineStringReplay_,\n  'Polygon': _ol_render_canvas_PolygonReplay_,\n  'Text': _ol_render_canvas_TextReplay_\n};\nexport default _ol_render_canvas_ReplayGroup_;\n","import _ol_ from '../index.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_render_ReplayType_ from '../render/replaytype.js';\nvar _ol_renderer_vector_ = {};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature1 Feature 1.\n * @param {ol.Feature|ol.render.Feature} feature2 Feature 2.\n * @return {number} Order.\n */\n_ol_renderer_vector_.defaultOrder = function(feature1, feature2) {\n  return _ol_.getUid(feature1) - _ol_.getUid(feature2);\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\n_ol_renderer_vector_.getSquaredTolerance = function(resolution, pixelRatio) {\n  var tolerance = _ol_renderer_vector_.getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\n_ol_renderer_vector_.getTolerance = function(resolution, pixelRatio) {\n  return _ol_.SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Circle} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderCircleGeometry_ = function(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\n_ol_renderer_vector_.renderFeature = function(\n    replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle, imageState;\n  imageStyle = style.getImage();\n  if (imageStyle) {\n    imageState = imageStyle.getImageState();\n    if (imageState == _ol_ImageState_.LOADED ||\n        imageState == _ol_ImageState_.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == _ol_ImageState_.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  _ol_renderer_vector_.renderFeature_(replayGroup, feature, style,\n      squaredTolerance);\n\n  return loading;\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\n_ol_renderer_vector_.renderFeature_ = function(\n    replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    _ol_renderer_vector_.renderGeometry_(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer =\n        _ol_renderer_vector_.GEOMETRY_RENDERERS_[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderGeometry_ = function(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == _ol_geom_GeometryType_.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      _ol_renderer_vector_.renderGeometry_(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), _ol_render_ReplayType_.DEFAULT);\n  replay.drawCustom(/** @type {ol.geom.SimpleGeometry} */ (geometry), feature, style.getRenderer());\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderGeometryCollectionGeometry_ = function(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        _ol_renderer_vector_.GEOMETRY_RENDERERS_[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.LineString|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderLineStringGeometry_ = function(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.MultiLineString|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderMultiLineStringGeometry_ = function(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderMultiPolygonGeometry_ = function(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Point|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderPointGeometry_ = function(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != _ol_ImageState_.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.MultiPoint|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderMultiPointGeometry_ = function(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != _ol_ImageState_.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Polygon|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderPolygonGeometry_ = function(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<ol.geom.GeometryType,\n *                function(ol.render.ReplayGroup, ol.geom.Geometry,\n *                         ol.style.Style, Object)>}\n */\n_ol_renderer_vector_.GEOMETRY_RENDERERS_ = {\n  'Point': _ol_renderer_vector_.renderPointGeometry_,\n  'LineString': _ol_renderer_vector_.renderLineStringGeometry_,\n  'Polygon': _ol_renderer_vector_.renderPolygonGeometry_,\n  'MultiPoint': _ol_renderer_vector_.renderMultiPointGeometry_,\n  'MultiLineString': _ol_renderer_vector_.renderMultiLineStringGeometry_,\n  'MultiPolygon': _ol_renderer_vector_.renderMultiPolygonGeometry_,\n  'GeometryCollection': _ol_renderer_vector_.renderGeometryCollectionGeometry_,\n  'Circle': _ol_renderer_vector_.renderCircleGeometry_\n};\nexport default _ol_renderer_vector_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_Layer_ from '../canvas/layer.js';\nimport _ol_renderer_vector_ from '../vector.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.Layer}\n * @param {ol.layer.Vector} vectorLayer Vector layer.\n * @api\n */\nvar _ol_renderer_canvas_VectorLayer_ = function(vectorLayer) {\n\n  _ol_renderer_canvas_Layer_.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ?\n    _ol_ext_rbush_(9) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedExtent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {function(ol.Feature, ol.Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {ol.render.canvas.ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = _ol_dom_.createCanvasContext2D();\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorLayer_, _ol_renderer_canvas_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_VectorLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorLayer} The layer renderer.\n */\n_ol_renderer_canvas_VectorLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorLayer_(/** @type {ol.layer.Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.disposeInternal = function() {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n  _ol_renderer_canvas_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.composeFrame = function(frameState, layerState, context) {\n\n  var extent = frameState.extent;\n  var pixelRatio = frameState.pixelRatio;\n  var skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var rotation = viewState.rotation;\n  var projectionExtent = projection.getExtent();\n  var vectorSource = /** @type {ol.source.Vector} */ (this.getLayer().getSource());\n\n  var transform = this.getTransform(frameState, 0);\n\n  this.preCompose(context, frameState, transform);\n\n  // clipped rendering if layer extent is set\n  var clipExtent = layerState.extent;\n  var clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {ol.Extent} */ (clipExtent));\n  }\n  var replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    var layer = /** @type {ol.layer.Vector} */ (this.getLayer());\n    var drawOffsetX = 0;\n    var drawOffsetY = 0;\n    var replayContext;\n    var transparentLayer = layerState.opacity !== 1;\n    var hasRenderListeners = layer.hasListener(_ol_render_EventType_.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      var drawWidth = context.canvas.width;\n      var drawHeight = context.canvas.height;\n      if (rotation) {\n        var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    var alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    _ol_render_canvas_.rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !_ol_extent_.containsExtent(projectionExtent, extent)) {\n      var startX = extent[0];\n      var worldWidth = _ol_extent_.getWidth(projectionExtent);\n      var world = 0;\n      var offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n      // restore original transform for render and compose events\n      transform = this.getTransform(frameState, 0);\n    }\n    _ol_render_canvas_.rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        var mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n  this.postCompose(context, frameState, layerState, transform);\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var layer = /** @type {ol.layer.Vector} */ (this.getLayer());\n    /** @type {Object.<string, boolean>} */\n    var features = {};\n    var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution,\n        rotation, hitTolerance, {},\n        /**\n         * @param {ol.Feature|ol.render.Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = _ol_.getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n */\n_ol_renderer_canvas_VectorLayer_.prototype.handleFontsChanged_ = function(event) {\n  var layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_canvas_VectorLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.prepareFrame = function(frameState, layerState) {\n\n  var vectorLayer = /** @type {ol.layer.Vector} */ (this.getLayer());\n  var vectorSource = vectorLayer.getSource();\n\n  this.updateLogos(frameState, vectorSource);\n\n  var animating = frameState.viewHints[_ol_ViewHint_.ANIMATING];\n  var interacting = frameState.viewHints[_ol_ViewHint_.INTERACTING];\n  var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  var frameStateExtent = frameState.extent;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var vectorLayerRevision = vectorLayer.getRevision();\n  var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = _ol_renderer_vector_.defaultOrder;\n  }\n\n  var extent = _ol_extent_.buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n  var projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !_ol_extent_.containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n    var buffer = Math.max(_ol_extent_.getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - buffer;\n    extent[2] = projectionExtent[2] + buffer;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      _ol_extent_.containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  var replayGroup = new _ol_render_canvas_ReplayGroup_(\n      _ol_renderer_vector_.getTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {ol.Feature} feature Feature.\n   * @this {ol.renderer.canvas.VectorLayer}\n   */\n  var renderFeature = function(feature) {\n    var styles;\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction.call(feature, resolution);\n    } else {\n      styleFunction = vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n    }\n    if (styles) {\n      var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<ol.Feature>} */\n    var features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {ol.Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      renderFeature(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, renderFeature, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_canvas_VectorLayer_.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i],\n          _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles,\n        _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default _ol_renderer_canvas_VectorLayer_;\n","/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nvar _ol_layer_VectorTileRenderType_ = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\nexport default _ol_layer_VectorTileRenderType_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_layer_VectorTileRenderType_ from '../../layer/vectortilerendertype.js';\nimport _ol_proj_ from '../../proj.js';\nimport _ol_proj_Units_ from '../../proj/units.js';\nimport _ol_render_ReplayType_ from '../../render/replaytype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_render_replay_ from '../../render/replay.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_TileLayer_ from '../canvas/tilelayer.js';\nimport _ol_renderer_vector_ from '../vector.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.TileLayer}\n * @param {ol.layer.VectorTile} layer VectorTile layer.\n * @api\n */\nvar _ol_renderer_canvas_VectorTileLayer_ = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  _ol_renderer_canvas_TileLayer_.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n     */\n  this.declutterTree_ = layer.getDeclutter() ? _ol_ext_rbush_(9) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpTransform_ = _ol_transform_.create();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection =\n      layer.getRenderMode() == _ol_layer_VectorTileRenderType_.VECTOR ? 1 : 0;\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorTileLayer_, _ol_renderer_canvas_TileLayer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_VectorTileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorTileLayer} The layer renderer.\n */\n_ol_renderer_canvas_VectorTileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorTileLayer_(/** @type {ol.layer.VectorTile} */ (layer));\n};\n\n\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n_ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS = {\n  'image': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.CIRCLE,\n    _ol_render_ReplayType_.LINE_STRING, _ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT],\n  'hybrid': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.LINE_STRING]\n};\n\n\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n_ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS = {\n  'image': [_ol_render_ReplayType_.DEFAULT],\n  'hybrid': [_ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT, _ol_render_ReplayType_.DEFAULT],\n  'vector': _ol_render_replay_.ORDER\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.disposeInternal = function() {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n  _ol_renderer_canvas_TileLayer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.prepareFrame = function(frameState, layerState) {\n  var layer = this.getLayer();\n  var layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    var renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = _ol_dom_.createCanvasContext2D();\n    }\n    if (this.context && renderMode == _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return _ol_renderer_canvas_TileLayer_.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.createReplayGroup_ = function(\n    tile, frameState) {\n  var layer = this.getLayer();\n  var pixelRatio = frameState.pixelRatio;\n  var projection = frameState.viewState.projection;\n  var revision = layer.getRevision();\n  var renderOrder = /** @type {ol.RenderOrderFunction} */\n      (layer.getRenderOrder()) || null;\n\n  var replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var sourceTileGrid = source.getTileGrid();\n  var tileGrid = source.getTileGridForProjection(projection);\n  var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n  var zIndexKeys = {};\n  for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    var sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() == _ol_TileState_.ERROR) {\n      continue;\n    }\n\n    var sourceTileCoord = sourceTile.tileCoord;\n    var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    var sharedExtent = _ol_extent_.getIntersection(tileExtent, sourceTileExtent);\n    var bufferedExtent = _ol_extent_.equals(sourceTileExtent, sharedExtent) ? null :\n      _ol_extent_.buffer(sharedExtent, layer.getRenderBuffer() * resolution);\n    var tileProjection = sourceTile.getProjection();\n    var reproject = false;\n    if (!_ol_proj_.equivalent(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    var replayGroup = new _ol_render_canvas_ReplayGroup_(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    var squaredTolerance = _ol_renderer_vector_.getSquaredTolerance(\n        resolution, pixelRatio);\n\n    /**\n     * @param {ol.Feature|ol.render.Feature} feature Feature.\n     * @this {ol.renderer.canvas.VectorTileLayer}\n     */\n    var renderFeature = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction.call(/** @type {ol.Feature} */ (feature), resolution);\n      } else {\n        styleFunction = layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n      }\n      if (styles) {\n        var dirty = this.renderFeature(feature, squaredTolerance, styles,\n            replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    var features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    var feature;\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == _ol_proj_Units_.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || _ol_extent_.intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        renderFeature.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (var r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.drawTileImage = function(\n    tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  var vectorImageTile = /** @type {ol.VectorImageTile} */ (tile);\n  this.createReplayGroup_(vectorImageTile, frameState);\n  if (this.context) {\n    this.renderTileImage_(vectorImageTile, frameState, layerState);\n    _ol_renderer_canvas_TileLayer_.prototype.drawTileImage.apply(this, arguments);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  var layer = this.getLayer();\n  /** @type {Object.<string, boolean>} */\n  var features = {};\n\n  /** @type {Array.<ol.VectorImageTile>} */\n  var renderedTiles = this.renderedTiles;\n\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var bufferedExtent, found;\n  var i, ii, replayGroup;\n  var tile, tileCoord, tileExtent;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    tile = renderedTiles[i];\n    tileCoord = tile.wrappedTileCoord;\n    tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    bufferedExtent = _ol_extent_.buffer(tileExtent, hitTolerance * resolution, bufferedExtent);\n    if (!_ol_extent_.containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(\n          coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {ol.Feature|ol.render.Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = _ol_.getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {ol.VectorTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @return {ol.Transform} transform Transform.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.getReplayTransform_ = function(tile, frameState) {\n  var layer = this.getLayer();\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var tileGrid = source.getTileGrid();\n  var tileCoord = tile.tileCoord;\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var viewState = frameState.viewState;\n  var pixelRatio = frameState.pixelRatio;\n  var renderResolution = viewState.resolution / pixelRatio;\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  var center = viewState.center;\n  var origin = _ol_extent_.getTopLeft(tileExtent);\n  var size = frameState.size;\n  var offsetX = Math.round(pixelRatio * size[0] / 2);\n  var offsetY = Math.round(pixelRatio * size[1] / 2);\n  return _ol_transform_.compose(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleFontsChanged_ = function(event) {\n  var layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.postCompose = function(context, frameState, layerState) {\n  var layer = this.getLayer();\n  var declutterReplays = layer.getDeclutter() ? {} : null;\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var renderMode = layer.getRenderMode();\n  var replayTypes = _ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS[renderMode];\n  var pixelRatio = frameState.pixelRatio;\n  var rotation = frameState.viewState.rotation;\n  var size = frameState.size;\n  var offsetX, offsetY;\n  if (rotation) {\n    offsetX = Math.round(pixelRatio * size[0] / 2);\n    offsetY = Math.round(pixelRatio * size[1] / 2);\n    _ol_render_canvas_.rotateAtOffset(context, -rotation, offsetX, offsetY);\n  }\n  if (declutterReplays) {\n    this.declutterTree_.clear();\n  }\n  var tiles = this.renderedTiles;\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var clips = [];\n  var zs = [];\n  for (var i = tiles.length - 1; i >= 0; --i) {\n    var tile = /** @type {ol.VectorImageTile} */ (tiles[i]);\n    if (tile.getState() == _ol_TileState_.ABORT) {\n      continue;\n    }\n    var tileCoord = tile.tileCoord;\n    var worldOffset = tileGrid.getTileCoordExtent(tileCoord)[0] -\n        tileGrid.getTileCoordExtent(tile.wrappedTileCoord)[0];\n    var transform = undefined;\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n      if (renderMode != _ol_layer_VectorTileRenderType_.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n        continue;\n      }\n      if (!transform) {\n        transform = this.getTransform(frameState, worldOffset);\n      }\n      var currentZ = sourceTile.tileCoord[0];\n      var currentClip = replayGroup.getClipCoords(transform);\n      context.save();\n      context.globalAlpha = layerState.opacity;\n      // Create a clip mask for regions in this low resolution tile that are\n      // already filled by a higher resolution tile\n      for (var j = 0, jj = clips.length; j < jj; ++j) {\n        var clip = clips[j];\n        if (currentZ < zs[j]) {\n          context.beginPath();\n          // counter-clockwise (outer ring) for current tile\n          context.moveTo(currentClip[0], currentClip[1]);\n          context.lineTo(currentClip[2], currentClip[3]);\n          context.lineTo(currentClip[4], currentClip[5]);\n          context.lineTo(currentClip[6], currentClip[7]);\n          // clockwise (inner ring) for higher resolution tile\n          context.moveTo(clip[6], clip[7]);\n          context.lineTo(clip[4], clip[5]);\n          context.lineTo(clip[2], clip[3]);\n          context.lineTo(clip[0], clip[1]);\n          context.clip();\n        }\n      }\n      replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n      context.restore();\n      clips.push(currentClip);\n      zs.push(currentZ);\n    }\n  }\n  if (declutterReplays) {\n    _ol_render_canvas_ReplayGroup_.replayDeclutter(declutterReplays, context, rotation);\n  }\n  if (rotation) {\n    _ol_render_canvas_.rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n  }\n  _ol_renderer_canvas_TileLayer_.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderTileImage_ = function(\n    tile, frameState, layerState) {\n  var layer = this.getLayer();\n  var replayState = tile.getReplayState(layer);\n  var revision = layer.getRevision();\n  var replays = _ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    var tileCoord = tile.wrappedTileCoord;\n    var z = tileCoord[0];\n    var pixelRatio = frameState.pixelRatio;\n    var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    var resolution = tileGrid.getResolution(z);\n    var context = tile.getContext(layer);\n    var size = source.getTilePixelSize(z, pixelRatio, frameState.viewState.projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      var sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      var pixelScale = pixelRatio / resolution;\n      var transform = _ol_transform_.reset(this.tmpTransform_);\n      _ol_transform_.scale(transform, pixelScale, -pixelScale);\n      _ol_transform_.translate(transform, -tileExtent[0], -tileExtent[3]);\n      var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\nexport default _ol_renderer_canvas_VectorTileLayer_;\n","import _ol_functions_ from '../functions.js';\n\n/**\n * @constructor\n * @abstract\n * @param {string} source Source.\n * @struct\n */\nvar _ol_webgl_Shader_ = function(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n\n/**\n * @abstract\n * @return {number} Type.\n */\n_ol_webgl_Shader_.prototype.getType = function() {};\n\n\n/**\n * @return {string} Source.\n */\n_ol_webgl_Shader_.prototype.getSource = function() {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\n_ol_webgl_Shader_.prototype.isAnimated = _ol_functions_.FALSE;\nexport default _ol_webgl_Shader_;\n","import _ol_ from '../index.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_Shader_ from '../webgl/shader.js';\n\n/**\n * @constructor\n * @extends {ol.webgl.Shader}\n * @param {string} source Source.\n * @struct\n */\nvar _ol_webgl_Fragment_ = function(source) {\n  _ol_webgl_Shader_.call(this, source);\n};\n\n_ol_.inherits(_ol_webgl_Fragment_, _ol_webgl_Shader_);\n\n\n/**\n * @inheritDoc\n */\n_ol_webgl_Fragment_.prototype.getType = function() {\n  return _ol_webgl_.FRAGMENT_SHADER;\n};\nexport default _ol_webgl_Fragment_;\n","import _ol_ from '../index.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_Shader_ from '../webgl/shader.js';\n\n/**\n * @constructor\n * @extends {ol.webgl.Shader}\n * @param {string} source Source.\n * @struct\n */\nvar _ol_webgl_Vertex_ = function(source) {\n  _ol_webgl_Shader_.call(this, source);\n};\n\n_ol_.inherits(_ol_webgl_Vertex_, _ol_webgl_Shader_);\n\n\n/**\n * @inheritDoc\n */\n_ol_webgl_Vertex_.prototype.getType = function() {\n  return _ol_webgl_.VERTEX_SHADER;\n};\nexport default _ol_webgl_Vertex_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_circlereplay_defaultshader_ = {};\n\n\n_ol_render_webgl_circlereplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\n_ol_render_webgl_circlereplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;//Until we get gl_VertexID in WebGL,we store an instruction.if(f==0.0){//Offsetting the edges of the triangle by lineWidth/2 is necessary,however//we should also leave some space for the antialiasing,thus we offset by lineWidth.offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\nexport default _ol_render_webgl_circlereplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_circlereplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_radius' : 'g');\n};\n\nexport default _ol_render_webgl_circlereplay_defaultshader_Locations_;","var _ol_vec_Mat4_ = {};\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\n_ol_vec_Mat4_.create = function() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n};\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {ol.Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\n_ol_vec_Mat4_.fromTransform = function(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n};\nexport default _ol_vec_Mat4_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_vec_Mat4_ from '../../vec/mat4.js';\nimport _ol_webgl_ from '../../webgl.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.render.VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_Replay_ = function(tolerance, maxExtent) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {ol.Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * The origin of the coordinate system for the point coordinates sent to\n   * the GPU. To eliminate jitter caused by precision problems in the GPU\n   * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n   * Engine Design for Virtual Globes\" book.\n   * @protected\n   * @type {ol.Coordinate}\n   */\n  this.origin = _ol_extent_.getCenter(maxExtent);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.projectionMatrix_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.offsetRotateMatrix_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.offsetScaleMatrix_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.tmpMat4_ = _ol_vec_Mat4_.create();\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.indices = [];\n\n  /**\n   * @protected\n   * @type {?ol.webgl.Buffer}\n   */\n  this.indicesBuffer = null;\n\n  /**\n   * Start index per feature (the index).\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.startIndices = [];\n\n  /**\n   * Start index per feature (the feature).\n   * @protected\n   * @type {Array.<ol.Feature|ol.render.Feature>}\n   */\n  this.startIndicesFeature = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.vertices = [];\n\n  /**\n   * @protected\n   * @type {?ol.webgl.Buffer}\n   */\n  this.verticesBuffer = null;\n\n  /**\n   * Optional parameter for PolygonReplay instances.\n   * @protected\n   * @type {ol.render.webgl.LineStringReplay|undefined}\n   */\n  this.lineStringReplay = undefined;\n\n};\n\n_ol_.inherits(_ol_render_webgl_Replay_, _ol_render_VectorContext_);\n\n\n/**\n * @abstract\n * @param {ol.webgl.Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\n_ol_render_webgl_Replay_.prototype.getDeleteResourcesFunction = function(context) {};\n\n\n/**\n * @abstract\n * @param {ol.webgl.Context} context Context.\n */\n_ol_render_webgl_Replay_.prototype.finish = function(context) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @return {ol.render.webgl.circlereplay.defaultshader.Locations|\n            ol.render.webgl.linestringreplay.defaultshader.Locations|\n            ol.render.webgl.polygonreplay.defaultshader.Locations|\n            ol.render.webgl.texturereplay.defaultshader.Locations} Locations.\n */\n_ol_render_webgl_Replay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.render.webgl.circlereplay.defaultshader.Locations|\n           ol.render.webgl.linestringreplay.defaultshader.Locations|\n           ol.render.webgl.polygonreplay.defaultshader.Locations|\n           ol.render.webgl.texturereplay.defaultshader.Locations} locations Locations.\n */\n_ol_render_webgl_Replay_.prototype.shutDownProgram = function(gl, locations) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {boolean} hitDetection Hit detection mode.\n */\n_ol_render_webgl_Replay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.drawHitDetectionReplay = function(gl, context, skippedFeaturesHash,\n    featureCallback, oneByOne, opt_hitExtent) {\n  if (!oneByOne) {\n    // draw all hit-detection features in \"once\" (by texture group)\n    return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n  } else {\n    // draw hit-detection features one by one\n    return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n  }\n};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.drawHitDetectionReplayAll = function(gl, context, skippedFeaturesHash,\n    featureCallback) {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n  var result = featureCallback(null);\n  if (result) {\n    return result;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.replay = function(context,\n    center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash,\n    featureCallback, oneByOne, opt_hitExtent) {\n  var gl = context.getGL();\n  var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n      tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n  if (this.lineStringReplay) {\n    tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n    tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n    tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n    tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n    tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n    tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n    tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n    tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilMask(255);\n    gl.stencilFunc(gl.ALWAYS, 1, 255);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n    this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n    gl.stencilMask(0);\n    gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n  }\n\n  context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.verticesBuffer);\n\n  context.bindBuffer(_ol_webgl_.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n  var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n  // set the \"uniform\" values\n  var projectionMatrix = _ol_transform_.reset(this.projectionMatrix_);\n  _ol_transform_.scale(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n  _ol_transform_.rotate(projectionMatrix, -rotation);\n  _ol_transform_.translate(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n  var offsetScaleMatrix = _ol_transform_.reset(this.offsetScaleMatrix_);\n  _ol_transform_.scale(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n  var offsetRotateMatrix = _ol_transform_.reset(this.offsetRotateMatrix_);\n  if (rotation !== 0) {\n    _ol_transform_.rotate(offsetRotateMatrix, -rotation);\n  }\n\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, projectionMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, offsetScaleMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, offsetRotateMatrix));\n  gl.uniform1f(locations.u_opacity, opacity);\n\n  // draw!\n  var result;\n  if (featureCallback === undefined) {\n    this.drawReplay(gl, context, skippedFeaturesHash, false);\n  } else {\n    // draw feature by feature for the hit-detection\n    result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n  }\n\n  // disable the vertex attrib arrays\n  this.shutDownProgram(gl, locations);\n\n  if (this.lineStringReplay) {\n    if (!tmpStencil) {\n      gl.disable(gl.STENCIL_TEST);\n    }\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n    gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n    gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n  }\n\n  return result;\n};\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {number} start Start index.\n * @param {number} end End index.\n */\n_ol_render_webgl_Replay_.prototype.drawElements = function(\n    gl, context, start, end) {\n  var elementType = context.hasOESElementIndexUint ?\n    _ol_webgl_.UNSIGNED_INT : _ol_webgl_.UNSIGNED_SHORT;\n  var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n  var numItems = end - start;\n  var offsetInBytes = start * elementSize;\n  gl.drawElements(_ol_webgl_.TRIANGLES, numItems, elementType, offsetInBytes);\n};\nexport default _ol_render_webgl_Replay_;\n","var _ol_render_webgl_ = {};\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_webgl_.defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_webgl_.defaultFillStyle = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_webgl_.defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_webgl_.defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_webgl_.defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_webgl_.defaultStrokeStyle = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultTextAlign = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultTextBaseline = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultLineWidth = 1;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\n_ol_render_webgl_.triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= _ol_render_webgl_.EPSILON && area >= -_ol_render_webgl_.EPSILON) ?\n    undefined : area > 0;\n};\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.EPSILON = Number.EPSILON || 2.220446049250313e-16;\nexport default _ol_render_webgl_;\n","import _ol_webgl_ from '../webgl.js';\n\n/**\n * @constructor\n * @param {Array.<number>=} opt_arr Array.\n * @param {number=} opt_usage Usage.\n * @struct\n */\nvar _ol_webgl_Buffer_ = function(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ?\n    opt_usage : _ol_webgl_Buffer_.Usage_.STATIC_DRAW;\n\n};\n\n\n/**\n * @return {Array.<number>} Array.\n */\n_ol_webgl_Buffer_.prototype.getArray = function() {\n  return this.arr_;\n};\n\n\n/**\n * @return {number} Usage.\n */\n_ol_webgl_Buffer_.prototype.getUsage = function() {\n  return this.usage_;\n};\n\n\n/**\n * @enum {number}\n * @private\n */\n_ol_webgl_Buffer_.Usage_ = {\n  STATIC_DRAW: _ol_webgl_.STATIC_DRAW,\n  STREAM_DRAW: _ol_webgl_.STREAM_DRAW,\n  DYNAMIC_DRAW: _ol_webgl_.DYNAMIC_DRAW\n};\nexport default _ol_webgl_Buffer_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_render_webgl_circlereplay_defaultshader_ from '../webgl/circlereplay/defaultshader.js';\nimport _ol_render_webgl_circlereplay_defaultshader_Locations_ from '../webgl/circlereplay/defaultshader/locations.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_CircleReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {ol.render.webgl.circlereplay.defaultshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<Array.<number>|number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.radius_ = 0;\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         strokeColor: (Array.<number>|null),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineWidth: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    strokeColor: null,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineWidth: undefined,\n    changed: false\n  };\n\n};\n\n_ol_.inherits(_ol_render_webgl_CircleReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_CircleReplay_.prototype.drawCoordinates_ = function(\n    flatCoordinates, offset, end, stride) {\n  var numVertices = this.vertices.length;\n  var numIndices = this.indices.length;\n  var n = numVertices / 4;\n  var i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 0;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 1;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 2;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 3;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n    this.indices[numIndices++] = n;\n\n    n += 4;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.drawCircle = function(circleGeometry, feature) {\n  var radius = circleGeometry.getRadius();\n  var stride = circleGeometry.getStride();\n  if (radius) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n\n    this.radius_ = radius;\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    flatCoordinates = _ol_geom_flat_transform_.translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n    this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n  } else {\n    if (this.state_.changed) {\n      this.styles_.pop();\n      if (this.styles_.length) {\n        var lastState = this.styles_[this.styles_.length - 1];\n        this.state_.fillColor =  /** @type {Array.<number>} */ (lastState[0]);\n        this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n        this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n        this.state_.changed = false;\n      }\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\n_ol_render_webgl_CircleReplay_.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  // We only delete our stuff here. The shaders and the program may\n  // be used by other CircleReplay instances (for other layers). And\n  // they will be deleted when disposing of the ol.webgl.Context\n  // object.\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader, vertexShader;\n  fragmentShader = _ol_render_webgl_circlereplay_defaultshader_.fragment;\n  vertexShader = _ol_render_webgl_circlereplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_render_webgl_circlereplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 16, 0);\n\n  gl.enableVertexAttribArray(locations.a_instruction);\n  gl.vertexAttribPointer(locations.a_instruction, 1, _ol_webgl_.FLOAT,\n      false, 16, 8);\n\n  gl.enableVertexAttribArray(locations.a_radius);\n  gl.vertexAttribPointer(locations.a_radius, 1, _ol_webgl_.FLOAT,\n      false, 16, 12);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_instruction);\n  gl.disableVertexAttribArray(locations.a_radius);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    var i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\n_ol_render_webgl_CircleReplay_.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\n_ol_render_webgl_CircleReplay_.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n */\n_ol_render_webgl_CircleReplay_.prototype.setStrokeStyle_ = function(gl, color, lineWidth) {\n  gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var strokeStyleColor, strokeStyleWidth;\n  if (strokeStyle) {\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : _ol_render_webgl_.defaultLineDash;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : _ol_render_webgl_.defaultLineDashOffset;\n    strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = _ol_color_.asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || _ol_render_webgl_.defaultStrokeStyle;\n    } else {\n      strokeStyleColor = _ol_render_webgl_.defaultStrokeStyle;\n    }\n    strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : _ol_render_webgl_.defaultLineWidth;\n  } else {\n    strokeStyleColor = [0, 0, 0, 0];\n    strokeStyleWidth = 0;\n  }\n  var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = _ol_color_.asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || _ol_render_webgl_.defaultFillStyle;\n  } else {\n    fillStyleColor = _ol_render_webgl_.defaultFillStyle;\n  }\n  if (!this.state_.strokeColor || !_ol_array_.equals(this.state_.strokeColor, strokeStyleColor) ||\n      !this.state_.fillColor || !_ol_array_.equals(this.state_.fillColor, fillStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth) {\n    this.state_.changed = true;\n    this.state_.fillColor = fillStyleColor;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n  }\n};\nexport default _ol_render_webgl_CircleReplay_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_texturereplay_defaultshader_ = {};\n\n\n_ol_render_webgl_texturereplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\n_ol_render_webgl_texturereplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\nexport default _ol_render_webgl_texturereplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_texturereplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n};\n\nexport default _ol_render_webgl_texturereplay_defaultshader_Locations_;","/**\n * @enum {string}\n */\nvar _ol_webgl_ContextEventType_ = {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\nexport default _ol_webgl_ContextEventType_;\n","import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_array_ from '../array.js';\nimport _ol_events_ from '../events.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_ContextEventType_ from '../webgl/contexteventtype.js';\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {ol.Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\nvar _ol_webgl_Context_ = function(canvas, gl) {\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = gl;\n\n  /**\n   * @private\n   * @type {Object.<string, ol.WebglBufferCacheEntry>}\n   */\n  this.bufferCache_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, WebGLShader>}\n   */\n  this.shaderCache_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, WebGLProgram>}\n   */\n  this.programCache_ = {};\n\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n  this.currentProgram_ = null;\n\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n  this.hitDetectionFramebuffer_ = null;\n\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n  this.hitDetectionTexture_ = null;\n\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n  this.hitDetectionRenderbuffer_ = null;\n\n  /**\n   * @type {boolean}\n   */\n  this.hasOESElementIndexUint = _ol_array_.includes(\n      _ol_.WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n  // use the OES_element_index_uint extension if available\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.LOST,\n      this.handleWebGLContextLost, this);\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n};\n\n_ol_.inherits(_ol_webgl_Context_, _ol_Disposable_);\n\n\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n_ol_webgl_Context_.prototype.bindBuffer = function(target, buf) {\n  var gl = this.getGL();\n  var arr = buf.getArray();\n  var bufferKey = String(_ol_.getUid(buf));\n  if (bufferKey in this.bufferCache_) {\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    var /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == _ol_webgl_.ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == _ol_webgl_.ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n\n\n/**\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n_ol_webgl_Context_.prototype.deleteBuffer = function(buf) {\n  var gl = this.getGL();\n  var bufferKey = String(_ol_.getUid(buf));\n  var bufferCacheEntry = this.bufferCache_[bufferKey];\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n  delete this.bufferCache_[bufferKey];\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_webgl_Context_.prototype.disposeInternal = function() {\n  _ol_events_.unlistenAll(this.canvas_);\n  var gl = this.getGL();\n  if (!gl.isContextLost()) {\n    var key;\n    for (key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n    for (key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n    for (key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    }\n    // delete objects for hit-detection\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\n_ol_webgl_Context_.prototype.getCanvas = function() {\n  return this.canvas_;\n};\n\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\n_ol_webgl_Context_.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\n_ol_webgl_Context_.prototype.getHitDetectionFramebuffer = function() {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n  return this.hitDetectionFramebuffer_;\n};\n\n\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {ol.webgl.Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\n_ol_webgl_Context_.prototype.getShader = function(shaderObject) {\n  var shaderKey = String(_ol_.getUid(shaderObject));\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    var gl = this.getGL();\n    var shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n\n\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {ol.webgl.Fragment} fragmentShaderObject Fragment shader.\n * @param {ol.webgl.Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\n_ol_webgl_Context_.prototype.getProgram = function(\n    fragmentShaderObject, vertexShaderObject) {\n  var programKey =\n      _ol_.getUid(fragmentShaderObject) + '/' + _ol_.getUid(vertexShaderObject);\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    var gl = this.getGL();\n    var program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n\n\n/**\n * FIXME empy description for jsdoc\n */\n_ol_webgl_Context_.prototype.handleWebGLContextLost = function() {\n  _ol_obj_.clear(this.bufferCache_);\n  _ol_obj_.clear(this.shaderCache_);\n  _ol_obj_.clear(this.programCache_);\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n\n\n/**\n * FIXME empy description for jsdoc\n */\n_ol_webgl_Context_.prototype.handleWebGLContextRestored = function() {\n};\n\n\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\n_ol_webgl_Context_.prototype.initHitDetectionFramebuffer_ = function() {\n  var gl = this.gl_;\n  var framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  var texture = _ol_webgl_Context_.createEmptyTexture(gl, 1, 1);\n  var renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n\n\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\n_ol_webgl_Context_.prototype.useProgram = function(program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    var gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n * @private\n */\n_ol_webgl_Context_.createTexture_ = function(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n_ol_webgl_Context_.createEmptyTexture = function(\n    gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n      null);\n\n  return texture;\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n_ol_webgl_Context_.createTexture = function(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\n  return texture;\n};\nexport default _ol_webgl_Context_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_webgl_texturereplay_defaultshader_ from '../webgl/texturereplay/defaultshader.js';\nimport _ol_render_webgl_texturereplay_defaultshader_Locations_ from '../webgl/texturereplay/defaultshader/locations.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_TextureReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorY = undefined;\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.groupIndices = [];\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.hitDetectionGroupIndices = [];\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.height = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageHeight = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageWidth = undefined;\n\n  /**\n   * @protected\n   * @type {ol.render.webgl.texturereplay.defaultshader.Locations}\n   */\n  this.defaultLocations = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.opacity = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originY = undefined;\n\n  /**\n   * @protected\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.rotation = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.scale = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.width = undefined;\n};\n\n_ol_.inherits(_ol_render_webgl_TextureReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  var textures = this.getTextures(true);\n  var gl = context.getGL();\n  return function() {\n    if (!gl.isContextLost()) {\n      var i, ii;\n      for (i = 0, ii = textures.length; i < ii; ++i) {\n        gl.deleteTexture(textures[i]);\n      }\n    }\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} My end.\n * @protected\n */\n_ol_render_webgl_TextureReplay_.prototype.drawCoordinates = function(flatCoordinates, offset, end, stride) {\n  var anchorX = /** @type {number} */ (this.anchorX);\n  var anchorY = /** @type {number} */ (this.anchorY);\n  var height = /** @type {number} */ (this.height);\n  var imageHeight = /** @type {number} */ (this.imageHeight);\n  var imageWidth = /** @type {number} */ (this.imageWidth);\n  var opacity = /** @type {number} */ (this.opacity);\n  var originX = /** @type {number} */ (this.originX);\n  var originY = /** @type {number} */ (this.originY);\n  var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n  // this.rotation_ is anti-clockwise, but rotation is clockwise\n  var rotation = /** @type {number} */ (-this.rotation);\n  var scale = /** @type {number} */ (this.scale);\n  var width = /** @type {number} */ (this.width);\n  var cos = Math.cos(rotation);\n  var sin = Math.sin(rotation);\n  var numIndices = this.indices.length;\n  var numVertices = this.vertices.length;\n  var i, n, offsetX, offsetY, x, y;\n  for (i = offset; i < end; i += stride) {\n    x = flatCoordinates[i] - this.origin[0];\n    y = flatCoordinates[i + 1] - this.origin[1];\n\n    // There are 4 vertices per [x, y] point, one for each corner of the\n    // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n    // WebGL supported Geometry Shaders (which can emit new vertices), but that\n    // is not currently the case.\n    //\n    // And each vertex includes 8 values: the x and y coordinates, the x and\n    // y offsets used to calculate the position of the corner, the u and\n    // v texture coordinates for the corner, the opacity, and whether the\n    // the image should be rotated with the view (rotateWithView).\n\n    n = numVertices / 8;\n\n    // bottom-left corner\n    offsetX = -scale * anchorX;\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // bottom-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-left corner\n    offsetX = -scale * anchorX;\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n  }\n\n  return numVertices;\n};\n\n\n/**\n * @protected\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images\n *    Images.\n * @param {Object.<string, WebGLTexture>} texturePerImage Texture cache.\n * @param {WebGLRenderingContext} gl Gl.\n */\n_ol_render_webgl_TextureReplay_.prototype.createTextures = function(textures, images, texturePerImage, gl) {\n  var texture, image, uid, i;\n  var ii = images.length;\n  for (i = 0; i < ii; ++i) {\n    image = images[i];\n\n    uid = _ol_.getUid(image).toString();\n    if (uid in texturePerImage) {\n      texture = texturePerImage[uid];\n    } else {\n      texture = _ol_webgl_Context_.createTexture(\n          gl, image, _ol_webgl_.CLAMP_TO_EDGE, _ol_webgl_.CLAMP_TO_EDGE);\n      texturePerImage[uid] = texture;\n    }\n    textures[i] = texture;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader = _ol_render_webgl_texturereplay_defaultshader_.fragment;\n  var vertexShader = _ol_render_webgl_texturereplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations) {\n    locations = new _ol_render_webgl_texturereplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations = locations;\n  } else {\n    locations = this.defaultLocations;\n  }\n\n  // use the program (FIXME: use the return value)\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 32, 0);\n\n  gl.enableVertexAttribArray(locations.a_offsets);\n  gl.vertexAttribPointer(locations.a_offsets, 2, _ol_webgl_.FLOAT,\n      false, 32, 8);\n\n  gl.enableVertexAttribArray(locations.a_texCoord);\n  gl.vertexAttribPointer(locations.a_texCoord, 2, _ol_webgl_.FLOAT,\n      false, 32, 16);\n\n  gl.enableVertexAttribArray(locations.a_opacity);\n  gl.vertexAttribPointer(locations.a_opacity, 1, _ol_webgl_.FLOAT,\n      false, 32, 24);\n\n  gl.enableVertexAttribArray(locations.a_rotateWithView);\n  gl.vertexAttribPointer(locations.a_rotateWithView, 1, _ol_webgl_.FLOAT,\n      false, 32, 28);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_offsets);\n  gl.disableVertexAttribArray(locations.a_texCoord);\n  gl.disableVertexAttribArray(locations.a_opacity);\n  gl.disableVertexAttribArray(locations.a_rotateWithView);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n  var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping(\n        gl, context, skippedFeaturesHash, textures, groupIndices);\n  } else {\n    var i, ii, start;\n    for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n      gl.bindTexture(_ol_webgl_.TEXTURE_2D, textures[i]);\n      var end = groupIndices[i];\n      this.drawElements(gl, context, start, end);\n      start = end;\n    }\n  }\n};\n\n\n/**\n * Draw the replay while paying attention to skipped features.\n *\n * This functions creates groups of features that can be drawn to together,\n * so that the number of `drawElements` calls is minimized.\n *\n * For example given the following texture groups:\n *\n *    Group 1: A B C\n *    Group 2: D [E] F G\n *\n * If feature E should be skipped, the following `drawElements` calls will be\n * made:\n *\n *    drawElements with feature A, B and C\n *    drawElements with feature D\n *    drawElements with feature F and G\n *\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<number>} groupIndices Texture group indices.\n */\n_ol_render_webgl_TextureReplay_.prototype.drawReplaySkipping = function(gl, context, skippedFeaturesHash, textures,\n    groupIndices) {\n  var featureIndex = 0;\n\n  var i, ii;\n  for (i = 0, ii = textures.length; i < ii; ++i) {\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, textures[i]);\n    var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n    var groupEnd = groupIndices[i];\n\n    var start = groupStart;\n    var end = groupStart;\n    while (featureIndex < this.startIndices.length &&\n        this.startIndices[featureIndex] <= groupEnd) {\n      var feature = this.startIndicesFeature[featureIndex];\n\n      var featureUid = _ol_.getUid(feature).toString();\n      if (skippedFeaturesHash[featureUid] !== undefined) {\n        // feature should be skipped\n        if (start !== end) {\n          // draw the features so far\n          this.drawElements(gl, context, start, end);\n        }\n        // continue with the next feature\n        start = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n        end = start;\n      } else {\n        // the feature is not skipped, augment the end index\n        end = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n      }\n      featureIndex++;\n    }\n\n    if (start !== end) {\n      // draw the remaining features (in case there was no skipped feature\n      // in this texture group, all features of a group are drawn together)\n      this.drawElements(gl, context, start, end);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, groupStart, start, end, feature, featureUid;\n  var featureIndex = this.startIndices.length - 1;\n  var hitDetectionTextures = this.getHitDetectionTextures();\n  for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, hitDetectionTextures[i]);\n    groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n    end = this.hitDetectionGroupIndices[i];\n\n    // draw all features for this texture group\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n        if (result) {\n          return result;\n        }\n      }\n\n      end = start;\n      featureIndex--;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.finish = function(context) {\n  this.anchorX = undefined;\n  this.anchorY = undefined;\n  this.height = undefined;\n  this.imageHeight = undefined;\n  this.imageWidth = undefined;\n  this.indices = null;\n  this.opacity = undefined;\n  this.originX = undefined;\n  this.originY = undefined;\n  this.rotateWithView = undefined;\n  this.rotation = undefined;\n  this.scale = undefined;\n  this.vertices = null;\n  this.width = undefined;\n};\n\n\n/**\n * @abstract\n * @protected\n * @param {boolean=} opt_all Return hit detection textures with regular ones.\n * @returns {Array.<WebGLTexture>} Textures.\n */\n_ol_render_webgl_TextureReplay_.prototype.getTextures = function(opt_all) {};\n\n\n/**\n * @abstract\n * @protected\n * @returns {Array.<WebGLTexture>} Textures.\n */\n_ol_render_webgl_TextureReplay_.prototype.getHitDetectionTextures = function() {};\nexport default _ol_render_webgl_TextureReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_render_webgl_TextureReplay_ from '../webgl/texturereplay.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_ImageReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_TextureReplay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.images_ = [];\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.hitDetectionImages_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.textures_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.hitDetectionTextures_ = [];\n\n};\n\n_ol_.inherits(_ol_render_webgl_ImageReplay_, _ol_render_webgl_TextureReplay_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  var stride = multiPointGeometry.getStride();\n  this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.drawPoint = function(pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = pointGeometry.getFlatCoordinates();\n  var stride = pointGeometry.getStride();\n  this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.finish = function(context) {\n  var gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length);\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  var indices = this.indices;\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  var texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n  _ol_render_webgl_TextureReplay_.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.setImageStyle = function(imageStyle) {\n  var anchor = imageStyle.getAnchor();\n  var image = imageStyle.getImage(1);\n  var imageSize = imageStyle.getImageSize();\n  var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  var opacity = imageStyle.getOpacity();\n  var origin = imageStyle.getOrigin();\n  var rotateWithView = imageStyle.getRotateWithView();\n  var rotation = imageStyle.getRotation();\n  var size = imageStyle.getSize();\n  var scale = imageStyle.getScale();\n\n  var currentImage;\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n    if (_ol_.getUid(currentImage) != _ol_.getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage =\n        this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n    if (_ol_.getUid(currentImage) != _ol_.getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.getTextures = function(opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.getHitDetectionTextures = function() {\n  return this.hitDetectionTextures_;\n};\nexport default _ol_render_webgl_ImageReplay_;\n","import _ol_geom_flat_area_ from '../flat/area.js';\nvar _ol_geom_flat_topology_ = {};\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\n_ol_geom_flat_topology_.lineStringIsClosed = function(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!_ol_geom_flat_area_.linearRing(flatCoordinates, offset, end, stride);\n  }\n  return false;\n};\nexport default _ol_geom_flat_topology_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_linestringreplay_defaultshader_ = {};\n\n\n_ol_render_webgl_linestringreplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\n_ol_render_webgl_linestringreplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\nexport default _ol_render_webgl_linestringreplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_linestringreplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_direction' : 'g');\n};\n\nexport default _ol_render_webgl_linestringreplay_defaultshader_Locations_;","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_orient_ from '../../geom/flat/orient.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_geom_flat_topology_ from '../../geom/flat/topology.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_render_webgl_linestringreplay_defaultshader_ from '../webgl/linestringreplay/defaultshader.js';\nimport _ol_render_webgl_linestringreplay_defaultshader_Locations_ from '../webgl/linestringreplay/defaultshader/locations.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_LineStringReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {ol.render.webgl.linestringreplay.defaultshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<?>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{strokeColor: (Array.<number>|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: (number|undefined),\n   *         miterLimit: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: undefined,\n    miterLimit: undefined,\n    changed: false\n  };\n\n};\n\n_ol_.inherits(_ol_render_webgl_LineStringReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * Draw one segment.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n\n  var i, ii;\n  var numVertices = this.vertices.length;\n  var numIndices = this.indices.length;\n  //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n  //ol.render.webgl.LineStringReplay.Instruction_, and a rounding factor (1 or 2). If the product is even,\n  //we round it. If it is odd, we don't.\n  var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n    this.state_.lineJoin === 'miter' ? 1 : 2;\n  var lineCap = this.state_.lineCap === 'butt' ? 0 :\n    this.state_.lineCap === 'square' ? 1 : 2;\n  var closed = _ol_geom_flat_topology_.lineStringIsClosed(flatCoordinates, offset, end, stride);\n  var startCoords, sign, n;\n  var lastIndex = numIndices;\n  var lastSign = 1;\n  //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n  var p0, p1, p2;\n\n  for (i = offset, ii = end; i < ii; i += stride) {\n\n    n = numVertices / 7;\n\n    p0 = p1;\n    p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n    //First vertex.\n    if (i === offset) {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      if (end - offset === stride * 2 && _ol_array_.equals(p1, p2)) {\n        break;\n      }\n      if (closed) {\n        //A closed line! Complete the circle.\n        p0 = [flatCoordinates[end - stride * 2],\n          flatCoordinates[end - stride * 2 + 1]];\n\n        startCoords = p2;\n      } else {\n        //Add the first two/four vertices.\n\n        if (lineCap) {\n          numVertices = this.addVertices_([0, 0], p1, p2,\n              lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n              -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        lastIndex = numVertices / 7 - 1;\n\n        continue;\n      }\n    } else if (i === end - stride) {\n      //Last vertex.\n      if (closed) {\n        //Same as the first vertex.\n        p2 = startCoords;\n        break;\n      } else {\n        p0 = p0 || [0, 0];\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE * (lineCap || 1), numVertices);\n\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = lastIndex;\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n;\n\n        if (lineCap) {\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n              lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n              -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        break;\n      }\n    } else {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n    }\n\n    // We group CW and straight lines, thus the not so inituitive CCW checking function.\n    sign = _ol_render_webgl_.triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n      ? -1 : 1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        sign * _ol_render_webgl_LineStringReplay_.Instruction_.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        sign * _ol_render_webgl_LineStringReplay_.Instruction_.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        -sign * _ol_render_webgl_LineStringReplay_.Instruction_.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    if (i > offset) {\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 1;\n\n    lastIndex = n + 2;\n    lastSign = sign;\n\n    //Add miter\n    if (lineJoin) {\n      numVertices = this.addVertices_(p0, p1, p2,\n          sign * _ol_render_webgl_LineStringReplay_.Instruction_.MITER_TOP * lineJoin, numVertices);\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n    }\n  }\n\n  if (closed) {\n    n = n || numVertices / 7;\n    sign = _ol_geom_flat_orient_.linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n      ? 1 : -1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        sign * _ol_render_webgl_LineStringReplay_.Instruction_.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        -sign * _ol_render_webgl_LineStringReplay_.Instruction_.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastIndex - 1;\n    this.indices[numIndices++] = lastIndex;\n\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n  }\n};\n\n/**\n * @param {Array.<number>} p0 Last coordinates.\n * @param {Array.<number>} p1 Current coordinates.\n * @param {Array.<number>} p2 Next coordinates.\n * @param {number} product Sign, instruction, and rounding product.\n * @param {number} numVertices Vertex counter.\n * @return {number} Vertex counter.\n * @private\n */\n_ol_render_webgl_LineStringReplay_.prototype.addVertices_ = function(p0, p1, p2, product, numVertices) {\n  this.vertices[numVertices++] = p0[0];\n  this.vertices[numVertices++] = p0[1];\n  this.vertices[numVertices++] = p1[0];\n  this.vertices[numVertices++] = p1[1];\n  this.vertices[numVertices++] = p2[0];\n  this.vertices[numVertices++] = p2[1];\n  this.vertices[numVertices++] = product;\n\n  return numVertices;\n};\n\n/**\n * Check if the linestring can be drawn (i. e. valid).\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring can be drawn.\n * @private\n */\n_ol_render_webgl_LineStringReplay_.prototype.isValid_ = function(flatCoordinates, offset, end, stride) {\n  var range = end - offset;\n  if (range < stride * 2) {\n    return false;\n  } else if (range === stride * 2) {\n    var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n    return !_ol_array_.equals(firstP, lastP);\n  }\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawLineString = function(lineStringGeometry, feature) {\n  var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  var stride = lineStringGeometry.getStride();\n  if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates = _ol_geom_flat_transform_.translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  var indexCount = this.indices.length;\n  var ends = multiLineStringGeometry.getEnds();\n  ends.unshift(0);\n  var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  var stride = multiLineStringGeometry.getStride();\n  var i, ii;\n  if (ends.length > 1) {\n    for (i = 1, ii = ends.length; i < ii; ++i) {\n      if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n        var lineString = _ol_geom_flat_transform_.translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this.origin[0], -this.origin[1]);\n        this.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n      }\n    }\n  }\n  if (this.indices.length > indexCount) {\n    this.startIndices.push(indexCount);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(indexCount);\n      this.state_.changed = false;\n    }\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawPolygonCoordinates = function(\n    flatCoordinates, holeFlatCoordinates, stride) {\n  if (!_ol_geom_flat_topology_.lineStringIsClosed(flatCoordinates, 0,\n      flatCoordinates.length, stride)) {\n    flatCoordinates.push(flatCoordinates[0]);\n    flatCoordinates.push(flatCoordinates[1]);\n  }\n  this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  if (holeFlatCoordinates.length) {\n    var i, ii;\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      if (!_ol_geom_flat_topology_.lineStringIsClosed(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride)) {\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n      }\n      this.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number=} opt_index Index count.\n */\n_ol_render_webgl_LineStringReplay_.prototype.setPolygonStyle = function(feature, opt_index) {\n  var index = opt_index === undefined ? this.indices.length : opt_index;\n  this.startIndices.push(index);\n  this.startIndicesFeature.push(feature);\n  if (this.state_.changed) {\n    this.styleIndices_.push(index);\n    this.state_.changed = false;\n  }\n};\n\n\n/**\n * @return {number} Current index.\n */\n_ol_render_webgl_LineStringReplay_.prototype.getCurrentIndex = function() {\n  return this.indices.length;\n};\n\n\n/**\n * @inheritDoc\n **/\n_ol_render_webgl_LineStringReplay_.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader, vertexShader;\n  fragmentShader = _ol_render_webgl_linestringreplay_defaultshader_.fragment;\n  vertexShader = _ol_render_webgl_linestringreplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_render_webgl_linestringreplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_lastPos);\n  gl.vertexAttribPointer(locations.a_lastPos, 2, _ol_webgl_.FLOAT,\n      false, 28, 0);\n\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 28, 8);\n\n  gl.enableVertexAttribArray(locations.a_nextPos);\n  gl.vertexAttribPointer(locations.a_nextPos, 2, _ol_webgl_.FLOAT,\n      false, 28, 16);\n\n  gl.enableVertexAttribArray(locations.a_direction);\n  gl.vertexAttribPointer(locations.a_direction, 1, _ol_webgl_.FLOAT,\n      false, 28, 24);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_lastPos);\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_nextPos);\n  gl.disableVertexAttribArray(locations.a_direction);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    var i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n * @param {number} miterLimit Miter limit.\n */\n_ol_render_webgl_LineStringReplay_.prototype.setStrokeStyle_ = function(gl, color, lineWidth, miterLimit) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var strokeStyleLineCap = strokeStyle.getLineCap();\n  this.state_.lineCap = strokeStyleLineCap !== undefined ?\n    strokeStyleLineCap : _ol_render_webgl_.defaultLineCap;\n  var strokeStyleLineDash = strokeStyle.getLineDash();\n  this.state_.lineDash = strokeStyleLineDash ?\n    strokeStyleLineDash : _ol_render_webgl_.defaultLineDash;\n  var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n  this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n    strokeStyleLineDashOffset : _ol_render_webgl_.defaultLineDashOffset;\n  var strokeStyleLineJoin = strokeStyle.getLineJoin();\n  this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n    strokeStyleLineJoin : _ol_render_webgl_.defaultLineJoin;\n  var strokeStyleColor = strokeStyle.getColor();\n  if (!(strokeStyleColor instanceof CanvasGradient) &&\n      !(strokeStyleColor instanceof CanvasPattern)) {\n    strokeStyleColor = _ol_color_.asArray(strokeStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || _ol_render_webgl_.defaultStrokeStyle;\n  } else {\n    strokeStyleColor = _ol_render_webgl_.defaultStrokeStyle;\n  }\n  var strokeStyleWidth = strokeStyle.getWidth();\n  strokeStyleWidth = strokeStyleWidth !== undefined ?\n    strokeStyleWidth : _ol_render_webgl_.defaultLineWidth;\n  var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n  strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n    strokeStyleMiterLimit : _ol_render_webgl_.defaultMiterLimit;\n  if (!this.state_.strokeColor || !_ol_array_.equals(this.state_.strokeColor, strokeStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n    this.state_.changed = true;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.state_.miterLimit = strokeStyleMiterLimit;\n    this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n  }\n};\n\n/**\n * @enum {number}\n * @private\n */\n_ol_render_webgl_LineStringReplay_.Instruction_ = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\nexport default _ol_render_webgl_LineStringReplay_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_polygonreplay_defaultshader_ = {};\n\n\n_ol_render_webgl_polygonreplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\n_ol_render_webgl_polygonreplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\nexport default _ol_render_webgl_polygonreplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_polygonreplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'a');\n};\n\nexport default _ol_render_webgl_polygonreplay_defaultshader_Locations_;","/**\n * Creates an empty linked list structure.\n *\n * @constructor\n * @struct\n * @param {boolean=} opt_circular The last item is connected to the first one,\n * and the first item to the last one. Default is true.\n */\nvar _ol_structs_LinkedList_ = function(opt_circular) {\n\n  /**\n   * @private\n   * @type {ol.LinkedListItem|undefined}\n   */\n  this.first_ = undefined;\n\n  /**\n   * @private\n   * @type {ol.LinkedListItem|undefined}\n   */\n  this.last_ = undefined;\n\n  /**\n   * @private\n   * @type {ol.LinkedListItem|undefined}\n   */\n  this.head_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\n_ol_structs_LinkedList_.prototype.insertItem = function(data) {\n\n  /** @type {ol.LinkedListItem} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\n_ol_structs_LinkedList_.prototype.removeItem = function() {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.firstItem = function() {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\n_ol_structs_LinkedList_.prototype.lastItem = function() {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.nextItem = function() {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.getNextItem = function() {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.prevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.getPrevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.getCurrItem = function() {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\n_ol_structs_LinkedList_.prototype.setFirstItem = function() {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {ol.structs.LinkedList} list List to merge into the current list.\n */\n_ol_structs_LinkedList_.prototype.concat = function(list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\n_ol_structs_LinkedList_.prototype.getLength = function() {\n  return this.length_;\n};\nexport default _ol_structs_LinkedList_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_geom_flat_contains_ from '../../geom/flat/contains.js';\nimport _ol_geom_flat_orient_ from '../../geom/flat/orient.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_render_webgl_polygonreplay_defaultshader_ from '../webgl/polygonreplay/defaultshader.js';\nimport _ol_render_webgl_polygonreplay_defaultshader_Locations_ from '../webgl/polygonreplay/defaultshader/locations.js';\nimport _ol_render_webgl_LineStringReplay_ from '../webgl/linestringreplay.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_style_Stroke_ from '../../style/stroke.js';\nimport _ol_structs_LinkedList_ from '../../structs/linkedlist.js';\nimport _ol_structs_RBush_ from '../../structs/rbush.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_PolygonReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  this.lineStringReplay = new _ol_render_webgl_LineStringReplay_(\n      tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {ol.render.webgl.polygonreplay.defaultshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    changed: false\n  };\n\n};\n\n_ol_.inherits(_ol_render_webgl_PolygonReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * Draw one polygon.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawCoordinates_ = function(\n    flatCoordinates, holeFlatCoordinates, stride) {\n  // Triangulate the polygon\n  var outerRing = new _ol_structs_LinkedList_();\n  var rtree = new _ol_structs_RBush_();\n  // Initialize the outer ring\n  this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n  var maxCoords = this.getMaxCoords_(outerRing);\n\n  // Eliminate holes, if there are any\n  if (holeFlatCoordinates.length) {\n    var i, ii;\n    var holeLists = [];\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      var holeList = {\n        list: new _ol_structs_LinkedList_(),\n        maxCoords: undefined,\n        rtree: new _ol_structs_RBush_()\n      };\n      holeLists.push(holeList);\n      this.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n      this.classifyPoints_(holeList.list, holeList.rtree, true);\n      holeList.maxCoords = this.getMaxCoords_(holeList.list);\n    }\n    holeLists.sort(function(a, b) {\n      return b.maxCoords[0] === a.maxCoords[0] ?\n        a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n    });\n    for (i = 0; i < holeLists.length; ++i) {\n      var currList = holeLists[i].list;\n      var start = currList.firstItem();\n      var currItem = start;\n      var intersection;\n      do {\n        //TODO: Triangulate holes when they intersect the outer ring.\n        if (this.getIntersections_(currItem, rtree).length) {\n          intersection = true;\n          break;\n        }\n        currItem = currList.nextItem();\n      } while (start !== currItem);\n      if (!intersection) {\n        if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n          rtree.concat(holeLists[i].rtree);\n          this.classifyPoints_(outerRing, rtree, false);\n        }\n      }\n    }\n  } else {\n    this.classifyPoints_(outerRing, rtree, false);\n  }\n  this.triangulate_(outerRing, rtree);\n};\n\n\n/**\n * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {ol.structs.LinkedList} list Linked list.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean} clockwise Coordinate order should be clockwise.\n */\n_ol_render_webgl_PolygonReplay_.prototype.processFlatCoordinates_ = function(\n    flatCoordinates, stride, list, rtree, clockwise) {\n  var isClockwise = _ol_geom_flat_orient_.linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n  var i, ii;\n  var n = this.vertices.length / 2;\n  /** @type {ol.WebglPolygonVertex} */\n  var start;\n  /** @type {ol.WebglPolygonVertex} */\n  var p0;\n  /** @type {ol.WebglPolygonVertex} */\n  var p1;\n  var extents = [];\n  var segments = [];\n  if (clockwise === isClockwise) {\n    start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n    p0 = start;\n    for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  } else {\n    var end = flatCoordinates.length - stride;\n    start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n    p0 = start;\n    for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  }\n  rtree.load(extents, segments);\n};\n\n\n/**\n * Returns the rightmost coordinates of a polygon on the X axis.\n * @private\n * @param {ol.structs.LinkedList} list Polygons ring.\n * @return {Array.<number>} Max X coordinates.\n */\n_ol_render_webgl_PolygonReplay_.prototype.getMaxCoords_ = function(list) {\n  var start = list.firstItem();\n  var seg = start;\n  var maxCoords = [seg.p0.x, seg.p0.y];\n\n  do {\n    seg = list.nextItem();\n    if (seg.p0.x > maxCoords[0]) {\n      maxCoords = [seg.p0.x, seg.p0.y];\n    }\n  } while (seg !== start);\n\n  return maxCoords;\n};\n\n\n/**\n * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n * @private\n * @param {ol.structs.LinkedList} list Polygon ring.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n * @return {boolean} There were reclassified points.\n */\n_ol_render_webgl_PolygonReplay_.prototype.classifyPoints_ = function(list, rtree, ccw) {\n  var start = list.firstItem();\n  var s0 = start;\n  var s1 = list.nextItem();\n  var pointsReclassified = false;\n  do {\n    var reflex = ccw ? _ol_render_webgl_.triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n      _ol_render_webgl_.triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n    if (reflex === undefined) {\n      this.removeItem_(s0, s1, list, rtree);\n      pointsReclassified = true;\n      if (s1 === start) {\n        start = list.getNextItem();\n      }\n      s1 = s0;\n      list.prevItem();\n    } else if (s0.p1.reflex !== reflex) {\n      s0.p1.reflex = reflex;\n      pointsReclassified = true;\n    }\n    s0 = s1;\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return pointsReclassified;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} hole Linked list of the hole.\n * @param {number} holeMaxX Maximum X value of the hole.\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {number} listMaxX Maximum X value of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @return {boolean} Bridging was successful.\n */\n_ol_render_webgl_PolygonReplay_.prototype.bridgeHole_ = function(hole, holeMaxX,\n    list, listMaxX, rtree) {\n  var seg = hole.firstItem();\n  while (seg.p1.x !== holeMaxX) {\n    seg = hole.nextItem();\n  }\n\n  var p1 = seg.p1;\n  /** @type {ol.WebglPolygonVertex} */\n  var p2 = {x: listMaxX, y: p1.y, i: -1};\n  var minDist = Infinity;\n  var i, ii, bestPoint;\n  /** @type {ol.WebglPolygonVertex} */\n  var p5;\n\n  var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n  for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n    var currSeg = intersectingSegments[i];\n    var intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n    var dist = Math.abs(p1.x - intersection[0]);\n    if (dist < minDist && _ol_render_webgl_.triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n      minDist = dist;\n      p5 = {x: intersection[0], y: intersection[1], i: -1};\n      seg = currSeg;\n    }\n  }\n  if (minDist === Infinity) {\n    return false;\n  }\n  bestPoint = seg.p1;\n\n  if (minDist > 0) {\n    var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n    if (pointsInTriangle.length) {\n      var theta = Infinity;\n      for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n        var currPoint = pointsInTriangle[i];\n        var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n        if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n          theta = currTheta;\n          bestPoint = currPoint;\n        }\n      }\n    }\n  }\n\n  seg = list.firstItem();\n  while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n    seg = list.nextItem();\n  }\n\n  //We clone the bridge points as they can have different convexity.\n  var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n  var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n  hole.getNextItem().p0 = p0Bridge;\n  this.insertItem_(p1, seg.p1, hole, rtree);\n  this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n  seg.p1 = p1Bridge;\n  hole.setFirstItem();\n  list.concat(hole);\n\n  return true;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n */\n_ol_render_webgl_PolygonReplay_.prototype.triangulate_ = function(list, rtree) {\n  var ccw = false;\n  var simple = this.isSimple_(list, rtree);\n\n  // Start clipping ears\n  while (list.getLength() > 3) {\n    if (simple) {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n          // introduce touching segments. However, the original data may have some.\n          if (!this.resolveSelfIntersections_(list, rtree, true)) {\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        // We ran out of ears, try to reclassify.\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // We have a bad polygon, try to resolve local self-intersections.\n          if (!this.resolveSelfIntersections_(list, rtree)) {\n            simple = this.isSimple_(list, rtree);\n            if (!simple) {\n              // We have a really bad polygon, try more time consuming methods.\n              this.splitPolygon_(list, rtree);\n              break;\n            } else {\n              ccw = !this.isClockwise_(list);\n              this.classifyPoints_(list, rtree, ccw);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (list.getLength() === 3) {\n    var numIndices = this.indices.length;\n    this.indices[numIndices++] = list.getPrevItem().p0.i;\n    this.indices[numIndices++] = list.getCurrItem().p0.i;\n    this.indices[numIndices++] = list.getNextItem().p0.i;\n  }\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean} simple The polygon is simple.\n * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n * @return {boolean} There were processed ears.\n */\n_ol_render_webgl_PolygonReplay_.prototype.clipEars_ = function(list, rtree, simple, ccw) {\n  var numIndices = this.indices.length;\n  var start = list.firstItem();\n  var s0 = list.getPrevItem();\n  var s1 = start;\n  var s2 = list.nextItem();\n  var s3 = list.getNextItem();\n  var p0, p1, p2;\n  var processedEars = false;\n  do {\n    p0 = s1.p0;\n    p1 = s1.p1;\n    p2 = s2.p1;\n    if (p1.reflex === false) {\n      // We might have a valid ear\n      var variableCriterion;\n      if (simple) {\n        variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n      } else {\n        variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n      }\n      if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n          variableCriterion) {\n        //The diagonal is completely inside the polygon\n        if (simple || p0.reflex === false || p2.reflex === false ||\n            _ol_geom_flat_orient_.linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n              p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n          //The diagonal is persumably valid, we have an ear\n          this.indices[numIndices++] = p0.i;\n          this.indices[numIndices++] = p1.i;\n          this.indices[numIndices++] = p2.i;\n          this.removeItem_(s1, s2, list, rtree);\n          if (s2 === start) {\n            start = s3;\n          }\n          processedEars = true;\n        }\n      }\n    }\n    // Else we have a reflex point.\n    s0 = list.getPrevItem();\n    s1 = list.getCurrItem();\n    s2 = list.nextItem();\n    s3 = list.getNextItem();\n  } while (s1 !== start && list.getLength() > 3);\n\n  return processedEars;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Resolve touching segments.\n * @return {boolean} There were resolved intersections.\n*/\n_ol_render_webgl_PolygonReplay_.prototype.resolveSelfIntersections_ = function(\n    list, rtree, opt_touch) {\n  var start = list.firstItem();\n  list.nextItem();\n  var s0 = start;\n  var s1 = list.nextItem();\n  var resolvedIntersections = false;\n\n  do {\n    var intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n    if (intersection) {\n      var breakCond = false;\n      var numVertices = this.vertices.length;\n      var numIndices = this.indices.length;\n      var n = numVertices / 2;\n      var seg = list.prevItem();\n      list.removeItem();\n      rtree.remove(seg);\n      breakCond = (seg === start);\n      var p;\n      if (opt_touch) {\n        if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n          list.prevItem();\n          p = s0.p0;\n          s1.p0 = p;\n          rtree.remove(s0);\n          breakCond = breakCond || (s0 === start);\n        } else {\n          p = s1.p1;\n          s0.p1 = p;\n          rtree.remove(s1);\n          breakCond = breakCond || (s1 === start);\n        }\n        list.removeItem();\n      } else {\n        p = this.createPoint_(intersection[0], intersection[1], n);\n        s0.p1 = p;\n        s1.p0 = p;\n        rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n          Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n        rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n          Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n      }\n\n      this.indices[numIndices++] = seg.p0.i;\n      this.indices[numIndices++] = seg.p1.i;\n      this.indices[numIndices++] = p.i;\n\n      resolvedIntersections = true;\n      if (breakCond) {\n        break;\n      }\n    }\n\n    s0 = list.getPrevItem();\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return resolvedIntersections;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @return {boolean} The polygon is simple.\n */\n_ol_render_webgl_PolygonReplay_.prototype.isSimple_ = function(list, rtree) {\n  var start = list.firstItem();\n  var seg = start;\n  do {\n    if (this.getIntersections_(seg, rtree).length) {\n      return false;\n    }\n    seg = list.nextItem();\n  } while (seg !== start);\n  return true;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @return {boolean} Orientation is clockwise.\n */\n_ol_render_webgl_PolygonReplay_.prototype.isClockwise_ = function(list) {\n  var length = list.getLength() * 2;\n  var flatCoordinates = new Array(length);\n  var start = list.firstItem();\n  var seg = start;\n  var i = 0;\n  do {\n    flatCoordinates[i++] = seg.p0.x;\n    flatCoordinates[i++] = seg.p0.y;\n    seg = list.nextItem();\n  } while (seg !== start);\n  return _ol_geom_flat_orient_.linearRingIsClockwise(flatCoordinates, 0, length, 2);\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n */\n_ol_render_webgl_PolygonReplay_.prototype.splitPolygon_ = function(list, rtree) {\n  var start = list.firstItem();\n  var s0 = start;\n  do {\n    var intersections = this.getIntersections_(s0, rtree);\n    if (intersections.length) {\n      var s1 = intersections[0];\n      var n = this.vertices.length / 2;\n      var intersection = this.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n      var p = this.createPoint_(intersection[0], intersection[1], n);\n      var newPolygon = new _ol_structs_LinkedList_();\n      var newRtree = new _ol_structs_RBush_();\n      this.insertItem_(p, s0.p1, newPolygon, newRtree);\n      s0.p1 = p;\n      rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n        Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n      var currItem = list.nextItem();\n      while (currItem !== s1) {\n        this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n        rtree.remove(currItem);\n        list.removeItem();\n        currItem = list.getCurrItem();\n      }\n      this.insertItem_(s1.p0, p, newPolygon, newRtree);\n      s1.p0 = p;\n      rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n        Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n      this.classifyPoints_(list, rtree, false);\n      this.triangulate_(list, rtree);\n      this.classifyPoints_(newPolygon, newRtree, false);\n      this.triangulate_(newPolygon, newRtree);\n      break;\n    }\n    s0 = list.nextItem();\n  } while (s0 !== start);\n};\n\n\n/**\n * @private\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @param {number} i Index.\n * @return {ol.WebglPolygonVertex} List item.\n */\n_ol_render_webgl_PolygonReplay_.prototype.createPoint_ = function(x, y, i) {\n  var numVertices = this.vertices.length;\n  this.vertices[numVertices++] = x;\n  this.vertices[numVertices++] = y;\n  /** @type {ol.WebglPolygonVertex} */\n  var p = {\n    x: x,\n    y: y,\n    i: i,\n    reflex: undefined\n  };\n  return p;\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonVertex} p0 First point of segment.\n * @param {ol.WebglPolygonVertex} p1 Second point of segment.\n * @param {ol.structs.LinkedList} list Polygon ring.\n * @param {ol.structs.RBush=} opt_rtree Insert the segment into the R-Tree.\n * @return {ol.WebglPolygonSegment} segment.\n */\n_ol_render_webgl_PolygonReplay_.prototype.insertItem_ = function(p0, p1, list, opt_rtree) {\n  var seg = {\n    p0: p0,\n    p1: p1\n  };\n  list.insertItem(seg);\n  if (opt_rtree) {\n    opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n      Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n  }\n  return seg;\n};\n\n\n/**\n  * @private\n  * @param {ol.WebglPolygonSegment} s0 Segment before the remove candidate.\n  * @param {ol.WebglPolygonSegment} s1 Remove candidate segment.\n  * @param {ol.structs.LinkedList} list Polygon ring.\n  * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n  */\n_ol_render_webgl_PolygonReplay_.prototype.removeItem_ = function(s0, s1, list, rtree) {\n  if (list.getCurrItem() === s1) {\n    list.removeItem();\n    s0.p1 = s1.p1;\n    rtree.remove(s1);\n    rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n      Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n  }\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonVertex} p0 First point.\n * @param {ol.WebglPolygonVertex} p1 Second point.\n * @param {ol.WebglPolygonVertex} p2 Third point.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_reflex Only include reflex points.\n * @return {Array.<ol.WebglPolygonVertex>} Points in the triangle.\n */\n_ol_render_webgl_PolygonReplay_.prototype.getPointsInTriangle_ = function(p0, p1,\n    p2, rtree, opt_reflex) {\n  var i, ii, j, p;\n  var result = [];\n  var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n    Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n  for (i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    for (j in segmentsInExtent[i]) {\n      p = segmentsInExtent[i][j];\n      if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n        if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n            (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n            _ol_geom_flat_contains_.linearRingContainsXY([p0.x, p0.y, p1.x, p1.y,\n              p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n          result.push(p);\n        }\n      }\n    }\n  }\n  return result;\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonSegment} segment Segment.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<ol.WebglPolygonSegment>} Intersecting segments.\n */\n_ol_render_webgl_PolygonReplay_.prototype.getIntersections_ = function(segment, rtree, opt_touch) {\n  var p0 = segment.p0;\n  var p1 = segment.p1;\n  var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n    Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n  var result = [];\n  var i, ii;\n  for (i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    var currSeg = segmentsInExtent[i];\n    if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n        this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n      result.push(currSeg);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Line intersection algorithm by Paul Bourke.\n * @see http://paulbourke.net/geometry/pointlineplane/\n *\n * @private\n * @param {ol.WebglPolygonVertex} p0 First point.\n * @param {ol.WebglPolygonVertex} p1 Second point.\n * @param {ol.WebglPolygonVertex} p2 Third point.\n * @param {ol.WebglPolygonVertex} p3 Fourth point.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<number>|undefined} Intersection coordinates.\n */\n_ol_render_webgl_PolygonReplay_.prototype.calculateIntersection_ = function(p0,\n    p1, p2, p3, opt_touch) {\n  var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n  if (denom !== 0) {\n    var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n    var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n    if ((!opt_touch && ua > _ol_render_webgl_.EPSILON && ua < 1 - _ol_render_webgl_.EPSILON &&\n        ub > _ol_render_webgl_.EPSILON && ub < 1 - _ol_render_webgl_.EPSILON) || (opt_touch &&\n        ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n      return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonVertex} p0 Point before the start of the diagonal.\n * @param {ol.WebglPolygonVertex} p1 Start point of the diagonal.\n * @param {ol.WebglPolygonVertex} p2 Ear candidate.\n * @param {ol.WebglPolygonVertex} p3 End point of the diagonal.\n * @param {ol.WebglPolygonVertex} p4 Point after the end of the diagonal.\n * @return {boolean} Diagonal is inside the polygon.\n */\n_ol_render_webgl_PolygonReplay_.prototype.diagonalIsInside_ = function(p0, p1, p2, p3, p4) {\n  if (p1.reflex === undefined || p3.reflex === undefined) {\n    return false;\n  }\n  var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n  var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n  var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n  var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n  var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n  var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n  return p1InCone && p3InCone;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  var endss = multiPolygonGeometry.getEndss();\n  var stride = multiPolygonGeometry.getStride();\n  var currIndex = this.indices.length;\n  var currLineIndex = this.lineStringReplay.getCurrentIndex();\n  var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n  var i, ii, j, jj;\n  var start = 0;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (ends.length > 0) {\n      var outerRing = _ol_geom_flat_transform_.translate(flatCoordinates, start, ends[0],\n          stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var holeFlatCoords;\n        for (j = 1, jj = ends.length; j < jj; ++j) {\n          if (ends[j] !== ends[j - 1]) {\n            holeFlatCoords = _ol_geom_flat_transform_.translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n    start = ends[ends.length - 1];\n  }\n  if (this.indices.length > currIndex) {\n    this.startIndices.push(currIndex);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(currIndex);\n      this.state_.changed = false;\n    }\n  }\n  if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n    this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawPolygon = function(polygonGeometry, feature) {\n  var ends = polygonGeometry.getEnds();\n  var stride = polygonGeometry.getStride();\n  if (ends.length > 0) {\n    var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n    var outerRing = _ol_geom_flat_transform_.translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n    if (outerRing.length) {\n      var holes = [];\n      var i, ii, holeFlatCoords;\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (ends[i] !== ends[i - 1]) {\n          holeFlatCoords = _ol_geom_flat_transform_.translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this.origin[0], -this.origin[1]);\n          holes.push(holeFlatCoords);\n        }\n      }\n\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.lineStringReplay.setPolygonStyle(feature);\n\n      this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n      this.drawCoordinates_(outerRing, holes, stride);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\n_ol_render_webgl_PolygonReplay_.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  this.lineStringReplay.finish(context);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n    lineDeleter();\n  };\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader, vertexShader;\n  fragmentShader = _ol_render_webgl_polygonreplay_defaultshader_.fragment;\n  vertexShader = _ol_render_webgl_polygonreplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_render_webgl_polygonreplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 8, 0);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    var i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\n_ol_render_webgl_PolygonReplay_.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = _ol_color_.asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || _ol_render_webgl_.defaultFillStyle;\n  } else {\n    fillStyleColor = _ol_render_webgl_.defaultFillStyle;\n  }\n  if (!this.state_.fillColor || !_ol_array_.equals(fillStyleColor, this.state_.fillColor)) {\n    this.state_.fillColor = fillStyleColor;\n    this.state_.changed = true;\n    this.styles_.push(fillStyleColor);\n  }\n  //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n  if (strokeStyle) {\n    this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n  } else {\n    var nullStrokeStyle = new _ol_style_Stroke_({\n      color: [0, 0, 0, 0],\n      lineWidth: 0\n    });\n    this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n  }\n};\nexport default _ol_render_webgl_PolygonReplay_;\n","import _ol_dom_ from '../dom.js';\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar _ol_style_Atlas_ = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<ol.AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, ol.AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = _ol_dom_.createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?ol.AtlasInfo} The atlas info.\n */\n_ol_style_Atlas_.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?ol.AtlasInfo} The position and atlas image for the entry.\n */\n_ol_style_Atlas_.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  var block, i, ii;\n  for (i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n          block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {ol.AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\n_ol_style_Atlas_.prototype.split_ = function(index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {ol.AtlasBlock} */\n  var newBlock1;\n  /** @type {ol.AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {ol.AtlasBlock} newBlock1 The 1st block to add.\n * @param {ol.AtlasBlock} newBlock2 The 2nd block to add.\n */\n_ol_style_Atlas_.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  var args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default _ol_style_Atlas_;\n","import _ol_ from '../index.js';\nimport _ol_style_Atlas_ from '../style/atlas.js';\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {olx.style.AtlasManagerOptions=} opt_options Options.\n */\nvar _ol_style_AtlasManager_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : _ol_.INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : _ol_.MAX_ATLAS_SIZE != -1 ?\n      _ol_.MAX_ATLAS_SIZE : _ol_.WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        _ol_.WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Atlas>}\n   */\n  this.atlases_ = [new _ol_style_Atlas_(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Atlas>}\n   */\n  this.hitAtlases_ = [new _ol_style_Atlas_(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?ol.AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\n_ol_style_AtlasManager_.prototype.getInfo = function(id) {\n  /** @type {?ol.AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {ol.AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<ol.style.Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?ol.AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\n_ol_style_AtlasManager_.prototype.getInfo_ = function(atlases, id) {\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {ol.AtlasInfo} info The info for the real image.\n * @param {ol.AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?ol.AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\n_ol_style_AtlasManager_.prototype.mergeInfos_ = function(info, hitInfo) {\n  return /** @type {ol.AtlasManagerInfo} */ ({\n    offsetX: info.offsetX,\n    offsetY: info.offsetY,\n    image: info.image,\n    hitImage: hitInfo.image\n  });\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?ol.AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\n_ol_style_AtlasManager_.prototype.add = function(id, width, height,\n    renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?ol.AtlasInfo} */\n  var info = this.add_(false,\n      id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : _ol_.nullFunction;\n\n  var hitInfo = /** @type {ol.AtlasInfo} */ (this.add_(true,\n      id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?ol.AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\n_ol_style_AtlasManager_.prototype.add_ = function(isHitAtlas, id, width, height,\n    renderCallback, opt_this) {\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new _ol_style_Atlas_(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default _ol_style_AtlasManager_;\n","import _ol_ from '../../index.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_render_webgl_TextureReplay_ from '../webgl/texturereplay.js';\nimport _ol_style_AtlasManager_ from '../../style/atlasmanager.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_TextReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_TextureReplay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.images_ = [];\n\n  /**\n   * @private\n   * @type {Array.<WebGLTexture>}\n   */\n  this.textures_ = [];\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.measureCanvas_ = _ol_dom_.createCanvasContext2D(0, 0).canvas;\n\n  /**\n   * @private\n   * @type {{strokeColor: (ol.ColorLike|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: number,\n   *         miterLimit: (number|undefined),\n   *         fillColor: (ol.ColorLike|null),\n   *         font: (string|undefined),\n   *         scale: (number|undefined)}}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textAlign_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textBaseline_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetY_ = undefined;\n\n  /**\n   * @private\n   * @type {Object.<string, ol.WebglGlyphAtlas>}\n   */\n  this.atlases_ = {};\n\n  /**\n   * @private\n   * @type {ol.WebglGlyphAtlas|undefined}\n   */\n  this.currAtlas_ = undefined;\n\n  this.scale = 1;\n\n  this.opacity = 1;\n\n};\n\n_ol_.inherits(_ol_render_webgl_TextReplay_, _ol_render_webgl_TextureReplay_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.drawText = function(geometry, feature) {\n  if (this.text_) {\n    var flatCoordinates = null;\n    var offset = 0;\n    var end = 2;\n    var stride = 2;\n    switch (geometry.getType()) {\n      case _ol_geom_GeometryType_.POINT:\n      case _ol_geom_GeometryType_.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        stride = geometry.getStride();\n        break;\n      case _ol_geom_GeometryType_.CIRCLE:\n        flatCoordinates = /** @type {ol.geom.Circle} */ (geometry).getCenter();\n        break;\n      case _ol_geom_GeometryType_.LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case _ol_geom_GeometryType_.POLYGON:\n        flatCoordinates = /** @type {ol.geom.Polygon} */ (geometry).getFlatInteriorPoint();\n        break;\n      case _ol_geom_GeometryType_.MULTI_POLYGON:\n        flatCoordinates = /** @type {ol.geom.MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        end = flatCoordinates.length;\n        break;\n      default:\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n\n    var glyphAtlas = this.currAtlas_;\n    var lines = this.text_.split('\\n');\n    var textSize = this.getTextSize_(lines);\n    var i, ii, j, jj, currX, currY, charArr, charInfo;\n    var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n    var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n    var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      currX = 0;\n      currY = glyphAtlas.height * i;\n      charArr = lines[i].split('');\n\n      for (j = 0, jj = charArr.length; j < jj; ++j) {\n        charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n        if (charInfo) {\n          var image = charInfo.image;\n\n          this.anchorX = anchorX - currX;\n          this.anchorY = anchorY - currY;\n          this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n          this.originY = charInfo.offsetY;\n          this.height = glyphAtlas.height;\n          this.width = j === 0 || j === charArr.length - 1 ?\n            glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n          this.imageHeight = image.height;\n          this.imageWidth = image.width;\n\n          var currentImage;\n          if (this.images_.length === 0) {\n            this.images_.push(image);\n          } else {\n            currentImage = this.images_[this.images_.length - 1];\n            if (_ol_.getUid(currentImage) != _ol_.getUid(image)) {\n              this.groupIndices.push(this.indices.length);\n              this.images_.push(image);\n            }\n          }\n\n          this.drawText_(flatCoordinates, offset, end, stride);\n        }\n        currX += this.width;\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Array.<string>} lines Label to draw split to lines.\n * @return {Array.<number>} Size of the label in pixels.\n */\n_ol_render_webgl_TextReplay_.prototype.getTextSize_ = function(lines) {\n  var self = this;\n  var glyphAtlas = this.currAtlas_;\n  var textHeight = lines.length * glyphAtlas.height;\n  //Split every line to an array of chars, sum up their width, and select the longest.\n  var textWidth = lines.map(function(str) {\n    var sum = 0;\n    var i, ii;\n    for (i = 0, ii = str.length; i < ii; ++i) {\n      var curr = str[i];\n      if (!glyphAtlas.width[curr]) {\n        self.addCharToAtlas_(curr);\n      }\n      sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n    }\n    return sum;\n  }).reduce(function(max, curr) {\n    return Math.max(max, curr);\n  });\n\n  return [textWidth, textHeight];\n};\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_TextReplay_.prototype.drawText_ = function(flatCoordinates, offset,\n    end, stride) {\n  var i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.drawCoordinates(flatCoordinates, offset, end, stride);\n  }\n};\n\n\n/**\n * @private\n * @param {string} char Character.\n */\n_ol_render_webgl_TextReplay_.prototype.addCharToAtlas_ = function(char) {\n  if (char.length === 1) {\n    var glyphAtlas = this.currAtlas_;\n    var state = this.state_;\n    var mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n    var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (_ol_has_.CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n                /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n    if (info) {\n      glyphAtlas.width[char] = width;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.finish = function(context) {\n  var gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices = this.groupIndices;\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  var texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n  this.text_ = '';\n  this.textAlign_ = undefined;\n  this.textBaseline_ = undefined;\n  this.offsetX_ = undefined;\n  this.offsetY_ = undefined;\n  this.images_ = null;\n  this.atlases_ = {};\n  this.currAtlas_ = undefined;\n  _ol_render_webgl_TextureReplay_.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.setTextStyle = function(textStyle) {\n  var state = this.state_;\n  var textFillStyle = textStyle.getFill();\n  var textStrokeStyle = textStyle.getStroke();\n  if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n    this.text_ = '';\n  } else {\n    if (!textFillStyle) {\n      state.fillColor = null;\n    } else {\n      var textFillStyleColor = textFillStyle.getColor();\n      state.fillColor = _ol_colorlike_.asColorLike(textFillStyleColor ?\n        textFillStyleColor : _ol_render_webgl_.defaultFillStyle);\n    }\n    if (!textStrokeStyle) {\n      state.strokeColor = null;\n      state.lineWidth = 0;\n    } else {\n      var textStrokeStyleColor = textStrokeStyle.getColor();\n      state.strokeColor = _ol_colorlike_.asColorLike(textStrokeStyleColor ?\n        textStrokeStyleColor : _ol_render_webgl_.defaultStrokeStyle);\n      state.lineWidth = textStrokeStyle.getWidth() || _ol_render_webgl_.defaultLineWidth;\n      state.lineCap = textStrokeStyle.getLineCap() || _ol_render_webgl_.defaultLineCap;\n      state.lineDashOffset = textStrokeStyle.getLineDashOffset() || _ol_render_webgl_.defaultLineDashOffset;\n      state.lineJoin = textStrokeStyle.getLineJoin() || _ol_render_webgl_.defaultLineJoin;\n      state.miterLimit = textStrokeStyle.getMiterLimit() || _ol_render_webgl_.defaultMiterLimit;\n      var lineDash = textStrokeStyle.getLineDash();\n      state.lineDash = lineDash ? lineDash.slice() : _ol_render_webgl_.defaultLineDash;\n    }\n    state.font = textStyle.getFont() || _ol_render_webgl_.defaultFont;\n    state.scale = textStyle.getScale() || 1;\n    this.text_ = /** @type {string} */ (textStyle.getText());\n    var textAlign = _ol_render_replay_.TEXT_ALIGN[textStyle.getTextAlign()];\n    var textBaseline = _ol_render_replay_.TEXT_ALIGN[textStyle.getTextBaseline()];\n    this.textAlign_ = textAlign === undefined ?\n      _ol_render_webgl_.defaultTextAlign : textAlign;\n    this.textBaseline_ = textBaseline === undefined ?\n      _ol_render_webgl_.defaultTextBaseline : textBaseline;\n    this.offsetX_ = textStyle.getOffsetX() || 0;\n    this.offsetY_ = textStyle.getOffsetY() || 0;\n    this.rotateWithView = !!textStyle.getRotateWithView();\n    this.rotation = textStyle.getRotation() || 0;\n\n    this.currAtlas_ = this.getAtlas_(state);\n  }\n};\n\n\n/**\n * @private\n * @param {Object} state Font attributes.\n * @return {ol.WebglGlyphAtlas} Glyph atlas.\n */\n_ol_render_webgl_TextReplay_.prototype.getAtlas_ = function(state) {\n  var params = [];\n  var i;\n  for (i in state) {\n    if (state[i] || state[i] === 0) {\n      if (Array.isArray(state[i])) {\n        params = params.concat(state[i]);\n      } else {\n        params.push(state[i]);\n      }\n    }\n  }\n  var hash = this.calculateHash_(params);\n  if (!this.atlases_[hash]) {\n    var mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n        state.lineWidth / 2) * state.scale);\n\n    this.atlases_[hash] = {\n      atlas: new _ol_style_AtlasManager_({\n        space: state.lineWidth + 1\n      }),\n      width: {},\n      height: height\n    };\n  }\n  return this.atlases_[hash];\n};\n\n\n/**\n * @private\n * @param {Array.<string|number>} params Array of parameters.\n * @return {string} Hash string.\n */\n_ol_render_webgl_TextReplay_.prototype.calculateHash_ = function(params) {\n  //TODO: Create a more performant, reliable, general hash function.\n  var i, ii;\n  var hash = '';\n  for (i = 0, ii = params.length; i < ii; ++i) {\n    hash += params[i];\n  }\n  return hash;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.getTextures = function(opt_all) {\n  return this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.getHitDetectionTextures = function() {\n  return this.textures_;\n};\nexport default _ol_render_webgl_TextReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_render_ReplayGroup_ from '../replaygroup.js';\nimport _ol_render_webgl_CircleReplay_ from '../webgl/circlereplay.js';\nimport _ol_render_webgl_ImageReplay_ from '../webgl/imagereplay.js';\nimport _ol_render_webgl_LineStringReplay_ from '../webgl/linestringreplay.js';\nimport _ol_render_webgl_PolygonReplay_ from '../webgl/polygonreplay.js';\nimport _ol_render_webgl_TextReplay_ from '../webgl/textreplay.js';\n\n/**\n * @constructor\n * @extends {ol.render.ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @param {number=} opt_renderBuffer Render buffer.\n * @struct\n */\nvar _ol_render_webgl_ReplayGroup_ = function(tolerance, maxExtent, opt_renderBuffer) {\n  _ol_render_ReplayGroup_.call(this);\n\n  /**\n   * @type {ol.Extent}\n   * @private\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<ol.render.ReplayType, ol.render.webgl.Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n};\n\n_ol_.inherits(_ol_render_webgl_ReplayGroup_, _ol_render_ReplayGroup_);\n\n\n/**\n * @param {ol.style.Style} style Style.\n * @param {boolean} group Group with previous replay.\n */\n_ol_render_webgl_ReplayGroup_.prototype.addDeclutter = function(style, group) {};\n\n\n/**\n * @param {ol.webgl.Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\n_ol_render_webgl_ReplayGroup_.prototype.getDeleteResourcesFunction = function(context) {\n  var functions = [];\n  var zKey;\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n    for (replayKey in replays) {\n      functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n    }\n  }\n  return function() {\n    var length = functions.length;\n    var result;\n    for (var i = 0; i < length; i++) {\n      result = functions[i].apply(this, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * @param {ol.webgl.Context} context Context.\n */\n_ol_render_webgl_ReplayGroup_.prototype.finish = function(context) {\n  var zKey;\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n    for (replayKey in replays) {\n      replays[replayKey].finish(context);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ReplayGroup_.prototype.getReplay = function(zIndex, replayType) {\n  var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  var replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  var replay = replays[replayType];\n  if (replay === undefined) {\n    /**\n     * @type {Function}\n     */\n    var Constructor = _ol_render_webgl_ReplayGroup_.BATCH_CONSTRUCTORS_[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ReplayGroup_.prototype.isEmpty = function() {\n  return _ol_obj_.isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n */\n_ol_render_webgl_ReplayGroup_.prototype.replay = function(context,\n    center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash) {\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  var i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = 0, jj = _ol_render_replay_.ORDER.length; j < jj; ++j) {\n      replay = replays[_ol_render_replay_.ORDER[j]];\n      if (replay !== undefined) {\n        replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_ReplayGroup_.prototype.replayHitDetection_ = function(context,\n    center, resolution, rotation, size, pixelRatio, opacity,\n    skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(function(a, b) {\n    return b - a;\n  });\n\n  var i, ii, j, replays, replay, result;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = _ol_render_replay_.ORDER.length - 1; j >= 0; --j) {\n      replay = replays[_ol_render_replay_.ORDER[j]];\n      if (replay !== undefined) {\n        result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_ReplayGroup_.prototype.forEachFeatureAtCoordinate = function(\n    coordinate, context, center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash,\n    callback) {\n  var gl = context.getGL();\n  gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n  /**\n   * @type {ol.Extent}\n   */\n  var hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    // build an extent around the coordinate, so that only features that\n    // intersect this extent are checked\n    hitExtent = _ol_extent_.buffer(\n        _ol_extent_.createOrUpdateFromCoordinate(coordinate),\n        resolution * this.renderBuffer_);\n  }\n\n  return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, _ol_render_webgl_ReplayGroup_.HIT_DETECTION_SIZE_,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @return {boolean} Is there a feature at the given coordinate?\n */\n_ol_render_webgl_ReplayGroup_.prototype.hasFeatureAtCoordinate = function(\n    coordinate, context, center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash) {\n  var gl = context.getGL();\n  gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n  var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, _ol_render_webgl_ReplayGroup_.HIT_DETECTION_SIZE_,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n  return hasFeature !== undefined;\n};\n\n/**\n * @const\n * @private\n * @type {Array.<number>}\n */\n_ol_render_webgl_ReplayGroup_.HIT_DETECTION_SIZE_ = [1, 1];\n\n/**\n * @const\n * @private\n * @type {Object.<ol.render.ReplayType,\n *                function(new: ol.render.webgl.Replay, number,\n *                ol.Extent)>}\n */\n_ol_render_webgl_ReplayGroup_.BATCH_CONSTRUCTORS_ = {\n  'Circle': _ol_render_webgl_CircleReplay_,\n  'Image': _ol_render_webgl_ImageReplay_,\n  'LineString': _ol_render_webgl_LineStringReplay_,\n  'Polygon': _ol_render_webgl_PolygonReplay_,\n  'Text': _ol_render_webgl_TextReplay_\n};\nexport default _ol_render_webgl_ReplayGroup_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_render_ReplayType_ from '../replaytype.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_webgl_ReplayGroup_ from '../webgl/replaygroup.js';\n\n/**\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {ol.Extent} extent Extent.\n * @param {number} pixelRatio Pixel ratio.\n * @struct\n */\nvar _ol_render_webgl_Immediate_ = function(context, center, resolution, rotation, size, extent, pixelRatio) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @private\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   */\n  this.center_ = center;\n\n  /**\n   * @private\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   */\n  this.rotation_ = rotation;\n\n  /**\n   * @private\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {ol.style.Image}\n   */\n  this.imageStyle_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fillStyle_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.strokeStyle_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Text}\n   */\n  this.textStyle_ = null;\n\n};\n\n_ol_.inherits(_ol_render_webgl_Immediate_, _ol_render_VectorContext_);\n\n\n/**\n * @param {ol.render.webgl.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @private\n */\n_ol_render_webgl_Immediate_.prototype.drawText_ = function(replayGroup, geometry) {\n  var context = this.context_;\n  var replay = /** @type {ol.render.webgl.TextReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.TEXT));\n  replay.setTextStyle(this.textStyle_);\n  replay.drawText(geometry, null);\n  replay.finish(context);\n  // default colors\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {ol.style.Style} style The rendering style.\n * @override\n * @api\n */\n_ol_render_webgl_Immediate_.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol.render.webgl.Immediate#setStyle} first to set the rendering style.\n *\n * @param {ol.geom.Geometry|ol.render.Feature} geometry The geometry to render.\n * @override\n * @api\n */\n_ol_render_webgl_Immediate_.prototype.drawGeometry = function(geometry) {\n  var type = geometry.getType();\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n      this.drawPoint(/** @type {ol.geom.Point} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.LINE_STRING:\n      this.drawLineString(/** @type {ol.geom.LineString} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.POLYGON:\n      this.drawPolygon(/** @type {ol.geom.Polygon} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.MULTI_POINT:\n      this.drawMultiPoint(/** @type {ol.geom.MultiPoint} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {ol.geom.MultiLineString} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {ol.geom.MultiPolygon} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {ol.geom.GeometryCollection} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.CIRCLE:\n      this.drawCircle(/** @type {ol.geom.Circle} */ (geometry), null);\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_render_webgl_Immediate_.prototype.drawFeature = function(feature, style) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry ||\n      !_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawGeometryCollection = function(geometry, data) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawPoint = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.ImageReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawPoint(geometry, data);\n  replay.finish(context);\n  // default colors\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawMultiPoint = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.ImageReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawMultiPoint(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawLineString = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.LineStringReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawLineString(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawMultiLineString = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.LineStringReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawMultiLineString(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawPolygon = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.PolygonReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawPolygon(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawMultiPolygon = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.PolygonReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawMultiPolygon(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawCircle = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.CircleReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.CIRCLE));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawCircle(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.setImageStyle = function(imageStyle) {\n  this.imageStyle_ = imageStyle;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  this.fillStyle_ = fillStyle;\n  this.strokeStyle_ = strokeStyle;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.setTextStyle = function(textStyle) {\n  this.textStyle_ = textStyle;\n};\nexport default _ol_render_webgl_Immediate_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../index.js';\nimport _ol_webgl_Fragment_ from '../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../webgl/vertex.js';\nvar _ol_renderer_webgl_defaultmapshader_ = {};\n\n\n_ol_renderer_webgl_defaultmapshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\n_ol_renderer_webgl_defaultmapshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\nexport default _ol_renderer_webgl_defaultmapshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_renderer_webgl_defaultmapshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default _ol_renderer_webgl_defaultmapshader_Locations_;","import _ol_ from '../../index.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_webgl_Immediate_ from '../../render/webgl/immediate.js';\nimport _ol_renderer_Layer_ from '../layer.js';\nimport _ol_renderer_webgl_defaultmapshader_ from '../webgl/defaultmapshader.js';\nimport _ol_renderer_webgl_defaultmapshader_Locations_ from '../webgl/defaultmapshader/locations.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_vec_Mat4_ from '../../vec/mat4.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.renderer.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Layer} layer Layer.\n */\nvar _ol_renderer_webgl_Layer_ = function(mapRenderer, layer) {\n\n  _ol_renderer_Layer_.call(this, layer);\n\n  /**\n   * @protected\n   * @type {ol.renderer.webgl.Map}\n   */\n  this.mapRenderer = mapRenderer;\n\n  /**\n   * @private\n   * @type {ol.webgl.Buffer}\n   */\n  this.arrayBuffer_ = new _ol_webgl_Buffer_([\n    -1, -1, 0, 0,\n    1, -1, 1, 0,\n    -1, 1, 0, 1,\n    1, 1, 1, 1\n  ]);\n\n  /**\n   * @protected\n   * @type {WebGLTexture}\n   */\n  this.texture = null;\n\n  /**\n   * @protected\n   * @type {WebGLFramebuffer}\n   */\n  this.framebuffer = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.framebufferDimension = undefined;\n\n  /**\n   * @protected\n   * @type {ol.Transform}\n   */\n  this.texCoordMatrix = _ol_transform_.create();\n\n  /**\n   * @protected\n   * @type {ol.Transform}\n   */\n  this.projectionMatrix = _ol_transform_.create();\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.tmpMat4_ = _ol_vec_Mat4_.create();\n\n  /**\n   * @private\n   * @type {ol.renderer.webgl.defaultmapshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_Layer_, _ol_renderer_Layer_);\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {number} framebufferDimension Framebuffer dimension.\n * @protected\n */\n_ol_renderer_webgl_Layer_.prototype.bindFramebuffer = function(frameState, framebufferDimension) {\n\n  var gl = this.mapRenderer.getGL();\n\n  if (this.framebufferDimension === undefined ||\n      this.framebufferDimension != framebufferDimension) {\n    /**\n     * @param {WebGLRenderingContext} gl GL.\n     * @param {WebGLFramebuffer} framebuffer Framebuffer.\n     * @param {WebGLTexture} texture Texture.\n     */\n    var postRenderFunction = function(gl, framebuffer, texture) {\n      if (!gl.isContextLost()) {\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n      }\n    }.bind(null, gl, this.framebuffer, this.texture);\n\n    frameState.postRenderFunctions.push(\n        /** @type {ol.PostRenderFunction} */ (postRenderFunction)\n    );\n\n    var texture = _ol_webgl_Context_.createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(_ol_webgl_.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(_ol_webgl_.FRAMEBUFFER,\n        _ol_webgl_.COLOR_ATTACHMENT0, _ol_webgl_.TEXTURE_2D, texture, 0);\n\n    this.texture = texture;\n    this.framebuffer = framebuffer;\n    this.framebufferDimension = framebufferDimension;\n\n  } else {\n    gl.bindFramebuffer(_ol_webgl_.FRAMEBUFFER, this.framebuffer);\n  }\n\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {ol.webgl.Context} context Context.\n */\n_ol_renderer_webgl_Layer_.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.dispatchComposeEvent_(\n      _ol_render_EventType_.PRECOMPOSE, context, frameState);\n\n  context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.arrayBuffer_);\n\n  var gl = context.getGL();\n\n  var fragmentShader = _ol_renderer_webgl_defaultmapshader_.fragment;\n  var vertexShader = _ol_renderer_webgl_defaultmapshader_.vertex;\n\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_renderer_webgl_defaultmapshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  if (context.useProgram(program)) {\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(\n        locations.a_position, 2, _ol_webgl_.FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(\n        locations.a_texCoord, 2, _ol_webgl_.FLOAT, false, 16, 8);\n    gl.uniform1i(locations.u_texture, 0);\n  }\n\n  gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n  gl.uniform1f(locations.u_opacity, layerState.opacity);\n  gl.bindTexture(_ol_webgl_.TEXTURE_2D, this.getTexture());\n  gl.drawArrays(_ol_webgl_.TRIANGLE_STRIP, 0, 4);\n\n  this.dispatchComposeEvent_(\n      _ol_render_EventType_.POSTCOMPOSE, context, frameState);\n\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {ol.webgl.Context} context WebGL context.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_webgl_Layer_.prototype.dispatchComposeEvent_ = function(type, context, frameState) {\n  var layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    var viewState = frameState.viewState;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var extent = frameState.extent;\n    var center = viewState.center;\n    var rotation = viewState.rotation;\n    var size = frameState.size;\n\n    var render = new _ol_render_webgl_Immediate_(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n    var composeEvent = new _ol_render_Event_(\n        type, render, frameState, null, context);\n    layer.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @return {!ol.Transform} Matrix.\n */\n_ol_renderer_webgl_Layer_.prototype.getTexCoordMatrix = function() {\n  return this.texCoordMatrix;\n};\n\n\n/**\n * @return {WebGLTexture} Texture.\n */\n_ol_renderer_webgl_Layer_.prototype.getTexture = function() {\n  return this.texture;\n};\n\n\n/**\n * @return {!ol.Transform} Matrix.\n */\n_ol_renderer_webgl_Layer_.prototype.getProjectionMatrix = function() {\n  return this.projectionMatrix;\n};\n\n\n/**\n * Handle webglcontextlost.\n */\n_ol_renderer_webgl_Layer_.prototype.handleWebGLContextLost = function() {\n  this.texture = null;\n  this.framebuffer = null;\n  this.framebufferDimension = undefined;\n};\n\n\n/**\n * @abstract\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {ol.webgl.Context} context Context.\n * @return {boolean} whether composeFrame should be called.\n */\n_ol_renderer_webgl_Layer_.prototype.prepareFrame = function(frameState, layerState, context) {};\n\n\n/**\n * @abstract\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.FrameState} frameState FrameState.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_webgl_Layer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {};\nexport default _ol_renderer_webgl_Layer_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_functions_ from '../../functions.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Image} imageLayer Tile layer.\n * @api\n */\nvar _ol_renderer_webgl_ImageLayer_ = function(mapRenderer, imageLayer) {\n\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, imageLayer);\n\n  /**\n   * The last rendered image.\n   * @private\n   * @type {?ol.ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n  /**\n   * @private\n   * @type {?ol.Transform}\n   */\n  this.hitTransformationMatrix_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_ImageLayer_, _ol_renderer_webgl_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_ImageLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.ImageLayer} The layer renderer.\n */\n_ol_renderer_webgl_ImageLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_webgl_ImageLayer_(\n      /** @type {ol.renderer.webgl.Map} */ (mapRenderer),\n      /** @type {ol.layer.Image} */ (layer)\n  );\n};\n\n\n/**\n * @param {ol.ImageBase} image Image.\n * @private\n * @return {WebGLTexture} Texture.\n */\n_ol_renderer_webgl_ImageLayer_.prototype.createTexture_ = function(image) {\n\n  // We meet the conditions to work with non-power of two textures.\n  // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n  // http://learningwebgl.com/blog/?p=2101\n\n  var imageElement = image.getImage();\n  var gl = this.mapRenderer.getGL();\n\n  return _ol_webgl_Context_.createTexture(\n      gl, imageElement, _ol_webgl_.CLAMP_TO_EDGE, _ol_webgl_.CLAMP_TO_EDGE);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  var layer = this.getLayer();\n  var source = layer.getSource();\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  var skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  var gl = this.mapRenderer.getGL();\n\n  var pixelRatio = frameState.pixelRatio;\n  var viewState = frameState.viewState;\n  var viewCenter = viewState.center;\n  var viewResolution = viewState.resolution;\n  var viewRotation = viewState.rotation;\n\n  var image = this.image_;\n  var texture = this.texture;\n  var imageLayer = /** @type {ol.layer.Image} */ (this.getLayer());\n  var imageSource = imageLayer.getSource();\n\n  var hints = frameState.viewHints;\n\n  var renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = _ol_extent_.getIntersection(\n        renderedExtent, layerState.extent);\n  }\n  if (!hints[_ol_ViewHint_.ANIMATING] && !hints[_ol_ViewHint_.INTERACTING] &&\n      !_ol_extent_.isEmpty(renderedExtent)) {\n    var projection = viewState.projection;\n    if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n      var sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n    if (image_) {\n      var loaded = this.loadImage(image_);\n      if (loaded) {\n        image = image_;\n        texture = this.createTexture_(image_);\n        if (this.texture) {\n          /**\n           * @param {WebGLRenderingContext} gl GL.\n           * @param {WebGLTexture} texture Texture.\n           */\n          var postRenderFunction = function(gl, texture) {\n            if (!gl.isContextLost()) {\n              gl.deleteTexture(texture);\n            }\n          }.bind(null, gl, this.texture);\n          frameState.postRenderFunctions.push(\n              /** @type {ol.PostRenderFunction} */ (postRenderFunction)\n          );\n        }\n      }\n    }\n  }\n\n  if (image) {\n    var canvas = this.mapRenderer.getContext().getCanvas();\n\n    this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n    this.hitTransformationMatrix_ = null;\n\n    // Translate and scale to flip the Y coord.\n    var texCoordMatrix = this.texCoordMatrix;\n    _ol_transform_.reset(texCoordMatrix);\n    _ol_transform_.scale(texCoordMatrix, 1, -1);\n    _ol_transform_.translate(texCoordMatrix, 0, -1);\n\n    this.image_ = image;\n    this.texture = texture;\n\n    this.updateLogos(frameState, imageSource);\n  }\n\n  return !!image;\n};\n\n\n/**\n * @param {number} canvasWidth Canvas width.\n * @param {number} canvasHeight Canvas height.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.Coordinate} viewCenter View center.\n * @param {number} viewResolution View resolution.\n * @param {number} viewRotation View rotation.\n * @param {ol.Extent} imageExtent Image extent.\n * @private\n */\n_ol_renderer_webgl_ImageLayer_.prototype.updateProjectionMatrix_ = function(canvasWidth, canvasHeight, pixelRatio,\n    viewCenter, viewResolution, viewRotation, imageExtent) {\n\n  var canvasExtentWidth = canvasWidth * viewResolution;\n  var canvasExtentHeight = canvasHeight * viewResolution;\n\n  var projectionMatrix = this.projectionMatrix;\n  _ol_transform_.reset(projectionMatrix);\n  _ol_transform_.scale(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n  _ol_transform_.rotate(projectionMatrix, -viewRotation);\n  _ol_transform_.translate(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n  _ol_transform_.scale(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n  _ol_transform_.translate(projectionMatrix, 1, 1);\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, 0, _ol_functions_.TRUE, this);\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.image_ || !this.image_.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== _ol_.nullFunction) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    var coordinate = _ol_transform_.apply(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.forEachFeatureAtCoordinate(\n        coordinate, frameState, 0, _ol_functions_.TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  } else {\n    var imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n    }\n\n    var pixelOnFrameBuffer = _ol_transform_.apply(\n        this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\n\n/**\n * The transformation matrix to get the pixel on the image for a\n * pixel on the map.\n * @param {ol.Size} mapSize The map size.\n * @param {ol.Size} imageSize The image size.\n * @return {ol.Transform} The transformation matrix.\n * @private\n */\n_ol_renderer_webgl_ImageLayer_.prototype.getHitTransformationMatrix_ = function(mapSize, imageSize) {\n  // the first matrix takes a map pixel, flips the y-axis and scales to\n  // a range between -1 ... 1\n  var mapCoordTransform = _ol_transform_.create();\n  _ol_transform_.translate(mapCoordTransform, -1, -1);\n  _ol_transform_.scale(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n  _ol_transform_.translate(mapCoordTransform, 0, mapSize[1]);\n  _ol_transform_.scale(mapCoordTransform, 1, -1);\n\n  // the second matrix is the inverse of the projection matrix used in the\n  // shader for drawing\n  var projectionMatrixInv = _ol_transform_.invert(this.projectionMatrix.slice());\n\n  // the third matrix scales to the image dimensions and flips the y-axis again\n  var transform = _ol_transform_.create();\n  _ol_transform_.translate(transform, 0, imageSize[1]);\n  _ol_transform_.scale(transform, 1, -1);\n  _ol_transform_.scale(transform, imageSize[0] / 2, imageSize[1] / 2);\n  _ol_transform_.translate(transform, 1, 1);\n\n  _ol_transform_.multiply(transform, projectionMatrixInv);\n  _ol_transform_.multiply(transform, mapCoordTransform);\n\n  return transform;\n};\nexport default _ol_renderer_webgl_ImageLayer_;\n","// FIXME check against gl.getParameter(webgl.MAX_TEXTURE_SIZE)\n\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_css_ from '../../css.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_layer_Layer_ from '../../layer/layer.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_webgl_Immediate_ from '../../render/webgl/immediate.js';\nimport _ol_renderer_Map_ from '../map.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_source_State_ from '../../source/state.js';\nimport _ol_structs_LRUCache_ from '../../structs/lrucache.js';\nimport _ol_structs_PriorityQueue_ from '../../structs/priorityqueue.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\nimport _ol_webgl_ContextEventType_ from '../../webgl/contexteventtype.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.Map}\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @api\n */\nvar _ol_renderer_webgl_Map_ = function(container, map) {\n  _ol_renderer_Map_.call(this, container, map);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = /** @type {HTMLCanvasElement} */\n    (document.createElement('CANVAS'));\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = _ol_css_.CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasWidth_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasHeight_ = 0;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.clipTileContext_ = _ol_dom_.createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = _ol_webgl_.getContext(this.canvas_, {\n    antialias: true,\n    depth: true,\n    failIfMajorPerformanceCaveat: true,\n    preserveDrawingBuffer: false,\n    stencil: true\n  });\n\n  /**\n   * @private\n   * @type {ol.webgl.Context}\n   */\n  this.context_ = new _ol_webgl_Context_(this.canvas_, this.gl_);\n\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.LOST,\n      this.handleWebGLContextLost, this);\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  /**\n   * @private\n   * @type {ol.structs.LRUCache.<ol.WebglTextureCacheEntry|null>}\n   */\n  this.textureCache_ = new _ol_structs_LRUCache_();\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {ol.structs.PriorityQueue.<Array>}\n   */\n  this.tileTextureQueue_ = new _ol_structs_PriorityQueue_(\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {number} Priority.\n       * @this {ol.renderer.webgl.Map}\n       */\n      (function(element) {\n        var tileCenter = /** @type {ol.Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return /** @type {ol.Tile} */ (element[0]).getKey();\n      });\n\n\n  /**\n   * @param {ol.PluggableMap} map Map.\n   * @param {?olx.FrameState} frameState Frame state.\n   * @return {boolean} false.\n   * @this {ol.renderer.webgl.Map}\n   */\n  this.loadNextTileTexture_ =\n      function(map, frameState) {\n        if (!this.tileTextureQueue_.isEmpty()) {\n          this.tileTextureQueue_.reprioritize();\n          var element = this.tileTextureQueue_.dequeue();\n          var tile = /** @type {ol.Tile} */ (element[0]);\n          var tileSize = /** @type {ol.Size} */ (element[3]);\n          var tileGutter = /** @type {number} */ (element[4]);\n          this.bindTileTexture(\n              tile, tileSize, tileGutter, _ol_webgl_.LINEAR, _ol_webgl_.LINEAR);\n        }\n        return false;\n      }.bind(this);\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  this.initializeGL_();\n};\n\n_ol_.inherits(_ol_renderer_webgl_Map_, _ol_renderer_Map_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_Map_['handles'] = function(type) {\n  return _ol_has_.WEBGL && type === _ol_renderer_Type_.WEBGL;\n};\n\n\n/**\n * Create the map renderer.\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @return {ol.renderer.webgl.Map} The map renderer.\n */\n_ol_renderer_webgl_Map_['create'] = function(container, map) {\n  return new _ol_renderer_webgl_Map_(container, map);\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @param {ol.Size} tileSize Tile size.\n * @param {number} tileGutter Tile gutter.\n * @param {number} magFilter Mag filter.\n * @param {number} minFilter Min filter.\n */\n_ol_renderer_webgl_Map_.prototype.bindTileTexture = function(tile, tileSize, tileGutter, magFilter, minFilter) {\n  var gl = this.getGL();\n  var tileKey = tile.getKey();\n  if (this.textureCache_.containsKey(tileKey)) {\n    var textureCacheEntry = this.textureCache_.get(tileKey);\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, textureCacheEntry.texture);\n    if (textureCacheEntry.magFilter != magFilter) {\n      gl.texParameteri(\n          _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MAG_FILTER, magFilter);\n      textureCacheEntry.magFilter = magFilter;\n    }\n    if (textureCacheEntry.minFilter != minFilter) {\n      gl.texParameteri(\n          _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MIN_FILTER, minFilter);\n      textureCacheEntry.minFilter = minFilter;\n    }\n  } else {\n    var texture = gl.createTexture();\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, texture);\n    if (tileGutter > 0) {\n      var clipTileCanvas = this.clipTileContext_.canvas;\n      var clipTileContext = this.clipTileContext_;\n      if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n          this.clipTileCanvasHeight_ !== tileSize[1]) {\n        clipTileCanvas.width = tileSize[0];\n        clipTileCanvas.height = tileSize[1];\n        this.clipTileCanvasWidth_ = tileSize[0];\n        this.clipTileCanvasHeight_ = tileSize[1];\n      } else {\n        clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n      }\n      clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n      gl.texImage2D(_ol_webgl_.TEXTURE_2D, 0,\n          _ol_webgl_.RGBA, _ol_webgl_.RGBA,\n          _ol_webgl_.UNSIGNED_BYTE, clipTileCanvas);\n    } else {\n      gl.texImage2D(_ol_webgl_.TEXTURE_2D, 0,\n          _ol_webgl_.RGBA, _ol_webgl_.RGBA,\n          _ol_webgl_.UNSIGNED_BYTE, tile.getImage());\n    }\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MAG_FILTER, magFilter);\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MIN_FILTER, minFilter);\n    gl.texParameteri(_ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_S,\n        _ol_webgl_.CLAMP_TO_EDGE);\n    gl.texParameteri(_ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_T,\n        _ol_webgl_.CLAMP_TO_EDGE);\n    this.textureCache_.set(tileKey, {\n      texture: texture,\n      magFilter: magFilter,\n      minFilter: minFilter\n    });\n  }\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_webgl_Map_.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  var map = this.getMap();\n  if (map.hasListener(type)) {\n    var context = this.context_;\n\n    var extent = frameState.extent;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n\n    var resolution = viewState.resolution;\n    var center = viewState.center;\n    var rotation = viewState.rotation;\n\n    var vectorContext = new _ol_render_webgl_Immediate_(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n    var composeEvent = new _ol_render_Event_(type, vectorContext,\n        frameState, null, context);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.disposeInternal = function() {\n  var gl = this.getGL();\n  if (!gl.isContextLost()) {\n    this.textureCache_.forEach(\n        /**\n         * @param {?ol.WebglTextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n  }\n  this.context_.dispose();\n  _ol_renderer_Map_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_webgl_Map_.prototype.expireCache_ = function(map, frameState) {\n  var gl = this.getGL();\n  var textureCacheEntry;\n  while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      _ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    textureCacheEntry = this.textureCache_.peekLast();\n    if (!textureCacheEntry) {\n      if (+this.textureCache_.peekLastKey() == frameState.index) {\n        break;\n      } else {\n        --this.textureCacheFrameMarkerCount_;\n      }\n    } else {\n      gl.deleteTexture(textureCacheEntry.texture);\n    }\n    this.textureCache_.pop();\n  }\n};\n\n\n/**\n * @return {ol.webgl.Context} The context.\n */\n_ol_renderer_webgl_Map_.prototype.getContext = function() {\n  return this.context_;\n};\n\n\n/**\n * @return {WebGLRenderingContext} GL.\n */\n_ol_renderer_webgl_Map_.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * @return {ol.structs.PriorityQueue.<Array>} Tile texture queue.\n */\n_ol_renderer_webgl_Map_.prototype.getTileTextureQueue = function() {\n  return this.tileTextureQueue_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.getType = function() {\n  return _ol_renderer_Type_.WEBGL;\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_renderer_webgl_Map_.prototype.handleWebGLContextLost = function(event) {\n  event.preventDefault();\n  this.textureCache_.clear();\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  var renderers = this.getLayerRenderers();\n  for (var id in renderers) {\n    var renderer = /** @type {ol.renderer.webgl.Layer} */ (renderers[id]);\n    renderer.handleWebGLContextLost();\n  }\n};\n\n\n/**\n * @protected\n */\n_ol_renderer_webgl_Map_.prototype.handleWebGLContextRestored = function() {\n  this.initializeGL_();\n  this.getMap().render();\n};\n\n\n/**\n * @private\n */\n_ol_renderer_webgl_Map_.prototype.initializeGL_ = function() {\n  var gl = this.gl_;\n  gl.activeTexture(_ol_webgl_.TEXTURE0);\n  gl.blendFuncSeparate(\n      _ol_webgl_.SRC_ALPHA, _ol_webgl_.ONE_MINUS_SRC_ALPHA,\n      _ol_webgl_.ONE, _ol_webgl_.ONE_MINUS_SRC_ALPHA);\n  gl.disable(_ol_webgl_.CULL_FACE);\n  gl.disable(_ol_webgl_.DEPTH_TEST);\n  gl.disable(_ol_webgl_.SCISSOR_TEST);\n  gl.disable(_ol_webgl_.STENCIL_TEST);\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @return {boolean} Is tile texture loaded.\n */\n_ol_renderer_webgl_Map_.prototype.isTileTextureLoaded = function(tile) {\n  return this.textureCache_.containsKey(tile.getKey());\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.renderFrame = function(frameState) {\n\n  var context = this.getContext();\n  var gl = this.getGL();\n\n  if (gl.isContextLost()) {\n    return false;\n  }\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return false;\n  }\n\n  this.focus_ = frameState.focus;\n\n  this.textureCache_.set((-frameState.index).toString(), null);\n  ++this.textureCacheFrameMarkerCount_;\n\n  this.dispatchComposeEvent_(_ol_render_EventType_.PRECOMPOSE, frameState);\n\n  /** @type {Array.<ol.LayerState>} */\n  var layerStatesToDraw = [];\n  var layerStatesArray = frameState.layerStatesArray;\n  _ol_array_.stableSort(layerStatesArray, _ol_renderer_Map_.sortByZIndex);\n\n  var viewResolution = frameState.viewState.resolution;\n  var i, ii, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) &&\n        layerState.sourceState == _ol_source_State_.READY) {\n      layerRenderer = /** @type {ol.renderer.webgl.Layer} */ (this.getLayerRenderer(layerState.layer));\n      if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n        layerStatesToDraw.push(layerState);\n      }\n    }\n  }\n\n  var width = frameState.size[0] * frameState.pixelRatio;\n  var height = frameState.size[1] * frameState.pixelRatio;\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  }\n\n  gl.bindFramebuffer(_ol_webgl_.FRAMEBUFFER, null);\n\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(_ol_webgl_.COLOR_BUFFER_BIT);\n  gl.enable(_ol_webgl_.BLEND);\n  gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n  for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n    layerState = layerStatesToDraw[i];\n    layerRenderer = /** @type {ol.renderer.webgl.Layer} */ (this.getLayerRenderer(layerState.layer));\n    layerRenderer.composeFrame(frameState, layerState, context);\n  }\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.calculateMatrices2D(frameState);\n\n  if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      _ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    frameState.postRenderFunctions.push(\n        /** @type {ol.PostRenderFunction} */ (this.expireCache_.bind(this))\n    );\n  }\n\n  if (!this.tileTextureQueue_.isEmpty()) {\n    frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n    frameState.animate = true;\n  }\n\n  this.dispatchComposeEvent_(_ol_render_EventType_.POSTCOMPOSE, frameState);\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n    layerFilter, thisArg2) {\n  var result;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  var viewState = frameState.viewState;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      var layerRenderer = this.getLayerRenderer(layer);\n      result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  var hasFeature = false;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  var viewState = frameState.viewState;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      var layerRenderer = this.getLayerRenderer(layer);\n      hasFeature =\n          layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n      if (hasFeature) {\n        return true;\n      }\n    }\n  }\n  return hasFeature;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n    layerFilter, thisArg2) {\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  var viewState = frameState.viewState;\n  var result;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      var layerRenderer = /** @type {ol.renderer.webgl.Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\nexport default _ol_renderer_webgl_Map_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../index.js';\nimport _ol_webgl_Fragment_ from '../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../webgl/vertex.js';\nvar _ol_renderer_webgl_tilelayershader_ = {};\n\n\n_ol_renderer_webgl_tilelayershader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\n_ol_renderer_webgl_tilelayershader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\nexport default _ol_renderer_webgl_tilelayershader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_renderer_webgl_tilelayershader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default _ol_renderer_webgl_tilelayershader_Locations_;","// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileRange_ from '../../tilerange.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_math_ from '../../math.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_renderer_webgl_tilelayershader_ from '../webgl/tilelayershader.js';\nimport _ol_renderer_webgl_tilelayershader_Locations_ from '../webgl/tilelayershader/locations.js';\nimport _ol_size_ from '../../size.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Tile} tileLayer Tile layer.\n * @api\n */\nvar _ol_renderer_webgl_TileLayer_ = function(mapRenderer, tileLayer) {\n\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, tileLayer);\n\n  /**\n   * @private\n   * @type {ol.webgl.Fragment}\n   */\n  this.fragmentShader_ = _ol_renderer_webgl_tilelayershader_.fragment;\n\n  /**\n   * @private\n   * @type {ol.webgl.Vertex}\n   */\n  this.vertexShader_ = _ol_renderer_webgl_tilelayershader_.vertex;\n\n  /**\n   * @private\n   * @type {ol.renderer.webgl.tilelayershader.Locations}\n   */\n  this.locations_ = null;\n\n  /**\n   * @private\n   * @type {ol.webgl.Buffer}\n   */\n  this.renderArrayBuffer_ = new _ol_webgl_Buffer_([\n    0, 0, 0, 1,\n    1, 0, 1, 1,\n    0, 1, 0, 0,\n    1, 1, 1, 0\n  ]);\n\n  /**\n   * @private\n   * @type {ol.TileRange}\n   */\n  this.renderedTileRange_ = null;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedFramebufferExtent_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_TileLayer_, _ol_renderer_webgl_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_TileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.TileLayer} The layer renderer.\n */\n_ol_renderer_webgl_TileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_webgl_TileLayer_(\n      /** @type {ol.renderer.webgl.Map} */ (mapRenderer),\n      /** @type {ol.layer.Tile} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.disposeInternal = function() {\n  var context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n  _ol_renderer_webgl_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  var mapRenderer = this.mapRenderer;\n\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {ol.TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        var loaded = mapRenderer.isTileTextureLoaded(tile);\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return loaded;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.handleWebGLContextLost = function() {\n  _ol_renderer_webgl_Layer_.prototype.handleWebGLContextLost.call(this);\n  this.locations_ = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  var mapRenderer = this.mapRenderer;\n  var gl = context.getGL();\n\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n\n  var tileLayer = /** @type {ol.layer.Tile} */ (this.getLayer());\n  var tileSource = tileLayer.getSource();\n  var tileGrid = tileSource.getTileGridForProjection(projection);\n  var z = tileGrid.getZForResolution(viewState.resolution);\n  var tileResolution = tileGrid.getResolution(z);\n\n  var tilePixelSize =\n      tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n  var pixelRatio = tilePixelSize[0] /\n      _ol_size_.toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n  var tilePixelResolution = tileResolution / pixelRatio;\n  var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n  var center = viewState.center;\n  var extent = frameState.extent;\n  var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n  var framebufferExtent;\n  if (this.renderedTileRange_ &&\n      this.renderedTileRange_.equals(tileRange) &&\n      this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n\n    var tileRangeSize = tileRange.getSize();\n\n    var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n    var framebufferDimension = _ol_math_.roundUpToPowerOfTwo(maxDimension);\n    var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    var origin = tileGrid.getOrigin(z);\n    var minX = origin[0] +\n        tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    var minY = origin[1] +\n        tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [\n      minX, minY,\n      minX + framebufferExtentDimension, minY + framebufferExtentDimension\n    ];\n\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(_ol_webgl_.COLOR_BUFFER_BIT);\n    gl.disable(_ol_webgl_.BLEND);\n\n    var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n    if (!this.locations_) {\n      this.locations_ = new _ol_renderer_webgl_tilelayershader_Locations_(gl, program);\n    }\n\n    context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(\n        this.locations_.a_position, 2, _ol_webgl_.FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, _ol_webgl_.FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n\n    /**\n     * @type {Object.<number, Object.<string, ol.Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    var allTilesLoaded = true;\n    var tmpExtent = _ol_extent_.createEmpty();\n    var tmpTileRange = new _ol_TileRange_(0, 0, 0, 0);\n    var childTileRange, drawable, fullyLoaded, tile, tileState;\n    var x, y, tileExtent;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          if (!_ol_extent_.intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n        tileState = tile.getState();\n        drawable = tileState == _ol_TileState_.LOADED ||\n            tileState == _ol_TileState_.EMPTY ||\n            tileState == _ol_TileState_.ERROR && !useInterimTilesOnError;\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n        tileState = tile.getState();\n        if (tileState == _ol_TileState_.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == _ol_TileState_.EMPTY ||\n                   (tileState == _ol_TileState_.ERROR &&\n                    !useInterimTilesOnError)) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n\n      }\n\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(_ol_array_.numberSafeCompareFunction);\n    var u_tileOffset = new Float32Array(4);\n    var i, ii, tileKey, tilesToDraw;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      tilesToDraw = tilesToDrawByZ[zs[i]];\n      for (tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n            framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n            framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n            framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n            framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, _ol_webgl_.LINEAR, _ol_webgl_.LINEAR);\n        gl.drawArrays(_ol_webgl_.TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  var tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {ol.Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == _ol_TileState_.LOADED &&\n            !mapRenderer.isTileTextureLoaded(tile) &&\n            !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n  this.updateLogos(frameState, tileSource);\n\n  var texCoordMatrix = this.texCoordMatrix;\n  _ol_transform_.reset(texCoordMatrix);\n  _ol_transform_.translate(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n          (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  if (viewState.rotation !== 0) {\n    _ol_transform_.rotate(texCoordMatrix, viewState.rotation);\n  }\n  _ol_transform_.scale(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n          (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  _ol_transform_.translate(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  var pixelOnMapScaled = [\n    pixel[0] / frameState.size[0],\n    (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  var pixelOnFrameBufferScaled = _ol_transform_.apply(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n  var pixelOnFrameBuffer = [\n    pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n    pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n  var gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  var imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\nexport default _ol_renderer_webgl_TileLayer_;","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_webgl_ReplayGroup_ from '../../render/webgl/replaygroup.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_vector_ from '../vector.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Vector} vectorLayer Vector layer.\n * @api\n */\nvar _ol_renderer_webgl_VectorLayer_ = function(mapRenderer, vectorLayer) {\n\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, vectorLayer);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedExtent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {function(ol.Feature, ol.Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {ol.render.webgl.ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * The last layer state.\n   * @private\n   * @type {?ol.LayerState}\n   */\n  this.layerState_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_VectorLayer_, _ol_renderer_webgl_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_VectorLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.VectorLayer} The layer renderer.\n */\n_ol_renderer_webgl_VectorLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_webgl_VectorLayer_(\n      /** @type {ol.renderer.webgl.Map} */ (mapRenderer),\n      /** @type {ol.layer.Vector} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.composeFrame = function(frameState, layerState, context) {\n  this.layerState_ = layerState;\n  var viewState = frameState.viewState;\n  var replayGroup = this.replayGroup_;\n  var size = frameState.size;\n  var pixelRatio = frameState.pixelRatio;\n  var gl = this.mapRenderer.getGL();\n  if (replayGroup && !replayGroup.isEmpty()) {\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n    replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n    gl.disable(gl.SCISSOR_TEST);\n  }\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.disposeInternal = function() {\n  var replayGroup = this.replayGroup_;\n  if (replayGroup) {\n    var context = this.mapRenderer.getContext();\n    replayGroup.getDeleteResourcesFunction(context)();\n    this.replayGroup_ = null;\n  }\n  _ol_renderer_webgl_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return undefined;\n  } else {\n    var context = this.mapRenderer.getContext();\n    var viewState = frameState.viewState;\n    var layer = this.getLayer();\n    var layerState = this.layerState_;\n    /** @type {Object.<string, boolean>} */\n    var features = {};\n    return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {ol.Feature|ol.render.Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = _ol_.getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return false;\n  } else {\n    var context = this.mapRenderer.getContext();\n    var viewState = frameState.viewState;\n    var layerState = this.layerState_;\n    return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  var coordinate = _ol_transform_.apply(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n  var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_webgl_VectorLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  var vectorLayer = /** @type {ol.layer.Vector} */ (this.getLayer());\n  var vectorSource = vectorLayer.getSource();\n\n  this.updateLogos(frameState, vectorSource);\n\n  var animating = frameState.viewHints[_ol_ViewHint_.ANIMATING];\n  var interacting = frameState.viewHints[_ol_ViewHint_.INTERACTING];\n  var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  var frameStateExtent = frameState.extent;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var vectorLayerRevision = vectorLayer.getRevision();\n  var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = _ol_renderer_vector_.defaultOrder;\n  }\n\n  var extent = _ol_extent_.buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      _ol_extent_.containsExtent(this.renderedExtent_, extent)) {\n    return true;\n  }\n\n  if (this.replayGroup_) {\n    frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n  }\n\n  this.dirty_ = false;\n\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(\n      _ol_renderer_vector_.getTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {ol.Feature} feature Feature.\n   * @this {ol.renderer.webgl.VectorLayer}\n   */\n  var renderFeature = function(feature) {\n    var styles;\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction.call(feature, resolution);\n    } else {\n      styleFunction = vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n    }\n    if (styles) {\n      var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  };\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<ol.Feature>} */\n    var features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {ol.Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n    features.sort(vectorLayerRenderOrder);\n    features.forEach(renderFeature, this);\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, renderFeature, this);\n  }\n  replayGroup.finish(context);\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  return true;\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.webgl.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_webgl_VectorLayer_.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i],\n          _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles,\n        _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n  }\n  return loading;\n};\nexport default _ol_renderer_webgl_VectorLayer_;\n","import _ol_ from './index.js';\nimport _ol_PluggableMap_ from './pluggablemap.js';\nimport _ol_PluginType_ from './plugintype.js';\nimport _ol_control_ from './control.js';\nimport _ol_interaction_ from './interaction.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_plugins_ from './plugins.js';\nimport _ol_renderer_canvas_ImageLayer_ from './renderer/canvas/imagelayer.js';\nimport _ol_renderer_canvas_Map_ from './renderer/canvas/map.js';\nimport _ol_renderer_canvas_TileLayer_ from './renderer/canvas/tilelayer.js';\nimport _ol_renderer_canvas_VectorLayer_ from './renderer/canvas/vectorlayer.js';\nimport _ol_renderer_canvas_VectorTileLayer_ from './renderer/canvas/vectortilelayer.js';\nimport _ol_renderer_webgl_ImageLayer_ from './renderer/webgl/imagelayer.js';\nimport _ol_renderer_webgl_Map_ from './renderer/webgl/map.js';\nimport _ol_renderer_webgl_TileLayer_ from './renderer/webgl/tilelayer.js';\nimport _ol_renderer_webgl_VectorLayer_ from './renderer/webgl/vectorlayer.js';\n\n\nif (_ol_.ENABLE_CANVAS) {\n  _ol_plugins_.register(_ol_PluginType_.MAP_RENDERER, _ol_renderer_canvas_Map_);\n  _ol_plugins_.registerMultiple(_ol_PluginType_.LAYER_RENDERER, [\n    _ol_renderer_canvas_ImageLayer_,\n    _ol_renderer_canvas_TileLayer_,\n    _ol_renderer_canvas_VectorLayer_,\n    _ol_renderer_canvas_VectorTileLayer_\n  ]);\n}\n\nif (_ol_.ENABLE_WEBGL) {\n  _ol_plugins_.register(_ol_PluginType_.MAP_RENDERER, _ol_renderer_webgl_Map_);\n  _ol_plugins_.registerMultiple(_ol_PluginType_.LAYER_RENDERER, [\n    _ol_renderer_webgl_ImageLayer_,\n    _ol_renderer_webgl_TileLayer_,\n    _ol_renderer_webgl_VectorLayer_\n  ]);\n}\n\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     var map = new ol.Map({\n *       view: new ol.View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new ol.layer.Tile({\n *           source: new ol.source.OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link ol.layer.Tile} to display\n * {@link ol.source.OSM} OSM data and render it to a DOM element with the\n * id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link ol.Overlay} for the difference). The map itself is placed in\n * a further element within the viewport.\n *\n * Layers are stored as a `ol.Collection` in layerGroups. A top-level group is\n * provided by the library. This is what is accessed by `getLayerGroup` and\n * `setLayerGroup`. Layers entered in the options are added to this group, and\n * `addLayer` and `removeLayer` change the layer collection in the group.\n * `getLayers` is a convenience function for `getLayerGroup().getLayers()`.\n * Note that `ol.layer.Group` is a subclass of `ol.layer.Base`, so layers\n * entered in the options or added with `addLayer` can be groups, which can\n * contain further groups, and so on.\n *\n * @constructor\n * @extends {ol.PluggableMap}\n * @param {olx.MapOptions} options Map options.\n * @fires ol.MapBrowserEvent\n * @fires ol.MapEvent\n * @fires ol.render.Event#postcompose\n * @fires ol.render.Event#precompose\n * @api\n */\nvar _ol_Map_ = function(options) {\n  options = _ol_obj_.assign({}, options);\n  if (!options.controls) {\n    options.controls = _ol_control_.defaults();\n  }\n  if (!options.interactions) {\n    options.interactions = _ol_interaction_.defaults();\n  }\n\n  _ol_PluggableMap_.call(this, options);\n};\n\n_ol_.inherits(_ol_Map_, _ol_PluggableMap_);\nexport default _ol_Map_;\n","import _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {ol.format.Feature} subclasses provide the ability to decode and encode\n * {@link ol.Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @constructor\n * @abstract\n * @api\n */\nvar _ol_format_Feature_ = function() {\n\n  /**\n   * @protected\n   * @type {ol.proj.Projection}\n   */\n  this.defaultDataProjection = null;\n\n  /**\n   * @protected\n   * @type {ol.proj.Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {olx.format.ReadOptions|undefined} Options.\n * @protected\n */\n_ol_format_Feature_.prototype.getReadOptions = function(source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n\n/**\n * Sets the `defaultDataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {olx.format.WriteOptions|olx.format.ReadOptions|undefined} options\n *     Options.\n * @protected\n * @return {olx.format.WriteOptions|olx.format.ReadOptions|undefined}\n *     Updated options.\n */\n_ol_format_Feature_.prototype.adaptOptions = function(options) {\n  return _ol_obj_.assign({\n    dataProjection: this.defaultDataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {ol.Extent} Tile extent.\n */\n_ol_format_Feature_.prototype.getLastExtent = function() {\n  return null;\n};\n\n\n/**\n * @abstract\n * @return {ol.format.FormatType} Format.\n */\n_ol_format_Feature_.prototype.getType = function() {};\n\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n */\n_ol_format_Feature_.prototype.readFeature = function(source, opt_options) {};\n\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n */\n_ol_format_Feature_.prototype.readFeatures = function(source, opt_options) {};\n\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_Feature_.prototype.readGeometry = function(source, opt_options) {};\n\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n */\n_ol_format_Feature_.prototype.readProjection = function(source) {};\n\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeFeature = function(feature, opt_options) {};\n\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeFeatures = function(features, opt_options) {};\n\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeGeometry = function(geometry, opt_options) {};\n\n\n/**\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(olx.format.WriteOptions|olx.format.ReadOptions)=} opt_options\n *     Options.\n * @return {ol.geom.Geometry|ol.Extent} Transformed geometry.\n * @protected\n */\n_ol_format_Feature_.transformWithOptions = function(\n    geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    _ol_proj_.get(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    _ol_proj_.get(opt_options.dataProjection) : null;\n  /**\n   * @type {ol.geom.Geometry|ol.Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !_ol_proj_.equivalent(featureProjection, dataProjection)) {\n    if (geometry instanceof _ol_geom_Geometry_) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n          write ? featureProjection : dataProjection,\n          write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because ol.format.GML treats extents\n      // as geometries\n      transformed = _ol_proj_.transformExtent(\n          geometry,\n          dataProjection,\n          featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    var power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n};\nexport default _ol_format_Feature_;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n"],"sourceRoot":""}