{"version":3,"sources":["webpack:///./node_modules/ol/index.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/geom/geometrytype.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/events/eventtype.js","webpack:///./node_modules/ol/tilestate.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/proj4.js","webpack:///./node_modules/ol/proj/projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/viewhint.js","webpack:///./node_modules/ol/object.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/mapbrowsereventtype.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/events/event.js","webpack:///./node_modules/ol/imagestate.js","webpack:///./node_modules/ol/interaction/interaction.js","webpack:///./node_modules/ol/collection.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/events/eventtarget.js","webpack:///./node_modules/ol/interaction/pointer.js","webpack:///./node_modules/ol/layer/property.js","webpack:///./node_modules/ol/geom/geometrylayout.js","webpack:///./node_modules/ol/layertype.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/extent/relationship.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/proj/units.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/layer.js","webpack:///./node_modules/ol/collectioneventtype.js","webpack:///./node_modules/ol/render/eventtype.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/source/state.js","webpack:///./node_modules/ol/geom/simplegeometry.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/tilerange.js","webpack:///./node_modules/ol/tilegrid/tilegrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/style/regularshape.js","webpack:///./node_modules/ol/style/circle.js","webpack:///./node_modules/ol/style/fill.js","webpack:///./node_modules/ol/style/style.js","webpack:///./node_modules/ol/disposable.js","webpack:///./node_modules/ol/objecteventtype.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/mapbrowserpointerevent.js","webpack:///./node_modules/ol/mapevent.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/structs/lrucache.js","webpack:///./node_modules/ol/geom/geometry.js","webpack:///./node_modules/ol/structs/rbush.js","webpack:///./node_modules/ol/style/stroke.js","webpack:///./node_modules/ol/extent/corner.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/attribution.js","webpack:///./node_modules/ol/source/source.js","webpack:///./node_modules/ol/style/image.js","webpack:///./node_modules/ol/source/tile.js","webpack:///./node_modules/ol/layer/base.js","webpack:///./node_modules/ol/geom/point.js","webpack:///./node_modules/ol/mapeventtype.js","webpack:///./node_modules/ol/observable.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/linearring.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/polygon.js","webpack:///./node_modules/ol/layer/vector.js","webpack:///./node_modules/ol/interaction/property.js","webpack:///./node_modules/ol/mapbrowserevent.js","webpack:///./node_modules/ol/style/iconimagecache.js","webpack:///./node_modules/ol/style.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/viewproperty.js","webpack:///./node_modules/ol/view.js","webpack:///./node_modules/ol/control/control.js","webpack:///./node_modules/ol/control/attribution.js","webpack:///./node_modules/ol/control/rotate.js","webpack:///./node_modules/ol/control/zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/format/formattype.js","webpack:///./node_modules/ol/xml.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/vectoreventtype.js","webpack:///./node_modules/ol/source/vector.js","webpack:///./node_modules/ol/tile.js","webpack:///./node_modules/ol/imagetile.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/triangulation.js","webpack:///./node_modules/ol/reproj/tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/tileeventtype.js","webpack:///./node_modules/ol/source/urltile.js","webpack:///./node_modules/ol/source/tileimage.js","webpack:///./node_modules/ol/source/xyz.js","webpack:///./node_modules/ol/source/osm.js","webpack:///./node_modules/ol/kinetic.js","webpack:///./node_modules/ol/interaction/doubleclickzoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/dragpan.js","webpack:///./node_modules/ol/interaction/dragrotate.js","webpack:///./node_modules/ol/render/box.js","webpack:///./node_modules/ol/interaction/dragbox.js","webpack:///./node_modules/ol/interaction/dragzoom.js","webpack:///./node_modules/ol/events/keycode.js","webpack:///./node_modules/ol/interaction/keyboardpan.js","webpack:///./node_modules/ol/interaction/keyboardzoom.js","webpack:///./node_modules/ol/interaction/mousewheelzoom.js","webpack:///./node_modules/ol/interaction/pinchrotate.js","webpack:///./node_modules/ol/interaction/pinchzoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/tilecache.js","webpack:///./node_modules/ol/layer/vectorrendertype.js","webpack:///./node_modules/ol/assertionerror.js","webpack:///./node_modules/ol/layer/tileproperty.js","webpack:///./node_modules/ol/layer/tile.js","webpack:///./node_modules/ol/interaction/translateeventtype.js","webpack:///./node_modules/ol/interaction/translate.js","webpack:///./node_modules/ol/style/iconanchorunits.js","webpack:///./node_modules/ol/style/iconimage.js","webpack:///./node_modules/ol/style/iconorigin.js","webpack:///./node_modules/ol/style/icon.js","webpack:///./node_modules/ol/pointer/eventtype.js","webpack:///./node_modules/ol/pointer/eventsource.js","webpack:///./node_modules/ol/pointer/mousesource.js","webpack:///./node_modules/ol/pointer/mssource.js","webpack:///./node_modules/ol/pointer/nativesource.js","webpack:///./node_modules/ol/pointer/pointerevent.js","webpack:///./node_modules/ol/pointer/touchsource.js","webpack:///./node_modules/ol/pointer/pointereventhandler.js","webpack:///./node_modules/ol/mapbrowsereventhandler.js","webpack:///./node_modules/ol/mapproperty.js","webpack:///./node_modules/ol/structs/priorityqueue.js","webpack:///./node_modules/ol/tilequeue.js","webpack:///./node_modules/ol/layer/group.js","webpack:///./node_modules/ol/plugintype.js","webpack:///./node_modules/ol/plugins.js","webpack:///./node_modules/ol/renderer/type.js","webpack:///./node_modules/ol/pluggablemap.js","webpack:///./node_modules/ol/imagebase.js","webpack:///./node_modules/ol/imagecanvas.js","webpack:///./node_modules/ol/render/event.js","webpack:///./node_modules/ol/render/vectorcontext.js","webpack:///./node_modules/ol/render/canvas/immediate.js","webpack:///./node_modules/ol/renderer/layer.js","webpack:///./node_modules/ol/renderer/canvas/layer.js","webpack:///./node_modules/ol/renderer/canvas/intermediatecanvas.js","webpack:///./node_modules/ol/renderer/canvas/imagelayer.js","webpack:///./node_modules/ol/renderer/map.js","webpack:///./node_modules/ol/renderer/canvas/map.js","webpack:///./node_modules/ol/renderer/canvas/tilelayer.js","webpack:///./node_modules/ol/render/replaygroup.js","webpack:///./node_modules/ol/render/replaytype.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/replay.js","webpack:///./node_modules/ol/render/canvas/imagereplay.js","webpack:///./node_modules/ol/render/canvas/linestringreplay.js","webpack:///./node_modules/ol/render/canvas/polygonreplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/textplacement.js","webpack:///./node_modules/ol/render/canvas/textreplay.js","webpack:///./node_modules/ol/render/canvas/replaygroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/vectorlayer.js","webpack:///./node_modules/ol/layer/vectortilerendertype.js","webpack:///./node_modules/ol/renderer/canvas/vectortilelayer.js","webpack:///./node_modules/ol/webgl/shader.js","webpack:///./node_modules/ol/webgl/fragment.js","webpack:///./node_modules/ol/webgl/vertex.js","webpack:///./node_modules/ol/render/webgl/circlereplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/circlereplay/defaultshader/locations.js","webpack:///./node_modules/ol/vec/mat4.js","webpack:///./node_modules/ol/render/webgl/replay.js","webpack:///./node_modules/ol/render/webgl.js","webpack:///./node_modules/ol/webgl/buffer.js","webpack:///./node_modules/ol/render/webgl/circlereplay.js","webpack:///./node_modules/ol/render/webgl/texturereplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/texturereplay/defaultshader/locations.js","webpack:///./node_modules/ol/webgl/contexteventtype.js","webpack:///./node_modules/ol/webgl/context.js","webpack:///./node_modules/ol/render/webgl/texturereplay.js","webpack:///./node_modules/ol/render/webgl/imagereplay.js","webpack:///./node_modules/ol/geom/flat/topology.js","webpack:///./node_modules/ol/render/webgl/linestringreplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/linestringreplay/defaultshader/locations.js","webpack:///./node_modules/ol/render/webgl/linestringreplay.js","webpack:///./node_modules/ol/render/webgl/polygonreplay/defaultshader.js","webpack:///./node_modules/ol/render/webgl/polygonreplay/defaultshader/locations.js","webpack:///./node_modules/ol/structs/linkedlist.js","webpack:///./node_modules/ol/render/webgl/polygonreplay.js","webpack:///./node_modules/ol/style/atlas.js","webpack:///./node_modules/ol/style/atlasmanager.js","webpack:///./node_modules/ol/render/webgl/textreplay.js","webpack:///./node_modules/ol/render/webgl/replaygroup.js","webpack:///./node_modules/ol/render/webgl/immediate.js","webpack:///./node_modules/ol/renderer/webgl/defaultmapshader.js","webpack:///./node_modules/ol/renderer/webgl/defaultmapshader/locations.js","webpack:///./node_modules/ol/renderer/webgl/layer.js","webpack:///./node_modules/ol/renderer/webgl/imagelayer.js","webpack:///./node_modules/ol/renderer/webgl/map.js","webpack:///./node_modules/ol/renderer/webgl/tilelayershader.js","webpack:///./node_modules/ol/renderer/webgl/tilelayershader/locations.js","webpack:///./node_modules/ol/renderer/webgl/tilelayer.js","webpack:///./node_modules/ol/renderer/webgl/vectorlayer.js","webpack:///./node_modules/ol/map.js","webpack:///./node_modules/ol/feature.js","webpack:///./node_modules/ol/format/feature.js","webpack:///./node_modules/quickselect/quickselect.js"],"names":["_ol_","ASSUME_TOUCH","DEFAULT_MAX_ZOOM","DEFAULT_MIN_ZOOM","DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD","DEFAULT_TILE_SIZE","DEFAULT_WMS_VERSION","ENABLE_CANVAS","ENABLE_PROJ4JS","ENABLE_RASTER_REPROJECTION","ENABLE_WEBGL","DEBUG_WEBGL","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","MOUSEWHEELZOOM_MAXDELTA","OVERVIEWMAP_MAX_RATIO","OVERVIEWMAP_MIN_RATIO","RASTER_REPROJECTION_MAX_SOURCE_TILES","RASTER_REPROJECTION_MAX_SUBDIVISION","RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH","SIMPLIFY_TOLERANCE","WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK","VERSION","WEBGL_MAX_TEXTURE_SIZE","WEBGL_EXTENSIONS","inherits","childCtor","parentCtor","prototype","Object","create","constructor","nullFunction","getUid","obj","ol_uid","uidCounter_","__webpack_exports__","_ol_extent_","boundingExtent","coordinates","extent","createEmpty","i","ii","length","extendCoordinate","boundingExtentXYs_","xs","ys","opt_extent","minX","Math","min","apply","minY","maxX","max","maxY","createOrUpdate","buffer","value","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","_extent_relationship_js__WEBPACK_IMPORTED_MODULE_2__","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","equals","extend","extendXY","forEachCorner","callback","opt_this","val","call","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","_extent_corner_js__WEBPACK_IMPORTED_MODULE_1__","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","_ol_events_","bindListener_","listenerObj","boundListener","evt","listener","bindTo","target","callOnce","unlistenByKey","findListener_","listeners","opt_setDeleteIndex","deleteIndex","getListeners","type","listenerMap","ol_lm","undefined","getListenerMap_","removeListeners_","removeEventListener","_obj_js__WEBPACK_IMPORTED_MODULE_0__","clear","keys","listen","opt_once","addEventListener","push","listenOnce","unlisten","key","indexOf","splice","unlistenAll","_ol_transform_","tmp_","Array","reset","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","a","b","c","d","e","f","setFromArray","rotate","angle","scale","translate","compose","dx1","dy1","sx","sy","dx2","dy2","invert","det","determinant","mat","_ol_webgl_","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS_","getContext","canvas","opt_attributes","context","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","_ol_render_canvas_","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","_structs_lrucache_js__WEBPACK_IMPORTED_MODULE_3__","checkedFonts_","measureContext_","textHeights_","checkFont","interval","referenceWidth","retries","checked","font","text","isAvailable","fontFamily","getMeasureContext","measureText","width","available","check","done","_obj_js__WEBPACK_IMPORTED_MODULE_2__","window","clearInterval","fontSpec","fontFamilies","_css_js__WEBPACK_IMPORTED_MODULE_0__","getFontFamilies","setInterval","_dom_js__WEBPACK_IMPORTED_MODULE_1__","createCanvasContext2D","measureTextHeight","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","measureContext","rotateAtOffset","offsetX","offsetY","resetTransform_","_transform_js__WEBPACK_IMPORTED_MODULE_4__","drawImage","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","CHANGE","CLEAR","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","IDLE","LOADING","LOADED","EMPTY","ABORT","_ol_math_","clamp","cosh","exp","roundUpToPowerOfTwo","pow","ceil","log","LN2","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","n","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","l","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","_ol_obj_","assign","var_sources","TypeError","output","arguments","source","hasOwnProperty","object","property","getValues","values","_ol_array_","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","find","func","arr1","arr2","len1","stableSort","compareFnc","index","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","_ol_asserts_","assertion","errorCode","_assertionerror_js__WEBPACK_IMPORTED_MODULE_0__","_ol_Sphere_","radius","this","geodesicArea","getArea_","haversineDistance","getDistance_","distance","bearing","lat1","math","lon1","dByR","lat","asin","lon","atan2","DEFAULT_RADIUS","getLength","geometry","opt_options","coords","jj","options","projection","getType","geometrytype","getCoordinates","getLength_","geometries","getGeometries","Error","lat2","deltaLatBy2","deltaLonBy2","sqrt","len","sphere","_ol_proj_proj4_","cache_","proj4","get","proj_proj4","_ol_proj_Projection_","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","ol","proj4js","def","defs","axis","to_meter","units","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","proj_units","METERS_PER_UNIT","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","proj_projection","_ol_proj_EPSG3857_","Projection_","METERS","EXTENT","WORLD_EXTENT","point","RADIUS","HALF_SIZE","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg3857","_ol_proj_EPSG4326_","opt_axisOrientation","DEGREES","epsg4326","_ol_proj_projections_","add","proj_projections","_ol_proj_transforms_","destination","sourceCode","destinationCode","transforms","proj_transforms","_ol_proj_","SPHERE_","setProj4","opt_units","pointResolution","getter","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","forEach","cloneTransform","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","addProjection","clearAllProjections","createProjection","defaultCode","addCoordinateTransforms","forward","inverse","sourceProj","destProj","createTransformFromCoordinateTransform","fromLonLat","opt_projection","toLonLat","lonLat","projectionLike","equivalent","equalUnits","getTransform","sourceProjection","destinationProjection","sourceDef","destinationDef","proj4Transform","identityTransform","transformExtent","ol_extent","transformWithProjections","addCommon","_ol_dom_","opt_width","opt_height","outerWidth","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","ANIMATING","INTERACTING","_ol_Object_","opt_values","_observable_js__WEBPACK_IMPORTED_MODULE_2__","_index_js__WEBPACK_IMPORTED_MODULE_0__","values_","setProperties","changeEventTypeCache_","getChangeEventType","getKeys","getProperties","_obj_js__WEBPACK_IMPORTED_MODULE_4__","notify","oldValue","eventType","dispatchEvent","Event","_objecteventtype_js__WEBPACK_IMPORTED_MODULE_1__","PROPERTYCHANGE","opt_silent","unset","_events_event_js__WEBPACK_IMPORTED_MODULE_3__","_ol_functions_","TRUE","FALSE","_ol_MapBrowserEventType_","SINGLECLICK","_events_eventtype_js__WEBPACK_IMPORTED_MODULE_0__","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_ol_has_","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","CANVAS","setLineDash","DEVICE_ORIENTATION","GEOLOCATION","TOUCH","POINTER","MSPOINTER","WEBGL","textureSize","hasWebGL","extensions","gl","_webgl_js__WEBPACK_IMPORTED_MODULE_1__","failIfMajorPerformanceCaveat","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","_ol_events_Event_","propagationStopped","preventDefault","stopPropagation","_math_js__WEBPACK_IMPORTED_MODULE_4__","__webpack_require__","_ol_interaction_Interaction_","_object_js__WEBPACK_IMPORTED_MODULE_1__","map_","setActive","handleEvent","getActive","_interaction_property_js__WEBPACK_IMPORTED_MODULE_3__","ACTIVE","getMap","active","setMap","map","pan","view","delta","opt_duration","currentCenter","constrainCenter","animate","duration","easing","_easing_js__WEBPACK_IMPORTED_MODULE_2__","linear","setCenter","opt_anchor","constrainRotation","rotateWithoutConstraints","currentRotation","getRotation","anchor","easeOut","zoom","opt_direction","constrainResolution","zoomWithoutConstraints","zoomByDelta","currentResolution","getResolution","resolutions","getResolutions","getMinResolution","getMaxResolution","calculateCenterZoom","setResolution","_events_event_js__WEBPACK_IMPORTED_MODULE_4__","_ol_Collection_","opt_array","_object_js__WEBPACK_IMPORTED_MODULE_3__","unique_","unique","array_","assertUnique_","updateLength_","pop","fn","bind","array","getArray","item","Property_","LENGTH","insertAt","elem","_collectioneventtype_js__WEBPACK_IMPORTED_MODULE_2__","ADD","removeAt","prev","REMOVE","setAt","opt_except","_assertionerror_js__WEBPACK_IMPORTED_MODULE_1__","opt_element","_ol_geom_flat_transform_","transform2D","opt_dest","dest","anchorX","anchorY","_ol_events_EventTarget_","_disposable_js__WEBPACK_IMPORTED_MODULE_1__","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","disposeInternal","_events_js__WEBPACK_IMPORTED_MODULE_2__","hasListener","opt_type","_ol_interaction_Pointer_","_interaction_interaction_js__WEBPACK_IMPORTED_MODULE_4__","handleDownEvent_","handleDownEvent","handleDragEvent_","handleDragEvent","handleMoveEvent_","handleMoveEvent","handleUpEvent_","handleUpEvent","handlingDownUpSequence","trackedPointers_","targetPointers","centroid","pointerEvents","clientX","clientY","isPointerDraggingEvent_","mapBrowserEvent","_mapbrowsereventtype_js__WEBPACK_IMPORTED_MODULE_2__","updateTrackedPointers_","pointerEvent","id","pointerId","toString","_obj_js__WEBPACK_IMPORTED_MODULE_5__","_functions_js__WEBPACK_IMPORTED_MODULE_1__","_mapbrowserpointerevent_js__WEBPACK_IMPORTED_MODULE_3__","stopEvent","handledUp","handled","shouldStopEvent","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","XY","XYZ","XYM","XYZM","IMAGE","TILE","VECTOR_TILE","VECTOR","_ol_easing_","easeIn","inAndOut","upAndDown","_ol_color_","HEX_COLOR_RE_","NAMED_COLOR_RE_","asArray","color","fromString","asString","fromNamed","rgb","cache","cacheSize","s","fromStringInternal_","g","parts","exec","hasAlpha","substr","split","Number","normalize","opt_color","result","_math_js__WEBPACK_IMPORTED_MODULE_1__","_ol_proj_Units_","FEET","PIXELS","TILE_PIXELS","USFEET","_ol_css_","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","family","_ol_layer_Layer_","baseOptions","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_layer_base_js__WEBPACK_IMPORTED_MODULE_4__","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_0__","_layer_property_js__WEBPACK_IMPORTED_MODULE_5__","handleSourcePropertyChange_","setSource","_index_js__WEBPACK_IMPORTED_MODULE_2__","visibleAtResolution","layerState","visible","minResolution","maxResolution","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","_source_state_js__WEBPACK_IMPORTED_MODULE_8__","UNDEFINED","handleSourceChange_","changed","_events_eventtype_js__WEBPACK_IMPORTED_MODULE_1__","_render_eventtype_js__WEBPACK_IMPORTED_MODULE_7__","PRECOMPOSE","managed","zIndex","frameState","layerStatesArray","layerStates","render","POSTCOMPOSE","RENDER","_ol_colorlike_","asColorLike","isColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","CanvasPattern","CanvasGradient","_ol_tilecoord_","z","opt_tileCoord","getKeyZXY","getKey","tileCoord","fromKey","hash","quadKey","charCode","digits","mask","String","fromCharCode","join","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","_ol_size_","opt_size","hasArea","ratio","toSize","READY","_ol_geom_SimpleGeometry_","_geom_geometry_js__WEBPACK_IMPORTED_MODULE_3__","layout","_geom_geometrylayout_js__WEBPACK_IMPORTED_MODULE_4__","getLayoutForStride_","getStrideForLayout","computeExtent","_extent_js__WEBPACK_IMPORTED_MODULE_2__","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinatesInternal","setCoordinates","opt_layout","setLayout","nesting","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_5__","opt_sy","simpleGeometry","_ol_string_","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","n2","string","_ol_coordinate_","closestOnCircle","circle","getRadius","closestOnSegment","segment","along","createStringXY","opt_fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","floor","sec","charAt","format","template","replace","coordinate1","coordinate2","cosAngle","sinAngle","sub","coord1","coord2","squaredDistanceToSegment","toStringHDMS","_ol_geom_flat_contains_","linearRingContainsExtent","_extent_js__WEBPACK_IMPORTED_MODULE_0__","linearRingContainsXY","wn","linearRingsContainsXY","ends","linearRingssContainsXY","endss","_ol_TileRange_","contains","containsTileRange","_ol_tilegrid_TileGrid_","zoomFactor","minZoom","resolutions_","asserts","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","tilerange","calculateTileRanges_","tmpTileCoord_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","ol_size","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","tilecoord","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid","_ol_tilegrid_","getForProjection","createForProjection","wrapX","projectionExtent","extentFromProjection","worldWidth","worldsAway","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","extent_corner","resolutionsFromExtent","createXYZ","proj","half","_ol_style_RegularShape_","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","snapToPixel","rotateWithView","style_image","getFill","getPoints","getRadius2","getAngle","getSnapToPixel","getStroke","getRotateWithView","setOpacity","getOpacity","setScale","getScale","getAnchor","getHitDetectionImage","pixelRatio","getImage","getImageSize","getHitDetectionImageSize","getImageState","imagestate","listenImageChange","thisArg","load","unlistenImageChange","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","colorlike","getLineDash","getLineDashOffset","has","getLineJoin","getLineCap","getMiterLimit","renderOptions","dom","draw_","createHitDetectionCanvas_","round","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","regularshape","_ol_style_Circle_","setRadius","_ol_style_Fill_","color_","checksum_","setColor","ol_color","style_fill","_ol_style_Style_","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","zIndex_","getGeometry","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","createFunction","styleFunction","styles","default_","defaultFunction","style_stroke","createDefaultEditing","white","blue","concat","_ol_Disposable_","disposed_","dispose","_ol_geom_flat_reverse_","flat_reverse","_ol_geom_flat_orient_","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingss","_ol_RotationConstraint_","disable","none","createSnapToN","theta","createSnapToZero","opt_tolerance","tolerance","_math_js__WEBPACK_IMPORTED_MODULE_0__","_ol_MapBrowserPointerEvent_","opt_dragging","opt_frameState","_mapbrowserevent_js__WEBPACK_IMPORTED_MODULE_1__","originalEvent","_ol_MapEvent_","_events_event_js__WEBPACK_IMPORTED_MODULE_1__","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","exports","_ol_geom_flat_inflate_","opt_coordinates","coordinatess","opt_coordinatess","coordinatesss","opt_coordinatesss","_ol_structs_LRUCache_","opt_highWaterMark","_events_eventtarget_js__WEBPACK_IMPORTED_MODULE_2__","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","_events_eventtype_js__WEBPACK_IMPORTED_MODULE_3__","containsKey","entry","value_","key_","newer","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","older","peekLast","peekLastKey","peekFirstKey","prune","_ol_geom_Geometry_","extentRevision_","tmpTransform_","_transform_js__WEBPACK_IMPORTED_MODULE_7__","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","_functions_js__WEBPACK_IMPORTED_MODULE_3__","simplify","intersectsExtent","tmpTransform","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_proj_units_js__WEBPACK_IMPORTED_MODULE_6__","inCoordinates","outCoordinates","pixelExtent","projectedExtent","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_ol_structs_RBush_","opt_maxEntries","rbush_","rbush__WEBPACK_IMPORTED_MODULE_1___default","items_","insert","extents","items","uid","update","bbox","getAll","all","getInExtent","search","forEach_","forEachInExtent","_obj_js__WEBPACK_IMPORTED_MODULE_3__","rbush","_ol_style_Stroke_","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","module","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","p","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","stack","_all","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","_ol_geom_flat_simplify_","lineString","highQuality","opt_simplifiedFlatCoordinates","simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckers","simplifiedEnds","douglasPeuckerss","simplifiedEndss","snap","quantize","quantizes","quantizess","_ol_geom_flat_deflate_","opt_ends","opt_endss","_ol_geom_flat_area_","linearRing","twiceArea","linearRings","linearRingss","_ol_Attribution_","html_","html","tileRanges_","tileRanges","getHTML","intersectsAnyTileRange","zKey","testTileRange","extentTileRange","ol_attribution","_ol_source_Source_","projection_","attributions_","attributions2_","adaptAttributions_","attributions","logo_","logo","state_","state","wrapX_","attributionLike","attribution","forEachFeatureAtCoordinate","getAttributions","getAttributions2","getLogo","getProjection","getWrapX","refresh","setAttributions","setLogo","setState","_ol_style_Image_","opacity_","rotateWithView_","rotation_","scale_","snapToPixel_","setRotateWithView","setRotation","setSnapToPixel","_ol_source_Tile_","_source_source_js__WEBPACK_IMPORTED_MODULE_6__","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","_tilecache_js__WEBPACK_IMPORTED_MODULE_1__","tmpSize","tileOptions","transition","expireCache","usedTiles","getTileCacheForProjection","forEachLoadedTile","tile","tileCoordKey","loaded","covered","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","_tilestate_js__WEBPACK_IMPORTED_MODULE_2__","getGutter","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","_tilegrid_js__WEBPACK_IMPORTED_MODULE_8__","thisProj","_proj_js__WEBPACK_IMPORTED_MODULE_4__","getTilePixelRatio","getTilePixelSize","_size_js__WEBPACK_IMPORTED_MODULE_5__","getTileCoordForTileUrlFunction","useTile","_ol_layer_Base_","properties","_layer_property_js__WEBPACK_IMPORTED_MODULE_2__","layer","_math_js__WEBPACK_IMPORTED_MODULE_3__","sourceState","getVisible","setMaxResolution","setMinResolution","setVisible","zindex","_ol_geom_Point_","_geom_simplegeometry_js__WEBPACK_IMPORTED_MODULE_4__","setFlatCoordinates","_math_js__WEBPACK_IMPORTED_MODULE_6__","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_geom_geometrytype_js__WEBPACK_IMPORTED_MODULE_3__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","_geom_geometrylayout_js__WEBPACK_IMPORTED_MODULE_2__","POSTRENDER","MOVESTART","MOVEEND","_ol_Observable_","revision_","unByKey","_events_js__WEBPACK_IMPORTED_MODULE_1__","on","once","un","_ol_geom_flat_closest_","offset1","offset2","getMaxSquaredDelta","maxSquaredDelta","squaredDelta","getsMaxSquaredDelta","getssMaxSquaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","getsClosestPoint","getssClosestPoint","closest","_ol_geom_LinearRing_","simplegeometry","maxDelta_","maxDeltaRevision_","flat_area","inflate","simplifiedLinearRing","geometrylayout","deflate","linearring","_ol_geom_flat_interiorpoint_","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","interiorpoint","_ol_geom_flat_segments_","ret","point1","point2","segments","_ol_geom_flat_intersectsextent_","coordinatesExtent","lineStrings","intersectsextent","_ol_geom_Polygon_","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","orient","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","simplifiedPolygon","circular","opt_n","fromExtent","fromCircle","opt_sides","opt_angle","sides","arrayLength","makeRegular","startAngle","_ol_layer_Vector_","renderBuffer","updateWhileAnimating","updateWhileInteracting","_layer_layer_js__WEBPACK_IMPORTED_MODULE_2__","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","_layer_vectorrendertype_js__WEBPACK_IMPORTED_MODULE_3__","_layertype_js__WEBPACK_IMPORTED_MODULE_1__","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","RENDER_ORDER","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","_style_style_js__WEBPACK_IMPORTED_MODULE_5__","getRenderMode","_ol_MapBrowserEvent_","browserEvent","_mapevent_js__WEBPACK_IMPORTED_MODULE_1__","pixel","getEventPixel","getCoordinateFromPixel","dragging","_ol_style_IconImageCache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","setSize","maxCacheSize","iconimagecache","_ol_style_","iconImageCache","_ol_CenterConstraint_","createExtent","centerconstraint","_ol_ResolutionConstraint_","createSnapToResolutions","power","createSnapToPower","opt_maxLevel","oldLevel","newLevel","resolutionconstraint","viewproperty","CENTER","RESOLUTION","ROTATION","_ol_View_","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint_","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint_","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint_","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","isDef","setZoom","Date","now","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","viewhint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterRotate","filter","Boolean","requestAnimationFrame","getSizeFromViewport_","selector","querySelector","metrics","opt_delta","getConstraints","getHints","opt_hints","calculateExtent","getZoomForResolution","setMaxZoom","setMinZoom","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setTimeout","centerOn","centerX","centerY","hint","defaultMaxResolution","defaultMinResolution","enableRotation","rotationconstraint","_ol_control_Control_","target_","listenerKeys","setTarget","events","getOverlayContainerStopEvent","mapeventtype","getElementById","control","_ol_control_Attribution_","ulElement_","logoLi_","display","collapsed_","collapsed","collapsible_","collapsible","className","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","button","setAttribute","title","eventtype","handleClick_","cssClasses","css","renderedAttributions_","renderedVisible_","logoElements_","getSourceAttributions_","lookup","visibleAttributions","viewState","layer_layer","attributionGetter","mapEvent","updateElement_","innerHTML","classList","logos","insertLogos_","logoElement","logoKey","logoElements","logoValue","HTMLElement","Image","href","handleToggle_","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","_ol_control_Rotate_","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","getView","msTransform","webkitTransform","_ol_control_Zoom_","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","_ol_control_","defaults","controls","collection","zoomOptions","rotateOptions","attributionOptions","formattype","JSON","TEXT","XML","_ol_xml_","DOCUMENT","implementation","createDocument","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","Document","getAttributeNS","name","setAttributeNS","parse","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","ol_array","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","_ol_featureloader_","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","features","dataProjection","addFeatures","featureloader","_ol_loadingstrategy_","loadingstrategy","vectoreventtype","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","_ol_source_Vector_","source_source","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","ol_collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","objecteventtype","valid","getId","newFeatures","geometryFeatures","modifyingCollection","collectioneventtype","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","ol_obj","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","functions","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","opt_feature","events_event","_ol_Tile_","eventtarget","interimTile","transition_","transitionStarts_","getInterimTile","tilestate","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","ol_tile","_ol_ImageTile_","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getBlankImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillRect","imagetile","_ol_reproj_","calculateSourceResolution","targetProj","ol_proj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint_","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","p0","p1","p2","moveTo","clip","restore","reproj","_ol_reproj_Triangulation_","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_triangulation","_ol_reproj_Tile_","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","pixelRatio_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","reproj_tile","_ol_TileUrlFunction_","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","charCodeAt","stopCharCode","stop","tileurlfunction","tileeventtype","TILELOADSTART","TILELOADEND","TILELOADERROR","_ol_source_UrlTile_","source_tile","tileUrlFunction","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","tileState","setTileLoadFunction","opt_key","pruneExceptNewestZ","urltile","_ol_source_TileImage_","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutterInternal","projKey","ol_tilegrid","tilecache","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","imageTile","tileimage","_ol_source_XYZ_","xyz","_ol_source_OSM_","ATTRIBUTION","_ol_Kinetic_","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","getDistance","ol_kinetic","_ol_interaction_DoubleClickZoom_","delta_","interaction","mapbrowsereventtype","shiftKey","doubleclickzoom","_ol_events_condition_","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","events_condition","_ol_interaction_DragPan_","pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","ol_coordinate","centerpx","getPixelFromCoordinate","dragpan","_ol_interaction_DragRotate_","lastAngle_","dragrotate","_ol_render_Box_","element_","startPixel_","endPixel_","disposable","startPixel","endPixel","top","getOverlayContainer","setPixels","createOrUpdateGeometry","box","_ol_interaction_DragBox_","box_","minArea_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","EventType_","BOXDRAG","onBoxEnd","BOXEND","BOXSTART","dragbox","_ol_interaction_DragZoom_","out_","out","mapExtent","boxPixelExtent","factor","dragzoom","keycode","UP","DOWN","_ol_interaction_KeyboardPan_","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","keyboardpan","_ol_interaction_KeyboardZoom_","keyboardzoom","_ol_interaction_MouseWheelZoom_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","Mode_","TRACKPAD","clearTimeout","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","mousewheelzoom","_ol_interaction_PinchRotate_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getViewport","getBoundingClientRect","pinchrotate","_ol_interaction_PinchZoom_","lastDistance_","lastScaleDelta_","scaleDelta","pinchzoom","_ol_interaction_","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_ol_TileCache_","_structs_lrucache_js__WEBPACK_IMPORTED_MODULE_1__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","_ol_AssertionError_","message","tileproperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_ol_layer_Tile_","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","layertype","getPreload","getUseInterimTilesOnError","translateeventtype","TRANSLATESTART","TRANSLATING","TRANSLATEEND","_ol_interaction_Translate_","layerFilter","lastCoordinate_","features_","layers","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","forEachFeatureAtPixel","getHitTolerance","setHitTolerance","oldMap","updateState_","iconanchorunits","FRACTION","_ol_style_IconImage_","imageState","hitDetectionImage_","imageState_","tainting_","determineTainting_","getImageData","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","iconimage","iconorigin","_ol_style_Icon_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","iconImageSize","_ol_pointer_EventSource_","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","eventsource","_ol_pointer_MouseSource_","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","DEDUP_DIST","isEventSimulatedFromTouch_","inEvent","lts","prepareEvent","cloneEvent","pd","cancel","down","move","up","cleanupMouse","enterOver","leaveOut","mousesource","_ol_pointer_MsSource_","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","cleanup","makeEvent","mssource","_ol_pointer_NativeSource_","pointerdown","pointerDown","pointermove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","nativesource","_ol_pointer_PointerEvent_","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointerevent","_ol_pointer_TouchSource_","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","DEDUP_TIMEOUT","CLICK_COUNT_TIMEOUT","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","changedTouches","findTouch_","touchList","searchId","vacuumTouches_","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","touchsource","_ol_pointer_PointerEventHandler_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","CLONE_PROPS","fireEvent","contains_","container","contained","inType","wrapMouseEvent","pointereventhandler","_ol_MapBrowserEventHandler_","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","mapbrowserpointerevent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","mapbrowsereventhandler","mapproperty","LAYERGROUP","SIZE","TARGET","VIEW","_ol_structs_PriorityQueue_","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","priorityqueue","_ol_TileQueue_","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","events_eventtype","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","tilequeue","_ol_layer_Group_","base","layersListenerKeys_","listenerKeys_","LAYERS","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","source_state","layer_group","plugintype","MAP_RENDERER","LAYER_RENDERER","_ol_plugins_","mapRendererPlugins_","getMapRendererPlugins","layerRendererPlugins_","getLayerRendererPlugins","register","plugin","registerMultiple","plugins","ol_plugins","renderer_type","_ol_PluggableMap_","optionsInternal","createOptionsInternal","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","logos_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","ol_transform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","overlays_","overlays","overlayIdIndex_","mapRendererPlugin","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","getFeaturesAtPixel","forEachLayerAtPixel","opt_layerFilter","opt_this2","thisArg2","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","eventPosition","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapbrowserevent","interactionsArray","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","layerGroup","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","pixelResolution","skippedFeatureUids","renderFrame","mapevent","setLayerGroup","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","DEFAULT_RENDERER_TYPES","LOGO_URL","rendererTypes","ol_view","mapRendererPlugins","outer","rendererType","candidate","pluggablemap","_ol_ImageBase_","getPixelRatio","imagebase","_ol_ImageCanvas_","opt_loader","error_","getError","handleLoad_","err","imagecanvas","_ol_render_Event_","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","render_event","_ol_render_VectorContext_","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","vectorcontext","_ol_render_canvas_Immediate_","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","flat_transform","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","render_canvas","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","immediate","_ol_renderer_Layer_","observable","layer_","createLoadedTileFinder","tiles","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","scheduleExpireCache","tileSource","postRenderFunction","updateLogos","updateUsedTiles","manageTilePyramid","currentZ","opt_tileCallback","renderer_layer","_ol_renderer_canvas_Layer_","renderedResolution","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","composeEvent","forEachLayerAtCoordinate","postCompose","render_eventtype","preCompose","dispatchRenderEvent","composeFrame","prepareFrame","canvas_layer","_ol_renderer_canvas_IntermediateCanvas_","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","clearRect","imageData","intermediatecanvas","_ol_renderer_canvas_ImageLayer_","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","vectorrendertype","mapRenderer","candidates","setVectorRenderer","viewCenter","viewResolution","imageSource","renderedExtent","vectorRenderer","imageFrameState","skippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","imagelayer","_ol_renderer_Map_","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","expireIconCache_","ol_style","translatedCoordinate","layerRenderer","getLayerRenderer","layerKey","layerRendererPlugins","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","sortByZIndex","state1","state2","renderer_map","_ol_renderer_canvas_Map_","insertBefore","childNodes","numLayers","canvas_map","_ol_renderer_canvas_TileLayer_","tileLayer","oversampling_","renderedExtent_","renderedRevision","renderedTiles","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","sourceRevision","oversampling","tilesToDrawByZ","findLoadedTiles","tmpTileRange","newTiles","childTileRange","animatingOrInteracting","tilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","drawTileImage","alphaChanged","tilelayer","_ol_render_ReplayGroup_","getReplay","replayType","replaygroup","replaytype","DEFAULT","_ol_geom_flat_length_","perimeter","flat_length","_ol_geom_flat_textpath_","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","unshift","textpath","canvas_instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","_ol_render_replay_","ORDER","TEXT_ALIGN","render_replay","_ol_render_canvas_Replay_","maxExtent","declutterTree","tmpExtent_","maxLineWidth","fillOrigin_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","applyFill","fillExtent","applyStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","canvas_replay","_ol_render_canvas_ImageReplay_","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","imagereplay","_ol_render_canvas_LineStringReplay_","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","linestringreplay","_ol_render_canvas_PolygonReplay_","drawFlatCoordinatess_","numEnds","beginPathInstruction","closePathInstruction","setFillStrokeStyles_","circleInstruction","polygonreplay","_ol_geom_flat_straightchunk_","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","straightchunk","textplacement","LINE","_ol_render_canvas_TextReplay_","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","measureTextWidths","lines","widths","currentWidth","numLines","geometryType","placement","flatEnd","flatOffset","o","oo","drawChars_","drawTextImage_","align","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","textreplay","_ol_render_canvas_ReplayGroup_","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache_","0","fillCircleArrayRowToMiddle_","getCircleArray_","arraySize","error","replayDeclutter","declutterReplays","zz","replayData","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","replayKey","hitExtent","contextSize","declutteredFeatures","zIndexKey","Constructor","BATCH_CONSTRUCTORS_","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","Circle","Default","LineString","Polygon","Text","canvas_replaygroup","_ol_renderer_vector_","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderCircleGeometry_","replayGroup","circleReplay","textReplay","renderFeature","loading","renderFeature_","renderGeometry_","geometryRenderer","GEOMETRY_RENDERERS_","renderGeometryCollectionGeometry_","renderLineStringGeometry_","lineStringReplay","renderMultiLineStringGeometry_","renderMultiPolygonGeometry_","polygonReplay","renderPointGeometry_","imageReplay","renderMultiPointGeometry_","renderPolygonGeometry_","Point","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","vector","_ol_renderer_canvas_VectorLayer_","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","vectorlayer","vectortilerendertype","HYBRID","_ol_renderer_canvas_VectorTileLayer_","renderedLayerRevision_","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","layerRevision","createReplayGroup_","revision","replayState","getReplayState","renderedRenderOrder","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","vectorImageTile","renderTileImage_","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","pixelScale","vectortilelayer","_ol_webgl_Shader_","source_","isAnimated","webgl_shader","_ol_webgl_Fragment_","webgl","fragment","_ol_webgl_Vertex_","vertex","_ol_render_webgl_circlereplay_defaultshader_","defaultshader","defaultshader_locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","_ol_vec_Mat4_","fromTransform","mat4","_ol_render_webgl_Replay_","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","webgl_replay","_ol_render_webgl_","triangleIsCounterClockwise","EPSILON","render_webgl","_ol_webgl_Buffer_","opt_arr","opt_usage","arr_","usage_","Usage_","getUsage","webgl_buffer","_ol_render_webgl_CircleReplay_","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","fragmentShader","vertexShader","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","circlereplay","_ol_render_webgl_texturereplay_defaultshader_","texturereplay_defaultshader","texturereplay_defaultshader_locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","contexteventtype","LOST","RESTORED","_ol_webgl_Context_","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","buf","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","texture","createEmptyTexture","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","bindTexture","createTexture_","opt_wrapS","opt_wrapT","createTexture","texParameteri","texImage2D","webgl_context","_ol_render_webgl_TextureReplay_","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","texturereplay","_ol_render_webgl_ImageReplay_","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","webgl_imagereplay","_ol_geom_flat_topology_","lineStringIsClosed","topology","_ol_render_webgl_linestringreplay_defaultshader_","linestringreplay_defaultshader","linestringreplay_defaultshader_locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","_ol_render_webgl_LineStringReplay_","startCoords","sign","lastSign","addVertices_","Instruction_","BEGIN_LINE_CAP","BEGIN_LINE","END_LINE","END_LINE_CAP","BEVEL_FIRST","BEVEL_SECOND","MITER_BOTTOM","MITER_TOP","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","ROUND","webgl_linestringreplay","_ol_render_webgl_polygonreplay_defaultshader_","polygonreplay_defaultshader","polygonreplay_defaultshader_locations","_ol_structs_LinkedList_","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","linkedlist","_ol_render_webgl_PolygonReplay_","outerRing","rtree","structs_rbush","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","dist","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holeFlatCoords","holes","lineDeleter","nullStrokeStyle","webgl_polygonreplay","_ol_style_Atlas_","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_atlas","_ol_style_AtlasManager_","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","atlasmanager","_ol_render_webgl_TextReplay_","measureCanvas_","textAlign_","textBaseline_","offsetX_","offsetY_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","str","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","params","calculateHash_","webgl_textreplay","_ol_render_webgl_ReplayGroup_","replayHitDetection_","HIT_DETECTION_SIZE_","Uint8Array","readPixels","webgl_replaygroup","_ol_render_webgl_Immediate_","center_","imageStyle_","fillStyle_","strokeStyle_","textStyle_","webgl_immediate","_ol_renderer_webgl_defaultmapshader_","defaultmapshader","defaultmapshader_locations","u_texCoordMatrix","u_texture","_ol_renderer_webgl_Layer_","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","webgl_layer","_ol_renderer_webgl_ImageLayer_","hitTransformationMatrix_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapSize","mapCoordTransform","projectionMatrixInv","webgl_imagelayer","_ol_renderer_webgl_Map_","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","depth","preserveDrawingBuffer","stencil","textureCache_","lrucache","tileTextureQueue_","loadNextTileTexture_","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","hasFeature","webgl_map","_ol_renderer_webgl_tilelayershader_","tilelayershader","tilelayershader_locations","u_tileOffset","_ol_renderer_webgl_TileLayer_","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","framebufferExtent","tilePixelResolution","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","webgl_tilelayer","_ol_renderer_webgl_VectorLayer_","layerState_","scissor","webgl_vectorlayer","_ol_Map_","_ol_Feature_","opt_geometryOrProperties","_object_js__WEBPACK_IMPORTED_MODULE_4__","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","_geom_geometry_js__WEBPACK_IMPORTED_MODULE_5__","_index_js__WEBPACK_IMPORTED_MODULE_3__","setGeometryName","getGeometryName","handleGeometryChange_","_events_eventtype_js__WEBPACK_IMPORTED_MODULE_2__","createStyleFunction","setId","_style_style_js__WEBPACK_IMPORTED_MODULE_6__","_ol_format_Feature_","defaultDataProjection","defaultFeatureProjection","getReadOptions","adaptOptions","_obj_js__WEBPACK_IMPORTED_MODULE_1__","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformWithOptions","write","transformed","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_geom_geometry_js__WEBPACK_IMPORTED_MODULE_0__","decimals","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory"],"mappings":"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","file":"vendors~main.0fc6621d.js","sourcesContent":["var _ol_ = {};\n\n\n/**\n * Constants defined with the define tag cannot be changed in application\n * code, but can be set at compile time.\n * Some reduce the size of the build in advanced compile mode.\n */\n\n\n/**\n * @define {boolean} Assume touch.  Default is `false`.\n */\n_ol_.ASSUME_TOUCH = false;\n\n\n/**\n * TODO: rename this to something having to do with tile grids\n * see https://github.com/openlayers/openlayers/issues/2076\n * @define {number} Default maximum zoom for default tile grids.\n */\n_ol_.DEFAULT_MAX_ZOOM = 42;\n\n\n/**\n * @define {number} Default min zoom level for the map view.  Default is `0`.\n */\n_ol_.DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @define {number} Default maximum allowed threshold  (in pixels) for\n *     reprojection triangulation. Default is `0.5`.\n */\n_ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD = 0.5;\n\n\n/**\n * @define {number} Default tile size.\n */\n_ol_.DEFAULT_TILE_SIZE = 256;\n\n\n/**\n * @define {string} Default WMS version.\n */\n_ol_.DEFAULT_WMS_VERSION = '1.3.0';\n\n\n/**\n * @define {boolean} Enable the Canvas renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the Canvas renderer from the build.\n */\n_ol_.ENABLE_CANVAS = true;\n\n\n/**\n * @define {boolean} Enable integration with the Proj4js library.  Default is\n *     `true`.\n */\n_ol_.ENABLE_PROJ4JS = true;\n\n\n/**\n * @define {boolean} Enable automatic reprojection of raster sources. Default is\n *     `true`.\n */\n_ol_.ENABLE_RASTER_REPROJECTION = true;\n\n\n/**\n * @define {boolean} Enable the WebGL renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the WebGL renderer from the build.\n */\n_ol_.ENABLE_WEBGL = true;\n\n\n/**\n * @define {boolean} Include debuggable shader sources.  Default is `true`.\n *     This should be set to `false` for production builds (if `ol.ENABLE_WEBGL`\n *     is `true`).\n */\n_ol_.DEBUG_WEBGL = true;\n\n\n/**\n * @define {number} The size in pixels of the first atlas image. Default is\n * `256`.\n */\n_ol_.INITIAL_ATLAS_SIZE = 256;\n\n\n/**\n * @define {number} The maximum size in pixels of atlas images. Default is\n * `-1`, meaning it is not used (and `ol.WEBGL_MAX_TEXTURE_SIZE` is\n * used instead).\n */\n_ol_.MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @define {number} Maximum mouse wheel delta.\n */\n_ol_.MOUSEWHEELZOOM_MAXDELTA = 1;\n\n\n/**\n * @define {number} Maximum width and/or height extent ratio that determines\n * when the overview map should be zoomed out.\n */\n_ol_.OVERVIEWMAP_MAX_RATIO = 0.75;\n\n\n/**\n * @define {number} Minimum width and/or height extent ratio that determines\n * when the overview map should be zoomed in.\n */\n_ol_.OVERVIEWMAP_MIN_RATIO = 0.1;\n\n\n/**\n * @define {number} Maximum number of source tiles for raster reprojection of\n *     a single tile.\n *     If too many source tiles are determined to be loaded to create a single\n *     reprojected tile the browser can become unresponsive or even crash.\n *     This can happen if the developer defines projections improperly and/or\n *     with unlimited extents.\n *     If too many tiles are required, no tiles are loaded and\n *     `ol.TileState.ERROR` state is set. Default is `100`.\n */\n_ol_.RASTER_REPROJECTION_MAX_SOURCE_TILES = 100;\n\n\n/**\n * @define {number} Maximum number of subdivision steps during raster\n *     reprojection triangulation. Prevents high memory usage and large\n *     number of proj4 calls (for certain transformations and areas).\n *     At most `2*(2^this)` triangles are created for each triangulated\n *     extent (tile/image). Default is `10`.\n */\n_ol_.RASTER_REPROJECTION_MAX_SUBDIVISION = 10;\n\n\n/**\n * @define {number} Maximum allowed size of triangle relative to world width.\n *     When transforming corners of world extent between certain projections,\n *     the resulting triangulation seems to have zero error and no subdivision\n *     is performed.\n *     If the triangle width is more than this (relative to world width; 0-1),\n *     subdivison is forced (up to `ol.RASTER_REPROJECTION_MAX_SUBDIVISION`).\n *     Default is `0.25`.\n */\n_ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @define {number} Tolerance for geometry simplification in device pixels.\n */\n_ol_.SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @define {number} Texture cache high water mark.\n */\n_ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @define {string} OpenLayers version.\n */\n_ol_.VERSION = 'v4.6.5';\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @const\n * @type {number|undefined}\n */\n_ol_.WEBGL_MAX_TEXTURE_SIZE; // value is set in `ol.has`\n\n\n/**\n * List of supported WebGL extensions.\n * @const\n * @type {Array.<string>}\n */\n_ol_.WEBGL_EXTENSIONS; // value is set in `ol.has`\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     ol.inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function\n * @api\n */\n_ol_.inherits = function(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n};\n\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\n_ol_.nullFunction = function() {};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\n_ol_.getUid = function(obj) {\n  return obj.ol_uid ||\n      (obj.ol_uid = ++_ol_.uidCounter_);\n};\n\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\n_ol_.uidCounter_ = 0;\nexport default _ol_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_extent_Corner_ from './extent/corner.js';\nimport _ol_extent_Relationship_ from './extent/relationship.js';\nvar _ol_extent_ = {};\n\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @return {ol.Extent} Bounding extent.\n * @api\n */\n_ol_extent_.boundingExtent = function(coordinates) {\n  var extent = _ol_extent_.createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    _ol_extent_.extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @private\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.boundingExtentXYs_ = function(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return _ol_extent_.createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Return extent increased by the provided value.\n * @param {ol.Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_extent_.buffer = function(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n};\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {ol.Extent} extent Extent to clone.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} The clone.\n */\n_ol_extent_.clone = function(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\n_ol_extent_.closestSquaredDistanceXY = function(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {ol.Extent} extent Extent.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\n_ol_extent_.containsCoordinate = function(extent, coordinate) {\n  return _ol_extent_.containsXY(extent, coordinate[0], coordinate[1]);\n};\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\n_ol_extent_.containsExtent = function(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n};\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {ol.Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\n_ol_extent_.containsXY = function(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n};\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {ol.Extent} extent The extent.\n * @param {ol.Coordinate} coordinate The coordinate.\n * @return {number} The relationship (bitwise compare with\n *     ol.extent.Relationship).\n */\n_ol_extent_.coordinateRelationship = function(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = _ol_extent_Relationship_.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | _ol_extent_Relationship_.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | _ol_extent_Relationship_.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | _ol_extent_Relationship_.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | _ol_extent_Relationship_.ABOVE;\n  }\n  if (relationship === _ol_extent_Relationship_.UNKNOWN) {\n    relationship = _ol_extent_Relationship_.INTERSECTING;\n  }\n  return relationship;\n};\n\n\n/**\n * Create an empty extent.\n * @return {ol.Extent} Empty extent.\n * @api\n */\n_ol_extent_.createEmpty = function() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n};\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdate = function(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n};\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateEmpty = function(opt_extent) {\n  return _ol_extent_.createOrUpdate(\n      Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromCoordinate = function(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return _ol_extent_.createOrUpdate(x, y, x, y, opt_extent);\n};\n\n\n/**\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromCoordinates = function(coordinates, opt_extent) {\n  var extent = _ol_extent_.createOrUpdateEmpty(opt_extent);\n  return _ol_extent_.extendCoordinates(extent, coordinates);\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromFlatCoordinates = function(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = _ol_extent_.createOrUpdateEmpty(opt_extent);\n  return _ol_extent_.extendFlatCoordinates(\n      extent, flatCoordinates, offset, end, stride);\n};\n\n\n/**\n * @param {Array.<Array.<ol.Coordinate>>} rings Rings.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.createOrUpdateFromRings = function(rings, opt_extent) {\n  var extent = _ol_extent_.createOrUpdateEmpty(opt_extent);\n  return _ol_extent_.extendRings(extent, rings);\n};\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\n_ol_extent_.equals = function(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n};\n\n\n/**\n * Modify an extent to include another extent.\n * @param {ol.Extent} extent1 The extent to be modified.\n * @param {ol.Extent} extent2 The extent that will be included in the first.\n * @return {ol.Extent} A reference to the first (extended) extent.\n * @api\n */\n_ol_extent_.extend = function(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Coordinate} coordinate Coordinate.\n */\n_ol_extent_.extendCoordinate = function(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.extendCoordinates = function(extent, coordinates) {\n  var i, ii;\n  for (i = 0, ii = coordinates.length; i < ii; ++i) {\n    _ol_extent_.extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.extendFlatCoordinates = function(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    _ol_extent_.extendXY(\n        extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {Array.<Array.<ol.Coordinate>>} rings Rings.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.extendRings = function(extent, rings) {\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    _ol_extent_.extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\n_ol_extent_.extendXY = function(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n};\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {ol.Extent} extent Extent.\n * @param {function(this:T, ol.Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\n_ol_extent_.forEachCorner = function(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, _ol_extent_.getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, _ol_extent_.getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, _ol_extent_.getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, _ol_extent_.getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n};\n\n\n/**\n * Get the size of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\n_ol_extent_.getArea = function(extent) {\n  var area = 0;\n  if (!_ol_extent_.isEmpty(extent)) {\n    area = _ol_extent_.getWidth(extent) * _ol_extent_.getHeight(extent);\n  }\n  return area;\n};\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Bottom left coordinate.\n * @api\n */\n_ol_extent_.getBottomLeft = function(extent) {\n  return [extent[0], extent[1]];\n};\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Bottom right coordinate.\n * @api\n */\n_ol_extent_.getBottomRight = function(extent) {\n  return [extent[2], extent[1]];\n};\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Center.\n * @api\n */\n_ol_extent_.getCenter = function(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n};\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @param {ol.extent.Corner} corner Corner.\n * @return {ol.Coordinate} Corner coordinate.\n */\n_ol_extent_.getCorner = function(extent, corner) {\n  var coordinate;\n  if (corner === _ol_extent_Corner_.BOTTOM_LEFT) {\n    coordinate = _ol_extent_.getBottomLeft(extent);\n  } else if (corner === _ol_extent_Corner_.BOTTOM_RIGHT) {\n    coordinate = _ol_extent_.getBottomRight(extent);\n  } else if (corner === _ol_extent_Corner_.TOP_LEFT) {\n    coordinate = _ol_extent_.getTopLeft(extent);\n  } else if (corner === _ol_extent_Corner_.TOP_RIGHT) {\n    coordinate = _ol_extent_.getTopRight(extent);\n  } else {\n    _ol_asserts_.assert(false, 13); // Invalid corner\n  }\n  return /** @type {!ol.Coordinate} */ (coordinate);\n};\n\n\n/**\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\n_ol_extent_.getEnlargedArea = function(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n};\n\n\n/**\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.getForViewAndSize = function(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return _ol_extent_.createOrUpdate(\n      Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n      Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n      opt_extent);\n};\n\n\n/**\n * Get the height of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\n_ol_extent_.getHeight = function(extent) {\n  return extent[3] - extent[1];\n};\n\n\n/**\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\n_ol_extent_.getIntersectionArea = function(extent1, extent2) {\n  var intersection = _ol_extent_.getIntersection(extent1, extent2);\n  return _ol_extent_.getArea(intersection);\n};\n\n\n/**\n * Get the intersection of two extents.\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent 2.\n * @param {ol.Extent=} opt_extent Optional extent to populate with intersection.\n * @return {ol.Extent} Intersecting extent.\n * @api\n */\n_ol_extent_.getIntersection = function(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : _ol_extent_.createEmpty();\n  if (_ol_extent_.intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  }\n  return intersection;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @return {number} Margin.\n */\n_ol_extent_.getMargin = function(extent) {\n  return _ol_extent_.getWidth(extent) + _ol_extent_.getHeight(extent);\n};\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {ol.Extent} extent The extent.\n * @return {ol.Size} The extent size.\n * @api\n */\n_ol_extent_.getSize = function(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n};\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Top left coordinate.\n * @api\n */\n_ol_extent_.getTopLeft = function(extent) {\n  return [extent[0], extent[3]];\n};\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {ol.Coordinate} Top right coordinate.\n * @api\n */\n_ol_extent_.getTopRight = function(extent) {\n  return [extent[2], extent[3]];\n};\n\n\n/**\n * Get the width of an extent.\n * @param {ol.Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\n_ol_extent_.getWidth = function(extent) {\n  return extent[2] - extent[0];\n};\n\n\n/**\n * Determine if one extent intersects another.\n * @param {ol.Extent} extent1 Extent 1.\n * @param {ol.Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\n_ol_extent_.intersects = function(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n};\n\n\n/**\n * Determine if an extent is empty.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\n_ol_extent_.isEmpty = function(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_extent_.returnOrUpdate = function(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} value Value.\n */\n_ol_extent_.scaleFromCenter = function(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n};\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {ol.Extent} extent The extent.\n * @param {ol.Coordinate} start Segment start coordinate.\n * @param {ol.Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\n_ol_extent_.intersectsSegment = function(extent, start, end) {\n  var intersects = false;\n  var startRel = _ol_extent_.coordinateRelationship(extent, start);\n  var endRel = _ol_extent_.coordinateRelationship(extent, end);\n  if (startRel === _ol_extent_Relationship_.INTERSECTING ||\n      endRel === _ol_extent_Relationship_.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & _ol_extent_Relationship_.ABOVE) &&\n        !(startRel & _ol_extent_Relationship_.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & _ol_extent_Relationship_.RIGHT) &&\n        !(startRel & _ol_extent_Relationship_.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & _ol_extent_Relationship_.BELOW) &&\n        !(startRel & _ol_extent_Relationship_.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & _ol_extent_Relationship_.LEFT) &&\n        !(startRel & _ol_extent_Relationship_.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n};\n\n\n/**\n * Apply a transform function to the extent.\n * @param {ol.Extent} extent Extent.\n * @param {ol.TransformFunction} transformFn Transform function.  Called with\n * [minX, minY, maxX, maxY] extent coordinates.\n * @param {ol.Extent=} opt_extent Destination extent.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_extent_.applyTransform = function(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _ol_extent_.boundingExtentXYs_(xs, ys, opt_extent);\n};\nexport default _ol_extent_;\n","import _ol_obj_ from './obj.js';\nvar _ol_events_ = {};\n\n\n/**\n * @param {ol.EventsKey} listenerObj Listener object.\n * @return {ol.EventsListenerFunctionType} Bound listener.\n */\n_ol_events_.bindListener_ = function(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n};\n\n\n/**\n * Finds the matching {@link ol.EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!ol.EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link ol.events.unlistenByKey}.\n * @return {ol.EventsKey|undefined} The matching listener object.\n * @private\n */\n_ol_events_.findListener_ = function(listeners, listener, opt_this,\n    opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<ol.EventsKey>|undefined} Listeners.\n */\n_ol_events_.getListeners = function(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n};\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {ol.EventTargetLike} target Target.\n * @return {!Object.<string, Array.<ol.EventsKey>>} Map of\n *     listeners by event type.\n * @private\n */\n_ol_events_.getListenerMap_ = function(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n};\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @private\n */\n_ol_events_.removeListeners_ = function(target, type) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      _ol_obj_.clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n};\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link ol.events.unlistenByKey}.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {ol.EventsKey} Unique key for the listener.\n */\n_ol_events_.listen = function(target, type, listener, opt_this, opt_once) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this,\n      false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {ol.EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, _ol_events_.bindListener_(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n};\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link ol.events.unlistenByKey} in case the listener needs to be unregistered\n * before it is called.\n *\n * When {@link ol.events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {ol.EventsKey} Key for unlistenByKey.\n */\n_ol_events_.listenOnce = function(target, type, listener, opt_this) {\n  return _ol_events_.listen(target, type, listener, opt_this, true);\n};\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link ol.events.listen} call.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\n_ol_events_.unlisten = function(target, type, listener, opt_this) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this,\n        true);\n    if (listenerObj) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n  }\n};\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link ol.events.listen} or {@link ol.events.listenOnce}.\n *\n * @param {ol.EventsKey} key The key.\n */\n_ol_events_.unlistenByKey = function(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = _ol_events_.getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        _ol_events_.removeListeners_(key.target, key.type);\n      }\n    }\n    _ol_obj_.clear(key);\n  }\n};\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {ol.EventTargetLike} target Target.\n */\n_ol_events_.unlistenAll = function(target) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  for (var type in listenerMap) {\n    _ol_events_.removeListeners_(target, type);\n  }\n};\nexport default _ol_events_;\n","import _ol_asserts_ from './asserts.js';\nvar _ol_transform_ = {};\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3x3 martrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {ol.Transform}\n */\n_ol_transform_.tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!ol.Transform} Identity transform.\n */\n_ol_transform_.create = function() {\n  return [1, 0, 0, 1, 0, 0];\n};\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!ol.Transform} transform Transform.\n * @return {!ol.Transform} Transform.\n */\n_ol_transform_.reset = function(transform) {\n  return _ol_transform_.set(transform, 1, 0, 0, 1, 0, 0);\n};\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!ol.Transform} transform1 Transform parameters of matrix 1.\n * @param {!ol.Transform} transform2 Transform parameters of matrix 2.\n * @return {!ol.Transform} transform1 multiplied with transform2.\n */\n_ol_transform_.multiply = function(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n};\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!ol.Transform} Matrix with transform applied.\n */\n_ol_transform_.set = function(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n};\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!ol.Transform} transform1 Matrix to set transform to.\n * @param {!ol.Transform} transform2 Matrix to set transform from.\n * @return {!ol.Transform} transform1 with transform from transform2 applied.\n */\n_ol_transform_.setFromArray = function(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n};\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {ol.Transform} transform The transformation.\n * @param {ol.Coordinate|ol.Pixel} coordinate The coordinate to transform.\n * @return {ol.Coordinate|ol.Pixel} return coordinate so that operations can be\n *     chained together.\n */\n_ol_transform_.apply = function(transform, coordinate) {\n  var x = coordinate[0], y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n};\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!ol.Transform} The rotated transform.\n */\n_ol_transform_.rotate = function(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return _ol_transform_.multiply(transform,\n      _ol_transform_.set(_ol_transform_.tmp_, cos, sin, -sin, cos, 0, 0));\n};\n\n\n/**\n * Applies scale to a given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!ol.Transform} The scaled transform.\n */\n_ol_transform_.scale = function(transform, x, y) {\n  return _ol_transform_.multiply(transform,\n      _ol_transform_.set(_ol_transform_.tmp_, x, 0, 0, y, 0, 0));\n};\n\n\n/**\n * Applies translation to the given transform.\n * @param {!ol.Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!ol.Transform} The translated transform.\n */\n_ol_transform_.translate = function(transform, dx, dy) {\n  return _ol_transform_.multiply(transform,\n      _ol_transform_.set(_ol_transform_.tmp_, 1, 0, 0, 1, dx, dy));\n};\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!ol.Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!ol.Transform} The composite transform.\n */\n_ol_transform_.compose = function(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n};\n\n\n/**\n * Invert the given transform.\n * @param {!ol.Transform} transform Transform.\n * @return {!ol.Transform} Inverse of the transform.\n */\n_ol_transform_.invert = function(transform) {\n  var det = _ol_transform_.determinant(transform);\n  _ol_asserts_.assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n};\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!ol.Transform} mat Matrix.\n * @return {number} Determinant.\n */\n_ol_transform_.determinant = function(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n};\nexport default _ol_transform_;\n","var _ol_webgl_ = {};\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_webgl_.FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_webgl_.CONTEXT_IDS_ = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\n_ol_webgl_.getContext = function(canvas, opt_attributes) {\n  var context, i, ii = _ol_webgl_.CONTEXT_IDS_.length;\n  for (i = 0; i < ii; ++i) {\n    try {\n      context = canvas.getContext(_ol_webgl_.CONTEXT_IDS_[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n};\nexport default _ol_webgl_;\n","/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nvar _ol_geom_GeometryType_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\nexport default _ol_geom_GeometryType_;\n","import _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_structs_LRUCache_ from '../structs/lrucache.js';\nimport _ol_transform_ from '../transform.js';\nvar _ol_render_canvas_ = {};\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_canvas_.defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_canvas_.defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_canvas_.defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_canvas_.defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultLineWidth = 1;\n\n\n/**\n * @type {ol.structs.LRUCache.<HTMLCanvasElement>}\n */\n_ol_render_canvas_.labelCache = new _ol_structs_LRUCache_();\n\n\n/**\n * @type {!Object.<string, number>}\n */\n_ol_render_canvas_.checkedFonts_ = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\n_ol_render_canvas_.measureContext_ = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\n_ol_render_canvas_.textHeights_ = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n_ol_render_canvas_.checkFont = (function() {\n  var retries = 60;\n  var checked = _ol_render_canvas_.checkedFonts_;\n  var labelCache = _ol_render_canvas_.labelCache;\n  var font = '32px monospace';\n  var text = 'wmytzilWMYTZIL@#/&?$%10';\n  var interval, referenceWidth;\n\n  function isAvailable(fontFamily) {\n    var context = _ol_render_canvas_.getMeasureContext();\n    context.font = font;\n    referenceWidth = context.measureText(text).width;\n    var available = true;\n    if (fontFamily != 'monospace') {\n      context.font = '32px ' + fontFamily + ',monospace';\n      var width = context.measureText(text).width;\n      // If width and referenceWidth are the same, then the 'monospace'\n      // fallback was used instead of the font we wanted, so the font is not\n      // available.\n      available = width != referenceWidth;\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          _ol_obj_.clear(_ol_render_canvas_.textHeights_);\n          // Make sure that loaded fonts are picked up by Safari\n          _ol_render_canvas_.measureContext_ = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      window.clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = _ol_css_.getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = window.setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\n_ol_render_canvas_.getMeasureContext = function() {\n  var context = _ol_render_canvas_.measureContext_;\n  if (!context) {\n    context = _ol_render_canvas_.measureContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n  }\n  return context;\n};\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {ol.Size} Measurement.\n */\n_ol_render_canvas_.measureTextHeight = (function() {\n  var span;\n  var heights = _ol_render_canvas_.textHeights_;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n_ol_render_canvas_.measureTextWidth = function(font, text) {\n  var measureContext = _ol_render_canvas_.getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n_ol_render_canvas_.rotateAtOffset = function(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n};\n\n\n_ol_render_canvas_.resetTransform_ = _ol_transform_.create();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\n_ol_render_canvas_.drawImage = function(context,\n    transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, _ol_render_canvas_.resetTransform_);\n  }\n};\nexport default _ol_render_canvas_;\n","/**\n * @enum {string}\n * @const\n */\nvar _ol_events_EventType_ = {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event ol.events.Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\nexport default _ol_events_EventType_;\n","/**\n * @enum {number}\n */\nvar _ol_TileState_ = {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\nexport default _ol_TileState_;\n","import _ol_asserts_ from './asserts.js';\nvar _ol_math_ = {};\n\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\n_ol_math_.clamp = function(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n};\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\n_ol_math_.cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\n_ol_math_.roundUpToPowerOfTwo = function(x) {\n  _ol_asserts_.assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n};\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\n_ol_math_.squaredSegmentDistance = function(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return _ol_math_.squaredDistance(x, y, x1, y1);\n};\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\n_ol_math_.squaredDistance = function(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\n_ol_math_.solveLinearSystem = function(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n};\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\n_ol_math_.toDegrees = function(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n};\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\n_ol_math_.toRadians = function(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n};\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\n_ol_math_.modulo = function(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n};\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\n_ol_math_.lerp = function(a, b, x) {\n  return a + x * (b - a);\n};\nexport default _ol_math_;\n","var _ol_obj_ = {};\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\n_ol_obj_.assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\n_ol_obj_.clear = function(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n};\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\n_ol_obj_.getValues = function(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n};\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\n_ol_obj_.isEmpty = function(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n};\nexport default _ol_obj_;\n","var _ol_array_ = {};\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\n_ol_array_.binarySearch = function(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || _ol_array_.numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n};\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\n_ol_array_.numberSafeCompareFunction = function(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n};\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\n_ol_array_.includes = function(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n};\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\n_ol_array_.linearFindNearest = function(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n};\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\n_ol_array_.reverseSubArray = function(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n};\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {Array.<VALUE>|VALUE} data The elements or arrays of elements\n *     to add to arr.\n * @template VALUE\n */\n_ol_array_.extend = function(arr, data) {\n  var i;\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n};\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\n_ol_array_.remove = function(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n};\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE} The element found.\n */\n_ol_array_.find = function(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\n_ol_array_.equals = function(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\n_ol_array_.stableSort = function(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n};\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\n_ol_array_.findIndex = function(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n};\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\n_ol_array_.isSorted = function(arr, opt_func, opt_strict) {\n  var compare = opt_func || _ol_array_.numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n};\nexport default _ol_array_;\n","import _ol_AssertionError_ from './assertionerror.js';\nvar _ol_asserts_ = {};\n\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\n_ol_asserts_.assert = function(assertion, errorCode) {\n  if (!assertion) {\n    throw new _ol_AssertionError_(errorCode);\n  }\n};\nexport default _ol_asserts_;\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\nimport _ol_math_ from './math.js';\nimport _ol_geom_GeometryType_ from './geom/geometrytype.js';\n\n/**\n * @classdesc\n * Class to create objects that can be used with {@link\n * ol.geom.Polygon.circular}.\n *\n * For example to create a sphere whose radius is equal to the semi-major\n * axis of the WGS84 ellipsoid:\n *\n * ```js\n * var wgs84Sphere= new ol.Sphere(6378137);\n * ```\n *\n * @constructor\n * @param {number} radius Radius.\n * @api\n */\nvar _ol_Sphere_ = function(radius) {\n\n  /**\n   * @type {number}\n   */\n  this.radius = radius;\n\n};\n\n\n/**\n * Returns the geodesic area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<ol.Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @return {number} Area.\n * @api\n */\n_ol_Sphere_.prototype.geodesicArea = function(coordinates) {\n  return _ol_Sphere_.getArea_(coordinates, this.radius);\n};\n\n\n/**\n * Returns the distance from c1 to c2 using the haversine formula.\n *\n * @param {ol.Coordinate} c1 Coordinate 1.\n * @param {ol.Coordinate} c2 Coordinate 2.\n * @return {number} Haversine distance.\n * @api\n */\n_ol_Sphere_.prototype.haversineDistance = function(c1, c2) {\n  return _ol_Sphere_.getDistance_(c1, c2, this.radius);\n};\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {ol.Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @return {ol.Coordinate} The target point.\n */\n_ol_Sphere_.prototype.offset = function(c1, distance, bearing) {\n  var lat1 = _ol_math_.toRadians(c1[1]);\n  var lon1 = _ol_math_.toRadians(c1[0]);\n  var dByR = distance / this.radius;\n  var lat = Math.asin(\n      Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [_ol_math_.toDegrees(lon), _ol_math_.toDegrees(lat)];\n};\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\n_ol_Sphere_.DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {ol.geom.Geometry} geometry A geometry.\n * @param {olx.SphereMetricOptions=} opt_options Options for the length\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\n_ol_Sphere_.getLength = function(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || _ol_Sphere_.DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  var type = geometry.getType();\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n    case _ol_geom_GeometryType_.MULTI_POINT: {\n      break;\n    }\n    case _ol_geom_GeometryType_.LINE_STRING:\n    case _ol_geom_GeometryType_.LINEAR_RING: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      length = _ol_Sphere_.getLength_(coordinates, radius);\n      break;\n    }\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n    case _ol_geom_GeometryType_.POLYGON: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += _ol_Sphere_.getLength_(coordinates[i], radius);\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.MULTI_POLYGON: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += _ol_Sphere_.getLength_(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += _ol_Sphere_.getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n};\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\n_ol_Sphere_.getLength_ = function(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += _ol_Sphere_.getDistance_(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n};\n\n\n/**\n * Get the great circle distance between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} radius The sphere radius to use.\n * @return {number} The great circle distance between the points (in meters).\n */\n_ol_Sphere_.getDistance_ = function(c1, c2, radius) {\n  var lat1 = _ol_math_.toRadians(c1[1]);\n  var lat2 = _ol_math_.toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = _ol_math_.toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n};\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {ol.geom.Geometry} geometry A geometry.\n * @param {olx.SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\n_ol_Sphere_.getArea = function(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || _ol_Sphere_.DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  var type = geometry.getType();\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n    case _ol_geom_GeometryType_.MULTI_POINT:\n    case _ol_geom_GeometryType_.LINE_STRING:\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n    case _ol_geom_GeometryType_.LINEAR_RING: {\n      break;\n    }\n    case _ol_geom_GeometryType_.POLYGON: {\n      coordinates = /** @type {ol.geom.Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(_ol_Sphere_.getArea_(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(_ol_Sphere_.getArea_(coordinates[i], radius));\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.MULTI_POLYGON: {\n      coordinates = /** @type {ol.geom.SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(_ol_Sphere_.getArea_(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(_ol_Sphere_.getArea_(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += _ol_Sphere_.getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n};\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<ol.Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\n_ol_Sphere_.getArea_ = function(coordinates, radius) {\n  var area = 0, len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0], y2 = coordinates[i][1];\n    area += _ol_math_.toRadians(x2 - x1) *\n        (2 + Math.sin(_ol_math_.toRadians(y1)) +\n        Math.sin(_ol_math_.toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n};\nexport default _ol_Sphere_;\n","var _ol_proj_proj4_ = {};\n\n\n/**\n * @private\n * @type {Proj4}\n */\n_ol_proj_proj4_.cache_ = null;\n\n\n/**\n * Store the proj4 function.\n * @param {Proj4} proj4 The proj4 function.\n */\n_ol_proj_proj4_.set = function(proj4) {\n  _ol_proj_proj4_.cache_ = proj4;\n};\n\n\n/**\n * Get proj4.\n * @return {Proj4} The proj4 function set above or available globally.\n */\n_ol_proj_proj4_.get = function() {\n  return _ol_proj_proj4_.cache_ || window['proj4'];\n};\nexport default _ol_proj_proj4_;\n","import _ol_ from '../index.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nimport _ol_proj_proj4_ from '../proj/proj4.js';\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link ol.proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link ol.ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link ol.proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link ol.proj.setProj4}.\n *\n * @constructor\n * @param {olx.ProjectionOptions} options Projection options.\n * @struct\n * @api\n */\nvar _ol_proj_Projection_ = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `ol.proj.Units.TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {ol.proj.Units}\n   */\n  this.units_ = /** @type {ol.proj.Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `ol.proj.Units.TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `ol.proj.Units.TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {ol.Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, ol.Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n\n  var code = options.code;\n  if (_ol_.ENABLE_PROJ4JS) {\n    var proj4js = _ol_proj_proj4_.get();\n    if (typeof proj4js == 'function') {\n      var def = proj4js.defs(code);\n      if (def !== undefined) {\n        if (def.axis !== undefined && options.axisOrientation === undefined) {\n          this.axisOrientation_ = def.axis;\n        }\n        if (options.metersPerUnit === undefined) {\n          this.metersPerUnit_ = def.to_meter;\n        }\n        if (options.units === undefined) {\n          this.units_ = def.units;\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\n_ol_proj_Projection_.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\n_ol_proj_Projection_.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_proj_Projection_.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {ol.proj.Units} Units.\n * @api\n */\n_ol_proj_Projection_.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\n_ol_proj_Projection_.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || _ol_proj_Units_.METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_proj_Projection_.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\n_ol_proj_Projection_.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\n_ol_proj_Projection_.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\n_ol_proj_Projection_.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {ol.tilegrid.TileGrid} The default tile grid.\n */\n_ol_proj_Projection_.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {ol.tilegrid.TileGrid} tileGrid The default tile grid.\n */\n_ol_proj_Projection_.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {ol.Extent} extent Extent.\n * @api\n */\n_ol_proj_Projection_.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {ol.Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\n_ol_proj_Projection_.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link ol.proj#getPointResolution}\n * for this projection.\n * @param {function(number, ol.Coordinate):number} func Function\n * @api\n */\n_ol_proj_Projection_.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, ol.Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\n_ol_proj_Projection_.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default _ol_proj_Projection_;\n","import _ol_ from '../index.js';\nimport _ol_math_ from '../math.js';\nimport _ol_proj_Projection_ from '../proj/projection.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nvar _ol_proj_EPSG3857_ = {};\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {ol.proj.Projection}\n * @param {string} code Code.\n * @private\n */\n_ol_proj_EPSG3857_.Projection_ = function(code) {\n  _ol_proj_Projection_.call(this, {\n    code: code,\n    units: _ol_proj_Units_.METERS,\n    extent: _ol_proj_EPSG3857_.EXTENT,\n    global: true,\n    worldExtent: _ol_proj_EPSG3857_.WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / _ol_math_.cosh(point[1] / _ol_proj_EPSG3857_.RADIUS);\n    }\n  });\n};\n_ol_.inherits(_ol_proj_EPSG3857_.Projection_, _ol_proj_Projection_);\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\n_ol_proj_EPSG3857_.RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_proj_EPSG3857_.HALF_SIZE = Math.PI * _ol_proj_EPSG3857_.RADIUS;\n\n\n/**\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG3857_.EXTENT = [\n  -_ol_proj_EPSG3857_.HALF_SIZE, -_ol_proj_EPSG3857_.HALF_SIZE,\n  _ol_proj_EPSG3857_.HALF_SIZE, _ol_proj_EPSG3857_.HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG3857_.WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<ol.proj.Projection>}\n */\n_ol_proj_EPSG3857_.PROJECTIONS = [\n  new _ol_proj_EPSG3857_.Projection_('EPSG:3857'),\n  new _ol_proj_EPSG3857_.Projection_('EPSG:102100'),\n  new _ol_proj_EPSG3857_.Projection_('EPSG:102113'),\n  new _ol_proj_EPSG3857_.Projection_('EPSG:900913'),\n  new _ol_proj_EPSG3857_.Projection_('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new _ol_proj_EPSG3857_.Projection_('urn:ogc:def:crs:EPSG::3857'),\n  new _ol_proj_EPSG3857_.Projection_('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\n_ol_proj_EPSG3857_.fromEPSG4326 = function(input, opt_output, opt_dimension) {\n  var length = input.length,\n      dimension = opt_dimension > 1 ? opt_dimension : 2,\n      output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = _ol_proj_EPSG3857_.HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = _ol_proj_EPSG3857_.RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n};\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\n_ol_proj_EPSG3857_.toEPSG4326 = function(input, opt_output, opt_dimension) {\n  var length = input.length,\n      dimension = opt_dimension > 1 ? opt_dimension : 2,\n      output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / _ol_proj_EPSG3857_.HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n        Math.exp(input[i + 1] / _ol_proj_EPSG3857_.RADIUS)) / Math.PI - 90;\n  }\n  return output;\n};\nexport default _ol_proj_EPSG3857_;\n","import _ol_ from '../index.js';\nimport _ol_proj_Projection_ from '../proj/projection.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nvar _ol_proj_EPSG4326_ = {};\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {ol.proj.Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n * @private\n */\n_ol_proj_EPSG4326_.Projection_ = function(code, opt_axisOrientation) {\n  _ol_proj_Projection_.call(this, {\n    code: code,\n    units: _ol_proj_Units_.DEGREES,\n    extent: _ol_proj_EPSG4326_.EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: _ol_proj_EPSG4326_.METERS_PER_UNIT,\n    worldExtent: _ol_proj_EPSG4326_.EXTENT\n  });\n};\n_ol_.inherits(_ol_proj_EPSG4326_.Projection_, _ol_proj_Projection_);\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {ol.Extent}\n */\n_ol_proj_EPSG4326_.EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_proj_EPSG4326_.METERS_PER_UNIT = Math.PI * _ol_proj_EPSG4326_.RADIUS / 180;\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<ol.proj.Projection>}\n */\n_ol_proj_EPSG4326_.PROJECTIONS = [\n  new _ol_proj_EPSG4326_.Projection_('CRS:84'),\n  new _ol_proj_EPSG4326_.Projection_('EPSG:4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new _ol_proj_EPSG4326_.Projection_('urn:ogc:def:crs:OGC:2:84'),\n  new _ol_proj_EPSG4326_.Projection_('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new _ol_proj_EPSG4326_.Projection_('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\nexport default _ol_proj_EPSG4326_;\n","var _ol_proj_projections_ = {};\n\n\n/**\n * @private\n * @type {Object.<string, ol.proj.Projection>}\n */\n_ol_proj_projections_.cache_ = {};\n\n\n/**\n * Clear the projections cache.\n */\n_ol_proj_projections_.clear = function() {\n  _ol_proj_projections_.cache_ = {};\n};\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {ol.proj.Projection} The projection (if cached).\n */\n_ol_proj_projections_.get = function(code) {\n  var projections = _ol_proj_projections_.cache_;\n  return projections[code] || null;\n};\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {ol.proj.Projection} projection The projection to cache.\n */\n_ol_proj_projections_.add = function(code, projection) {\n  var projections = _ol_proj_projections_.cache_;\n  projections[code] = projection;\n};\nexport default _ol_proj_projections_;\n","import _ol_obj_ from '../obj.js';\nvar _ol_proj_transforms_ = {};\n\n\n/**\n * @private\n * @type {Object.<string, Object.<string, ol.TransformFunction>>}\n */\n_ol_proj_transforms_.cache_ = {};\n\n\n/**\n * Clear the transform cache.\n */\n_ol_proj_transforms_.clear = function() {\n  _ol_proj_transforms_.cache_ = {};\n};\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {ol.proj.Projection} source Source.\n * @param {ol.proj.Projection} destination Destination.\n * @param {ol.TransformFunction} transformFn Transform.\n */\n_ol_proj_transforms_.add = function(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n};\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {ol.proj.Projection} source Source projection.\n * @param {ol.proj.Projection} destination Destination projection.\n * @return {ol.TransformFunction} transformFn The unregistered transform.\n */\n_ol_proj_transforms_.remove = function(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transforms = _ol_proj_transforms_.cache_;\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (_ol_obj_.isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n};\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {ol.TransformFunction|undefined} The transform function (if found).\n */\n_ol_proj_transforms_.get = function(sourceCode, destinationCode) {\n  var transform;\n  var transforms = _ol_proj_transforms_.cache_;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n};\nexport default _ol_proj_transforms_;\n","import _ol_ from './index.js';\nimport _ol_Sphere_ from './sphere.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_math_ from './math.js';\nimport _ol_proj_EPSG3857_ from './proj/epsg3857.js';\nimport _ol_proj_EPSG4326_ from './proj/epsg4326.js';\nimport _ol_proj_Projection_ from './proj/projection.js';\nimport _ol_proj_Units_ from './proj/units.js';\nimport _ol_proj_proj4_ from './proj/proj4.js';\nimport _ol_proj_projections_ from './proj/projections.js';\nimport _ol_proj_transforms_ from './proj/transforms.js';\nvar _ol_proj_ = {};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<ol.proj.Units, number>}\n * @api\n */\n_ol_proj_.METERS_PER_UNIT = _ol_proj_Units_.METERS_PER_UNIT;\n\n\n/**\n * A place to store the mean radius of the Earth.\n * @private\n * @type {ol.Sphere}\n */\n_ol_proj_.SPHERE_ = new _ol_Sphere_(_ol_Sphere_.DEFAULT_RADIUS);\n\n\nif (_ol_.ENABLE_PROJ4JS) {\n  /**\n   * Register proj4. If not explicitly registered, it will be assumed that\n   * proj4js will be loaded in the global namespace. For example in a\n   * browserify ES6 environment you could use:\n   *\n   *     import ol from 'openlayers';\n   *     import proj4 from 'proj4';\n   *     ol.proj.setProj4(proj4);\n   *\n   * @param {Proj4} proj4 Proj4.\n   * @api\n   */\n  _ol_proj_.setProj4 = function(proj4) {\n    _ol_proj_proj4_.set(proj4);\n  };\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link ol.proj.Projection} constructor or by using\n * {@link ol.proj.Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ol.ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {ol.Coordinate} point Point to find adjusted resolution at.\n * @param {ol.proj.Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\n_ol_proj_.getPointResolution = function(projection, resolution, point, opt_units) {\n  projection = _ol_proj_.get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == _ol_proj_Units_.DEGREES && !opt_units || opt_units == _ol_proj_Units_.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = _ol_proj_.getTransformFromProjections(projection, _ol_proj_.get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = _ol_proj_.SPHERE_.haversineDistance(\n          vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = _ol_proj_.SPHERE_.haversineDistance(\n          vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        _ol_proj_Units_.METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n};\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<ol.proj.Projection>} projections Projections.\n * @api\n */\n_ol_proj_.addEquivalentProjections = function(projections) {\n  _ol_proj_.addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        _ol_proj_transforms_.add(source, destination, _ol_proj_.cloneTransform);\n      }\n    });\n  });\n};\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<ol.proj.Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<ol.proj.Projection>} projections2 Projections with equal\n *     meaning.\n * @param {ol.TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {ol.TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\n_ol_proj_.addEquivalentTransforms = function(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      _ol_proj_transforms_.add(projection1, projection2, forwardTransform);\n      _ol_proj_transforms_.add(projection2, projection1, inverseTransform);\n    });\n  });\n};\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {ol.proj.Projection} projection Projection instance.\n * @api\n */\n_ol_proj_.addProjection = function(projection) {\n  _ol_proj_projections_.add(projection.getCode(), projection);\n  _ol_proj_transforms_.add(projection, projection, _ol_proj_.cloneTransform);\n};\n\n\n/**\n * @param {Array.<ol.proj.Projection>} projections Projections.\n */\n_ol_proj_.addProjections = function(projections) {\n  projections.forEach(_ol_proj_.addProjection);\n};\n\n\n/**\n * Clear all cached projections and transforms.\n */\n_ol_proj_.clearAllProjections = function() {\n  _ol_proj_projections_.clear();\n  _ol_proj_transforms_.clear();\n};\n\n\n/**\n * @param {ol.proj.Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {ol.proj.Projection} Projection.\n */\n_ol_proj_.createProjection = function(projection, defaultCode) {\n  if (!projection) {\n    return _ol_proj_.get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return _ol_proj_.get(projection);\n  } else {\n    return /** @type {ol.proj.Projection} */ (projection);\n  }\n};\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ol.ProjectionLike} source Source projection.\n * @param {ol.ProjectionLike} destination Destination projection.\n * @param {function(ol.Coordinate): ol.Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link ol.Coordinate} as argument and returns\n *     the transformed {@link ol.Coordinate}.\n * @param {function(ol.Coordinate): ol.Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link ol.Coordinate} as argument and returns\n *     the transformed {@link ol.Coordinate}.\n * @api\n */\n_ol_proj_.addCoordinateTransforms = function(source, destination, forward, inverse) {\n  var sourceProj = _ol_proj_.get(source);\n  var destProj = _ol_proj_.get(destination);\n  _ol_proj_transforms_.add(sourceProj, destProj,\n      _ol_proj_.createTransformFromCoordinateTransform(forward));\n  _ol_proj_transforms_.add(destProj, sourceProj,\n      _ol_proj_.createTransformFromCoordinateTransform(inverse));\n};\n\n\n/**\n * Creates a {@link ol.TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(ol.Coordinate): ol.Coordinate} transform Coordinate\n *     transform.\n * @return {ol.TransformFunction} Transform function.\n */\n_ol_proj_.createTransformFromCoordinateTransform = function(transform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      var point, i, j;\n      for (i = 0; i < length; i += dimension) {\n        point = transform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n};\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {ol.Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ol.ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {ol.Coordinate} Coordinate projected to the target projection.\n * @api\n */\n_ol_proj_.fromLonLat = function(coordinate, opt_projection) {\n  return _ol_proj_.transform(coordinate, 'EPSG:4326',\n      opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n};\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {ol.Coordinate} coordinate Projected coordinate.\n * @param {ol.ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {ol.Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\n_ol_proj_.toLonLat = function(coordinate, opt_projection) {\n  var lonLat = _ol_proj_.transform(coordinate,\n      opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = _ol_math_.modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n};\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ol.ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {ol.proj.Projection} Projection object, or null if not in list.\n * @api\n */\n_ol_proj_.get = function(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof _ol_proj_Projection_) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = _ol_proj_projections_.get(code);\n    if (_ol_.ENABLE_PROJ4JS && !projection) {\n      var proj4js = _ol_proj_proj4_.get();\n      if (typeof proj4js == 'function' &&\n          proj4js.defs(code) !== undefined) {\n        projection = new _ol_proj_Projection_({code: code});\n        _ol_proj_.addProjection(projection);\n      }\n    }\n  }\n  return projection;\n};\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {ol.proj.Projection} projection1 Projection 1.\n * @param {ol.proj.Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\n_ol_proj_.equivalent = function(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFn = _ol_proj_.getTransformFromProjections(\n        projection1, projection2);\n    return transformFn === _ol_proj_.cloneTransform && equalUnits;\n  }\n};\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ol.ProjectionLike} source Source.\n * @param {ol.ProjectionLike} destination Destination.\n * @return {ol.TransformFunction} Transform function.\n * @api\n */\n_ol_proj_.getTransform = function(source, destination) {\n  var sourceProjection = _ol_proj_.get(source);\n  var destinationProjection = _ol_proj_.get(destination);\n  return _ol_proj_.getTransformFromProjections(\n      sourceProjection, destinationProjection);\n};\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {ol.proj.Projection} sourceProjection Source Projection object.\n * @param {ol.proj.Projection} destinationProjection Destination Projection\n *     object.\n * @return {ol.TransformFunction} Transform function.\n */\n_ol_proj_.getTransformFromProjections = function(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transform = _ol_proj_transforms_.get(sourceCode, destinationCode);\n  if (_ol_.ENABLE_PROJ4JS && !transform) {\n    var proj4js = _ol_proj_proj4_.get();\n    if (typeof proj4js == 'function') {\n      var sourceDef = proj4js.defs(sourceCode);\n      var destinationDef = proj4js.defs(destinationCode);\n\n      if (sourceDef !== undefined && destinationDef !== undefined) {\n        if (sourceDef === destinationDef) {\n          _ol_proj_.addEquivalentProjections([destinationProjection, sourceProjection]);\n        } else {\n          var proj4Transform = proj4js(destinationCode, sourceCode);\n          _ol_proj_.addCoordinateTransforms(destinationProjection, sourceProjection,\n              proj4Transform.forward, proj4Transform.inverse);\n        }\n        transform = _ol_proj_transforms_.get(sourceCode, destinationCode);\n      }\n    }\n  }\n  if (!transform) {\n    transform = _ol_proj_.identityTransform;\n  }\n  return transform;\n};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\n_ol_proj_.identityTransform = function(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\n_ol_proj_.cloneTransform = function(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n};\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link ol.proj.transformExtent} for extent transformation.\n * See the transform method of {@link ol.geom.Geometry} and its subclasses for\n * geometry transforms.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.ProjectionLike} source Source projection-like.\n * @param {ol.ProjectionLike} destination Destination projection-like.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_proj_.transform = function(coordinate, source, destination) {\n  var transformFn = _ol_proj_.getTransform(source, destination);\n  return transformFn(coordinate, undefined, coordinate.length);\n};\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {ol.Extent} extent The extent to transform.\n * @param {ol.ProjectionLike} source Source projection-like.\n * @param {ol.ProjectionLike} destination Destination projection-like.\n * @return {ol.Extent} The transformed extent.\n * @api\n */\n_ol_proj_.transformExtent = function(extent, source, destination) {\n  var transformFn = _ol_proj_.getTransform(source, destination);\n  return _ol_extent_.applyTransform(extent, transformFn);\n};\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {ol.Coordinate} point Point.\n * @param {ol.proj.Projection} sourceProjection Source projection.\n * @param {ol.proj.Projection} destinationProjection Destination projection.\n * @return {ol.Coordinate} Point.\n */\n_ol_proj_.transformWithProjections = function(point, sourceProjection, destinationProjection) {\n  var transformFn = _ol_proj_.getTransformFromProjections(\n      sourceProjection, destinationProjection);\n  return transformFn(point);\n};\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `ol.proj.clearAllProjections()` is called (e.g. in tests).\n */\n_ol_proj_.addCommon = function() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  _ol_proj_.addEquivalentProjections(_ol_proj_EPSG3857_.PROJECTIONS);\n  _ol_proj_.addEquivalentProjections(_ol_proj_EPSG4326_.PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  _ol_proj_.addEquivalentTransforms(\n      _ol_proj_EPSG4326_.PROJECTIONS,\n      _ol_proj_EPSG3857_.PROJECTIONS,\n      _ol_proj_EPSG3857_.fromEPSG4326,\n      _ol_proj_EPSG3857_.toEPSG4326);\n};\n\n_ol_proj_.addCommon();\nexport default _ol_proj_;\n","var _ol_dom_ = {};\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\n_ol_dom_.createCanvasContext2D = function(opt_width, opt_height) {\n  var canvas = document.createElement('CANVAS');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return canvas.getContext('2d');\n};\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\n_ol_dom_.outerWidth = function(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n};\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\n_ol_dom_.outerHeight = function(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n};\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\n_ol_dom_.replaceNode = function(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n};\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\n_ol_dom_.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\n\n/**\n * @param {Node} node The node to remove the children from.\n */\n_ol_dom_.removeChildren = function(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n};\nexport default _ol_dom_;\n","/**\n * @enum {number}\n */\nvar _ol_ViewHint_ = {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\nexport default _ol_ViewHint_;\n","import _ol_ from './index.js';\nimport _ol_ObjectEventType_ from './objecteventtype.js';\nimport _ol_Observable_ from './observable.js';\nimport _ol_events_Event_ from './events/event.js';\nimport _ol_obj_ from './obj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link ol.Observable} with observable properties, where each\n * property is observable as well as the object as a whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link ol.Map} has a `target` property, accessed with `getTarget()`  and\n * changed with `setTarget()`. Not all properties are however settable. There\n * are also general-purpose accessors `get()` and `set()`. For example,\n * `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link ol.View} has a `center`\n * property, so `view.on('change:center', function(evt) {...});` would call the\n * function whenever the value of the center property changes. Within the\n * function, `evt.target` would be the view, so `evt.target.getCenter()` would\n * return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link ol.Object#getProperties object.getProperties()}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {ol.Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires ol.Object.Event\n * @api\n */\nvar _ol_Object_ = function(opt_values) {\n  _ol_Observable_.call(this);\n\n  // Call ol.getUid to ensure that the order of objects' ids is the same as\n  // the order in which they were created.  This also helps to ensure that\n  // object properties are always added in the same order, which helps many\n  // JavaScript engines generate faster code.\n  _ol_.getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\n_ol_.inherits(_ol_Object_, _ol_Observable_);\n\n\n/**\n * @private\n * @type {Object.<string, string>}\n */\n_ol_Object_.changeEventTypeCache_ = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\n_ol_Object_.getChangeEventType = function(key) {\n  return _ol_Object_.changeEventTypeCache_.hasOwnProperty(key) ?\n    _ol_Object_.changeEventTypeCache_[key] :\n    (_ol_Object_.changeEventTypeCache_[key] = 'change:' + key);\n};\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\n_ol_Object_.prototype.get = function(key) {\n  var value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\n_ol_Object_.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\n_ol_Object_.prototype.getProperties = function() {\n  return _ol_obj_.assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\n_ol_Object_.prototype.notify = function(key, oldValue) {\n  var eventType;\n  eventType = _ol_Object_.getChangeEventType(key);\n  this.dispatchEvent(new _ol_Object_.Event(eventType, key, oldValue));\n  eventType = _ol_ObjectEventType_.PROPERTYCHANGE;\n  this.dispatchEvent(new _ol_Object_.Event(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\n_ol_Object_.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    var oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\n_ol_Object_.prototype.setProperties = function(values, opt_silent) {\n  var key;\n  for (key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\n_ol_Object_.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    var oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.Object} instances are instances of this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {ol.events.Event}\n * @implements {oli.Object.Event}\n * @constructor\n */\n_ol_Object_.Event = function(type, key, oldValue) {\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\n_ol_.inherits(_ol_Object_.Event, _ol_events_Event_);\nexport default _ol_Object_;\n","var _ol_functions_ = {};\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\n_ol_functions_.TRUE = function() {\n  return true;\n};\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\n_ol_functions_.FALSE = function() {\n  return false;\n};\nexport default _ol_functions_;\n","import _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nvar _ol_MapBrowserEventType_ = {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event ol.MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event ol.MapBrowserEvent#click\n   * @api\n   */\n  CLICK: _ol_events_EventType_.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event ol.MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: _ol_events_EventType_.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event ol.MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event ol.MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\nexport default _ol_MapBrowserEventType_;\n","import _ol_ from './index.js';\nimport _ol_webgl_ from './webgl.js';\nvar _ol_has_ = {};\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\n_ol_has_.FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\n_ol_has_.SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\n_ol_has_.WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\n_ol_has_.MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\n_ol_has_.DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\n_ol_has_.CANVAS_LINE_DASH = false;\n\n\n/**\n * True if both the library and browser support Canvas.  Always `false`\n * if `ol.ENABLE_CANVAS` is set to `false` at compile time.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.CANVAS = _ol_.ENABLE_CANVAS && (\n  /**\n   * @return {boolean} Canvas supported.\n   */\n  function() {\n    if (!('HTMLCanvasElement' in window)) {\n      return false;\n    }\n    try {\n      var context = document.createElement('CANVAS').getContext('2d');\n      if (!context) {\n        return false;\n      } else {\n        if (context.setLineDash !== undefined) {\n          _ol_has_.CANVAS_LINE_DASH = true;\n        }\n        return true;\n      }\n    } catch (e) {\n      return false;\n    }\n  })();\n\n\n/**\n * Indicates if DeviceOrientation is supported in the user's browser.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.DEVICE_ORIENTATION = 'DeviceOrientationEvent' in window;\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.TOUCH = _ol_.ASSUME_TOUCH || 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\n_ol_has_.POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\n_ol_has_.MSPOINTER = !!(navigator.msPointerEnabled);\n\n\n/**\n * True if both OpenLayers and browser support WebGL.  Always `false`\n * if `ol.ENABLE_WEBGL` is set to `false` at compile time.\n * @const\n * @type {boolean}\n * @api\n */\n_ol_has_.WEBGL;\n\n\n(function() {\n  if (_ol_.ENABLE_WEBGL) {\n    var hasWebGL = false;\n    var textureSize;\n    var /** @type {Array.<string>} */ extensions = [];\n\n    if ('WebGLRenderingContext' in window) {\n      try {\n        var canvas = /** @type {HTMLCanvasElement} */\n            (document.createElement('CANVAS'));\n        var gl = _ol_webgl_.getContext(canvas, {\n          failIfMajorPerformanceCaveat: true\n        });\n        if (gl) {\n          hasWebGL = true;\n          textureSize = /** @type {number} */\n            (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n          extensions = gl.getSupportedExtensions();\n        }\n      } catch (e) {\n        // pass\n      }\n    }\n    _ol_has_.WEBGL = hasWebGL;\n    _ol_.WEBGL_EXTENSIONS = extensions;\n    _ol_.WEBGL_MAX_TEXTURE_SIZE = textureSize;\n  }\n})();\nexport default _ol_has_;\n","/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link ol.events.EventTarget}.\n *\n * @constructor\n * @implements {oli.events.Event}\n * @param {string} type Type.\n */\nvar _ol_events_Event_ = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @override\n * @api\n */\n_ol_events_Event_.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @override\n   * @api\n   */\n  _ol_events_Event_.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|ol.events.Event} evt Event\n */\n_ol_events_Event_.stopPropagation = function(evt) {\n  evt.stopPropagation();\n};\n\n\n/**\n * @param {Event|ol.events.Event} evt Event\n */\n_ol_events_Event_.preventDefault = function(evt) {\n  evt.preventDefault();\n};\nexport default _ol_events_Event_;\n","/**\n * @enum {number}\n */\nvar _ol_ImageState_ = {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\nexport default _ol_ImageState_;\n","// FIXME factor out key precondition (shift et. al)\n\nimport _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_interaction_Property_ from '../interaction/property.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link ol.interaction.KeyboardZoom} is functionally the same as\n * {@link ol.control.Zoom}, but triggered by a keyboard event not a button\n * element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {olx.interaction.InteractionOptions} options Options.\n * @extends {ol.Object}\n * @api\n */\nvar _ol_interaction_Interaction_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(ol.MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\n_ol_.inherits(_ol_interaction_Interaction_, _ol_Object_);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\n_ol_interaction_Interaction_.prototype.getActive = function() {\n  return (\n    /** @type {boolean} */ this.get(_ol_interaction_Property_.ACTIVE)\n  );\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {ol.PluggableMap} Map.\n * @api\n */\n_ol_interaction_Interaction_.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\n_ol_interaction_Interaction_.prototype.setActive = function(active) {\n  this.set(_ol_interaction_Property_.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n */\n_ol_interaction_Interaction_.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {ol.Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.pan = function(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n        [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: _ol_easing_.linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.rotate = function(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  _ol_interaction_Interaction_.rotateWithoutConstraints(\n      view, rotation, opt_anchor, opt_duration);\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.rotateWithoutConstraints = function(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\n_ol_interaction_Interaction_.zoom = function(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  _ol_interaction_Interaction_.zoomWithoutConstraints(\n      view, resolution, opt_anchor, opt_duration);\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.zoomByDelta = function(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = _ol_math_.clamp(\n        resolution,\n        view.getMinResolution() || resolutions[resolutions.length - 1],\n        view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  _ol_interaction_Interaction_.zoomWithoutConstraints(\n      view, resolution, opt_anchor, opt_duration);\n};\n\n\n/**\n * @param {ol.View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {ol.Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n_ol_interaction_Interaction_.zoomWithoutConstraints = function(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n};\nexport default _ol_interaction_Interaction_;\n","/**\n * An implementation of Google Maps' MVCArray.\n * @see https://developers.google.com/maps/documentation/javascript/reference\n */\n\nimport _ol_ from './index.js';\nimport _ol_AssertionError_ from './assertionerror.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_Object_ from './object.js';\nimport _ol_events_Event_ from './events/event.js';\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {ol.Object}\n * @fires ol.Collection.Event\n * @param {Array.<T>=} opt_array Array.\n * @param {olx.CollectionOptions=} opt_options Collection options.\n * @template T\n * @api\n */\nvar _ol_Collection_ = function(opt_array, opt_options) {\n\n  _ol_Object_.call(this);\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\n_ol_.inherits(_ol_Collection_, _ol_Object_);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\n_ol_Collection_.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {ol.Collection.<T>} This collection.\n * @api\n */\n_ol_Collection_.prototype.extend = function(arr) {\n  var i, ii;\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(this: S, T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n * @api\n */\n_ol_Collection_.prototype.forEach = function(f, opt_this) {\n  var fn = (opt_this) ? f.bind(opt_this) : f;\n  var array = this.array_;\n  for (var i = 0, ii = array.length; i < ii; ++i) {\n    fn(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\n_ol_Collection_.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\n_ol_Collection_.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\n_ol_Collection_.prototype.getLength = function() {\n  return (\n    /** @type {number} */ this.get(_ol_Collection_.Property_.LENGTH)\n  );\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n_ol_Collection_.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n      new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\n_ol_Collection_.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\n_ol_Collection_.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  var n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\n_ol_Collection_.prototype.remove = function(elem) {\n  var arr = this.array_;\n  var i, ii;\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\n_ol_Collection_.prototype.removeAt = function(index) {\n  var prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(\n      new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n_ol_Collection_.prototype.setAt = function(index, elem) {\n  var n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    var prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n        new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n    this.dispatchEvent(\n        new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n  } else {\n    var j;\n    for (j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\n_ol_Collection_.prototype.updateLength_ = function() {\n  this.set(_ol_Collection_.Property_.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\n_ol_Collection_.prototype.assertUnique_ = function(elem, opt_except) {\n  for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new _ol_AssertionError_(58);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_Collection_.Property_ = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.Collection.Event}\n * @param {ol.CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\n_ol_Collection_.Event = function(type, opt_element) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n_ol_.inherits(_ol_Collection_.Event, _ol_events_Event_);\nexport default _ol_Collection_;\n","var _ol_geom_flat_transform_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.transform2D = function(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  var j;\n  for (j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.rotate = function(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.scale = function(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\n_ol_geom_flat_transform_.translate = function(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  var j, k;\n  for (j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n};\nexport default _ol_geom_flat_transform_;\n","import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_Event_ from '../events/event.js';\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {ol.Disposable}\n */\nvar _ol_events_EventTarget_ = function() {\n\n  _ol_Disposable_.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<ol.EventsListenerFunctionType>>}\n   */\n  this.listeners_ = {};\n\n};\n\n_ol_.inherits(_ol_events_EventTarget_, _ol_Disposable_);\n\n\n/**\n * @param {string} type Type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n */\n_ol_events_EventTarget_.prototype.addEventListener = function(type, listener) {\n  var listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|ol.events.EventTarget|undefined)}|ol.events.Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\n_ol_events_EventTarget_.prototype.dispatchEvent = function(event) {\n  var evt = typeof event === 'string' ? new _ol_events_Event_(event) : event;\n  var type = evt.type;\n  evt.target = this;\n  var listeners = this.listeners_[type];\n  var propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      var pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, _ol_.nullFunction);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_events_EventTarget_.prototype.disposeInternal = function() {\n  _ol_events_.unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<ol.EventsListenerFunctionType>} Listeners.\n */\n_ol_events_EventTarget_.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\n_ol_events_EventTarget_.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n */\n_ol_events_EventTarget_.prototype.removeEventListener = function(type, listener) {\n  var listeners = this.listeners_[type];\n  if (listeners) {\n    var index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = _ol_.nullFunction;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default _ol_events_EventTarget_;\n","import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_MapBrowserPointerEvent_ from '../mapbrowserpointerevent.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {olx.interaction.PointerOptions=} opt_options Options.\n * @extends {ol.interaction.Interaction}\n * @api\n */\nvar _ol_interaction_Pointer_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var handleEvent = options.handleEvent ?\n    options.handleEvent : _ol_interaction_Pointer_.handleEvent;\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : _ol_interaction_Pointer_.handleDownEvent;\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : _ol_interaction_Pointer_.handleDragEvent;\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : _ol_interaction_Pointer_.handleMoveEvent;\n\n  /**\n   * @type {function(ol.MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : _ol_interaction_Pointer_.handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {Object.<string, ol.pointer.PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<ol.pointer.PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\n_ol_.inherits(_ol_interaction_Pointer_, _ol_interaction_Interaction_);\n\n\n/**\n * @param {Array.<ol.pointer.PointerEvent>} pointerEvents List of events.\n * @return {ol.Pixel} Centroid pixel.\n */\n_ol_interaction_Pointer_.centroid = function(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n * @private\n */\n_ol_interaction_Pointer_.prototype.isPointerDraggingEvent_ = function(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === _ol_MapBrowserEventType_.POINTERDOWN ||\n    type === _ol_MapBrowserEventType_.POINTERDRAG ||\n    type === _ol_MapBrowserEventType_.POINTERUP;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\n_ol_interaction_Pointer_.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (this.isPointerDraggingEvent_(mapBrowserEvent)) {\n    var event = mapBrowserEvent.pointerEvent;\n\n    var id = event.pointerId.toString();\n    if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        _ol_MapBrowserEventType_.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = _ol_obj_.getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleDragEvent = _ol_.nullFunction;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleUpEvent = _ol_functions_.FALSE;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleDownEvent = _ol_functions_.FALSE;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.Pointer}\n */\n_ol_interaction_Pointer_.handleMoveEvent = _ol_.nullFunction;\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Pointer}\n * @api\n */\n_ol_interaction_Pointer_.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof _ol_MapBrowserPointerEvent_)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == _ol_MapBrowserEventType_.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n};\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overidden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\n_ol_interaction_Pointer_.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\nexport default _ol_interaction_Pointer_;\n","/**\n * @enum {string}\n */\nvar _ol_layer_Property_ = {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\nexport default _ol_layer_Property_;\n","/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nvar _ol_geom_GeometryLayout_ = {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\nexport default _ol_geom_GeometryLayout_;\n","/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nvar _ol_LayerType_ = {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\nexport default _ol_LayerType_;\n","var _ol_easing_ = {};\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.easeIn = function(t) {\n  return Math.pow(t, 3);\n};\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.easeOut = function(t) {\n  return 1 - _ol_easing_.easeIn(1 - t);\n};\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.inAndOut = function(t) {\n  return 3 * t * t - 2 * t * t * t;\n};\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.linear = function(t) {\n  return t;\n};\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link ol.easing.inAndOut}, but the final slowdown\n * is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.upAndDown = function(t) {\n  if (t < 0.5) {\n    return _ol_easing_.inAndOut(2 * t);\n  } else {\n    return 1 - _ol_easing_.inAndOut(2 * (t - 0.5));\n  }\n};\nexport default _ol_easing_;\n","/**\n * Relationship to an extent.\n * @enum {number}\n */\nvar _ol_extent_Relationship_ = {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\nexport default _ol_extent_Relationship_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_math_ from './math.js';\nvar _ol_color_ = {};\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\n_ol_color_.HEX_COLOR_RE_ = /^#(?:[0-9a-f]{3,4}){1,2}$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\n_ol_color_.NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {ol.Color|string} color Color.\n * @return {ol.Color} Color.\n * @api\n */\n_ol_color_.asArray = function(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return _ol_color_.fromString(/** @type {string} */ (color));\n  }\n};\n\n\n/**\n * Return the color as an rgba string.\n * @param {ol.Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\n_ol_color_.asString = function(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return _ol_color_.toString(color);\n  }\n};\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\n_ol_color_.fromNamed = function(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  document.body.appendChild(el);\n  var rgb = getComputedStyle(el).color;\n  document.body.removeChild(el);\n  return rgb;\n};\n\n\n/**\n * @param {string} s String.\n * @return {ol.Color} Color.\n */\n_ol_color_.fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, ol.Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {ol.Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            var key;\n            for (key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = _ol_color_.fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n\n/**\n * @param {string} s String.\n * @private\n * @return {ol.Color} Color.\n */\n_ol_color_.fromStringInternal_ = function(s) {\n  var r, g, b, a, color, parts;\n\n  if (_ol_color_.NAMED_COLOR_RE_.exec(s)) {\n    s = _ol_color_.fromNamed(s);\n  }\n\n  if (_ol_color_.HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    parts = s.slice(5, -1).split(',').map(Number);\n    color = _ol_color_.normalize(parts);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    parts = s.slice(4, -1).split(',').map(Number);\n    parts.push(1);\n    color = _ol_color_.normalize(parts);\n  } else {\n    _ol_asserts_.assert(false, 14); // Invalid color\n  }\n  return /** @type {ol.Color} */ (color);\n};\n\n\n/**\n * @param {ol.Color} color Color.\n * @param {ol.Color=} opt_color Color.\n * @return {ol.Color} Clamped color.\n */\n_ol_color_.normalize = function(color, opt_color) {\n  var result = opt_color || [];\n  result[0] = _ol_math_.clamp((color[0] + 0.5) | 0, 0, 255);\n  result[1] = _ol_math_.clamp((color[1] + 0.5) | 0, 0, 255);\n  result[2] = _ol_math_.clamp((color[2] + 0.5) | 0, 0, 255);\n  result[3] = _ol_math_.clamp(color[3], 0, 1);\n  return result;\n};\n\n\n/**\n * @param {ol.Color} color Color.\n * @return {string} String.\n */\n_ol_color_.toString = function(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n};\nexport default _ol_color_;\n","/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar _ol_proj_Units_ = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<ol.proj.Units, number>}\n * @api\n */\n_ol_proj_Units_.METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES] =\n    2 * Math.PI * 6370997 / 360;\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.FEET] = 0.3048;\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.METERS] = 1;\n_ol_proj_Units_.METERS_PER_UNIT[_ol_proj_Units_.USFEET] = 1200 / 3937;\nexport default _ol_proj_Units_;\n","var _ol_css_ = {};\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\n_ol_css_.CLASS_CONTROL = 'ol-control';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\n_ol_css_.getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\nexport default _ol_css_;\n","import _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_layer_Base_ from '../layer/base.js';\nimport _ol_layer_Property_ from '../layer/property.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_render_EventType_ from '../render/eventtype.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link ol.Map#addLayer}. Components\n * like {@link ol.interaction.Select} use unmanaged layers internally. These\n * unmanaged layers are associated with the map using\n * {@link ol.layer.Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {ol.layer.Base}\n * @fires ol.render.Event\n * @param {olx.layer.LayerOptions} options Layer options.\n * @api\n */\nvar _ol_layer_Layer_ = function(options) {\n\n  var baseOptions = _ol_obj_.assign({}, options);\n  delete baseOptions.source;\n\n  _ol_layer_Base_.call(this, /** @type {olx.layer.BaseOptions} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  _ol_events_.listen(this,\n      _ol_Object_.getChangeEventType(_ol_layer_Property_.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n  var source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\n_ol_.inherits(_ol_layer_Layer_, _ol_layer_Base_);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {ol.LayerState} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\n_ol_layer_Layer_.visibleAtResolution = function(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Layer_.prototype.getLayersArray = function(opt_array) {\n  var array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Layer_.prototype.getLayerStatesArray = function(opt_states) {\n  var states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {ol.source.Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\n_ol_layer_Layer_.prototype.getSource = function() {\n  var source = this.get(_ol_layer_Property_.SOURCE);\n  return /** @type {ol.source.Source} */ (source) || null;\n};\n\n\n/**\n  * @inheritDoc\n  */\n_ol_layer_Layer_.prototype.getSourceState = function() {\n  var source = this.getSource();\n  return !source ? _ol_source_State_.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\n_ol_layer_Layer_.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\n_ol_layer_Layer_.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    _ol_events_.unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  var source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = _ol_events_.listen(source,\n        _ol_events_EventType_.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link ol.Map#addLayer} instead.\n * @param {ol.PluggableMap} map Map.\n * @api\n */\n_ol_layer_Layer_.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    _ol_events_.unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    _ol_events_.unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = _ol_events_.listen(\n        map, _ol_render_EventType_.PRECOMPOSE, function(evt) {\n          var layerState = this.getLayerState();\n          layerState.managed = false;\n          layerState.zIndex = Infinity;\n          evt.frameState.layerStatesArray.push(layerState);\n          evt.frameState.layerStates[_ol_.getUid(this)] = layerState;\n        }, this);\n    this.mapRenderKey_ = _ol_events_.listen(\n        this, _ol_events_EventType_.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {ol.source.Source} source The layer source.\n * @observable\n * @api\n */\n_ol_layer_Layer_.prototype.setSource = function(source) {\n  this.set(_ol_layer_Property_.SOURCE, source);\n};\nexport default _ol_layer_Layer_;\n","/**\n * @enum {string}\n */\nvar _ol_CollectionEventType_ = {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event ol.Collection.Event#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event ol.Collection.Event#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\nexport default _ol_CollectionEventType_;\n","/**\n * @enum {string}\n */\nvar _ol_render_EventType_ = {\n  /**\n   * @event ol.render.Event#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event ol.render.Event#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event ol.render.Event#render\n   * @api\n   */\n  RENDER: 'render'\n};\n\nexport default _ol_render_EventType_;\n","import _ol_color_ from './color.js';\nvar _ol_colorlike_ = {};\n\n\n/**\n * @param {ol.Color|ol.ColorLike} color Color.\n * @return {ol.ColorLike} The color as an ol.ColorLike\n * @api\n */\n_ol_colorlike_.asColorLike = function(color) {\n  if (_ol_colorlike_.isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return _ol_color_.asString(/** @type {ol.Color} */ (color));\n  }\n};\n\n\n/**\n * @param {?} color The value that is potentially an ol.ColorLike\n * @return {boolean} Whether the color is an ol.ColorLike\n */\n_ol_colorlike_.isColorLike = function(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n};\nexport default _ol_colorlike_;\n","var _ol_tilecoord_ = {};\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {ol.TileCoord=} opt_tileCoord Tile coordinate.\n * @return {ol.TileCoord} Tile coordinate.\n */\n_ol_tilecoord_.createOrUpdate = function(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\n_ol_tilecoord_.getKeyZXY = function(z, x, y) {\n  return z + '/' + x + '/' + y;\n};\n\n\n/**\n * Get the key for a tile coord.\n * @param {ol.TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\n_ol_tilecoord_.getKey = function(tileCoord) {\n  return _ol_tilecoord_.getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {ol.TileCoord} The tile coord.\n */\n_ol_tilecoord_.fromKey = function(key) {\n  return key.split('/').map(Number);\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\n_ol_tilecoord_.hash = function(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\n_ol_tilecoord_.quadKey = function(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {!ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\n_ol_tilecoord_.withinExtentAndZ = function(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n};\nexport default _ol_tilecoord_;\n","var _ol_size_ = {};\n\n\n/**\n * Returns a buffered size.\n * @param {ol.Size} size Size.\n * @param {number} buffer Buffer.\n * @param {ol.Size=} opt_size Optional reusable size array.\n * @return {ol.Size} The buffered size.\n */\n_ol_size_.buffer = function(size, buffer, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * buffer;\n  opt_size[1] = size[1] + 2 * buffer;\n  return opt_size;\n};\n\n\n/**\n * Determines if a size has a positive area.\n * @param {ol.Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\n_ol_size_.hasArea = function(size) {\n  return size[0] > 0 && size[1] > 0;\n};\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {ol.Size} size Size.\n * @param {number} ratio Ratio.\n * @param {ol.Size=} opt_size Optional reusable size array.\n * @return {ol.Size} The scaled size.\n */\n_ol_size_.scale = function(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n};\n\n\n/**\n * Returns an `ol.Size` array for the passed in number (meaning: square) or\n * `ol.Size` array.\n * (meaning: non-square),\n * @param {number|ol.Size} size Width and height.\n * @param {ol.Size=} opt_size Optional reusable size array.\n * @return {ol.Size} Size.\n * @api\n */\n_ol_size_.toSize = function(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n};\nexport default _ol_size_;\n","/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nvar _ol_source_State_ = {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\nexport default _ol_source_State_;\n\n","import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {ol.geom.Geometry}\n * @api\n */\nvar _ol_geom_SimpleGeometry_ = function() {\n\n  _ol_geom_Geometry_.call(this);\n\n  /**\n   * @protected\n   * @type {ol.geom.GeometryLayout}\n   */\n  this.layout = _ol_geom_GeometryLayout_.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\n_ol_.inherits(_ol_geom_SimpleGeometry_, _ol_geom_Geometry_);\n\n\n/**\n * @param {number} stride Stride.\n * @private\n * @return {ol.geom.GeometryLayout} layout Layout.\n */\n_ol_geom_SimpleGeometry_.getLayoutForStride_ = function(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = _ol_geom_GeometryLayout_.XY;\n  } else if (stride == 3) {\n    layout = _ol_geom_GeometryLayout_.XYZ;\n  } else if (stride == 4) {\n    layout = _ol_geom_GeometryLayout_.XYZM;\n  }\n  return /** @type {ol.geom.GeometryLayout} */ (layout);\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.getStrideForLayout = function(layout) {\n  var stride;\n  if (layout == _ol_geom_GeometryLayout_.XY) {\n    stride = 2;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZ || layout == _ol_geom_GeometryLayout_.XYM) {\n    stride = 3;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.containsXY = _ol_functions_.FALSE;\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.computeExtent = function(extent) {\n  return _ol_extent_.createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {ol.Coordinate} First coordinate.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {ol.Coordinate} Last point.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link ol.geom.GeometryLayout layout} of the geometry.\n * @return {ol.geom.GeometryLayout} Layout.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.SimpleGeometry} Simplified geometry.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n */\n_ol_geom_SimpleGeometry_.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  var stride;\n  if (layout) {\n    stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  } else {\n    var i;\n    for (i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = _ol_geom_GeometryLayout_.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = _ol_geom_SimpleGeometry_.getLayoutForStride_(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.rotate = function(angle, anchor) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = _ol_extent_.getCenter(this.getExtent());\n  }\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.translate = function(deltaX, deltaY) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} simpleGeometry Simple geometry.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\n_ol_geom_SimpleGeometry_.transform2D = function(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return _ol_geom_flat_transform_.transform2D(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        transform, opt_dest);\n  }\n};\nexport default _ol_geom_SimpleGeometry_;\n","var _ol_string_ = {};\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n*/\n_ol_string_.padNumber = function(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n};\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\n_ol_string_.compareVersions = function(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n};\nexport default _ol_string_;\n","import _ol_math_ from './math.js';\nimport _ol_string_ from './string.js';\nvar _ol_coordinate_ = {};\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     var coord = [7.85, 47.983333];\n *     ol.coordinate.add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Coordinate} delta Delta.\n * @return {ol.Coordinate} The input coordinate adjusted by the given delta.\n * @api\n */\n_ol_coordinate_.add = function(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n};\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {ol.Coordinate} coordinate The coordinate.\n * @param {ol.geom.Circle} circle The circle.\n * @return {ol.Coordinate} Closest point on the circumference\n */\n_ol_coordinate_.closestOnCircle = function(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x, y;\n\n  x = x0 + r * dx / d;\n  y = y0 + r * dy / d;\n\n  return [x, y];\n};\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {ol.Coordinate} coordinate The coordinate.\n * @param {Array.<ol.Coordinate>} segment The two coordinates of the segment.\n * @return {ol.Coordinate} The foot of the perpendicular of the coordinate to\n *     the segment.\n */\n_ol_coordinate_.closestOnSegment = function(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n};\n\n\n/**\n * Returns a {@link ol.CoordinateFormatType} function that can be used to format\n * a {ol.Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = ol.coordinate.createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = ol.coordinate.createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {ol.CoordinateFormatType} Coordinate format.\n * @api\n */\n_ol_coordinate_.createStringXY = function(opt_fractionDigits) {\n  return (\n    /**\n     * @param {ol.Coordinate|undefined} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return _ol_coordinate_.toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n};\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\n_ol_coordinate_.degreesToStringHDMS = function(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = _ol_math_.modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + _ol_string_.padNumber(min, 2) + '\\u2032 ' +\n    _ol_string_.padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n};\n\n\n/**\n * Transforms the given {@link ol.Coordinate} to a string using the given string\n * template. The strings `{x}` and `{y}` in the template will be replaced with\n * the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = ol.coordinate.format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = ol.coordinate.format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {ol.Coordinate|undefined} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\n_ol_coordinate_.format = function(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n        .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n        .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate1 First coordinate.\n * @param {ol.Coordinate} coordinate2 Second coordinate.\n * @return {boolean} Whether the passed coordinates are equal.\n */\n_ol_coordinate_.equals = function(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n};\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     ol.coordinate.rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_coordinate_.rotate = function(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n};\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     ol.coordinate.scale(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {ol.Coordinate} Coordinate.\n */\n_ol_coordinate_.scale = function(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n};\n\n\n/**\n * Subtract `delta` to `coordinate`. `coordinate` is modified in place and\n * returned by the function.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Coordinate} delta Delta.\n * @return {ol.Coordinate} Coordinate.\n */\n_ol_coordinate_.sub = function(coordinate, delta) {\n  coordinate[0] -= delta[0];\n  coordinate[1] -= delta[1];\n  return coordinate;\n};\n\n\n/**\n * @param {ol.Coordinate} coord1 First coordinate.\n * @param {ol.Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\n_ol_coordinate_.squaredDistance = function(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @param {ol.Coordinate} coord1 First coordinate.\n * @param {ol.Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\n_ol_coordinate_.distance = function(coord1, coord2) {\n  return Math.sqrt(_ol_coordinate_.squaredDistance(coord1, coord2));\n};\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {ol.Coordinate} coordinate Coordinate of the point.\n * @param {Array.<ol.Coordinate>} segment Line segment (2 coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\n_ol_coordinate_.squaredDistanceToSegment = function(coordinate, segment) {\n  return _ol_coordinate_.squaredDistance(coordinate,\n      _ol_coordinate_.closestOnSegment(coordinate, segment));\n};\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {ol.Coordinate|undefined} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\n_ol_coordinate_.toStringHDMS = function(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return _ol_coordinate_.degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        _ol_coordinate_.degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n};\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     var coord = [7.85, 47.983333];\n *     var out = ol.coordinate.toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {ol.Coordinate|undefined} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\n_ol_coordinate_.toStringXY = function(coordinate, opt_fractionDigits) {\n  return _ol_coordinate_.format(coordinate, '{x}, {y}', opt_fractionDigits);\n};\nexport default _ol_coordinate_;\n","import _ol_extent_ from '../../extent.js';\nvar _ol_geom_flat_contains_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\n_ol_geom_flat_contains_.linearRingContainsExtent = function(flatCoordinates, offset, end, stride, extent) {\n  var outside = _ol_extent_.forEachCorner(extent,\n      /**\n       * @param {ol.Coordinate} coordinate Coordinate.\n       * @return {boolean} Contains (x, y).\n       */\n      function(coordinate) {\n        return !_ol_geom_flat_contains_.linearRingContainsXY(flatCoordinates,\n            offset, end, stride, coordinate[0], coordinate[1]);\n      });\n  return !outside;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_flat_contains_.linearRingContainsXY = function(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_flat_contains_.linearRingsContainsXY = function(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  var i, ii;\n  for (i = 1, ii = ends.length; i < ii; ++i) {\n    if (_ol_geom_flat_contains_.linearRingContainsXY(\n        flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_flat_contains_.linearRingssContainsXY = function(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (_ol_geom_flat_contains_.linearRingsContainsXY(\n        flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n};\nexport default _ol_geom_flat_contains_;\n","/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nvar _ol_TileRange_ = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {ol.TileRange|undefined} tileRange TileRange.\n * @return {ol.TileRange} Tile range.\n */\n_ol_TileRange_.createOrUpdate = function(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new _ol_TileRange_(minX, maxX, minY, maxY);\n  }\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\n_ol_TileRange_.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\n_ol_TileRange_.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\n_ol_TileRange_.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\n_ol_TileRange_.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n */\n_ol_TileRange_.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\n_ol_TileRange_.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {ol.Size} Size.\n */\n_ol_TileRange_.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\n_ol_TileRange_.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\n_ol_TileRange_.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default _ol_TileRange_;\n","import _ol_ from '../index.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_TileRange_ from '../tilerange.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_math_ from '../math.js';\nimport _ol_size_ from '../size.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {olx.tilegrid.TileGridOptions} options Tile grid options.\n * @struct\n * @api\n */\nvar _ol_tilegrid_TileGrid_ = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  _ol_asserts_.assert(_ol_array_.isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<ol.Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    _ol_asserts_.assert(this.origins_.length == this.resolutions_.length,\n        20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = _ol_extent_.getTopLeft(extent);\n  }\n\n  _ol_asserts_.assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|ol.Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    _ol_asserts_.assert(this.tileSizes_.length == this.resolutions_.length,\n        19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|ol.Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? _ol_.DEFAULT_TILE_SIZE : null;\n  _ol_asserts_.assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<ol.TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new _ol_TileRange_(\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {ol.TileCoord}\n */\n_ol_tilegrid_TileGrid_.tmpTileCoord_ = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {ol.Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(ol.TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, ol.TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {ol.TileRange=} opt_tileRange Temporary ol.TileRange object.\n * @param {ol.Extent=} opt_extent Temporary ol.Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\n_ol_tilegrid_TileGrid_.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = _ol_TileRange_.createOrUpdate(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {ol.Extent} Extent.\n */\n_ol_tilegrid_TileGrid_.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {ol.Coordinate} Origin.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileRange=} opt_tileRange Temporary ol.TileRange object.\n * @param {ol.Extent=} opt_extent Temporary ol.Extent object.\n * @return {ol.TileRange} Tile range.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return _ol_TileRange_.createOrUpdate(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {ol.TileRange} tileRange Tile range.\n * @param {ol.Extent=} opt_extent Temporary ol.Extent object.\n * @return {ol.Extent} Extent.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = _ol_size_.toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return _ol_extent_.createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {ol.Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {ol.TileRange=} opt_tileRange Temporary tile range object.\n * @return {ol.TileRange} Tile range.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  var tileCoord = _ol_tilegrid_TileGrid_.tmpTileCoord_;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return _ol_TileRange_.createOrUpdate(\n      minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {ol.Coordinate} Tile center.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordCenter = function(tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = _ol_size_.toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Extent=} opt_extent Temporary extent object.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = _ol_size_.toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return _ol_extent_.createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.TileCoord=} opt_tileCoord Destination ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {ol.TileCoord=} opt_tileCoord Temporary ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @private\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForXYAndResolution_ = function(\n    x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = _ol_size_.toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return _ol_tilecoord_.createOrUpdate(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {ol.TileCoord=} opt_tileCoord Temporary ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @private\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = _ol_size_.toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return _ol_tilecoord_.createOrUpdate(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {ol.TileCoord=} opt_tileCoord Destination ol.TileCoord object.\n * @return {ol.TileCoord} Tile coordinate.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\n_ol_tilegrid_TileGrid_.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `ol.Size`, run the result through `ol.size.toSize()`.\n * @param {number} z Z.\n * @return {number|ol.Size} Tile size.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {ol.TileRange} Extent tile range for the specified zoom level.\n */\n_ol_tilegrid_TileGrid_.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\n_ol_tilegrid_TileGrid_.prototype.getZForResolution = function(\n    resolution, opt_direction) {\n  var z = _ol_array_.linearFindNearest(this.resolutions_, resolution,\n      opt_direction || 0);\n  return _ol_math_.clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!ol.Extent} extent Extent for this tile grid.\n * @private\n */\n_ol_tilegrid_TileGrid_.prototype.calculateTileRanges_ = function(extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default _ol_tilegrid_TileGrid_;\n","import _ol_ from './index.js';\nimport _ol_size_ from './size.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_extent_Corner_ from './extent/corner.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_proj_ from './proj.js';\nimport _ol_proj_Units_ from './proj/units.js';\nimport _ol_tilegrid_TileGrid_ from './tilegrid/tilegrid.js';\nvar _ol_tilegrid_ = {};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {!ol.tilegrid.TileGrid} Default tile grid for the passed projection.\n */\n_ol_tilegrid_.getForProjection = function(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = _ol_tilegrid_.createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n};\n\n\n/**\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.TileCoord} Tile coordinate.\n */\n_ol_tilegrid_.wrapX = function(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = _ol_tilegrid_.extentFromProjection(projection);\n  if (!_ol_extent_.containsCoordinate(projectionExtent, center)) {\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     ol.DEFAULT_MAX_ZOOM).\n * @param {number|ol.Size=} opt_tileSize Tile size (default uses\n *     ol.DEFAULT_TILE_SIZE).\n * @param {ol.extent.Corner=} opt_corner Extent corner (default is\n *     ol.extent.Corner.TOP_LEFT).\n * @return {!ol.tilegrid.TileGrid} TileGrid instance.\n */\n_ol_tilegrid_.createForExtent = function(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ?\n    opt_corner : _ol_extent_Corner_.TOP_LEFT;\n\n  var resolutions = _ol_tilegrid_.resolutionsFromExtent(\n      extent, opt_maxZoom, opt_tileSize);\n\n  return new _ol_tilegrid_TileGrid_({\n    extent: extent,\n    origin: _ol_extent_.getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n};\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {olx.tilegrid.XYZOptions=} opt_options Tile grid options.\n * @return {!ol.tilegrid.TileGrid} Tile grid instance.\n * @api\n */\n_ol_tilegrid_.createXYZ = function(opt_options) {\n  var options = /** @type {olx.tilegrid.TileGridOptions} */ ({});\n  _ol_obj_.assign(options, opt_options !== undefined ?\n    opt_options : /** @type {olx.tilegrid.XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = _ol_proj_.get('EPSG:3857').getExtent();\n  }\n  options.resolutions = _ol_tilegrid_.resolutionsFromExtent(\n      options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new _ol_tilegrid_TileGrid_(options);\n};\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {ol.Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     ol.DEFAULT_MAX_ZOOM).\n * @param {number|ol.Size=} opt_tileSize Tile size (default uses\n *     ol.DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\n_ol_tilegrid_.resolutionsFromExtent = function(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : _ol_.DEFAULT_MAX_ZOOM;\n\n  var height = _ol_extent_.getHeight(extent);\n  var width = _ol_extent_.getWidth(extent);\n\n  var tileSize = _ol_size_.toSize(opt_tileSize !== undefined ?\n    opt_tileSize : _ol_.DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n      width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n};\n\n\n/**\n * @param {ol.ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     ol.DEFAULT_MAX_ZOOM).\n * @param {number|ol.Size=} opt_tileSize Tile size (default uses\n *     ol.DEFAULT_TILE_SIZE).\n * @param {ol.extent.Corner=} opt_corner Extent corner (default is\n *     ol.extent.Corner.BOTTOM_LEFT).\n * @return {!ol.tilegrid.TileGrid} TileGrid instance.\n */\n_ol_tilegrid_.createForProjection = function(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = _ol_tilegrid_.extentFromProjection(projection);\n  return _ol_tilegrid_.createForExtent(\n      extent, opt_maxZoom, opt_tileSize, opt_corner);\n};\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {ol.ProjectionLike} projection Projection.\n * @return {ol.Extent} Extent.\n */\n_ol_tilegrid_.extentFromProjection = function(projection) {\n  projection = _ol_proj_.get(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * _ol_proj_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES] /\n        projection.getMetersPerUnit();\n    extent = _ol_extent_.createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n};\nexport default _ol_tilegrid_;\n","import _ol_ from '../index.js';\nimport _ol_colorlike_ from '../colorlike.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_has_ from '../has.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_render_canvas_ from '../render/canvas.js';\nimport _ol_style_Image_ from '../style/image.js';\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {olx.style.RegularShapeOptions} options Options.\n * @extends {ol.style.Image}\n * @api\n */\nvar _ol_style_RegularShape_ = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {ol.style.AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  var snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  var rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  _ol_style_Image_.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\n_ol_.inherits(_ol_style_RegularShape_, _ol_style_Image_);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.RegularShape} The cloned style.\n * @api\n */\n_ol_style_RegularShape_.prototype.clone = function() {\n  var style = new _ol_style_RegularShape_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\n_ol_style_RegularShape_.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageState = function() {\n  return _ol_ImageState_.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\n_ol_style_RegularShape_.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {ol.style.AtlasManager|undefined} atlasManager An atlas manager.\n */\n_ol_style_RegularShape_.prototype.render_ = function(atlasManager) {\n  var imageSize;\n  var lineCap = '';\n  var lineJoin = '';\n  var miterLimit = 0;\n  var lineDash = null;\n  var lineDashOffset = 0;\n  var strokeStyle;\n  var strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = _ol_render_canvas_.defaultStrokeStyle;\n    }\n    strokeStyle = _ol_colorlike_.asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = _ol_render_canvas_.defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!_ol_has_.CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = _ol_render_canvas_.defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = _ol_render_canvas_.defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = _ol_render_canvas_.defaultMiterLimit;\n    }\n  }\n\n  var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {ol.RegularShapeRenderOptions} */\n  var renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    var context = _ol_dom_.createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    var hasCustomHitDetectionImage = !this.fill_;\n    var renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    var id = this.getChecksum();\n    var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.draw_ = function(renderOptions, context, x, y) {\n  var i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    var color = this.fill_.getColor();\n    if (color === null) {\n      color = _ol_render_canvas_.defaultFillStyle;\n    }\n    context.fillStyle = _ol_colorlike_.asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n */\n_ol_style_RegularShape_.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  var context = _ol_dom_.createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    var i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = _ol_render_canvas_.defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_RegularShape_.prototype.getChecksum = function() {\n  var strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  var fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  var recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    var checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default _ol_style_RegularShape_;\n","import _ol_ from '../index.js';\nimport _ol_style_RegularShape_ from '../style/regularshape.js';\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {olx.style.CircleOptions=} opt_options Options.\n * @extends {ol.style.RegularShape}\n * @api\n */\nvar _ol_style_Circle_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_style_RegularShape_.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\n_ol_.inherits(_ol_style_Circle_, _ol_style_RegularShape_);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.Circle} The cloned style.\n * @override\n * @api\n */\n_ol_style_Circle_.prototype.clone = function() {\n  var style = new _ol_style_Circle_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\n_ol_style_Circle_.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default _ol_style_Circle_;\n","import _ol_ from '../index.js';\nimport _ol_color_ from '../color.js';\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {olx.style.FillOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Fill_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Color|ol.ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link ol.ColorLike}.\n * @return {ol.style.Fill} The cloned style.\n * @api\n */\n_ol_style_Fill_.prototype.clone = function() {\n  var color = this.getColor();\n  return new _ol_style_Fill_({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {ol.Color|ol.ColorLike} Color.\n * @api\n */\n_ol_style_Fill_.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {ol.Color|ol.ColorLike} color Color.\n * @api\n */\n_ol_style_Fill_.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_Fill_.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = _ol_.getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ?\n        _ol_color_.asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default _ol_style_Fill_;\n","import _ol_asserts_ from '../asserts.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_style_Circle_ from '../style/circle.js';\nimport _ol_style_Fill_ from '../style/fill.js';\nimport _ol_style_Stroke_ from '../style/stroke.js';\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {olx.style.StyleOptions=} opt_options Style options.\n * @api\n */\nvar _ol_style_Style_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!ol.StyleGeometryFunction}\n   */\n  this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Image}\n   */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {ol.StyleRenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {ol.style.Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {ol.style.Style} The cloned style.\n * @api\n */\n_ol_style_Style_.prototype.clone = function() {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new _ol_style_Style_({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {ol.StyleRenderFunction|null} Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {ol.StyleRenderFunction|null} renderer Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\n_ol_style_Style_.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!ol.StyleGeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\n_ol_style_Style_.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Style_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Style_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {ol.style.Image} Image style.\n * @api\n */\n_ol_style_Style_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {ol.style.Image} image Image style.\n * @api\n */\n_ol_style_Style_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {ol.style.Text} Text style.\n * @api\n */\n_ol_style_Style_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {ol.style.Text} text Text style.\n * @api\n */\n_ol_style_Style_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|ol.geom.Geometry|ol.StyleGeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\n_ol_style_Style_.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return /** @type {ol.geom.Geometry} */ (feature.get(geometry));\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return /** @type {ol.geom.Geometry} */ (geometry);\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of ol.style.Style or single style objects wrapped in a\n * new style function.\n * @param {ol.StyleFunction|Array.<ol.style.Style>|ol.style.Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {ol.StyleFunction} A style function.\n */\n_ol_style_Style_.createFunction = function(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<ol.style.Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      _ol_asserts_.assert(obj instanceof _ol_style_Style_,\n          41); // Expected an `ol.style.Style` or an array of `ol.style.Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n};\n\n\n/**\n * @type {Array.<ol.style.Style>}\n * @private\n */\n_ol_style_Style_.default_ = null;\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>} Style.\n */\n_ol_style_Style_.defaultFunction = function(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (ol.style.Circle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!_ol_style_Style_.default_) {\n    var fill = new _ol_style_Fill_({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new _ol_style_Stroke_({\n      color: '#3399CC',\n      width: 1.25\n    });\n    _ol_style_Style_.default_ = [\n      new _ol_style_Style_({\n        image: new _ol_style_Circle_({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return _ol_style_Style_.default_;\n};\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} Styles\n */\n_ol_style_Style_.createDefaultEditing = function() {\n  /** @type {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[_ol_geom_GeometryType_.POLYGON] = [\n    new _ol_style_Style_({\n      fill: new _ol_style_Fill_({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POLYGON] =\n      styles[_ol_geom_GeometryType_.POLYGON];\n\n  styles[_ol_geom_GeometryType_.LINE_STRING] = [\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_LINE_STRING] =\n      styles[_ol_geom_GeometryType_.LINE_STRING];\n\n  styles[_ol_geom_GeometryType_.CIRCLE] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING]\n      );\n\n\n  styles[_ol_geom_GeometryType_.POINT] = [\n    new _ol_style_Style_({\n      image: new _ol_style_Circle_({\n        radius: width * 2,\n        fill: new _ol_style_Fill_({\n          color: blue\n        }),\n        stroke: new _ol_style_Stroke_({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POINT] =\n      styles[_ol_geom_GeometryType_.POINT];\n\n  styles[_ol_geom_GeometryType_.GEOMETRY_COLLECTION] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING],\n          styles[_ol_geom_GeometryType_.POINT]\n      );\n\n  return styles;\n};\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature to get the geometry\n *     for.\n * @return {ol.geom.Geometry|ol.render.Feature|undefined} Geometry to render.\n */\n_ol_style_Style_.defaultGeometryFunction = function(feature) {\n  return feature.getGeometry();\n};\nexport default _ol_style_Style_;\n","import _ol_ from './index.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nvar _ol_Disposable_ = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\n_ol_Disposable_.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\n_ol_Disposable_.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\n_ol_Disposable_.prototype.disposeInternal = _ol_.nullFunction;\nexport default _ol_Disposable_;\n","/**\n * @enum {string}\n */\nvar _ol_ObjectEventType_ = {\n  /**\n   * Triggered when a property is changed.\n   * @event ol.Object.Event#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\nexport default _ol_ObjectEventType_;\n","var _ol_geom_flat_reverse_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_geom_flat_reverse_.coordinates = function(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    var i;\n    for (i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n};\nexport default _ol_geom_flat_reverse_;\n","import _ol_geom_flat_reverse_ from '../flat/reverse.js';\nvar _ol_geom_flat_orient_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\n_ol_geom_flat_orient_.linearRingIsClockwise = function(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n};\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\n_ol_geom_flat_orient_.linearRingsAreOriented = function(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = _ol_geom_flat_orient_.linearRingIsClockwise(\n        flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n};\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\n_ol_geom_flat_orient_.linearRingssAreOriented = function(flatCoordinates, offset, endss, stride, opt_right) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    if (!_ol_geom_flat_orient_.linearRingsAreOriented(\n        flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\n_ol_geom_flat_orient_.orientLinearRings = function(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = _ol_geom_flat_orient_.linearRingIsClockwise(\n        flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      _ol_geom_flat_reverse_.coordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\n_ol_geom_flat_orient_.orientLinearRingss = function(flatCoordinates, offset, endss, stride, opt_right) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    offset = _ol_geom_flat_orient_.orientLinearRings(\n        flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n};\nexport default _ol_geom_flat_orient_;\n","import _ol_math_ from './math.js';\nvar _ol_RotationConstraint_ = {};\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n_ol_RotationConstraint_.disable = function(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n_ol_RotationConstraint_.none = function(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {number} n N.\n * @return {ol.RotationConstraintType} Rotation constraint.\n */\n_ol_RotationConstraint_.createSnapToN = function(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n};\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {ol.RotationConstraintType} Rotation constraint.\n */\n_ol_RotationConstraint_.createSnapToZero = function(opt_tolerance) {\n  var tolerance = opt_tolerance || _ol_math_.toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n};\nexport default _ol_RotationConstraint_;\n","import _ol_ from './index.js';\nimport _ol_MapBrowserEvent_ from './mapbrowserevent.js';\n\n/**\n * @constructor\n * @extends {ol.MapBrowserEvent}\n * @param {string} type Event type.\n * @param {ol.PluggableMap} map Map.\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?olx.FrameState=} opt_frameState Frame state.\n */\nvar _ol_MapBrowserPointerEvent_ = function(type, map, pointerEvent, opt_dragging,\n    opt_frameState) {\n\n  _ol_MapBrowserEvent_.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n      opt_frameState);\n\n  /**\n   * @const\n   * @type {ol.pointer.PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\n_ol_.inherits(_ol_MapBrowserPointerEvent_, _ol_MapBrowserEvent_);\nexport default _ol_MapBrowserPointerEvent_;\n","import _ol_ from './index.js';\nimport _ol_events_Event_ from './events/event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link ol.Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.MapEvent}\n * @param {string} type Event type.\n * @param {ol.PluggableMap} map Map.\n * @param {?olx.FrameState=} opt_frameState Frame state.\n */\nvar _ol_MapEvent_ = function(type, map, opt_frameState) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {ol.PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?olx.FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\n_ol_.inherits(_ol_MapEvent_, _ol_events_Event_);\nexport default _ol_MapEvent_;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var _ol_geom_flat_inflate_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<ol.Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<ol.Coordinate>} Coordinates.\n */\n_ol_geom_flat_inflate_.coordinates = function(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  var j;\n  for (j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<ol.Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinatess.\n */\n_ol_geom_flat_inflate_.coordinatess = function(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = _ol_geom_flat_inflate_.coordinates(\n        flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinatesss.\n */\n_ol_geom_flat_inflate_.coordinatesss = function(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = _ol_geom_flat_inflate_.coordinatess(\n        flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n};\nexport default _ol_geom_flat_inflate_;\n","import _ol_ from '../index.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_EventTarget_ from '../events/eventtarget.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {ol.events.EventTarget}\n * @fires ol.events.Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nvar _ol_structs_LRUCache_ = function(opt_highWaterMark) {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, ol.LRUCacheEntry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?ol.LRUCacheEntry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?ol.LRUCacheEntry}\n   */\n  this.newest_ = null;\n\n};\n\n_ol_.inherits(_ol_structs_LRUCache_, _ol_events_EventTarget_);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\n_ol_structs_LRUCache_.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_structs_LRUCache_.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(_ol_events_EventType_.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\n_ol_structs_LRUCache_.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, ol.structs.LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\n_ol_structs_LRUCache_.prototype.forEach = function(f, opt_this) {\n  var entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\n_ol_structs_LRUCache_.prototype.get = function(key) {\n  var entry = this.entries_[key];\n  _ol_asserts_.assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {ol.LRUCacheEntry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\n_ol_structs_LRUCache_.prototype.remove = function(key) {\n  var entry = this.entries_[key];\n  _ol_asserts_.assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {ol.LRUCacheEntry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {ol.LRUCacheEntry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\n_ol_structs_LRUCache_.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\n_ol_structs_LRUCache_.prototype.getKeys = function() {\n  var keys = new Array(this.count_);\n  var i = 0;\n  var entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\n_ol_structs_LRUCache_.prototype.getValues = function() {\n  var values = new Array(this.count_);\n  var i = 0;\n  var entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\n_ol_structs_LRUCache_.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\n_ol_structs_LRUCache_.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\n_ol_structs_LRUCache_.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\n_ol_structs_LRUCache_.prototype.pop = function() {\n  var entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {ol.LRUCacheEntry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\n_ol_structs_LRUCache_.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\n_ol_structs_LRUCache_.prototype.set = function(key, value) {\n  _ol_asserts_.assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n  var entry = /** @type {ol.LRUCacheEntry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Prune the cache.\n */\n_ol_structs_LRUCache_.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default _ol_structs_LRUCache_;\n","import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_proj_Units_ from '../proj/units.js';\nimport _ol_transform_ from '../transform.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @api\n */\nvar _ol_geom_Geometry_ = function() {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, ol.geom.Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpTransform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_geom_Geometry_, _ol_Object_);\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!ol.geom.Geometry} Clone.\n */\n_ol_geom_Geometry_.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {ol.Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_Geometry_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} point Point.\n * @param {ol.Coordinate=} opt_closestPoint Closest point.\n * @return {ol.Coordinate} Closest point.\n * @api\n */\n_ol_geom_Geometry_.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\n_ol_geom_Geometry_.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {ol.Extent} extent Extent.\n * @protected\n * @return {ol.Extent} extent Extent.\n */\n_ol_geom_Geometry_.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n_ol_geom_Geometry_.prototype.containsXY = _ol_functions_.FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} extent Extent.\n * @api\n */\n_ol_geom_Geometry_.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return _ol_extent_.returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {ol.Coordinate} anchor The rotation center.\n * @api\n */\n_ol_geom_Geometry_.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {ol.Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\n_ol_geom_Geometry_.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {ol.geom.Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\n_ol_geom_Geometry_.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.Geometry} Simplified geometry.\n */\n_ol_geom_Geometry_.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {ol.geom.GeometryType} Geometry type.\n */\n_ol_geom_Geometry_.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {ol.TransformFunction} transformFn Transform.\n */\n_ol_geom_Geometry_.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {ol.Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\n_ol_geom_Geometry_.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\n_ol_geom_Geometry_.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\n_ol_geom_Geometry_.prototype.transform = function(source, destination) {\n  var tmpTransform = this.tmpTransform_;\n  source = _ol_proj_.get(source);\n  var transformFn = source.getUnits() == _ol_proj_Units_.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      var pixelExtent = source.getExtent();\n      var projectedExtent = source.getWorldExtent();\n      var scale = _ol_extent_.getHeight(projectedExtent) / _ol_extent_.getHeight(pixelExtent);\n      _ol_transform_.compose(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n      _ol_geom_flat_transform_.transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n      return _ol_proj_.getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    _ol_proj_.getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default _ol_geom_Geometry_;\n","import _ol_ from '../index.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../extent.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nvar _ol_structs_RBush_ = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = _ol_ext_rbush_(opt_maxEntries);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, ol.RBushEntry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {ol.Extent} extent Extent.\n * @param {T} value Value.\n */\n_ol_structs_RBush_.prototype.insert = function(extent, value) {\n  /** @type {ol.RBushEntry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[_ol_.getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<ol.Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\n_ol_structs_RBush_.prototype.load = function(extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {ol.RBushEntry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[_ol_.getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\n_ol_structs_RBush_.prototype.remove = function(value) {\n  var uid = _ol_.getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {ol.Extent} extent Extent.\n * @param {T} value Value.\n */\n_ol_structs_RBush_.prototype.update = function(extent, value) {\n  var item = this.items_[_ol_.getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!_ol_extent_.equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\n_ol_structs_RBush_.prototype.getAll = function() {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {ol.Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\n_ol_structs_RBush_.prototype.getInExtent = function(extent) {\n  /** @type {ol.RBushEntry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\n_ol_structs_RBush_.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {ol.Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\n_ol_structs_RBush_.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\n_ol_structs_RBush_.prototype.forEach_ = function(values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_structs_RBush_.prototype.isEmpty = function() {\n  return _ol_obj_.isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\n_ol_structs_RBush_.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {ol.Extent=} opt_extent Extent.\n * @return {ol.Extent} Extent.\n */\n_ol_structs_RBush_.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return _ol_extent_.createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {ol.structs.RBush} rbush R-Tree.\n */\n_ol_structs_RBush_.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default _ol_structs_RBush_;\n","import _ol_ from '../index.js';\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {olx.style.StrokeOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Stroke_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Color|ol.ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {ol.style.Stroke} The cloned style.\n * @api\n */\n_ol_style_Stroke_.prototype.clone = function() {\n  var color = this.getColor();\n  return new _ol_style_Stroke_({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {ol.Color|ol.ColorLike} Color.\n * @api\n */\n_ol_style_Stroke_.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\n_ol_style_Stroke_.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\n_ol_style_Stroke_.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {ol.Color|ol.ColorLike} color Color.\n * @api\n */\n_ol_style_Stroke_.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\n_ol_style_Stroke_.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\n_ol_style_Stroke_.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_Stroke_.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += _ol_.getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default _ol_style_Stroke_;\n","/**\n * Extent corner.\n * @enum {string}\n */\nvar _ol_extent_Corner_ = {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\nexport default _ol_extent_Corner_;\n","'use strict';\n\nmodule.exports = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_math_ from '../../math.js';\nvar _ol_geom_flat_simplify_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\n_ol_geom_flat_simplify_.lineString = function(flatCoordinates, offset, end,\n    stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = _ol_geom_flat_simplify_.radialDistance(flatCoordinates, offset, end,\n        stride, squaredTolerance,\n        simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.douglasPeucker = function(flatCoordinates, offset, end,\n    stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  var i;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = _ol_math_.squaredSegmentDistance(\n          x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.douglasPeuckers = function(flatCoordinates, offset,\n    ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n    simplifiedOffset, simplifiedEnds) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = _ol_geom_flat_simplify_.douglasPeucker(\n        flatCoordinates, offset, end, stride, squaredTolerance,\n        simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.douglasPeuckerss = function(\n    flatCoordinates, offset, endss, stride, squaredTolerance,\n    simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = _ol_geom_flat_simplify_.douglasPeuckers(\n        flatCoordinates, offset, ends, stride, squaredTolerance,\n        simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.radialDistance = function(flatCoordinates, offset, end,\n    stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (_ol_math_.squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\n_ol_geom_flat_simplify_.snap = function(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n};\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.quantize = function(flatCoordinates, offset, end, stride,\n    tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset], tolerance);\n  var y1 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset], tolerance);\n    y2 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    var x3, y3;\n    // snap the next coordinate (P3)\n    x3 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset], tolerance);\n    y3 = _ol_geom_flat_simplify_.snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.quantizes = function(\n    flatCoordinates, offset, ends, stride,\n    tolerance,\n    simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = _ol_geom_flat_simplify_.quantize(\n        flatCoordinates, offset, end, stride,\n        tolerance,\n        simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\n_ol_geom_flat_simplify_.quantizess = function(\n    flatCoordinates, offset, endss, stride,\n    tolerance,\n    simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = _ol_geom_flat_simplify_.quantizes(\n        flatCoordinates, offset, ends, stride,\n        tolerance,\n        simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n};\nexport default _ol_geom_flat_simplify_;\n","var _ol_geom_flat_deflate_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\n_ol_geom_flat_deflate_.coordinate = function(flatCoordinates, offset, coordinate, stride) {\n  var i, ii;\n  for (i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\n_ol_geom_flat_deflate_.coordinates = function(flatCoordinates, offset, coordinates, stride) {\n  var i, ii;\n  for (i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    var j;\n    for (j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<ol.Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\n_ol_geom_flat_deflate_.coordinatess = function(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = _ol_geom_flat_deflate_.coordinates(\n        flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\n_ol_geom_flat_deflate_.coordinatesss = function(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  var j, jj;\n  for (j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n};\nexport default _ol_geom_flat_deflate_;\n","var _ol_geom_flat_area_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n_ol_geom_flat_area_.linearRing = function(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n_ol_geom_flat_area_.linearRings = function(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += _ol_geom_flat_area_.linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n_ol_geom_flat_area_.linearRingss = function(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area +=\n        _ol_geom_flat_area_.linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n};\nexport default _ol_geom_flat_area_;\n","import _ol_TileRange_ from './tilerange.js';\nimport _ol_math_ from './math.js';\nimport _ol_tilegrid_ from './tilegrid.js';\n\n/**\n * @classdesc\n * An attribution for a layer source.\n *\n * Example:\n *\n *     source: new ol.source.OSM({\n *       attributions: [\n *         new ol.Attribution({\n *           html: 'All maps &copy; ' +\n *               '<a href=\"https://www.opencyclemap.org/\">OpenCycleMap</a>'\n *         }),\n *         ol.source.OSM.ATTRIBUTION\n *       ],\n *     ..\n *\n * @constructor\n * @deprecated This class is deprecated and will removed in the next major release.\n * @param {olx.AttributionOptions} options Attribution options.\n * @struct\n * @api\n */\nvar _ol_Attribution_ = function(options) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.html_ = options.html;\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<ol.TileRange>>}\n   */\n  this.tileRanges_ = options.tileRanges ? options.tileRanges : null;\n\n};\n\n\n/**\n * Get the attribution markup.\n * @return {string} The attribution HTML.\n * @api\n */\n_ol_Attribution_.prototype.getHTML = function() {\n  return this.html_;\n};\n\n\n/**\n * @param {Object.<string, ol.TileRange>} tileRanges Tile ranges.\n * @param {!ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @param {!ol.proj.Projection} projection Projection.\n * @return {boolean} Intersects any tile range.\n */\n_ol_Attribution_.prototype.intersectsAnyTileRange = function(tileRanges, tileGrid, projection) {\n  if (!this.tileRanges_) {\n    return true;\n  }\n  var i, ii, tileRange, zKey;\n  for (zKey in tileRanges) {\n    if (!(zKey in this.tileRanges_)) {\n      continue;\n    }\n    tileRange = tileRanges[zKey];\n    var testTileRange;\n    for (i = 0, ii = this.tileRanges_[zKey].length; i < ii; ++i) {\n      testTileRange = this.tileRanges_[zKey][i];\n      if (testTileRange.intersects(tileRange)) {\n        return true;\n      }\n      var extentTileRange = tileGrid.getTileRangeForExtentAndZ(\n          _ol_tilegrid_.extentFromProjection(projection), parseInt(zKey, 10));\n      var width = extentTileRange.getWidth();\n      if (tileRange.minX < extentTileRange.minX ||\n          tileRange.maxX > extentTileRange.maxX) {\n        if (testTileRange.intersects(new _ol_TileRange_(\n            _ol_math_.modulo(tileRange.minX, width),\n            _ol_math_.modulo(tileRange.maxX, width),\n            tileRange.minY, tileRange.maxY))) {\n          return true;\n        }\n        if (tileRange.getWidth() > width &&\n            testTileRange.intersects(extentTileRange)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\nexport default _ol_Attribution_;\n","import _ol_ from '../index.js';\nimport _ol_Attribution_ from '../attribution.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link ol.layer.Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @param {ol.SourceSourceOptions} options Source options.\n * @api\n */\nvar _ol_source_Source_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {ol.proj.Projection}\n   */\n  this.projection_ = _ol_proj_.get(options.projection);\n\n  /**\n   * @private\n   * @type {Array.<ol.Attribution>}\n   */\n  this.attributions_ = null;\n\n  /**\n   * @private\n   * @type {?ol.Attribution2}\n   */\n  this.attributions2_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {string|olx.LogoOptions|undefined}\n   */\n  this.logo_ = options.logo;\n\n  /**\n   * @private\n   * @type {ol.source.State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : _ol_source_State_.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\n_ol_.inherits(_ol_source_Source_, _ol_Object_);\n\n/**\n * Turns the attributions option into an attributions function.\n * @suppress {deprecated}\n * @param {ol.AttributionLike|undefined} attributionLike The attribution option.\n * @return {?ol.Attribution2} An attribution function (or null).\n */\n_ol_source_Source_.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (attributionLike instanceof _ol_Attribution_) {\n\n    // TODO: remove attributions_ in next major release\n    this.attributions_ = [attributionLike];\n\n    return function(frameState) {\n      return [attributionLike.getHTML()];\n    };\n  }\n  if (Array.isArray(attributionLike)) {\n    if (attributionLike[0] instanceof _ol_Attribution_) {\n\n      // TODO: remove attributions_ in next major release\n      this.attributions_ = attributionLike;\n\n      var attributions = attributionLike.map(function(attribution) {\n        return attribution.getHTML();\n      });\n      return function(frameState) {\n        return attributions;\n      };\n    }\n\n    // TODO: remove attributions_ in next major release\n    this.attributions_ = attributionLike.map(function(attribution) {\n      return new _ol_Attribution_({html: attribution});\n    });\n\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  // TODO: remove attributions_ in next major release\n  this.attributions_ = [\n    new _ol_Attribution_({html: attributionLike})\n  ];\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((ol.Feature|ol.render.Feature)): T} callback Feature\n *     callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_source_Source_.prototype.forEachFeatureAtCoordinate = _ol_.nullFunction;\n\n\n/**\n * Get the attributions of the source.\n * @return {Array.<ol.Attribution>} Attributions.\n * @api\n */\n_ol_source_Source_.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the attribution function for the source.\n * @return {?ol.Attribution2} Attribution function.\n */\n_ol_source_Source_.prototype.getAttributions2 = function() {\n  return this.attributions2_;\n};\n\n\n/**\n * Get the logo of the source.\n * @return {string|olx.LogoOptions|undefined} Logo.\n * @api\n */\n_ol_source_Source_.prototype.getLogo = function() {\n  return this.logo_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\n_ol_source_Source_.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\n_ol_source_Source_.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link ol.source.State} for possible states.\n * @return {ol.source.State} State.\n * @api\n */\n_ol_source_Source_.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\n_ol_source_Source_.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\n_ol_source_Source_.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {ol.AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link ol.Attribution2}`,\n *     or `undefined`.\n * @api\n */\n_ol_source_Source_.prototype.setAttributions = function(attributions) {\n  this.attributions2_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the logo of the source.\n * @param {string|olx.LogoOptions|undefined} logo Logo.\n */\n_ol_source_Source_.prototype.setLogo = function(logo) {\n  this.logo_ = logo;\n};\n\n\n/**\n * Set the state of the source.\n * @param {ol.source.State} state State.\n * @protected\n */\n_ol_source_Source_.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default _ol_source_Source_;\n","/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link ol.style.Icon}, {@link ol.style.Circle} and\n * {@link ol.style.RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {ol.StyleImageOptions} options Options.\n * @api\n */\nvar _ol_style_Image_ = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\n_ol_style_Image_.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\n_ol_style_Image_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\n_ol_style_Image_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\n_ol_style_Image_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\n_ol_style_Image_.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\n_ol_style_Image_.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {ol.ImageState} Image state.\n */\n_ol_style_Image_.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Image size.\n */\n_ol_style_Image_.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Size of the hit-detection image.\n */\n_ol_style_Image_.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\n_ol_style_Image_.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {ol.Size} Size.\n */\n_ol_style_Image_.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\n_ol_style_Image_.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n */\n_ol_style_Image_.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\n_ol_style_Image_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\n_ol_style_Image_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n */\n_ol_style_Image_.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {ol.EventsKey|undefined} Listener key.\n * @template T\n */\n_ol_style_Image_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n_ol_style_Image_.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\n_ol_style_Image_.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default _ol_style_Image_;\n","import _ol_ from '../index.js';\nimport _ol_TileCache_ from '../tilecache.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_size_ from '../size.js';\nimport _ol_source_Source_ from '../source/source.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {ol.source.Source}\n * @param {ol.SourceTileOptions} options Tile source options.\n * @api\n */\nvar _ol_source_Tile_ = function(options) {\n\n  _ol_source_Source_.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    logo: options.logo,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {ol.TileCache}\n   */\n  this.tileCache = new _ol_TileCache_(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {ol.Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {olx.TileOptions}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\n_ol_.inherits(_ol_source_Tile_, _ol_source_Source_);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\n_ol_source_Tile_.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object.<string, ol.TileRange>} usedTiles Used tiles.\n */\n_ol_source_Tile_.prototype.expireCache = function(projection, usedTiles) {\n  var tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {ol.TileRange} tileRange Tile range.\n * @param {function(ol.Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\n_ol_source_Tile_.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  var tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  var covered = true;\n  var tile, tileCoordKey, loaded;\n  for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = _ol_tilecoord_.getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!ol.Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === _ol_TileState_.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {number} Gutter.\n */\n_ol_source_Tile_.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\n_ol_source_Tile_.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\n_ol_source_Tile_.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {boolean} Opaque.\n */\n_ol_source_Tile_.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_Tile_.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {!ol.Tile} Tile.\n */\n_ol_source_Tile_.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {ol.tilegrid.TileGrid} Tile grid.\n * @api\n */\n_ol_source_Tile_.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {!ol.tilegrid.TileGrid} Tile grid.\n */\n_ol_source_Tile_.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return _ol_tilegrid_.getForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.TileCache} Tile cache.\n * @protected\n */\n_ol_source_Tile_.prototype.getTileCacheForProjection = function(projection) {\n  var thisProj = this.getProjection();\n  if (thisProj && !_ol_proj_.equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\n_ol_source_Tile_.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.Size} Tile size.\n */\n_ol_source_Tile_.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  var tileGrid = this.getTileGridForProjection(projection);\n  var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return _ol_size_.scale(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.proj.Projection=} opt_projection Projection.\n * @return {ol.TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\n_ol_source_Tile_.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  var projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  var tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = _ol_tilegrid_.wrapX(tileGrid, tileCoord, projection);\n  }\n  return _ol_tilecoord_.withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_Tile_.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {ol.proj.Projection} projection Projection.\n */\n_ol_source_Tile_.prototype.useTile = _ol_.nullFunction;\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.source.Tile} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.source.Tile.Event}\n * @param {string} type Type.\n * @param {ol.Tile} tile The tile.\n */\n_ol_source_Tile_.Event = function(type, tile) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {ol.Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\n_ol_.inherits(_ol_source_Tile_.Event, _ol_events_Event_);\nexport default _ol_source_Tile_;\n","import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_layer_Property_ from '../layer/property.js';\nimport _ol_math_ from '../math.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with `ol.layer.Base` and all its subclasses, any property set in\n * the options is set as a {@link ol.Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @param {olx.layer.BaseOptions} options Layer options.\n * @api\n */\nvar _ol_layer_Base_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var properties = _ol_obj_.assign({}, options);\n  properties[_ol_layer_Property_.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[_ol_layer_Property_.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[_ol_layer_Property_.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[_ol_layer_Property_.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[_ol_layer_Property_.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {ol.LayerState}\n   * @private\n   */\n  this.state_ = /** @type {ol.LayerState} */ ({\n    layer: /** @type {ol.layer.Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {ol.LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\n_ol_.inherits(_ol_layer_Base_, _ol_Object_);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {ol.LayerType} The layer type.\n */\n_ol_layer_Base_.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {ol.LayerState} Layer state.\n */\n_ol_layer_Base_.prototype.getLayerState = function() {\n  this.state_.opacity = _ol_math_.clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.layer.Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<ol.layer.Layer>} Array of layers.\n */\n_ol_layer_Base_.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<ol.LayerState>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<ol.LayerState>} List of layer states.\n */\n_ol_layer_Base_.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link ol.Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {ol.Extent|undefined} The layer extent.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getExtent = function() {\n  return (\n  /** @type {ol.Extent|undefined} */ this.get(_ol_layer_Property_.EXTENT)\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getMaxResolution = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.MAX_RESOLUTION)\n  );\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getMinResolution = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.MIN_RESOLUTION)\n  );\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getOpacity = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.OPACITY)\n  );\n};\n\n\n/**\n * @abstract\n * @return {ol.source.State} Source state.\n */\n_ol_layer_Base_.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getVisible = function() {\n  return (\n  /** @type {boolean} */ this.get(_ol_layer_Property_.VISIBLE)\n  );\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getZIndex = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.Z_INDEX)\n  );\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {ol.Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setExtent = function(extent) {\n  this.set(_ol_layer_Property_.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setMaxResolution = function(maxResolution) {\n  this.set(_ol_layer_Property_.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setMinResolution = function(minResolution) {\n  this.set(_ol_layer_Property_.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setOpacity = function(opacity) {\n  this.set(_ol_layer_Property_.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setVisible = function(visible) {\n  this.set(_ol_layer_Property_.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setZIndex = function(zindex) {\n  this.set(_ol_layer_Property_.Z_INDEX, zindex);\n};\nexport default _ol_layer_Base_;\n","import _ol_ from '../index.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_Point_ = function(coordinates, opt_layout) {\n  _ol_geom_SimpleGeometry_.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\n_ol_.inherits(_ol_geom_Point_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Point} Clone.\n * @override\n * @api\n */\n_ol_geom_Point_.prototype.clone = function() {\n  var point = new _ol_geom_Point_(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Point_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var squaredDistance = _ol_math_.squaredDistance(\n      x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    var stride = this.stride;\n    var i;\n    for (i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {ol.Coordinate} Coordinates.\n * @override\n * @api\n */\n_ol_geom_Point_.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Point_.prototype.computeExtent = function(extent) {\n  return _ol_extent_.createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Point_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Point_.prototype.intersectsExtent = function(extent) {\n  return _ol_extent_.containsXY(extent,\n      this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Point_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinate(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\n_ol_geom_Point_.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default _ol_geom_Point_;\n","/**\n * @enum {string}\n */\nvar _ol_MapEventType_ = {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event ol.MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event ol.MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event ol.MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\nexport default _ol_MapEventType_;\n","import _ol_ from './index.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link ol.Observable#changed}.\n *\n * @constructor\n * @extends {ol.events.EventTarget}\n * @fires ol.events.Event\n * @struct\n * @api\n */\nvar _ol_Observable_ = function() {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\n_ol_.inherits(_ol_Observable_, _ol_events_EventTarget_);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {ol.EventsKey|Array.<ol.EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\n_ol_Observable_.unByKey = function(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      _ol_events_.unlistenByKey(key[i]);\n    }\n  } else {\n    _ol_events_.unlistenByKey(/** @type {ol.EventsKey} */ (key));\n  }\n};\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\n_ol_Observable_.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(_ol_events_EventType_.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|ol.events.EventTarget|undefined)}|ol.events.Event|\n *     string} event Event object.\n * @function\n * @api\n */\n_ol_Observable_.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\n_ol_Observable_.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @param {Object=} opt_this The object to use as `this` in `listener`.\n * @return {ol.EventsKey|Array.<ol.EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\n_ol_Observable_.prototype.on = function(type, listener, opt_this) {\n  if (Array.isArray(type)) {\n    var len = type.length;\n    var keys = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      keys[i] = _ol_events_.listen(this, type[i], listener, opt_this);\n    }\n    return keys;\n  } else {\n    return _ol_events_.listen(\n        this, /** @type {string} */ (type), listener, opt_this);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @param {Object=} opt_this The object to use as `this` in `listener`.\n * @return {ol.EventsKey|Array.<ol.EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\n_ol_Observable_.prototype.once = function(type, listener, opt_this) {\n  if (Array.isArray(type)) {\n    var len = type.length;\n    var keys = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      keys[i] = _ol_events_.listenOnce(this, type[i], listener, opt_this);\n    }\n    return keys;\n  } else {\n    return _ol_events_.listenOnce(\n        this, /** @type {string} */ (type), listener, opt_this);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @param {Object=} opt_this The object which was used as `this` by the\n * `listener`.\n * @api\n */\n_ol_Observable_.prototype.un = function(type, listener, opt_this) {\n  if (Array.isArray(type)) {\n    for (var i = 0, ii = type.length; i < ii; ++i) {\n      _ol_events_.unlisten(this, type[i], listener, opt_this);\n    }\n    return;\n  } else {\n    _ol_events_.unlisten(this, /** @type {string} */ (type), listener, opt_this);\n  }\n};\nexport default _ol_Observable_;\n","import _ol_math_ from '../../math.js';\nvar _ol_geom_flat_closest_ = {};\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\n_ol_geom_flat_closest_.point = function(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var i, offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = _ol_math_.lerp(flatCoordinates[offset1 + i],\n            flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n};\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxSquaredDelta Max squared delta.\n * @return {number} Max squared delta.\n */\n_ol_geom_flat_closest_.getMaxSquaredDelta = function(flatCoordinates, offset, end, stride, maxSquaredDelta) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = _ol_math_.squaredDistance(x1, y1, x2, y2);\n    if (squaredDelta > maxSquaredDelta) {\n      maxSquaredDelta = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return maxSquaredDelta;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxSquaredDelta Max squared delta.\n * @return {number} Max squared delta.\n */\n_ol_geom_flat_closest_.getsMaxSquaredDelta = function(flatCoordinates, offset, ends, stride, maxSquaredDelta) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    maxSquaredDelta = _ol_geom_flat_closest_.getMaxSquaredDelta(\n        flatCoordinates, offset, end, stride, maxSquaredDelta);\n    offset = end;\n  }\n  return maxSquaredDelta;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxSquaredDelta Max squared delta.\n * @return {number} Max squared delta.\n */\n_ol_geom_flat_closest_.getssMaxSquaredDelta = function(flatCoordinates, offset, endss, stride, maxSquaredDelta) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    maxSquaredDelta = _ol_geom_flat_closest_.getsMaxSquaredDelta(\n        flatCoordinates, offset, ends, stride, maxSquaredDelta);\n    offset = ends[ends.length - 1];\n  }\n  return maxSquaredDelta;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_flat_closest_.getClosestPoint = function(flatCoordinates, offset, end,\n    stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n    opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = _ol_math_.squaredDistance(\n        x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    _ol_geom_flat_closest_.point(\n        flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = _ol_math_.squaredDistance(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n          ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    _ol_geom_flat_closest_.point(\n        flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = _ol_math_.squaredDistance(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_flat_closest_.getsClosestPoint = function(flatCoordinates, offset, ends,\n    stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n    opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = _ol_geom_flat_closest_.getClosestPoint(\n        flatCoordinates, offset, end, stride,\n        maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n_ol_geom_flat_closest_.getssClosestPoint = function(flatCoordinates, offset,\n    endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n    opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = _ol_geom_flat_closest_.getsClosestPoint(\n        flatCoordinates, offset, ends, stride,\n        maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n};\nexport default _ol_geom_flat_closest_;\n","import _ol_ from '../index.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_LinearRing_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_LinearRing_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.LinearRing} Clone.\n * @override\n * @api\n */\n_ol_geom_LinearRing_.prototype.clone = function() {\n  var linearRing = new _ol_geom_LinearRing_(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LinearRing_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getMaxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\n_ol_geom_LinearRing_.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRing(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_LinearRing_.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LinearRing_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n  var simplifiedLinearRing = new _ol_geom_LinearRing_(null);\n  simplifiedLinearRing.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_LinearRing_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LinearRing_.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_LinearRing_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\n_ol_geom_LinearRing_.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default _ol_geom_LinearRing_;\n","import _ol_array_ from '../../array.js';\nimport _ol_geom_flat_contains_ from '../flat/contains.js';\nvar _ol_geom_flat_interiorpoint_ = {};\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRings = function(flatCoordinates, offset,\n    ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(_ol_array_.numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (_ol_geom_flat_contains_.linearRingsContainsXY(\n          flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRingss = function(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = _ol_geom_flat_interiorpoint_.linearRings(flatCoordinates,\n        offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n};\nexport default _ol_geom_flat_interiorpoint_;\n","var _ol_geom_flat_segments_ = {};\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, ol.Coordinate, ol.Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\n_ol_geom_flat_segments_.forEach = function(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n};\nexport default _ol_geom_flat_segments_;\n","import _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_contains_ from '../flat/contains.js';\nimport _ol_geom_flat_segments_ from '../flat/segments.js';\nvar _ol_geom_flat_intersectsextent_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.lineString = function(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = _ol_extent_.extendFlatCoordinates(\n      _ol_extent_.createEmpty(), flatCoordinates, offset, end, stride);\n  if (!_ol_extent_.intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (_ol_extent_.containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return _ol_geom_flat_segments_.forEach(flatCoordinates, offset, end, stride,\n      /**\n       * @param {ol.Coordinate} point1 Start point.\n       * @param {ol.Coordinate} point2 End point.\n       * @return {boolean} `true` if the segment and the extent intersect,\n       *     `false` otherwise.\n       */\n      function(point1, point2) {\n        return _ol_extent_.intersectsSegment(extent, point1, point2);\n      });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.lineStrings = function(flatCoordinates, offset, ends, stride, extent) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    if (_ol_geom_flat_intersectsextent_.lineString(\n        flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.linearRing = function(flatCoordinates, offset, end, stride, extent) {\n  if (_ol_geom_flat_intersectsextent_.lineString(\n      flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (_ol_geom_flat_contains_.linearRingContainsXY(\n      flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.linearRings = function(flatCoordinates, offset, ends, stride, extent) {\n  if (!_ol_geom_flat_intersectsextent_.linearRing(\n      flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  var i, ii;\n  for (i = 1, ii = ends.length; i < ii; ++i) {\n    if (_ol_geom_flat_contains_.linearRingContainsExtent(\n        flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {ol.Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n_ol_geom_flat_intersectsextent_.linearRingss = function(flatCoordinates, offset, endss, stride, extent) {\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (_ol_geom_flat_intersectsextent_.linearRings(\n        flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n};\nexport default _ol_geom_flat_intersectsextent_;\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_LinearRing_ from '../geom/linearring.js';\nimport _ol_geom_Point_ from '../geom/point.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_Polygon_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_Polygon_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @api\n */\n_ol_geom_Polygon_.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    _ol_array_.extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Polygon} Clone.\n * @override\n * @api\n */\n_ol_geom_Polygon_.prototype.clone = function() {\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Polygon_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Polygon_.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\n_ol_geom_Polygon_.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRings(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_Polygon_.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatess(\n      flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\n_ol_geom_Polygon_.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\n_ol_geom_Polygon_.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    var flatCenter = _ol_extent_.getCenter(this.getExtent());\n    this.flatInteriorPoint_ = _ol_geom_flat_interiorpoint_.linearRings(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {ol.geom.Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\n_ol_geom_Polygon_.prototype.getInteriorPoint = function() {\n  return new _ol_geom_Point_(this.getFlatInteriorPoint(), _ol_geom_GeometryLayout_.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\n_ol_geom_Polygon_.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {ol.geom.LinearRing} Linear ring.\n * @api\n */\n_ol_geom_Polygon_.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var linearRing = new _ol_geom_LinearRing_(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<ol.geom.LinearRing>} Linear rings.\n * @api\n */\n_ol_geom_Polygon_.prototype.getLinearRings = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var linearRings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var linearRing = new _ol_geom_LinearRing_(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\n_ol_geom_Polygon_.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingsAreOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_Polygon_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizes(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedPolygon = new _ol_geom_Polygon_(null);\n  simplifiedPolygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Polygon_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_Polygon_.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRings(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_Polygon_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\n_ol_geom_Polygon_.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {ol.Sphere} sphere The sphere.\n * @param {ol.Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @return {ol.geom.Polygon} The \"circular\" polygon.\n * @api\n */\n_ol_geom_Polygon_.circular = function(sphere, center, radius, opt_n) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  var i;\n  for (i = 0; i < n; ++i) {\n    _ol_array_.extend(\n        flatCoordinates, sphere.offset(center, radius, 2 * Math.PI * i / n));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n};\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {ol.Extent} extent The extent.\n * @return {ol.geom.Polygon} The polygon.\n * @api\n */\n_ol_geom_Polygon_.fromExtent = function(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n};\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {ol.geom.Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {ol.geom.Polygon} Polygon geometry.\n * @api\n */\n_ol_geom_Polygon_.fromCircle = function(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var polygon = new _ol_geom_Polygon_(null, layout);\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  var ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  _ol_geom_Polygon_.makeRegular(\n      polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n};\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {ol.Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\n_ol_geom_Polygon_.makeRegular = function(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var layout = polygon.getLayout();\n  var stride = polygon.getStride();\n  var ends = polygon.getEnds();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  var angle, offset;\n  for (var i = 0; i <= sides; ++i) {\n    offset = i * stride;\n    angle = startAngle + (_ol_math_.modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default _ol_geom_Polygon_;\n","import _ol_ from '../index.js';\nimport _ol_LayerType_ from '../layertype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_layer_VectorRenderType_ from '../layer/vectorrendertype.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_style_Style_ from '../style/style.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link ol.Object}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {ol.layer.Layer}\n * @fires ol.render.Event\n * @param {olx.layer.VectorOptions=} opt_options Options.\n * @api\n */\nvar _ol_layer_Vector_ = function(opt_options) {\n  var options = opt_options ?\n    opt_options : /** @type {olx.layer.VectorOptions} */ ({});\n\n  var baseOptions = _ol_obj_.assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  _ol_layer_Layer_.call(this, /** @type {olx.layer.LayerOptions} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {ol.StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {ol.layer.VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || _ol_layer_VectorRenderType_.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {ol.LayerType}\n   */\n  this.type = _ol_LayerType_.VECTOR;\n\n};\n\n_ol_.inherits(_ol_layer_Vector_, _ol_layer_Layer_);\n\n\n/**\n * @return {boolean} Declutter.\n */\n_ol_layer_Vector_.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\n_ol_layer_Vector_.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\n_ol_layer_Vector_.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(ol.Feature, ol.Feature): number|null|undefined} Render\n *     order.\n */\n_ol_layer_Vector_.prototype.getRenderOrder = function() {\n  return (\n  /** @type {ol.RenderOrderFunction|null|undefined} */ this.get(_ol_layer_Vector_.Property_.RENDER_ORDER)\n  );\n};\n\n\n/**\n * Return the associated {@link ol.source.Vector vectorsource} of the layer.\n * @function\n * @return {ol.source.Vector} Source.\n * @api\n */\n_ol_layer_Vector_.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n *     Layer style.\n * @api\n */\n_ol_layer_Vector_.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {ol.StyleFunction|undefined} Layer style function.\n * @api\n */\n_ol_layer_Vector_.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\n_ol_layer_Vector_.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\n_ol_layer_Vector_.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {ol.RenderOrderFunction|null|undefined} renderOrder\n *     Render order.\n */\n_ol_layer_Vector_.prototype.setRenderOrder = function(renderOrder) {\n  this.set(_ol_layer_Vector_.Property_.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link ol.style} for information on the default style.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\n_ol_layer_Vector_.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : _ol_style_Style_.defaultFunction;\n  this.styleFunction_ = style === null ?\n    undefined : _ol_style_Style_.createFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {ol.layer.VectorRenderType|string} The render mode.\n */\n_ol_layer_Vector_.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_layer_Vector_.Property_ = {\n  RENDER_ORDER: 'renderOrder'\n};\nexport default _ol_layer_Vector_;\n","/**\n * @enum {string}\n */\nvar _ol_interaction_Property_ = {\n  ACTIVE: 'active'\n};\n\nexport default _ol_interaction_Property_;\n","import _ol_ from './index.js';\nimport _ol_MapEvent_ from './mapevent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link ol.Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {ol.MapEvent}\n * @implements {oli.MapBrowserEvent}\n * @param {string} type Event type.\n * @param {ol.PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?olx.FrameState=} opt_frameState Frame state.\n */\nvar _ol_MapBrowserEvent_ = function(type, map, browserEvent, opt_dragging,\n    opt_frameState) {\n\n  _ol_MapEvent_.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {ol.Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\n_ol_.inherits(_ol_MapBrowserEvent_, _ol_MapEvent_);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\n_ol_MapBrowserEvent_.prototype.preventDefault = function() {\n  _ol_MapEvent_.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\n_ol_MapBrowserEvent_.prototype.stopPropagation = function() {\n  _ol_MapEvent_.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default _ol_MapBrowserEvent_;\n","import _ol_color_ from '../color.js';\n\n/**\n * Singleton class. Available through {@link ol.style.iconImageCache}.\n * @constructor\n */\nvar _ol_style_IconImageCache_ = function() {\n\n  /**\n   * @type {Object.<string, ol.style.IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {string} Cache key.\n */\n_ol_style_IconImageCache_.getKey = function(src, crossOrigin, color) {\n  var colorString = color ? _ol_color_.asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_style_IconImageCache_.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_style_IconImageCache_.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    var key, iconImage;\n    for (key in this.cache_) {\n      iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {ol.style.IconImage} Icon image.\n */\n_ol_style_IconImageCache_.prototype.get = function(src, crossOrigin, color) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @param {ol.style.IconImage} iconImage Icon image.\n */\n_ol_style_IconImageCache_.prototype.set = function(src, crossOrigin, color, iconImage) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\n_ol_style_IconImageCache_.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default _ol_style_IconImageCache_;\n","import _ol_style_IconImageCache_ from './style/iconimagecache.js';\nvar _ol_style_ = {};\n\n/**\n * The {@link ol.style.IconImageCache} for {@link ol.style.Icon} images.\n * @api\n */\n_ol_style_.iconImageCache = new _ol_style_IconImageCache_();\nexport default _ol_style_;\n","import _ol_math_ from './math.js';\nvar _ol_CenterConstraint_ = {};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @return {ol.CenterConstraintType} The constraint.\n */\n_ol_CenterConstraint_.createExtent = function(extent) {\n  return (\n    /**\n     * @param {ol.Coordinate|undefined} center Center.\n     * @return {ol.Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          _ol_math_.clamp(center[0], extent[0], extent[2]),\n          _ol_math_.clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n};\n\n\n/**\n * @param {ol.Coordinate|undefined} center Center.\n * @return {ol.Coordinate|undefined} Center.\n */\n_ol_CenterConstraint_.none = function(center) {\n  return center;\n};\nexport default _ol_CenterConstraint_;\n","import _ol_array_ from './array.js';\nimport _ol_math_ from './math.js';\nvar _ol_ResolutionConstraint_ = {};\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {ol.ResolutionConstraintType} Zoom function.\n */\n_ol_ResolutionConstraint_.createSnapToResolutions = function(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z =\n              _ol_array_.linearFindNearest(resolutions, resolution, direction);\n        z = _ol_math_.clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n};\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {ol.ResolutionConstraintType} Zoom function.\n */\n_ol_ResolutionConstraint_.createSnapToPower = function(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n            Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n};\nexport default _ol_ResolutionConstraint_;\n","/**\n * @enum {string}\n */\nvar _ol_ViewProperty_ = {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\nexport default _ol_ViewProperty_;\n","import _ol_ from './index.js';\nimport _ol_CenterConstraint_ from './centerconstraint.js';\nimport _ol_Object_ from './object.js';\nimport _ol_ResolutionConstraint_ from './resolutionconstraint.js';\nimport _ol_RotationConstraint_ from './rotationconstraint.js';\nimport _ol_ViewHint_ from './viewhint.js';\nimport _ol_ViewProperty_ from './viewproperty.js';\nimport _ol_array_ from './array.js';\nimport _ol_asserts_ from './asserts.js';\nimport _ol_coordinate_ from './coordinate.js';\nimport _ol_easing_ from './easing.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_geom_GeometryType_ from './geom/geometrytype.js';\nimport _ol_geom_Polygon_ from './geom/polygon.js';\nimport _ol_geom_SimpleGeometry_ from './geom/simplegeometry.js';\nimport _ol_math_ from './math.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_proj_ from './proj.js';\nimport _ol_proj_Units_ from './proj/units.js';\n\n/**\n * @classdesc\n * An ol.View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An `ol.View` is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An `ol.View` has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But an `ol.View` object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {ol.Object}\n * @param {olx.ViewOptions=} opt_options View options.\n * @api\n */\nvar _ol_View_ = function(opt_options) {\n  _ol_Object_.call(this);\n\n  var options = _ol_obj_.assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<ol.ViewAnimation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {ol.proj.Projection}\n   */\n  this.projection_ = _ol_proj_.createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\n_ol_.inherits(_ol_View_, _ol_Object_);\n\n\n/**\n * Set up the view with the given options.\n * @param {olx.ViewOptions} options View options.\n */\n_ol_View_.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var properties = {};\n  properties[_ol_ViewProperty_.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  var resolutionConstraintInfo = _ol_View_.createResolutionConstraint_(\n      options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  var centerConstraint = _ol_View_.createCenterConstraint_(options);\n  var resolutionConstraint = resolutionConstraintInfo.constraint;\n  var rotationConstraint = _ol_View_.createRotationConstraint_(options);\n\n  /**\n   * @private\n   * @type {ol.Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[_ol_ViewProperty_.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[_ol_ViewProperty_.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[_ol_ViewProperty_.RESOLUTION] = _ol_math_.clamp(\n          Number(this.getResolution() || properties[_ol_ViewProperty_.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[_ol_ViewProperty_.ROTATION] =\n      options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {olx.ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be uesd to apply new min/max zoom or\n * resolution limits.\n * @param {olx.ViewOptions} newOptions New options to be applied.\n * @return {olx.ViewOptions} New options updated with the current view state.\n */\n_ol_View_.prototype.getUpdatedOptions_ = function(newOptions) {\n  var options = _ol_obj_.assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return _ol_obj_.assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link ol.easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(olx.AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\n_ol_View_.prototype.animate = function(var_args) {\n  var animationCount = arguments.length;\n  var callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    var state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      callback(true);\n    }\n    return;\n  }\n  var start = Date.now();\n  var center = this.getCenter().slice();\n  var resolution = this.getResolution();\n  var rotation = this.getRotation();\n  var series = [];\n  for (var i = 0; i < animationCount; ++i) {\n    var options = /** @type {olx.AnimationOptions} */ (arguments[i]);\n\n    var animation = /** @type {ol.ViewAnimation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || _ol_easing_.inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      var delta = _ol_math_.modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (_ol_View_.isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(_ol_ViewHint_.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\n_ol_View_.prototype.getAnimating = function() {\n  return this.hints_[_ol_ViewHint_.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\n_ol_View_.prototype.getInteracting = function() {\n  return this.hints_[_ol_ViewHint_.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\n_ol_View_.prototype.cancelAnimations = function() {\n  this.setHint(_ol_ViewHint_.ANIMATING, -this.hints_[_ol_ViewHint_.ANIMATING]);\n  for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n    var series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\n_ol_View_.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  var now = Date.now();\n  var more = false;\n  for (var i = this.animations_.length - 1; i >= 0; --i) {\n    var series = this.animations_[i];\n    var seriesComplete = true;\n    for (var j = 0, jj = series.length; j < jj; ++j) {\n      var animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      var elapsed = now - animation.start;\n      var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      var progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        var x0 = animation.sourceCenter[0];\n        var y0 = animation.sourceCenter[1];\n        var x1 = animation.targetCenter[0];\n        var y1 = animation.targetCenter[1];\n        var x = x0 + progress * (x1 - x0);\n        var y = y0 + progress * (y1 - y0);\n        this.set(_ol_ViewProperty_.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        var resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(_ol_ViewProperty_.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(_ol_ViewProperty_.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        var rotation = progress === 1 ?\n          _ol_math_.modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(_ol_ViewProperty_.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(_ol_ViewProperty_.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(_ol_ViewHint_.ANIMATING, -1);\n      var callback = series[0].callback;\n      if (callback) {\n        callback(true);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {ol.Coordinate} anchor Rotation anchor.\n * @return {ol.Coordinate|undefined} Center for rotation and anchor.\n */\n_ol_View_.prototype.calculateCenterRotate = function(rotation, anchor) {\n  var center;\n  var currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    _ol_coordinate_.rotate(center, rotation - this.getRotation());\n    _ol_coordinate_.add(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {ol.Coordinate} anchor Zoom anchor.\n * @return {ol.Coordinate|undefined} Center for resolution and anchor.\n */\n_ol_View_.prototype.calculateCenterZoom = function(resolution, anchor) {\n  var center;\n  var currentCenter = this.getCenter();\n  var currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    var x = anchor[0] -\n        resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    var y = anchor[1] -\n        resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {ol.Size} Viewport size or `[100, 100]` when no viewport is found.\n */\n_ol_View_.prototype.getSizeFromViewport_ = function() {\n  var size = [100, 100];\n  var selector = '.ol-viewport[data-view=\"' + _ol_.getUid(this) + '\"]';\n  var element = document.querySelector(selector);\n  if (element) {\n    var metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {ol.Coordinate|undefined} center Center.\n * @return {ol.Coordinate|undefined} Constrained center.\n * @api\n */\n_ol_View_.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\n_ol_View_.prototype.constrainResolution = function(\n    resolution, opt_delta, opt_direction) {\n  var delta = opt_delta || 0;\n  var direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\n_ol_View_.prototype.constrainRotation = function(rotation, opt_delta) {\n  var delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {ol.Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.getCenter = function() {\n  return (\n    /** @type {ol.Coordinate|undefined} */ this.get(_ol_ViewProperty_.CENTER)\n  );\n};\n\n\n/**\n * @return {ol.Constraints} Constraints.\n */\n_ol_View_.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\n_ol_View_.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {ol.Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_View_.prototype.calculateExtent = function(opt_size) {\n  var size = opt_size || this.getSizeFromViewport_();\n  var center = /** @type {!ol.Coordinate} */ (this.getCenter());\n  _ol_asserts_.assert(center, 1); // The view center is not defined\n  var resolution = /** @type {!number} */ (this.getResolution());\n  _ol_asserts_.assert(resolution !== undefined, 2); // The view resolution is not defined\n  var rotation = /** @type {!number} */ (this.getRotation());\n  _ol_asserts_.assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return _ol_extent_.getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\n_ol_View_.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\n_ol_View_.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\n_ol_View_.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\n_ol_View_.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\n_ol_View_.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\n_ol_View_.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {ol.proj.Projection} The projection of the view.\n * @api\n */\n_ol_View_.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.getResolution = function() {\n  return (\n    /** @type {number|undefined} */ this.get(_ol_ViewProperty_.RESOLUTION)\n  );\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the {ol.View}, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\n_ol_View_.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\n_ol_View_.prototype.getResolutionForExtent = function(extent, opt_size) {\n  var size = opt_size || this.getSizeFromViewport_();\n  var xResolution = _ol_extent_.getWidth(extent) / size[0];\n  var yResolution = _ol_extent_.getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\n_ol_View_.prototype.getResolutionForValueFunction = function(opt_power) {\n  var power = opt_power || 2;\n  var maxResolution = this.maxResolution_;\n  var minResolution = this.minResolution_;\n  var max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      var resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\n_ol_View_.prototype.getRotation = function() {\n  return (\n    /** @type {number} */ this.get(_ol_ViewProperty_.ROTATION)\n  );\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\n_ol_View_.prototype.getValueForResolutionFunction = function(opt_power) {\n  var power = opt_power || 2;\n  var maxResolution = this.maxResolution_;\n  var minResolution = this.minResolution_;\n  var max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      var value =\n            (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {olx.ViewState} View state.\n */\n_ol_View_.prototype.getState = function() {\n  var center = /** @type {ol.Coordinate} */ (this.getCenter());\n  var projection = this.getProjection();\n  var resolution = /** @type {number} */ (this.getResolution());\n  var rotation = this.getRotation();\n  return /** @type {olx.ViewState} */ ({\n    center: center.slice(),\n    projection: projection !== undefined ? projection : null,\n    resolution: resolution,\n    rotation: rotation,\n    zoom: this.getZoom()\n  });\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\n_ol_View_.prototype.getZoom = function() {\n  var zoom;\n  var resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\n_ol_View_.prototype.getZoomForResolution = function(resolution) {\n  var offset = this.minZoom_ || 0;\n  var max, zoomFactor;\n  if (this.resolutions_) {\n    var nearest = _ol_array_.linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\n_ol_View_.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {ol.geom.SimpleGeometry|ol.Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {olx.view.FitOptions=} opt_options Options.\n * @api\n */\n_ol_View_.prototype.fit = function(geometryOrExtent, opt_options) {\n  var options = opt_options || {};\n  var size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {ol.geom.SimpleGeometry} */\n  var geometry;\n  if (!(geometryOrExtent instanceof _ol_geom_SimpleGeometry_)) {\n    _ol_asserts_.assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n    _ol_asserts_.assert(!_ol_extent_.isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n    geometry = _ol_geom_Polygon_.fromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === _ol_geom_GeometryType_.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = _ol_geom_Polygon_.fromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), _ol_extent_.getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  var constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  var nearest = options.nearest !== undefined ? options.nearest : false;\n  var minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  var coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  var rotation = this.getRotation();\n  var cosAngle = Math.cos(-rotation);\n  var sinAngle = Math.sin(-rotation);\n  var minRotX = +Infinity;\n  var minRotY = +Infinity;\n  var maxRotX = -Infinity;\n  var maxRotY = -Infinity;\n  var stride = geometry.getStride();\n  for (var i = 0, ii = coords.length; i < ii; i += stride) {\n    var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  var centerRotX = (minRotX + maxRotX) / 2;\n  var centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  var center = [centerX, centerY];\n  var callback = options.callback ? options.callback : _ol_.nullFunction;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Size} size Box pixel size.\n * @param {ol.Pixel} position Position on the view to center on.\n * @api\n */\n_ol_View_.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  var rotation = this.getRotation();\n  var cosAngle = Math.cos(-rotation);\n  var sinAngle = Math.sin(-rotation);\n  var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  var resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  var centerX = rotX * cosAngle - rotY * sinAngle;\n  var centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\n_ol_View_.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {ol.Coordinate=} opt_anchor The rotation center.\n * @api\n */\n_ol_View_.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    var center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {ol.Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.setCenter = function(center) {\n  this.set(_ol_ViewProperty_.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {ol.ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\n_ol_View_.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\n_ol_View_.prototype.setResolution = function(resolution) {\n  this.set(_ol_ViewProperty_.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\n_ol_View_.prototype.setRotation = function(rotation) {\n  this.set(_ol_ViewProperty_.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\n_ol_View_.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {olx.ViewOptions} options View options.\n * @private\n * @return {ol.CenterConstraintType} The constraint.\n */\n_ol_View_.createCenterConstraint_ = function(options) {\n  if (options.extent !== undefined) {\n    return _ol_CenterConstraint_.createExtent(options.extent);\n  } else {\n    return _ol_CenterConstraint_.none;\n  }\n};\n\n\n/**\n * @private\n * @param {olx.ViewOptions} options View options.\n * @return {{constraint: ol.ResolutionConstraintType, maxResolution: number,\n *     minResolution: number, zoomFactor: number}} The constraint.\n */\n_ol_View_.createResolutionConstraint_ = function(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : _ol_.DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = _ol_ResolutionConstraint_.createSnapToResolutions(\n        resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = _ol_proj_.createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * _ol_proj_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(_ol_extent_.getWidth(extent), _ol_extent_.getHeight(extent));\n\n    var defaultMaxResolution = size / _ol_.DEFAULT_TILE_SIZE / Math.pow(\n        defaultZoomFactor, _ol_.DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n        defaultZoomFactor, defaultMaxZoom - _ol_.DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = _ol_ResolutionConstraint_.createSnapToPower(\n        zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n};\n\n\n/**\n * @private\n * @param {olx.ViewOptions} options View options.\n * @return {ol.RotationConstraintType} Rotation constraint.\n */\n_ol_View_.createRotationConstraint_ = function(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return _ol_RotationConstraint_.createSnapToZero();\n    } else if (constrainRotation === false) {\n      return _ol_RotationConstraint_.none;\n    } else if (typeof constrainRotation === 'number') {\n      return _ol_RotationConstraint_.createSnapToN(constrainRotation);\n    } else {\n      return _ol_RotationConstraint_.none;\n    }\n  } else {\n    return _ol_RotationConstraint_.disable;\n  }\n};\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {ol.ViewAnimation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\n_ol_View_.isNoopAnimation = function(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!_ol_coordinate_.equals(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n};\nexport default _ol_View_;\n","import _ol_ from '../index.js';\nimport _ol_MapEventType_ from '../mapeventtype.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_events_ from '../events.js';\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new ol.control.Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be `ol.Object`s in a `ol.Collection`, so you can use their\n * methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {ol.Object}\n * @implements {oli.control.Control}\n * @param {olx.control.ControlOptions} options Control options.\n * @api\n */\nvar _ol_control_Control_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<ol.EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(ol.MapEvent)}\n   */\n  this.render = options.render ? options.render : _ol_.nullFunction;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\n_ol_.inherits(_ol_control_Control_, _ol_Object_);\n\n\n/**\n * @inheritDoc\n */\n_ol_control_Control_.prototype.disposeInternal = function() {\n  _ol_dom_.removeNode(this.element);\n  _ol_Object_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {ol.PluggableMap} Map.\n * @api\n */\n_ol_control_Control_.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n * @api\n */\n_ol_control_Control_.prototype.setMap = function(map) {\n  if (this.map_) {\n    _ol_dom_.removeNode(this.element);\n  }\n  for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    _ol_events_.unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    var target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== _ol_.nullFunction) {\n      this.listenerKeys.push(_ol_events_.listen(map,\n          _ol_MapEventType_.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\n_ol_control_Control_.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default _ol_control_Control_;\n","// FIXME handle date line wrap\n\nimport _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.AttributionOptions=} opt_options Attribution options.\n * @api\n */\nvar _ol_control_Attribution_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.logoLi_ = document.createElement('LI');\n\n  this.ulElement_.appendChild(this.logoLi_);\n  this.logoLi_.style.display = 'none';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  var label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  var button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  _ol_events_.listen(button, _ol_events_EventType_.CLICK, this.handleClick_, this);\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' +\n      _ol_css_.CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ol-collapsed' : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  var render = options.render ? options.render : _ol_control_Attribution_.render;\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    render: render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {Object.<string, Element>}\n   */\n  this.logoElements_ = {};\n\n};\n\n_ol_.inherits(_ol_control_Attribution_, _ol_control_Control_);\n\n\n/**\n * Get a list of visible attributions.\n * @param {olx.FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\n_ol_control_Attribution_.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {Object.<string, boolean>}\n   */\n  var lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  var visibleAttributions = [];\n\n  var layerStatesArray = frameState.layerStatesArray;\n  var resolution = frameState.viewState.resolution;\n  for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    var layerState = layerStatesArray[i];\n    if (!_ol_layer_Layer_.visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    var source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    var attributionGetter = source.getAttributions2();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    var attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (var j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.Attribution}\n * @api\n */\n_ol_control_Attribution_.render = function(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n};\n\n\n/**\n * @private\n * @param {?olx.FrameState} frameState Frame state.\n */\n_ol_control_Attribution_.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var attributions = this.getSourceAttributions_(frameState);\n  if (_ol_array_.equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  // remove everything but the logo\n  while (this.ulElement_.lastChild !== this.logoLi_) {\n    this.ulElement_.removeChild(this.ulElement_.lastChild);\n  }\n\n  // append the attributions\n  for (var i = 0, ii = attributions.length; i < ii; ++i) {\n    var element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n\n  if (attributions.length === 0 && this.renderedAttributions_.length > 0) {\n    this.element.classList.add('ol-logo-only');\n  } else if (this.renderedAttributions_.length === 0 && attributions.length > 0) {\n    this.element.classList.remove('ol-logo-only');\n  }\n\n  var visible = attributions.length > 0 || !_ol_obj_.isEmpty(frameState.logos);\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  this.renderedAttributions_ = attributions;\n  this.insertLogos_(frameState);\n};\n\n\n/**\n * @param {?olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_control_Attribution_.prototype.insertLogos_ = function(frameState) {\n\n  var logo;\n  var logos = frameState.logos;\n  var logoElements = this.logoElements_;\n\n  for (logo in logoElements) {\n    if (!(logo in logos)) {\n      _ol_dom_.removeNode(logoElements[logo]);\n      delete logoElements[logo];\n    }\n  }\n\n  var image, logoElement, logoKey;\n  for (logoKey in logos) {\n    var logoValue = logos[logoKey];\n    if (logoValue instanceof HTMLElement) {\n      this.logoLi_.appendChild(logoValue);\n      logoElements[logoKey] = logoValue;\n    }\n    if (!(logoKey in logoElements)) {\n      image = new Image();\n      image.src = logoKey;\n      if (logoValue === '') {\n        logoElement = image;\n      } else {\n        logoElement = document.createElement('a');\n        logoElement.href = logoValue;\n        logoElement.appendChild(image);\n      }\n      this.logoLi_.appendChild(logoElement);\n      logoElements[logoKey] = logoElement;\n    }\n  }\n\n  this.logoLi_.style.display = !_ol_obj_.isEmpty(logos) ? '' : 'none';\n\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\n_ol_control_Attribution_.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\n_ol_control_Attribution_.prototype.handleToggle_ = function() {\n  this.element.classList.toggle('ol-collapsed');\n  if (this.collapsed_) {\n    _ol_dom_.replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    _ol_dom_.replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\n_ol_control_Attribution_.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\n_ol_control_Attribution_.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\n_ol_control_Attribution_.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\n_ol_control_Attribution_.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default _ol_control_Attribution_;\n","import _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_ from '../index.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_easing_ from '../easing.js';\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.RotateOptions=} opt_options Rotate options.\n * @api\n */\nvar _ol_control_Rotate_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  var label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  var button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  _ol_events_.listen(button, _ol_events_EventType_.CLICK,\n      _ol_control_Rotate_.prototype.handleClick_, this);\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' +\n      _ol_css_.CLASS_CONTROL;\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  var render = options.render ? options.render : _ol_control_Rotate_.render;\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    render: render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(_ol_css_.CLASS_HIDDEN);\n  }\n\n};\n\n_ol_.inherits(_ol_control_Rotate_, _ol_control_Control_);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\n_ol_control_Rotate_.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\n_ol_control_Rotate_.prototype.resetNorth_ = function() {\n  var map = this.getMap();\n  var view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.Rotate}\n * @api\n */\n_ol_control_Rotate_.render = function(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(_ol_css_.CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(_ol_css_.CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(_ol_css_.CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n};\nexport default _ol_control_Rotate_;\n","import _ol_ from '../index.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_easing_ from '../easing.js';\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.ZoomOptions=} opt_options Zoom options.\n * @api\n */\nvar _ol_control_Zoom_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  var delta = options.delta !== undefined ? options.delta : 1;\n\n  var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  var inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  _ol_events_.listen(inElement, _ol_events_EventType_.CLICK,\n      _ol_control_Zoom_.prototype.handleClick_.bind(this, delta));\n\n  var outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  _ol_events_.listen(outElement, _ol_events_EventType_.CLICK,\n      _ol_control_Zoom_.prototype.handleClick_.bind(this, -delta));\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' +\n      _ol_css_.CLASS_CONTROL;\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\n_ol_.inherits(_ol_control_Zoom_, _ol_control_Control_);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\n_ol_control_Zoom_.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\n_ol_control_Zoom_.prototype.zoomByDelta_ = function(delta) {\n  var map = this.getMap();\n  var view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  var currentResolution = view.getResolution();\n  if (currentResolution) {\n    var newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: _ol_easing_.easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default _ol_control_Zoom_;\n","import _ol_Collection_ from './collection.js';\nimport _ol_control_Attribution_ from './control/attribution.js';\nimport _ol_control_Rotate_ from './control/rotate.js';\nimport _ol_control_Zoom_ from './control/zoom.js';\nvar _ol_control_ = {};\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link ol.control.Zoom}\n * * {@link ol.control.Rotate}\n * * {@link ol.control.Attribution}\n *\n * @param {olx.control.DefaultsOptions=} opt_options Defaults options.\n * @return {ol.Collection.<ol.control.Control>} Controls.\n * @api\n */\n_ol_control_.defaults = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new _ol_Collection_();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new _ol_control_Zoom_(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new _ol_control_Rotate_(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new _ol_control_Attribution_(options.attributionOptions));\n  }\n\n  return controls;\n\n};\nexport default _ol_control_;\n","/**\n * @enum {string}\n */\nvar _ol_format_FormatType_ = {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\nexport default _ol_format_FormatType_;\n","import _ol_array_ from './array.js';\nvar _ol_xml_ = {};\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link ol.xml.createElementNS} and\n * {@link ol.xml.setAttributeNS}\n * @const\n * @type {Document}\n */\n_ol_xml_.DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\n_ol_xml_.createElementNS = function(namespaceURI, qualifiedName) {\n  return _ol_xml_.DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n};\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\n_ol_xml_.getAllTextContent = function(node, normalizeWhitespace) {\n  return _ol_xml_.getAllTextContent_(node, normalizeWhitespace, []).join('');\n};\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\n_ol_xml_.getAllTextContent_ = function(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      _ol_xml_.getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n};\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\n_ol_xml_.isDocument = function(value) {\n  return value instanceof Document;\n};\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\n_ol_xml_.isNode = function(value) {\n  return value instanceof Node;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\n_ol_xml_.getAttributeNS = function(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @param {string|number} value Value.\n */\n_ol_xml_.setAttributeNS = function(node, namespaceURI, name, value) {\n  node.setAttributeNS(namespaceURI, name, value);\n};\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\n_ol_xml_.parse = function(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n};\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeArrayExtender = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array.<*>} */\n              (objectStack[objectStack.length - 1]);\n        _ol_array_.extend(array, value);\n      }\n    }\n  );\n};\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeArrayPusher = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var array = objectStack[objectStack.length - 1];\n        array.push(value);\n      }\n    });\n};\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeReplacer = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n};\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeObjectPropertyPusher = function(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {Object} */\n              (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ?\n          opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n};\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeObjectPropertySetter = function(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {Object} */\n              (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ?\n          opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n};\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link ol.XmlNodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {ol.XmlSerializer} Serializer.\n * @template T, V\n */\n_ol_xml_.makeChildAppender = function(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this,\n        node, value, objectStack);\n    var parent = objectStack[objectStack.length - 1];\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n};\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link ol.xml.serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {ol.XmlSerializer} Serializer.\n * @template T, V\n */\n_ol_xml_.makeArraySerializer = function(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = _ol_xml_.makeSimpleNodeFactory(node.localName);\n    }\n    _ol_xml_.serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n};\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link ol.xml.serialize} or {@link ol.xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\n_ol_xml_.makeSimpleNodeFactory = function(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = objectStack[objectStack.length - 1];\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n      var namespaceURI = opt_namespaceURI;\n      if (opt_namespaceURI === undefined) {\n        namespaceURI = node.namespaceURI;\n      }\n      return _ol_xml_.createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n};\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link ol.xml.serialize} or\n * {@link ol.xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\n_ol_xml_.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link ol.xml.serialize} or\n * {@link ol.xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\n_ol_xml_.makeSequence = function(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n};\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\n_ol_xml_.makeStructureNS = function(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, *>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n};\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, ol.XmlParser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\n_ol_xml_.parseNode = function(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n};\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, ol.XmlParser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\n_ol_xml_.pushParseAndPop = function(\n    object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  _ol_xml_.parseNode(parsersNS, node, objectStack, opt_this);\n  return objectStack.pop();\n};\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, ol.XmlSerializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link ol.Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\n_ol_xml_.serialize = function(\n    serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this, value, objectStack,\n          opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n            .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, ol.XmlSerializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link ol.Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\n_ol_xml_.pushSerializeAndPop = function(object,\n    serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  _ol_xml_.serialize(\n      serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return objectStack.pop();\n};\nexport default _ol_xml_;\n","import _ol_ from './index.js';\nimport _ol_format_FormatType_ from './format/formattype.js';\nimport _ol_xml_ from './xml.js';\nvar _ol_featureloader_ = {};\n\n\n/**\n * @param {string|ol.FeatureUrlFunction} url Feature URL service.\n * @param {ol.format.Feature} format Feature format.\n * @param {function(this:ol.VectorTile, Array.<ol.Feature>, ol.proj.Projection, ol.Extent)|function(this:ol.source.Vector, Array.<ol.Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:ol.VectorTile)|function(this:ol.source.Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {ol.FeatureLoader} The feature loader.\n */\n_ol_featureloader_.loadFeaturesXhr = function(url, format, success, failure) {\n  return (\n    /**\n     * @param {ol.Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {ol.proj.Projection} projection Projection.\n     * @this {ol.source.Vector|ol.VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n          typeof url === 'function' ? url(extent, resolution, projection) : url,\n          true);\n      if (format.getType() == _ol_format_FormatType_.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == _ol_format_FormatType_.JSON ||\n                type == _ol_format_FormatType_.TEXT) {\n            source = xhr.responseText;\n          } else if (type == _ol_format_FormatType_.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = _ol_xml_.parse(xhr.responseText);\n            }\n          } else if (type == _ol_format_FormatType_.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n                {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n};\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|ol.FeatureUrlFunction} url Feature URL service.\n * @param {ol.format.Feature} format Feature format.\n * @return {ol.FeatureLoader} The feature loader.\n * @api\n */\n_ol_featureloader_.xhr = function(url, format) {\n  return _ol_featureloader_.loadFeaturesXhr(url, format,\n      /**\n       * @param {Array.<ol.Feature>} features The loaded features.\n       * @param {ol.proj.Projection} dataProjection Data projection.\n       * @this {ol.source.Vector}\n       */\n      function(features, dataProjection) {\n        this.addFeatures(features);\n      }, /* FIXME handle error */ _ol_.nullFunction);\n};\nexport default _ol_featureloader_;\n","var _ol_loadingstrategy_ = {};\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.Extent>} Extents.\n * @api\n */\n_ol_loadingstrategy_.all = function(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n};\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.Extent>} Extents.\n * @api\n */\n_ol_loadingstrategy_.bbox = function(extent, resolution) {\n  return [extent];\n};\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {function(ol.Extent, number): Array.<ol.Extent>} Loading strategy.\n * @api\n */\n_ol_loadingstrategy_.tile = function(tileGrid) {\n  return (\n  /**\n       * @param {ol.Extent} extent Extent.\n       * @param {number} resolution Resolution.\n       * @return {Array.<ol.Extent>} Extents.\n       */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<ol.Extent>} */\n      var extents = [];\n      /** @type {ol.TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    });\n};\nexport default _ol_loadingstrategy_;\n","/**\n * @enum {string}\n */\nvar _ol_source_VectorEventType_ = {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol.source.Vector.Event#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol.source.Vector.Event#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol.source.Vector.Event#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link ol.source.Vector#clear source.clear()} for exceptions.\n   * @event ol.source.Vector.Event#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\nexport default _ol_source_VectorEventType_;\n","// FIXME bulk feature upload - suppress events\n// FIXME make change-detection more refined (notably, geometry hint)\n\nimport _ol_ from '../index.js';\nimport _ol_Collection_ from '../collection.js';\nimport _ol_CollectionEventType_ from '../collectioneventtype.js';\nimport _ol_ObjectEventType_ from '../objecteventtype.js';\nimport _ol_array_ from '../array.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_featureloader_ from '../featureloader.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_loadingstrategy_ from '../loadingstrategy.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_source_Source_ from '../source/source.js';\nimport _ol_source_State_ from '../source/state.js';\nimport _ol_source_VectorEventType_ from '../source/vectoreventtype.js';\nimport _ol_structs_RBush_ from '../structs/rbush.js';\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link ol.source.VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {ol.source.Source}\n * @fires ol.source.Vector.Event\n * @param {olx.source.VectorOptions=} opt_options Vector source options.\n * @api\n */\nvar _ol_source_Vector_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_source_Source_.call(this, {\n    attributions: options.attributions,\n    logo: options.logo,\n    projection: undefined,\n    state: _ol_source_State_.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {ol.FeatureLoader}\n   */\n  this.loader_ = _ol_.nullFunction;\n\n  /**\n   * @private\n   * @type {ol.format.Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|ol.FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    _ol_asserts_.assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = _ol_featureloader_.xhr(this.url_, /** @type {ol.format.Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {ol.LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy :\n    _ol_loadingstrategy_.all;\n\n  var useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {ol.structs.RBush.<ol.Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new _ol_structs_RBush_() : null;\n\n  /**\n   * @private\n   * @type {ol.structs.RBush.<{extent: ol.Extent}>}\n   */\n  this.loadedExtentsRtree_ = new _ol_structs_RBush_();\n\n  /**\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by ol.getUid(feature)).\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<ol.EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  var collection, features;\n  if (options.features instanceof _ol_Collection_) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new _ol_Collection_(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\n_ol_.inherits(_ol_source_Vector_, _ol_source_Source_);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {ol.Feature} feature Feature to add.\n * @api\n */\n_ol_source_Vector_.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {ol.Feature} feature Feature.\n * @protected\n */\n_ol_source_Vector_.prototype.addFeatureInternal = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    var extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n      new _ol_source_Vector_.Event(_ol_source_VectorEventType_.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {ol.Feature} feature The feature.\n * @private\n */\n_ol_source_Vector_.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    _ol_events_.listen(feature, _ol_events_EventType_.CHANGE,\n        this.handleFeatureChange_, this),\n    _ol_events_.listen(feature, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {ol.Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\n_ol_source_Vector_.prototype.addToIndex_ = function(featureKey, feature) {\n  var valid = true;\n  var id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    _ol_asserts_.assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<ol.Feature>} features Features to add.\n * @api\n */\n_ol_source_Vector_.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<ol.Feature>} features Features.\n * @protected\n */\n_ol_source_Vector_.prototype.addFeaturesInternal = function(features) {\n  var featureKey, i, length, feature;\n\n  var extents = [];\n  var newFeatures = [];\n  var geometryFeatures = [];\n\n  for (i = 0, length = features.length; i < length; i++) {\n    feature = features[i];\n    featureKey = _ol_.getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (i = 0, length = newFeatures.length; i < length; i++) {\n    feature = newFeatures[i];\n    featureKey = _ol_.getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new _ol_source_Vector_.Event(\n        _ol_source_VectorEventType_.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!ol.Collection.<ol.Feature>} collection Collection.\n * @private\n */\n_ol_source_Vector_.prototype.bindFeaturesCollection_ = function(collection) {\n  var modifyingCollection = false;\n  _ol_events_.listen(this, _ol_source_VectorEventType_.ADDFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n  _ol_events_.listen(this, _ol_source_VectorEventType_.REMOVEFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n  _ol_events_.listen(collection, _ol_CollectionEventType_.ADD,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {ol.Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n  _ol_events_.listen(collection, _ol_CollectionEventType_.REMOVE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {ol.Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link removefeature} events.\n * @api\n */\n_ol_source_Vector_.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (var featureId in this.featureChangeKeys_) {\n      var keys = this.featureChangeKeys_[featureId];\n      keys.forEach(_ol_events_.unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (var id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  var clearEvent = new _ol_source_Vector_.Event(_ol_source_VectorEventType_.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n *\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeature = function(callback, opt_this) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback, opt_this);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback, opt_this);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n */\n_ol_source_Vector_.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback, opt_this) {\n  var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    var geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback.call(opt_this, feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link ol.source.Vector#forEachFeatureIntersectingExtent\n * source.forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link ol.source.Vector#forEachFeature}.\n *\n * @param {ol.Extent} extent Extent.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeatureInExtent = function(extent, callback, opt_this) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback, opt_this);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback, opt_this);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link ol.source.Vector#forEachFeatureInExtent\n * source.forEachFeatureInExtent()} method instead.\n *\n * @param {ol.Extent} extent Extent.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeatureIntersectingExtent = function(extent, callback, opt_this) {\n  return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {ol.Feature} feature Feature.\n       * @return {S|undefined} The return value from the last call to the callback.\n       * @template S\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback.call(opt_this, feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link ol.Collection} as `features`.\n * @return {ol.Collection.<ol.Feature>} The collection of features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeatures = function() {\n  var features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!_ol_obj_.isEmpty(this.nullGeometryFeatures_)) {\n      _ol_array_.extend(\n          features, _ol_obj_.getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return /** @type {Array.<ol.Feature>} */ (features);\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  var features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Extent} extent Extent.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {function(ol.Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link ol.Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {ol.Feature} Closest feature.\n * @api\n */\n_ol_source_Vector_.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var closestFeature = null;\n  var closestPoint = [NaN, NaN];\n  var minSquaredDistance = Infinity;\n  var extent = [-Infinity, -Infinity, Infinity, Infinity];\n  var filter = opt_filter ? opt_filter : _ol_functions_.TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {ol.Feature} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n              x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_source_Vector_.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {ol.Feature} The feature (or `null` if not found).\n * @api\n */\n_ol_source_Vector_.prototype.getFeatureById = function(id) {\n  var feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {ol.format.Feature|undefined} The feature format.\n * @api\n */\n_ol_source_Vector_.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\n_ol_source_Vector_.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\n_ol_source_Vector_.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|ol.FeatureUrlFunction|undefined} The url.\n * @api\n */\n_ol_source_Vector_.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @private\n */\n_ol_source_Vector_.prototype.handleFeatureChange_ = function(event) {\n  var feature = /** @type {ol.Feature} */ (event.target);\n  var featureKey = _ol_.getUid(feature).toString();\n  var geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    var extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  var id = feature.getId();\n  if (id !== undefined) {\n    var sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new _ol_source_Vector_.Event(\n      _ol_source_VectorEventType_.CHANGEFEATURE, feature));\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_source_Vector_.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() &&\n      _ol_obj_.isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {ol.proj.Projection} projection Projection.\n */\n_ol_source_Vector_.prototype.loadFeatures = function(\n    extent, resolution, projection) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var extentsToLoad = this.strategy_(extent, resolution);\n  var i, ii;\n  for (i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    var extentToLoad = extentsToLoad[i];\n    var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: ol.Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return _ol_extent_.containsExtent(object.extent, extentToLoad);\n        });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {ol.Extent} extent Extent.\n * @api\n */\n_ol_source_Vector_.prototype.removeLoadedExtent = function(extent) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (_ol_extent_.equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link ol.source.Vector#clear source.clear()} method\n * instead.\n * @param {ol.Feature} feature Feature to remove.\n * @api\n */\n_ol_source_Vector_.prototype.removeFeature = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {ol.Feature} feature Feature.\n * @protected\n */\n_ol_source_Vector_.prototype.removeFeatureInternal = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(_ol_events_.unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  var id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new _ol_source_Vector_.Event(\n      _ol_source_VectorEventType_.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {ol.Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\n_ol_source_Vector_.prototype.removeFromIdIndex_ = function(feature) {\n  var removed = false;\n  for (var id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {ol.FeatureLoader} loader The loader to set.\n * @api\n */\n_ol_source_Vector_.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.source.Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.source.Vector.Event}\n * @param {string} type Type.\n * @param {ol.Feature=} opt_feature Feature.\n */\n_ol_source_Vector_.Event = function(type, opt_feature) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {ol.Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\n_ol_.inherits(_ol_source_Vector_.Event, _ol_events_Event_);\nexport default _ol_source_Vector_;\n","import _ol_ from './index.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_easing_ from './easing.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {ol.events.EventTarget}\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileState} state State.\n * @param {olx.TileOptions=} opt_options Tile options.\n */\nvar _ol_Tile_ = function(tileCoord, state, opt_options) {\n  _ol_events_EventTarget_.call(this);\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {ol.TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {ol.Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ?\n    250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\n_ol_.inherits(_ol_Tile_, _ol_events_EventTarget_);\n\n\n/**\n * @protected\n */\n_ol_Tile_.prototype.changed = function() {\n  this.dispatchEvent(_ol_events_EventType_.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\n_ol_Tile_.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!ol.Tile} Best tile for rendering.\n */\n_ol_Tile_.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  var tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == _ol_TileState_.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\n_ol_Tile_.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  var tile = this.interimTile;\n  var prev = this;\n\n  do {\n    if (tile.getState() == _ol_TileState_.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == _ol_TileState_.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == _ol_TileState_.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {ol.TileCoord} The tile coordinate.\n * @api\n */\n_ol_Tile_.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {ol.TileState} State.\n */\n_ol_Tile_.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {ol.TileState} state State.\n */\n_ol_Tile_.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\n_ol_Tile_.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\n_ol_Tile_.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  var start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  var delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return _ol_easing_.easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\n_ol_Tile_.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\n_ol_Tile_.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default _ol_Tile_;\n","import _ol_ from './index.js';\nimport _ol_Tile_ from './tile.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @constructor\n * @extends {ol.Tile}\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.TileLoadFunctionType} tileLoadFunction Tile load function.\n * @param {olx.TileOptions=} opt_options Tile options.\n */\nvar _ol_ImageTile_ = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  _ol_Tile_.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {ol.TileLoadFunctionType}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\n_ol_.inherits(_ol_ImageTile_, _ol_Tile_);\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageTile_.prototype.disposeInternal = function() {\n  if (this.state == _ol_TileState_.LOADING) {\n    this.unlistenImage_();\n    this.image_ = _ol_ImageTile_.getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = _ol_TileState_.ABORT;\n  this.changed();\n  _ol_Tile_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\n_ol_ImageTile_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageTile_.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_ImageTile_.prototype.handleImageError_ = function() {\n  this.state = _ol_TileState_.ERROR;\n  this.unlistenImage_();\n  this.image_ = _ol_ImageTile_.getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_ImageTile_.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = _ol_TileState_.LOADED;\n  } else {\n    this.state = _ol_TileState_.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_ImageTile_.prototype.load = function() {\n  if (this.state == _ol_TileState_.ERROR) {\n    this.state = _ol_TileState_.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == _ol_TileState_.IDLE) {\n    this.state = _ol_TileState_.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_ImageTile_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\n_ol_ImageTile_.getBlankImage = function() {\n  var ctx = _ol_dom_.createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n};\nexport default _ol_ImageTile_;\n","import _ol_dom_ from './dom.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_math_ from './math.js';\nimport _ol_proj_ from './proj.js';\nvar _ol_reproj_ = {};\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {ol.proj.Projection} sourceProj Source projection.\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\n_ol_reproj_.calculateSourceResolution = function(sourceProj, targetProj,\n    targetCenter, targetResolution) {\n\n  var sourceCenter = _ol_proj_.transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution =\n      _ol_proj_.getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || _ol_extent_.containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor =\n        _ol_proj_.getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n};\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {ol.Coordinate} New point 1 px farther from the centroid.\n * @private\n */\n_ol_reproj_.enlargeClipPoint_ = function(centroidX, centroidY, x, y) {\n  var dX = x - centroidX, dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n};\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {ol.Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {ol.Extent} targetExtent Target extent.\n * @param {ol.reproj.Triangulation} triangulation Calculated triangulation.\n * @param {Array.<{extent: ol.Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n *             Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\n_ol_reproj_.render = function(width, height, pixelRatio,\n    sourceResolution, sourceExtent, targetResolution, targetExtent,\n    triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = _ol_dom_.createCanvasContext2D(Math.round(pixelRatio * width),\n      Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = _ol_extent_.createEmpty();\n  sources.forEach(function(src, i, arr) {\n    _ol_extent_.extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = _ol_extent_.getWidth(sourceDataExtent);\n  var canvasHeightInUnits = _ol_extent_.getHeight(sourceDataExtent);\n  var stitchContext = _ol_dom_.createCanvasContext2D(\n      Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n      Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = _ol_extent_.getWidth(src.extent);\n    var srcHeight = _ol_extent_.getHeight(src.extent);\n\n    stitchContext.drawImage(\n        src.image,\n        gutter, gutter,\n        src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n        xPos * stitchScale, yPos * stitchScale,\n        srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = _ol_extent_.getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source, target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1],\n        x1 = source[1][0], y1 = source[1][1],\n        x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution,\n        v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution,\n        v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution,\n        v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0, sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = _ol_math_.solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3, centroidY = (v0 + v1 + v2) / 3;\n    var p0 = _ol_reproj_.enlargeClipPoint_(centroidX, centroidY, u0, v0);\n    var p1 = _ol_reproj_.enlargeClipPoint_(centroidX, centroidY, u1, v1);\n    var p2 = _ol_reproj_.enlargeClipPoint_(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n        affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n        sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution,\n          v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution,\n          v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution,\n          v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n};\nexport default _ol_reproj_;\n","import _ol_ from '../index.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_math_ from '../math.js';\nimport _ol_proj_ from '../proj.js';\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {ol.proj.Projection} sourceProj Source projection.\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.Extent} targetExtent Target extent to triangulate.\n * @param {ol.Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nvar _ol_reproj_Triangulation_ = function(sourceProj, targetProj, targetExtent,\n    maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {ol.proj.Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {ol.proj.Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, ol.Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = _ol_proj_.getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {ol.Coordinate} c A coordinate.\n   * @return {ol.Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {ol.Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<ol.ReprojTriangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (_ol_extent_.getWidth(maxSourceExtent) ==\n       _ol_extent_.getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    _ol_extent_.getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    _ol_extent_.getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = _ol_extent_.getTopLeft(targetExtent);\n  var destinationTopRight = _ol_extent_.getTopRight(targetExtent);\n  var destinationBottomRight = _ol_extent_.getBottomRight(targetExtent);\n  var destinationBottomLeft = _ol_extent_.getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n      destinationTopLeft, destinationTopRight,\n      destinationBottomRight, destinationBottomLeft,\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n      _ol_.RASTER_REPROJECTION_MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }, this);\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {ol.Coordinate} a The target a coordinate.\n * @param {ol.Coordinate} b The target b coordinate.\n * @param {ol.Coordinate} c The target c coordinate.\n * @param {ol.Coordinate} aSrc The source a coordinate.\n * @param {ol.Coordinate} bSrc The source b coordinate.\n * @param {ol.Coordinate} cSrc The source c coordinate.\n * @private\n */\n_ol_reproj_Triangulation_.prototype.addTriangle_ = function(a, b, c,\n    aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {ol.Coordinate} a The target a coordinate.\n * @param {ol.Coordinate} b The target b coordinate.\n * @param {ol.Coordinate} c The target c coordinate.\n * @param {ol.Coordinate} d The target d coordinate.\n * @param {ol.Coordinate} aSrc The source a coordinate.\n * @param {ol.Coordinate} bSrc The source b coordinate.\n * @param {ol.Coordinate} cSrc The source c coordinate.\n * @param {ol.Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\n_ol_reproj_Triangulation_.prototype.addQuad_ = function(a, b, c, d,\n    aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = _ol_extent_.boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    _ol_extent_.getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = _ol_extent_.boundingExtent([a, b, c, d]);\n      var targetCoverageX =\n          _ol_extent_.getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > _ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > _ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!_ol_extent_.intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (_ol_math_.modulo(aSrc[0], sourceWorldWidth) +\n             _ol_math_.modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            _ol_math_.modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {ol.Extent} Calculated extent.\n */\n_ol_reproj_Triangulation_.prototype.calculateSourceExtent = function() {\n  var extent = _ol_extent_.createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    _ol_extent_.extendCoordinate(extent, src[0]);\n    _ol_extent_.extendCoordinate(extent, src[1]);\n    _ol_extent_.extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<ol.ReprojTriangle>} Array of the calculated triangles.\n */\n_ol_reproj_Triangulation_.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default _ol_reproj_Triangulation_;\n","import _ol_ from '../index.js';\nimport _ol_Tile_ from '../tile.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_math_ from '../math.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_reproj_Triangulation_ from '../reproj/triangulation.js';\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link ol.source.TileImage}.\n *\n * @constructor\n * @extends {ol.Tile}\n * @param {ol.proj.Projection} sourceProj Source projection.\n * @param {ol.tilegrid.TileGrid} sourceTileGrid Source tile grid.\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.tilegrid.TileGrid} targetTileGrid Target tile grid.\n * @param {ol.TileCoord} tileCoord Coordinate of the tile.\n * @param {ol.TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {ol.ReprojTileFunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nvar _ol_reproj_Tile_ = function(sourceProj, sourceTileGrid,\n    targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n    pixelRatio, gutter, getTileFunction,\n    opt_errorThreshold, opt_renderEdges) {\n  _ol_Tile_.call(this, tileCoord, _ol_TileState_.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {ol.tilegrid.TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {ol.TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<ol.Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  var maxTargetExtent = this.targetTileGrid_.getExtent();\n  var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  var limitedTargetExtent = maxTargetExtent ?\n    _ol_extent_.getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (_ol_extent_.getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = _ol_TileState_.EMPTY;\n    return;\n  }\n\n  var sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = _ol_extent_.getIntersection(\n          maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n  var targetCenter = _ol_extent_.getCenter(limitedTargetExtent);\n  var sourceResolution = _ol_reproj_.calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = _ol_TileState_.EMPTY;\n    return;\n  }\n\n  var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : _ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!ol.reproj.Triangulation}\n   */\n  this.triangulation_ = new _ol_reproj_Triangulation_(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = _ol_TileState_.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = _ol_math_.clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = _ol_math_.clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = _ol_extent_.getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!_ol_extent_.getArea(sourceExtent)) {\n    this.state = _ol_TileState_.EMPTY;\n  } else {\n    var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n    for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = _ol_TileState_.EMPTY;\n    }\n  }\n};\n\n_ol_.inherits(_ol_reproj_Tile_, _ol_Tile_);\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Tile_.prototype.disposeInternal = function() {\n  if (this.state == _ol_TileState_.LOADING) {\n    this.unlistenSources_();\n  }\n  _ol_Tile_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\n_ol_reproj_Tile_.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Tile_.prototype.reproject_ = function() {\n  var sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == _ol_TileState_.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }, this);\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = _ol_TileState_.ERROR;\n  } else {\n    var z = this.wrappedTileCoord_[0];\n    var size = this.targetTileGrid_.getTileSize(z);\n    var width = typeof size === 'number' ? size : size[0];\n    var height = typeof size === 'number' ? size : size[1];\n    var targetResolution = this.targetTileGrid_.getResolution(z);\n    var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n    this.canvas_ = _ol_reproj_.render(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n    this.state = _ol_TileState_.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Tile_.prototype.load = function() {\n  if (this.state == _ol_TileState_.IDLE) {\n    this.state = _ol_TileState_.LOADING;\n    this.changed();\n\n    var leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      var state = tile.getState();\n      if (state == _ol_TileState_.IDLE || state == _ol_TileState_.LOADING) {\n        leftToLoad++;\n\n        var sourceListenKey;\n        sourceListenKey = _ol_events_.listen(tile, _ol_events_EventType_.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == _ol_TileState_.LOADED ||\n                  state == _ol_TileState_.ERROR ||\n                  state == _ol_TileState_.EMPTY) {\n                _ol_events_.unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }, this);\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      var state = tile.getState();\n      if (state == _ol_TileState_.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Tile_.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default _ol_reproj_Tile_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_math_ from './math.js';\nimport _ol_tilecoord_ from './tilecoord.js';\nvar _ol_TileUrlFunction_ = {};\n\n\n/**\n * @param {string} template Template.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTemplate = function(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n            .replace(xRegEx, tileCoord[1].toString())\n            .replace(yRegEx, function() {\n              var y = -tileCoord[2] - 1;\n              return y.toString();\n            })\n            .replace(dashYRegEx, function() {\n              var z = tileCoord[0];\n              var range = tileGrid.getFullTileRange(z);\n              _ol_asserts_.assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n              var y = range.getHeight() + tileCoord[2];\n              return y.toString();\n            });\n      }\n    }\n  );\n};\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTemplates = function(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = _ol_TileUrlFunction_.createFromTemplate(\n        templates[i], tileGrid);\n  }\n  return _ol_TileUrlFunction_.createFromTileUrlFunctions(tileUrlFunctions);\n};\n\n\n/**\n * @param {Array.<ol.TileUrlFunctionType>} tileUrlFunctions Tile URL Functions.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTileUrlFunctions = function(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = _ol_tilecoord_.hash(tileCoord);\n        var index = _ol_math_.modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n_ol_TileUrlFunction_.nullTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n  return undefined;\n};\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\n_ol_TileUrlFunction_.expandUrl = function(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n};\nexport default _ol_TileUrlFunction_;\n","/**\n * @enum {string}\n */\nvar _ol_source_TileEventType_ = {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event ol.source.Tile.Event#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event ol.source.Tile.Event#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event ol.source.Tile.Event#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\nexport default _ol_source_TileEventType_;\n","import _ol_ from '../index.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_TileUrlFunction_ from '../tileurlfunction.js';\nimport _ol_source_Tile_ from '../source/tile.js';\nimport _ol_source_TileEventType_ from '../source/tileeventtype.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires ol.source.Tile.Event\n * @extends {ol.source.Tile}\n * @param {ol.SourceUrlTileOptions} options Image tile options.\n */\nvar _ol_source_UrlTile_ = function(options) {\n\n  _ol_source_Tile_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    logo: options.logo,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {ol.TileLoadFunctionType}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {ol.TileUrlFunctionType}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\n_ol_.inherits(_ol_source_UrlTile_, _ol_source_Tile_);\n\n\n/**\n * @type {ol.TileUrlFunctionType|undefined}\n * @protected\n */\n_ol_source_UrlTile_.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {ol.TileLoadFunctionType} TileLoadFunction\n * @api\n */\n_ol_source_UrlTile_.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {ol.TileUrlFunctionType} TileUrlFunction\n * @api\n */\n_ol_source_UrlTile_.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\n_ol_source_UrlTile_.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_source_UrlTile_.prototype.handleTileChange = function(event) {\n  var tile = /** @type {ol.Tile} */ (event.target);\n  var uid = _ol_.getUid(tile);\n  var tileState = tile.getState();\n  var type;\n  if (tileState == _ol_TileState_.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = _ol_source_TileEventType_.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == _ol_TileState_.ERROR ? _ol_source_TileEventType_.TILELOADERROR :\n      (tileState == _ol_TileState_.LOADED || tileState == _ol_TileState_.ABORT) ?\n        _ol_source_TileEventType_.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new _ol_source_Tile_.Event(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {ol.TileLoadFunctionType} tileLoadFunction Tile load function.\n * @api\n */\n_ol_source_UrlTile_.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {ol.TileUrlFunctionType} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\n_ol_source_UrlTile_.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\n_ol_source_UrlTile_.prototype.setUrl = function(url) {\n  var urls = this.urls = _ol_TileUrlFunction_.expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\n_ol_source_UrlTile_.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  var key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_UrlTile_.prototype.useTile = function(z, x, y) {\n  var tileCoordKey = _ol_tilecoord_.getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default _ol_source_UrlTile_;\n","import _ol_ from '../index.js';\nimport _ol_ImageTile_ from '../imagetile.js';\nimport _ol_TileCache_ from '../tilecache.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_reproj_Tile_ from '../reproj/tile.js';\nimport _ol_source_UrlTile_ from '../source/urltile.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires ol.source.Tile.Event\n * @extends {ol.source.UrlTile}\n * @param {olx.source.TileImageOptions} options Image tile options.\n * @api\n */\nvar _ol_source_TileImage_ = function(options) {\n\n  _ol_source_UrlTile_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    logo: options.logo,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : _ol_source_TileImage_.defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: ol.ImageTile, ol.TileCoord, ol.TileState, string,\n   *        ?string, ol.TileLoadFunctionType, olx.TileOptions=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : _ol_ImageTile_;\n\n  /**\n   * @protected\n   * @type {Object.<string, ol.TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {Object.<string, ol.tilegrid.TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\n_ol_.inherits(_ol_source_TileImage_, _ol_source_UrlTile_);\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.canExpireCache = function() {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    return _ol_source_UrlTile_.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (var key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.expireCache = function(projection, usedTiles) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    _ol_source_UrlTile_.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  var usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (var id in this.tileCacheForProjection) {\n    var tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getGutter = function(projection) {\n  if (_ol_.ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection &&\n      !_ol_proj_.equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\n_ol_source_TileImage_.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getOpaque = function(projection) {\n  if (_ol_.ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection &&\n      !_ol_proj_.equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return _ol_source_UrlTile_.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getTileGridForProjection = function(projection) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    return _ol_source_UrlTile_.prototype.getTileGridForProjection.call(this, projection);\n  }\n  var thisProj = this.getProjection();\n  if (this.tileGrid &&\n      (!thisProj || _ol_proj_.equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    var projKey = _ol_.getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n          _ol_tilegrid_.getForProjection(projection);\n    }\n    return /** @type {!ol.tilegrid.TileGrid} */ (this.tileGridForProjection[projKey]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getTileCacheForProjection = function(projection) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n    return _ol_source_UrlTile_.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  var thisProj = this.getProjection();\n  if (!thisProj || _ol_proj_.equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    var projKey = _ol_.getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new _ol_TileCache_(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!ol.Tile} Tile.\n * @private\n */\n_ol_source_TileImage_.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  var tileCoord = [z, x, y];\n  var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n  var tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? _ol_TileState_.IDLE : _ol_TileState_.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n  tile.key = key;\n  _ol_events_.listen(tile, _ol_events_EventType_.CHANGE,\n      this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileImage_.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  var sourceProjection = /** @type {!ol.proj.Projection} */ (this.getProjection());\n  if (!_ol_.ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection ||\n      _ol_proj_.equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    var cache = this.getTileCacheForProjection(projection);\n    var tileCoord = [z, x, y];\n    var tile;\n    var tileCoordKey = _ol_tilecoord_.getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!ol.Tile} */ (cache.get(tileCoordKey));\n    }\n    var key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      var targetTileGrid = this.getTileGridForProjection(projection);\n      var wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var newTile = new _ol_reproj_Tile_(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutterInternal(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!ol.proj.Projection} projection Projection.\n * @return {!ol.Tile} Tile.\n * @protected\n */\n_ol_source_TileImage_.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  var tile = null;\n  var tileCoordKey = _ol_tilecoord_.getKeyZXY(z, x, y);\n  var key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      var interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == _ol_TileState_.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\n_ol_source_TileImage_.prototype.setRenderReprojectionEdges = function(render) {\n  if (!_ol_.ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (var id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {ol.ProjectionLike} projection Projection.\n * @param {ol.tilegrid.TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\n_ol_source_TileImage_.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (_ol_.ENABLE_RASTER_REPROJECTION) {\n    var proj = _ol_proj_.get(projection);\n    if (proj) {\n      var projKey = _ol_.getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\n_ol_source_TileImage_.defaultTileLoadFunction = function(imageTile, src) {\n  imageTile.getImage().src = src;\n};\nexport default _ol_source_TileImage_;\n","import _ol_ from '../index.js';\nimport _ol_source_TileImage_ from '../source/tileimage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar _ol_source_XYZ_ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  _ol_source_TileImage_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    logo: options.logo,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\n_ol_.inherits(_ol_source_XYZ_, _ol_source_TileImage_);\nexport default _ol_source_XYZ_;\n","import _ol_ from '../index.js';\nimport _ol_source_XYZ_ from '../source/xyz.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar _ol_source_OSM_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [_ol_source_OSM_.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  _ol_source_XYZ_.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\n_ol_.inherits(_ol_source_OSM_, _ol_source_XYZ_);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\n_ol_source_OSM_.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default _ol_source_OSM_;\n","/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nvar _ol_Kinetic_ = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_Kinetic_.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\n_ol_Kinetic_.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\n_ol_Kinetic_.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\n_ol_Kinetic_.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\n_ol_Kinetic_.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default _ol_Kinetic_;\n","import _ol_ from '../index.js';\nimport _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.DoubleClickZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DoubleClickZoom_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_DoubleClickZoom_.handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\n_ol_.inherits(_ol_interaction_DoubleClickZoom_, _ol_interaction_Interaction_);\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.DoubleClickZoom}\n * @api\n */\n_ol_interaction_DoubleClickZoom_.handleEvent = function(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == _ol_MapBrowserEventType_.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    _ol_interaction_Interaction_.zoomByDelta(\n        view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n};\nexport default _ol_interaction_DoubleClickZoom_;\n","import _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_has_ from '../has.js';\nvar _ol_events_condition_ = {};\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\n_ol_events_condition_.altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\n_ol_events_condition_.altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return always true.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\n_ol_events_condition_.always = _ol_functions_.TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\n_ol_events_condition_.click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == _ol_MapBrowserEventType_.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\n_ol_events_condition_.mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(_ol_has_.WEBKIT && _ol_has_.MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\n_ol_events_condition_.never = _ol_functions_.FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\n_ol_events_condition_.pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\n_ol_events_condition_.singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == _ol_MapBrowserEventType_.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\n_ol_events_condition_.doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == _ol_MapBrowserEventType_.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\n_ol_events_condition_.noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\n_ol_events_condition_.platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (_ol_has_.MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\n_ol_events_condition_.shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\n_ol_events_condition_.targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\n_ol_events_condition_.mouseOnly = function(mapBrowserEvent) {\n  _ol_asserts_.assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return /** @type {ol.MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\n_ol_events_condition_.primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\nexport default _ol_events_condition_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.DragPanOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragPan_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_DragPan_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_DragPan_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_DragPan_.handleUpEvent_\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {ol.Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {ol.Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\n_ol_.inherits(_ol_interaction_DragPan_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.DragPan}\n * @private\n */\n_ol_interaction_DragPan_.handleDragEvent_ = function(mapBrowserEvent) {\n  var targetPointers = this.targetPointers;\n  var centroid =\n      _ol_interaction_Pointer_.centroid(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var viewState = view.getState();\n      var center = [deltaX, deltaY];\n      _ol_coordinate_.scale(center, viewState.resolution);\n      _ol_coordinate_.rotate(center, viewState.rotation);\n      _ol_coordinate_.add(center, viewState.center);\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.DragPan}\n * @private\n */\n_ol_interaction_DragPan_.handleUpEvent_ = function(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!ol.Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: _ol_easing_.easeOut\n      });\n    }\n    view.setHint(_ol_ViewHint_.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.DragPan}\n * @private\n */\n_ol_interaction_DragPan_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_DragPan_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_DragPan_;\n","import _ol_ from '../index.js';\nimport _ol_RotationConstraint_ from '../rotationconstraint.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.DragRotateOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragRotate_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_DragRotate_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_DragRotate_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_DragRotate_.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\n_ol_.inherits(_ol_interaction_DragRotate_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.DragRotate}\n * @private\n */\n_ol_interaction_DragRotate_.handleDragEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === _ol_RotationConstraint_.disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    _ol_interaction_Interaction_.rotateWithoutConstraints(\n        view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.DragRotate}\n * @private\n */\n_ol_interaction_DragRotate_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(_ol_ViewHint_.INTERACTING, -1);\n  var rotation = view.getRotation();\n  _ol_interaction_Interaction_.rotate(view, rotation,\n      undefined, this.duration_);\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.DragRotate}\n * @private\n */\n_ol_interaction_DragRotate_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (_ol_events_condition_.mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(_ol_ViewHint_.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_DragRotate_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_DragRotate_;\n","// FIXME add rotation\n\nimport _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\n\n/**\n * @constructor\n * @extends {ol.Disposable}\n * @param {string} className CSS class name.\n */\nvar _ol_render_Box_ = function(className) {\n\n  /**\n   * @type {ol.geom.Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {ol.Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {ol.Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\n_ol_.inherits(_ol_render_Box_, _ol_Disposable_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_Box_.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\n_ol_render_Box_.prototype.render_ = function() {\n  var startPixel = this.startPixel_;\n  var endPixel = this.endPixel_;\n  var px = 'px';\n  var style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n */\n_ol_render_Box_.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    var style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {ol.Pixel} startPixel Start pixel.\n * @param {ol.Pixel} endPixel End pixel.\n */\n_ol_render_Box_.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\n_ol_render_Box_.prototype.createOrUpdateGeometry = function() {\n  var startPixel = this.startPixel_;\n  var endPixel = this.endPixel_;\n  var pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new _ol_geom_Polygon_([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {ol.geom.Polygon} Geometry.\n */\n_ol_render_Box_.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default _ol_render_Box_;\n","// FIXME draw drag box\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_ from '../index.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\nimport _ol_render_Box_ from '../render/box.js';\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link ol.interaction.DragZoom} and\n * {@link ol.interaction.DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.DragBox.Event\n * @param {olx.interaction.DragBoxOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragBox_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_DragBox_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_DragBox_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_DragBox_.handleUpEvent_\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.render.Box}\n   * @private\n   */\n  this.box_ = new _ol_render_Box_(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.always;\n\n  /**\n   * @private\n   * @type {ol.DragBoxEndConditionType}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : _ol_interaction_DragBox_.defaultBoxEndCondition;\n};\n\n_ol_.inherits(_ol_interaction_DragBox_, _ol_interaction_Pointer_);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {ol.MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {ol.Pixel} startPixel The starting pixel of the box.\n * @param {ol.Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {ol.interaction.DragBox}\n */\n_ol_interaction_DragBox_.defaultBoxEndCondition = function(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.DragBox}\n * @private\n */\n_ol_interaction_DragBox_.handleDragEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new _ol_interaction_DragBox_.Event(_ol_interaction_DragBox_.EventType_.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n};\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {ol.geom.Polygon} Geometry.\n * @api\n */\n_ol_interaction_DragBox_.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\n_ol_interaction_DragBox_.prototype.onBoxEnd = _ol_.nullFunction;\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.DragBox}\n * @private\n */\n_ol_interaction_DragBox_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n      this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new _ol_interaction_DragBox_.Event(_ol_interaction_DragBox_.EventType_.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.DragBox}\n * @private\n */\n_ol_interaction_DragBox_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (!_ol_events_condition_.mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (_ol_events_condition_.mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new _ol_interaction_DragBox_.Event(_ol_interaction_DragBox_.EventType_.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_interaction_DragBox_.EventType_ = {\n  /**\n   * Triggered upon drag box start.\n   * @event ol.interaction.DragBox.Event#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event ol.interaction.DragBox.Event#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event ol.interaction.DragBox.Event#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {ol.Coordinate} coordinate The event coordinate.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {ol.events.Event}\n * @constructor\n * @implements {oli.DragBoxEvent}\n */\n_ol_interaction_DragBox_.Event = function(type, coordinate, mapBrowserEvent) {\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n_ol_.inherits(_ol_interaction_DragBox_.Event, _ol_events_Event_);\nexport default _ol_interaction_DragBox_;\n","import _ol_ from '../index.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_interaction_DragBox_ from '../interaction/dragbox.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {ol.interaction.DragBox}\n * @param {olx.interaction.DragZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragZoom_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  var condition = options.condition ?\n    options.condition : _ol_events_condition_.shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  _ol_interaction_DragBox_.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\n_ol_.inherits(_ol_interaction_DragZoom_, _ol_interaction_DragBox_);\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_DragZoom_.prototype.onBoxEnd = function() {\n  var map = this.getMap();\n\n  var view = /** @type {!ol.View} */ (map.getView());\n\n  var size = /** @type {!ol.Size} */ (map.getSize());\n\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = _ol_extent_.createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(_ol_extent_.getBottomLeft(extent)),\n      map.getPixelFromCoordinate(_ol_extent_.getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    _ol_extent_.scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n      view.getResolutionForExtent(extent, size));\n\n  var center = _ol_extent_.getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: _ol_easing_.easeOut\n  });\n\n};\nexport default _ol_interaction_DragZoom_;\n","/**\n * @enum {number}\n * @const\n */\nvar _ol_events_KeyCode_ = {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\nexport default _ol_events_KeyCode_;\n","import _ol_ from '../index.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_events_KeyCode_ from '../events/keycode.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link ol.Map}. `document` never loses focus but, for any other element,\n * focus will have to be on, and returned to, this element if the keys are to\n * function.\n * See also {@link ol.interaction.KeyboardZoom}.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.KeyboardPanOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_KeyboardPan_ = function(opt_options) {\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_KeyboardPan_.handleEvent\n  });\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.noModifierKeys(mapBrowserEvent) &&\n      _ol_events_condition_.targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\n_ol_.inherits(_ol_interaction_KeyboardPan_, _ol_interaction_Interaction_);\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.KeyboardPan}\n * @api\n */\n_ol_interaction_KeyboardPan_.handleEvent = function(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == _ol_events_EventType_.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == _ol_events_KeyCode_.DOWN ||\n        keyCode == _ol_events_KeyCode_.LEFT ||\n        keyCode == _ol_events_KeyCode_.RIGHT ||\n        keyCode == _ol_events_KeyCode_.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == _ol_events_KeyCode_.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == _ol_events_KeyCode_.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == _ol_events_KeyCode_.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      _ol_coordinate_.rotate(delta, view.getRotation());\n      _ol_interaction_Interaction_.pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n};\nexport default _ol_interaction_KeyboardPan_;\n","import _ol_ from '../index.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link ol.Map}. `document` never loses focus but, for any other element,\n * focus will have to be on, and returned to, this element if the keys are to\n * function.\n * See also {@link ol.interaction.KeyboardPan}.\n *\n * @constructor\n * @param {olx.interaction.KeyboardZoomOptions=} opt_options Options.\n * @extends {ol.interaction.Interaction}\n * @api\n */\nvar _ol_interaction_KeyboardZoom_ = function(opt_options) {\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_KeyboardZoom_.handleEvent\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ? options.condition :\n    _ol_events_condition_.targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\n_ol_.inherits(_ol_interaction_KeyboardZoom_, _ol_interaction_Interaction_);\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.KeyboardZoom}\n * @api\n */\n_ol_interaction_KeyboardZoom_.handleEvent = function(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == _ol_events_EventType_.KEYDOWN ||\n      mapBrowserEvent.type == _ol_events_EventType_.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      _ol_interaction_Interaction_.zoomByDelta(\n          view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n};\nexport default _ol_interaction_KeyboardZoom_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_has_ from '../has.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.MouseWheelZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_MouseWheelZoom_ = function(opt_options) {\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_MouseWheelZoom_.handleEvent\n  });\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {?ol.Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {ol.interaction.MouseWheelZoom.Mode_|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\n_ol_.inherits(_ol_interaction_MouseWheelZoom_, _ol_interaction_Interaction_);\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {ol.interaction.MouseWheelZoom}\n * @api\n */\n_ol_interaction_MouseWheelZoom_.handleEvent = function(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  if (type !== _ol_events_EventType_.WHEEL && type !== _ol_events_EventType_.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == _ol_events_EventType_.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (_ol_has_.FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= _ol_has_.DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == _ol_events_EventType_.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (_ol_has_.SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      _ol_interaction_MouseWheelZoom_.Mode_.TRACKPAD :\n      _ol_interaction_MouseWheelZoom_.Mode_.WHEEL;\n  }\n\n  if (this.mode_ === _ol_interaction_MouseWheelZoom_.Mode_.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: _ol_easing_.easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: _ol_easing_.easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: _ol_easing_.easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n};\n\n\n/**\n * @private\n */\n_ol_interaction_MouseWheelZoom_.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  var view = this.getMap().getView();\n  view.setHint(_ol_ViewHint_.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {ol.PluggableMap} map Map.\n */\n_ol_interaction_MouseWheelZoom_.prototype.handleWheelZoom_ = function(map) {\n  var view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  var maxDelta = _ol_.MOUSEWHEELZOOM_MAXDELTA;\n  var delta = _ol_math_.clamp(this.delta_, -maxDelta, maxDelta);\n  _ol_interaction_Interaction_.zoomByDelta(view, -delta, this.lastAnchor_,\n      this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\n_ol_interaction_MouseWheelZoom_.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_interaction_MouseWheelZoom_.Mode_ = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\nexport default _ol_interaction_MouseWheelZoom_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\nimport _ol_RotationConstraint_ from '../rotationconstraint.js';\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PinchRotateOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_PinchRotate_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_PinchRotate_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_PinchRotate_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_PinchRotate_.handleUpEvent_\n  });\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\n_ol_.inherits(_ol_interaction_PinchRotate_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.PinchRotate}\n * @private\n */\n_ol_interaction_PinchRotate_.handleDragEvent_ = function(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === _ol_RotationConstraint_.disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = _ol_interaction_Pointer_.centroid(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    _ol_interaction_Interaction_.rotateWithoutConstraints(view,\n        rotation + rotationDelta, this.anchor_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.PinchRotate}\n * @private\n */\n_ol_interaction_PinchRotate_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(_ol_ViewHint_.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      _ol_interaction_Interaction_.rotate(\n          view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.PinchRotate}\n * @private\n */\n_ol_interaction_PinchRotate_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_PinchRotate_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_PinchRotate_;\n","import _ol_ from '../index.js';\nimport _ol_ViewHint_ from '../viewhint.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PinchZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_PinchZoom_ = function(opt_options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_PinchZoom_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_PinchZoom_.handleDragEvent_,\n    handleUpEvent: _ol_interaction_PinchZoom_.handleUpEvent_\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\n_ol_.inherits(_ol_interaction_PinchZoom_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {ol.interaction.PinchZoom}\n * @private\n */\n_ol_interaction_PinchZoom_.handleDragEvent_ = function(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = _ol_interaction_Pointer_.centroid(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  _ol_interaction_Interaction_.zoomWithoutConstraints(view, newResolution, this.anchor_);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.PinchZoom}\n * @private\n */\n_ol_interaction_PinchZoom_.handleUpEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(_ol_ViewHint_.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      _ol_interaction_Interaction_.zoom(view, resolution,\n          this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.PinchZoom}\n * @private\n */\n_ol_interaction_PinchZoom_.handleDownEvent_ = function(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(_ol_ViewHint_.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_PinchZoom_.prototype.shouldStopEvent = _ol_functions_.FALSE;\nexport default _ol_interaction_PinchZoom_;\n","import _ol_Collection_ from './collection.js';\nimport _ol_Kinetic_ from './kinetic.js';\nimport _ol_interaction_DoubleClickZoom_ from './interaction/doubleclickzoom.js';\nimport _ol_interaction_DragPan_ from './interaction/dragpan.js';\nimport _ol_interaction_DragRotate_ from './interaction/dragrotate.js';\nimport _ol_interaction_DragZoom_ from './interaction/dragzoom.js';\nimport _ol_interaction_KeyboardPan_ from './interaction/keyboardpan.js';\nimport _ol_interaction_KeyboardZoom_ from './interaction/keyboardzoom.js';\nimport _ol_interaction_MouseWheelZoom_ from './interaction/mousewheelzoom.js';\nimport _ol_interaction_PinchRotate_ from './interaction/pinchrotate.js';\nimport _ol_interaction_PinchZoom_ from './interaction/pinchzoom.js';\nvar _ol_interaction_ = {};\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link ol.interaction.Interaction} instances and insert them into a\n * {@link ol.Collection} in the order you want before creating your\n * {@link ol.Map} instance. The default set of interactions, in sequence, is:\n * * {@link ol.interaction.DragRotate}\n * * {@link ol.interaction.DoubleClickZoom}\n * * {@link ol.interaction.DragPan}\n * * {@link ol.interaction.PinchRotate}\n * * {@link ol.interaction.PinchZoom}\n * * {@link ol.interaction.KeyboardPan}\n * * {@link ol.interaction.KeyboardZoom}\n * * {@link ol.interaction.MouseWheelZoom}\n * * {@link ol.interaction.DragZoom}\n *\n * @param {olx.interaction.DefaultsOptions=} opt_options Defaults options.\n * @return {ol.Collection.<ol.interaction.Interaction>} A collection of\n * interactions to be used with the ol.Map constructor's interactions option.\n * @api\n */\n_ol_interaction_.defaults = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new _ol_Collection_();\n\n  var kinetic = new _ol_Kinetic_(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new _ol_interaction_DragRotate_());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new _ol_interaction_DoubleClickZoom_({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new _ol_interaction_DragPan_({\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new _ol_interaction_PinchRotate_());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new _ol_interaction_PinchZoom_({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new _ol_interaction_KeyboardPan_());\n    interactions.push(new _ol_interaction_KeyboardZoom_({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new _ol_interaction_MouseWheelZoom_({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new _ol_interaction_DragZoom_({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n};\nexport default _ol_interaction_;\n","import _ol_ from './index.js';\nimport _ol_structs_LRUCache_ from './structs/lrucache.js';\nimport _ol_tilecoord_ from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {ol.structs.LRUCache.<ol.Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nvar _ol_TileCache_ = function(opt_highWaterMark) {\n\n  _ol_structs_LRUCache_.call(this, opt_highWaterMark);\n\n};\n\n_ol_.inherits(_ol_TileCache_, _ol_structs_LRUCache_);\n\n\n/**\n * @param {Object.<string, ol.TileRange>} usedTiles Used tiles.\n */\n_ol_TileCache_.prototype.expireCache = function(usedTiles) {\n  var tile, zKey;\n  while (this.canExpireCache()) {\n    tile = this.peekLast();\n    zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\n_ol_TileCache_.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  var key = this.peekFirstKey();\n  var tileCoord = _ol_tilecoord_.fromKey(key);\n  var z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(_ol_tilecoord_.getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default _ol_TileCache_;\n","/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nvar _ol_layer_VectorRenderType_ = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\nexport default _ol_layer_VectorRenderType_;\n","import _ol_ from './index.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @implements {oli.AssertionError}\n * @param {number} code Error code.\n */\nvar _ol_AssertionError_ = function(code) {\n\n  var path = _ol_.VERSION ? _ol_.VERSION.split('-')[0] : 'latest';\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\n_ol_.inherits(_ol_AssertionError_, Error);\nexport default _ol_AssertionError_;\n","/**\n * @enum {string}\n */\nvar _ol_layer_TileProperty_ = {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\nexport default _ol_layer_TileProperty_;\n","import _ol_ from '../index.js';\nimport _ol_LayerType_ from '../layertype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_layer_TileProperty_ from '../layer/tileproperty.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link ol.Object}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {ol.layer.Layer}\n * @fires ol.render.Event\n * @param {olx.layer.TileOptions=} opt_options Tile layer options.\n * @api\n */\nvar _ol_layer_Tile_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  var baseOptions = _ol_obj_.assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  _ol_layer_Layer_.call(this,  /** @type {olx.layer.LayerOptions} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {ol.LayerType}\n   */\n  this.type = _ol_LayerType_.TILE;\n\n};\n\n_ol_.inherits(_ol_layer_Tile_, _ol_layer_Layer_);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.getPreload = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_TileProperty_.PRELOAD)\n  );\n};\n\n\n/**\n * Return the associated {@link ol.source.Tile tilesource} of the layer.\n * @function\n * @return {ol.source.Tile} Source.\n * @api\n */\n_ol_layer_Tile_.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.setPreload = function(preload) {\n  this.set(_ol_layer_TileProperty_.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.getUseInterimTilesOnError = function() {\n  return (\n  /** @type {boolean} */ this.get(_ol_layer_TileProperty_.USE_INTERIM_TILES_ON_ERROR)\n  );\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\n_ol_layer_Tile_.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(\n      _ol_layer_TileProperty_.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default _ol_layer_Tile_;\n","/**\n * @enum {string}\n */\nvar _ol_interaction_TranslateEventType_ = {\n  /**\n   * Triggered upon feature translation start.\n   * @event ol.interaction.Translate.Event#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event ol.interaction.Translate.Event#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event ol.interaction.Translate.Event#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\nexport default _ol_interaction_TranslateEventType_;\n","import _ol_ from '../index.js';\nimport _ol_Collection_ from '../collection.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_array_ from '../array.js';\nimport _ol_interaction_Pointer_ from '../interaction/pointer.js';\nimport _ol_interaction_Property_ from '../interaction/property.js';\nimport _ol_interaction_TranslateEventType_ from '../interaction/translateeventtype.js';\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Translate.Event\n * @param {olx.interaction.TranslateOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_Translate_ = function(opt_options) {\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_Translate_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_Translate_.handleDragEvent_,\n    handleMoveEvent: _ol_interaction_Translate_.handleMoveEvent_,\n    handleUpEvent: _ol_interaction_Translate_.handleUpEvent_\n  });\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(ol.layer.Layer): boolean} */\n  var layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      var layers = options.layers;\n      layerFilter = function(layer) {\n        return _ol_array_.includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = _ol_functions_.TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(ol.layer.Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  _ol_events_.listen(this,\n      _ol_Object_.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.handleActiveChanged_, this);\n\n};\n\n_ol_.inherits(_ol_interaction_Translate_, _ol_interaction_Pointer_);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\n_ol_interaction_Translate_.handleDownEvent_ = function(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    _ol_interaction_Translate_.handleMoveEvent_.call(this, event);\n\n    var features = this.features_ || new _ol_Collection_([this.lastFeature_]);\n\n    this.dispatchEvent(\n        new _ol_interaction_Translate_.Event(\n            _ol_interaction_TranslateEventType_.TRANSLATESTART, features,\n            event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\n_ol_interaction_Translate_.handleUpEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    _ol_interaction_Translate_.handleMoveEvent_.call(this, event);\n\n    var features = this.features_ || new _ol_Collection_([this.lastFeature_]);\n\n    this.dispatchEvent(\n        new _ol_interaction_Translate_.Event(\n            _ol_interaction_TranslateEventType_.TRANSLATEEND, features,\n            event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\n_ol_interaction_Translate_.handleDragEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    var features = this.features_ || new _ol_Collection_([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n        new _ol_interaction_Translate_.Event(\n            _ol_interaction_TranslateEventType_.TRANSLATING, features,\n            newCoordinate));\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\n_ol_interaction_Translate_.handleMoveEvent_ = function(event) {\n  var elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n};\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {ol.Pixel} pixel Pixel coordinate to test for intersection.\n * @param {ol.PluggableMap} map Map to test the intersection on.\n * @return {ol.Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\n_ol_interaction_Translate_.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ ||\n            _ol_array_.includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\n_ol_interaction_Translate_.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\n_ol_interaction_Translate_.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_Translate_.prototype.setMap = function(map) {\n  var oldMap = this.getMap();\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\n_ol_interaction_Translate_.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {ol.PluggableMap} oldMap Old map.\n * @private\n */\n_ol_interaction_Translate_.prototype.updateState_ = function(oldMap) {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      var elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Translate} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.interaction.TranslateEvent}\n * @param {ol.interaction.TranslateEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features translated.\n * @param {ol.Coordinate} coordinate The event coordinate.\n */\n_ol_interaction_Translate_.Event = function(type, features, coordinate) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n_ol_.inherits(_ol_interaction_Translate_.Event, _ol_events_Event_);\nexport default _ol_interaction_Translate_;\n","/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nvar _ol_style_IconAnchorUnits_ = {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\nexport default _ol_style_IconAnchorUnits_;\n","import _ol_ from '../index.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventTarget_ from '../events/eventtarget.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_style_ from '../style.js';\n\n/**\n * @constructor\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string|undefined} src Src.\n * @param {ol.Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageState} imageState Image state.\n * @param {ol.Color} color Color.\n * @extends {ol.events.EventTarget}\n */\nvar _ol_style_IconImage_ = function(image, src, size, crossOrigin, imageState,\n    color) {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = !image ? new Image() : image;\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = color ?\n    /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n    null;\n\n  /**\n   * @private\n   * @type {ol.Color}\n   */\n  this.color_ = color;\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {ol.ImageState}\n   */\n  this.imageState_ = imageState;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.tainting_ = false;\n  if (this.imageState_ == _ol_ImageState_.LOADED) {\n    this.determineTainting_();\n  }\n\n};\n\n_ol_.inherits(_ol_style_IconImage_, _ol_events_EventTarget_);\n\n\n/**\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {ol.Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageState} imageState Image state.\n * @param {ol.Color} color Color.\n * @return {ol.style.IconImage} Icon image.\n */\n_ol_style_IconImage_.get = function(image, src, size, crossOrigin, imageState,\n    color) {\n  var iconImageCache = _ol_style_.iconImageCache;\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new _ol_style_IconImage_(\n        image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n};\n\n\n/**\n * @private\n */\n_ol_style_IconImage_.prototype.determineTainting_ = function() {\n  var context = _ol_dom_.createCanvasContext2D(1, 1);\n  try {\n    context.drawImage(this.image_, 0, 0);\n    context.getImageData(0, 0, 1, 1);\n  } catch (e) {\n    this.tainting_ = true;\n  }\n};\n\n\n/**\n * @private\n */\n_ol_style_IconImage_.prototype.dispatchChangeEvent_ = function() {\n  this.dispatchEvent(_ol_events_EventType_.CHANGE);\n};\n\n\n/**\n * @private\n */\n_ol_style_IconImage_.prototype.handleImageError_ = function() {\n  this.imageState_ = _ol_ImageState_.ERROR;\n  this.unlistenImage_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @private\n */\n_ol_style_IconImage_.prototype.handleImageLoad_ = function() {\n  this.imageState_ = _ol_ImageState_.LOADED;\n  if (this.size_) {\n    this.image_.width = this.size_[0];\n    this.image_.height = this.size_[1];\n  }\n  this.size_ = [this.image_.width, this.image_.height];\n  this.unlistenImage_();\n  this.determineTainting_();\n  this.replaceColor_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n */\n_ol_style_IconImage_.prototype.getImage = function(pixelRatio) {\n  return this.canvas_ ? this.canvas_ : this.image_;\n};\n\n\n/**\n * @return {ol.ImageState} Image state.\n */\n_ol_style_IconImage_.prototype.getImageState = function() {\n  return this.imageState_;\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image element.\n */\n_ol_style_IconImage_.prototype.getHitDetectionImage = function(pixelRatio) {\n  if (!this.hitDetectionImage_) {\n    if (this.tainting_) {\n      var width = this.size_[0];\n      var height = this.size_[1];\n      var context = _ol_dom_.createCanvasContext2D(width, height);\n      context.fillRect(0, 0, width, height);\n      this.hitDetectionImage_ = context.canvas;\n    } else {\n      this.hitDetectionImage_ = this.image_;\n    }\n  }\n  return this.hitDetectionImage_;\n};\n\n\n/**\n * @return {ol.Size} Image size.\n */\n_ol_style_IconImage_.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * @return {string|undefined} Image src.\n */\n_ol_style_IconImage_.prototype.getSrc = function() {\n  return this.src_;\n};\n\n\n/**\n * Load not yet loaded URI.\n */\n_ol_style_IconImage_.prototype.load = function() {\n  if (this.imageState_ == _ol_ImageState_.IDLE) {\n    this.imageState_ = _ol_ImageState_.LOADING;\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    try {\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n  }\n};\n\n\n/**\n * @private\n */\n_ol_style_IconImage_.prototype.replaceColor_ = function() {\n  if (this.tainting_ || this.color_ === null) {\n    return;\n  }\n\n  this.canvas_.width = this.image_.width;\n  this.canvas_.height = this.image_.height;\n\n  var ctx = this.canvas_.getContext('2d');\n  ctx.drawImage(this.image_, 0, 0);\n\n  var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n  var data = imgData.data;\n  var r = this.color_[0] / 255.0;\n  var g = this.color_[1] / 255.0;\n  var b = this.color_[2] / 255.0;\n\n  for (var i = 0, ii = data.length; i < ii; i += 4) {\n    data[i] *= r;\n    data[i + 1] *= g;\n    data[i + 2] *= b;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_style_IconImage_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_style_IconImage_;\n","/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nvar _ol_style_IconOrigin_ = {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\nexport default _ol_style_IconOrigin_;\n","import _ol_ from '../index.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_color_ from '../color.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_style_IconAnchorUnits_ from '../style/iconanchorunits.js';\nimport _ol_style_IconImage_ from '../style/iconimage.js';\nimport _ol_style_IconOrigin_ from '../style/iconorigin.js';\nimport _ol_style_Image_ from '../style/image.js';\n\n/**\n * @classdesc\n * Set icon style for vector features.\n *\n * @constructor\n * @param {olx.style.IconOptions=} opt_options Options.\n * @extends {ol.style.Image}\n * @api\n */\nvar _ol_style_Icon_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.normalizedAnchor_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.IconOrigin}\n   */\n  this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n    options.anchorOrigin : _ol_style_IconOrigin_.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {ol.style.IconAnchorUnits}\n   */\n  this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n    options.anchorXUnits : _ol_style_IconAnchorUnits_.FRACTION;\n\n  /**\n   * @private\n   * @type {ol.style.IconAnchorUnits}\n   */\n  this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n    options.anchorYUnits : _ol_style_IconAnchorUnits_.FRACTION;\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @type {Image|HTMLCanvasElement}\n   */\n  var image = options.img !== undefined ? options.img : null;\n\n  /**\n   * @type {ol.Size}\n   */\n  var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n  /**\n   * @type {string|undefined}\n   */\n  var src = options.src;\n\n  _ol_asserts_.assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n  _ol_asserts_.assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n  if ((src === undefined || src.length === 0) && image) {\n    src = image.src || _ol_.getUid(image).toString();\n  }\n  _ol_asserts_.assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n  /**\n   * @type {ol.ImageState}\n   */\n  var imageState = options.src !== undefined ?\n    _ol_ImageState_.IDLE : _ol_ImageState_.LOADED;\n\n  /**\n   * @private\n   * @type {ol.Color}\n   */\n  this.color_ = options.color !== undefined ? _ol_color_.asArray(options.color) :\n    null;\n\n  /**\n   * @private\n   * @type {ol.style.IconImage}\n   */\n  this.iconImage_ = _ol_style_IconImage_.get(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n  /**\n   * @private\n   * @type {ol.style.IconOrigin}\n   */\n  this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n    options.offsetOrigin : _ol_style_IconOrigin_.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.size_ = options.size !== undefined ? options.size : null;\n\n  /**\n   * @type {number}\n   */\n  var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n  /**\n   * @type {boolean}\n   */\n  var rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  /**\n   * @type {number}\n   */\n  var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n  /**\n   * @type {number}\n   */\n  var scale = options.scale !== undefined ? options.scale : 1;\n\n  /**\n   * @type {boolean}\n   */\n  var snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  _ol_style_Image_.call(this, {\n    opacity: opacity,\n    rotation: rotation,\n    scale: scale,\n    snapToPixel: snapToPixel,\n    rotateWithView: rotateWithView\n  });\n\n};\n\n_ol_.inherits(_ol_style_Icon_, _ol_style_Image_);\n\n\n/**\n * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n * @return {ol.style.Icon} The cloned style.\n * @api\n */\n_ol_style_Icon_.prototype.clone = function() {\n  return new _ol_style_Icon_({\n    anchor: this.anchor_.slice(),\n    anchorOrigin: this.anchorOrigin_,\n    anchorXUnits: this.anchorXUnits_,\n    anchorYUnits: this.anchorYUnits_,\n    crossOrigin: this.crossOrigin_,\n    color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n    src: this.getSrc(),\n    offset: this.offset_.slice(),\n    offsetOrigin: this.offsetOrigin_,\n    size: this.size_ !== null ? this.size_.slice() : undefined,\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    snapToPixel: this.getSnapToPixel(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_Icon_.prototype.getAnchor = function() {\n  if (this.normalizedAnchor_) {\n    return this.normalizedAnchor_;\n  }\n  var anchor = this.anchor_;\n  var size = this.getSize();\n  if (this.anchorXUnits_ == _ol_style_IconAnchorUnits_.FRACTION ||\n      this.anchorYUnits_ == _ol_style_IconAnchorUnits_.FRACTION) {\n    if (!size) {\n      return null;\n    }\n    anchor = this.anchor_.slice();\n    if (this.anchorXUnits_ == _ol_style_IconAnchorUnits_.FRACTION) {\n      anchor[0] *= size[0];\n    }\n    if (this.anchorYUnits_ == _ol_style_IconAnchorUnits_.FRACTION) {\n      anchor[1] *= size[1];\n    }\n  }\n\n  if (this.anchorOrigin_ != _ol_style_IconOrigin_.TOP_LEFT) {\n    if (!size) {\n      return null;\n    }\n    if (anchor === this.anchor_) {\n      anchor = this.anchor_.slice();\n    }\n    if (this.anchorOrigin_ == _ol_style_IconOrigin_.TOP_RIGHT ||\n        this.anchorOrigin_ == _ol_style_IconOrigin_.BOTTOM_RIGHT) {\n      anchor[0] = -anchor[0] + size[0];\n    }\n    if (this.anchorOrigin_ == _ol_style_IconOrigin_.BOTTOM_LEFT ||\n        this.anchorOrigin_ == _ol_style_IconOrigin_.BOTTOM_RIGHT) {\n      anchor[1] = -anchor[1] + size[1];\n    }\n  }\n  this.normalizedAnchor_ = anchor;\n  return this.normalizedAnchor_;\n};\n\n\n/**\n * Get the icon color.\n * @return {ol.Color} Color.\n * @api\n */\n_ol_style_Icon_.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the image icon.\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n * @override\n * @api\n */\n_ol_style_Icon_.prototype.getImage = function(pixelRatio) {\n  return this.iconImage_.getImage(pixelRatio);\n};\n\n\n/**\n * @override\n */\n_ol_style_Icon_.prototype.getImageSize = function() {\n  return this.iconImage_.getSize();\n};\n\n\n/**\n * @override\n */\n_ol_style_Icon_.prototype.getHitDetectionImageSize = function() {\n  return this.getImageSize();\n};\n\n\n/**\n * @override\n */\n_ol_style_Icon_.prototype.getImageState = function() {\n  return this.iconImage_.getImageState();\n};\n\n\n/**\n * @override\n */\n_ol_style_Icon_.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.iconImage_.getHitDetectionImage(pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_Icon_.prototype.getOrigin = function() {\n  if (this.origin_) {\n    return this.origin_;\n  }\n  var offset = this.offset_;\n\n  if (this.offsetOrigin_ != _ol_style_IconOrigin_.TOP_LEFT) {\n    var size = this.getSize();\n    var iconImageSize = this.iconImage_.getSize();\n    if (!size || !iconImageSize) {\n      return null;\n    }\n    offset = offset.slice();\n    if (this.offsetOrigin_ == _ol_style_IconOrigin_.TOP_RIGHT ||\n        this.offsetOrigin_ == _ol_style_IconOrigin_.BOTTOM_RIGHT) {\n      offset[0] = iconImageSize[0] - size[0] - offset[0];\n    }\n    if (this.offsetOrigin_ == _ol_style_IconOrigin_.BOTTOM_LEFT ||\n        this.offsetOrigin_ == _ol_style_IconOrigin_.BOTTOM_RIGHT) {\n      offset[1] = iconImageSize[1] - size[1] - offset[1];\n    }\n  }\n  this.origin_ = offset;\n  return this.origin_;\n};\n\n\n/**\n * Get the image URL.\n * @return {string|undefined} Image src.\n * @api\n */\n_ol_style_Icon_.prototype.getSrc = function() {\n  return this.iconImage_.getSrc();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_Icon_.prototype.getSize = function() {\n  return !this.size_ ? this.iconImage_.getSize() : this.size_;\n};\n\n\n/**\n * @override\n */\n_ol_style_Icon_.prototype.listenImageChange = function(listener, thisArg) {\n  return _ol_events_.listen(this.iconImage_, _ol_events_EventType_.CHANGE,\n      listener, thisArg);\n};\n\n\n/**\n * Load not yet loaded URI.\n * When rendering a feature with an icon style, the vector renderer will\n * automatically call this method. However, you might want to call this\n * method yourself for preloading or other purposes.\n * @override\n * @api\n */\n_ol_style_Icon_.prototype.load = function() {\n  this.iconImage_.load();\n};\n\n\n/**\n * @override\n */\n_ol_style_Icon_.prototype.unlistenImageChange = function(listener, thisArg) {\n  _ol_events_.unlisten(this.iconImage_, _ol_events_EventType_.CHANGE,\n      listener, thisArg);\n};\nexport default _ol_style_Icon_;\n","/**\n * Constants for event names.\n * @enum {string}\n */\nvar _ol_pointer_EventType_ = {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\nexport default _ol_pointer_EventType_;\n","/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event\n *     mapping.\n * @constructor\n */\nvar _ol_pointer_EventSource_ = function(dispatcher, mapping) {\n  /**\n   * @type {ol.pointer.PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\n_ol_pointer_EventSource_.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\n_ol_pointer_EventSource_.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default _ol_pointer_EventSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_MouseSource_ = function(dispatcher) {\n  var mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<ol.Pixel>}\n   */\n  this.lastTouches = [];\n};\n\n_ol_.inherits(_ol_pointer_MouseSource_, _ol_pointer_EventSource_);\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_pointer_MouseSource_.POINTER_ID = 1;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_pointer_MouseSource_.POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @const\n * @type {number}\n */\n_ol_pointer_MouseSource_.DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\n_ol_pointer_MouseSource_.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  var lts = this.lastTouches;\n  var x = inEvent.clientX, y = inEvent.clientY;\n  for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    var dx = Math.abs(x - t[0]), dy = Math.abs(y - t[1]);\n    if (dx <= _ol_pointer_MouseSource_.DEDUP_DIST &&\n        dy <= _ol_pointer_MouseSource_.DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\n_ol_pointer_MouseSource_.prepareEvent = function(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = _ol_pointer_MouseSource_.POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = _ol_pointer_MouseSource_.POINTER_TYPE;\n\n  return e;\n};\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (_ol_pointer_MouseSource_.POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[_ol_pointer_MouseSource_.POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[_ol_pointer_MouseSource_.POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MouseSource_.prototype.cancel = function(inEvent) {\n  var e = _ol_pointer_MouseSource_.prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\n_ol_pointer_MouseSource_.prototype.cleanupMouse = function() {\n  delete this.pointerMap[_ol_pointer_MouseSource_.POINTER_ID.toString()];\n};\nexport default _ol_pointer_MouseSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_MsSource_ = function(dispatcher) {\n  var mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<string>}\n   */\n  this.POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n  ];\n};\n\n_ol_.inherits(_ol_pointer_MsSource_, _ol_pointer_EventSource_);\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {Object} The copied event.\n */\n_ol_pointer_MsSource_.prototype.prepareEvent_ = function(inEvent) {\n  var e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\n_ol_pointer_MsSource_.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerMove = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerUp = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerOut = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerOver = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msPointerCancel = function(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msLostPointerCapture = function(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture',\n      inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_MsSource_.prototype.msGotPointerCapture = function(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture',\n      inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default _ol_pointer_MsSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_NativeSource_ = function(dispatcher) {\n  var mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n};\n\n_ol_.inherits(_ol_pointer_NativeSource_, _ol_pointer_EventSource_);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default _ol_pointer_NativeSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_events_Event_ from '../events/event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nvar _ol_pointer_PointerEvent_ = function(type, originalEvent, opt_eventDict) {\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  var eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\n_ol_.inherits(_ol_pointer_PointerEvent_, _ol_events_Event_);\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\n_ol_pointer_PointerEvent_.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || _ol_pointer_PointerEvent_.HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\n_ol_pointer_PointerEvent_.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\n_ol_pointer_PointerEvent_.HAS_BUTTONS = false;\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    _ol_pointer_PointerEvent_.HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default _ol_pointer_PointerEvent_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\nimport _ol_pointer_MouseSource_ from '../pointer/mousesource.js';\n\n/**\n * @constructor\n * @param {ol.pointer.PointerEventHandler} dispatcher The event handler.\n * @param {ol.pointer.MouseSource} mouseSource Mouse source.\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_TouchSource_ = function(dispatcher, mouseSource) {\n  var mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {ol.pointer.MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n};\n\n_ol_.inherits(_ol_pointer_TouchSource_, _ol_pointer_EventSource_);\n\n\n/**\n * Mouse event timeout: This should be long enough to\n * ignore compat mouse events made by touch.\n * @const\n * @type {number}\n */\n_ol_pointer_TouchSource_.DEDUP_TIMEOUT = 2500;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_pointer_TouchSource_.CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_pointer_TouchSource_.POINTER_TYPE = 'touch';\n\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\n_ol_pointer_TouchSource_.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\n_ol_pointer_TouchSource_.prototype.setPrimaryTouch_ = function(inTouch) {\n  var count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 &&\n      _ol_pointer_MouseSource_.POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\n_ol_pointer_TouchSource_.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\n_ol_pointer_TouchSource_.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      _ol_pointer_TouchSource_.CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\n_ol_pointer_TouchSource_.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\n_ol_pointer_TouchSource_.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\n_ol_pointer_TouchSource_.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = _ol_pointer_TouchSource_.POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\n_ol_pointer_TouchSource_.prototype.processTouches_ = function(inEvent, inFunction) {\n  var touches = Array.prototype.slice.call(\n      inEvent.changedTouches);\n  var count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  var i, pointer;\n  for (i = 0; i < count; ++i) {\n    pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\n_ol_pointer_TouchSource_.prototype.findTouch_ = function(touchList, searchId) {\n  var l = touchList.length;\n  var touch;\n  for (var i = 0; i < l; i++) {\n    touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.vacuumTouches_ = function(inEvent) {\n  var touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  var keys = Object.keys(this.pointerMap);\n  var count = keys.length;\n  if (count >= touchList.length) {\n    var d = [];\n    var i, key, value;\n    for (i = 0; i < count; ++i) {\n      key = keys[i];\n      value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != _ol_pointer_MouseSource_.POINTER_ID &&\n          !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\n_ol_pointer_TouchSource_.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\n_ol_pointer_TouchSource_.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  var event = inPointer;\n  var pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  var outEvent = pointer.out;\n  var outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\n_ol_pointer_TouchSource_.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\n_ol_pointer_TouchSource_.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\n_ol_pointer_TouchSource_.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\n_ol_pointer_TouchSource_.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_TouchSource_.prototype.dedupSynthMouse_ = function(inEvent) {\n  var lts = this.mouseSource.lastTouches;\n  var t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    var lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      _ol_array_.remove(lts, lt);\n    }, _ol_pointer_TouchSource_.DEDUP_TIMEOUT);\n  }\n};\nexport default _ol_pointer_TouchSource_;\n","// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventTarget_ from '../events/eventtarget.js';\nimport _ol_has_ from '../has.js';\nimport _ol_pointer_EventType_ from '../pointer/eventtype.js';\nimport _ol_pointer_MouseSource_ from '../pointer/mousesource.js';\nimport _ol_pointer_MsSource_ from '../pointer/mssource.js';\nimport _ol_pointer_NativeSource_ from '../pointer/nativesource.js';\nimport _ol_pointer_PointerEvent_ from '../pointer/pointerevent.js';\nimport _ol_pointer_TouchSource_ from '../pointer/touchsource.js';\n\n/**\n * @constructor\n * @extends {ol.events.EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nvar _ol_pointer_PointerEventHandler_ = function(element) {\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<ol.pointer.EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\n_ol_.inherits(_ol_pointer_PointerEventHandler_, _ol_events_EventTarget_);\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\n_ol_pointer_PointerEventHandler_.prototype.registerSources = function() {\n  if (_ol_has_.POINTER) {\n    this.registerSource('native', new _ol_pointer_NativeSource_(this));\n  } else if (_ol_has_.MSPOINTER) {\n    this.registerSource('ms', new _ol_pointer_MsSource_(this));\n  } else {\n    var mouseSource = new _ol_pointer_MouseSource_(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (_ol_has_.TOUCH) {\n      this.registerSource('touch',\n          new _ol_pointer_TouchSource_(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {ol.pointer.EventSource} source The source event.\n */\n_ol_pointer_PointerEventHandler_.prototype.registerSource = function(name, source) {\n  var s = source;\n  var newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      var handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }, this);\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\n_ol_pointer_PointerEventHandler_.prototype.register_ = function() {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\n_ol_pointer_PointerEventHandler_.prototype.unregister_ = function() {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\n_ol_pointer_PointerEventHandler_.prototype.eventHandler_ = function(inEvent) {\n  var type = inEvent.type;\n  var handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n_ol_pointer_PointerEventHandler_.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    _ol_events_.listen(this.element_, eventName, this.eventHandler_, this);\n  }, this);\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n_ol_pointer_PointerEventHandler_.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    _ol_events_.unlisten(this.element_, e, this.eventHandler_, this);\n  }, this);\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\n_ol_pointer_PointerEventHandler_.prototype.cloneEvent = function(event, inEvent) {\n  var eventCopy = {}, p;\n  for (var i = 0, ii = _ol_pointer_PointerEventHandler_.CLONE_PROPS.length; i < ii; i++) {\n    p = _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.down = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.move = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.up = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.cancel = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\n_ol_pointer_PointerEventHandler_.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} A PointerEvent of type `inType`.\n */\n_ol_pointer_PointerEventHandler_.prototype.makeEvent = function(inType, data, event) {\n  return new _ol_pointer_PointerEvent_(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.fireEvent = function(inType, data, event) {\n  var e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\n_ol_pointer_PointerEventHandler_.prototype.fireNativeEvent = function(event) {\n  var e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} The wrapped event.\n */\n_ol_pointer_PointerEventHandler_.prototype.wrapMouseEvent = function(eventType, event) {\n  var pointerEvent = this.makeEvent(\n      eventType, _ol_pointer_MouseSource_.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_pointer_PointerEventHandler_.prototype.disposeInternal = function() {\n  this.unregister_();\n  _ol_events_EventTarget_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\n_ol_pointer_PointerEventHandler_.CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\nexport default _ol_pointer_PointerEventHandler_;\n","import _ol_ from './index.js';\nimport _ol_has_ from './has.js';\nimport _ol_MapBrowserEventType_ from './mapbrowsereventtype.js';\nimport _ol_MapBrowserPointerEvent_ from './mapbrowserpointerevent.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_pointer_EventType_ from './pointer/eventtype.js';\nimport _ol_pointer_PointerEventHandler_ from './pointer/pointereventhandler.js';\n\n/**\n * @param {ol.PluggableMap} map The map with the viewport to listen to events on.\n * @param {number|undefined} moveTolerance The minimal distance the pointer must travel to trigger a move.\n * @constructor\n * @extends {ol.events.EventTarget}\n */\nvar _ol_MapBrowserEventHandler_ = function(map, moveTolerance) {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {ol.PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * _ol_has_.DEVICE_PIXEL_RATIO : _ol_has_.DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {ol.pointer.PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  var element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {ol.pointer.PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new _ol_pointer_PointerEventHandler_(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {ol.pointer.PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = _ol_events_.listen(this.pointerEventHandler_,\n      _ol_pointer_EventType_.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = _ol_events_.listen(this.pointerEventHandler_,\n      _ol_pointer_EventType_.POINTERMOVE,\n      this.relayEvent_, this);\n\n};\n\n_ol_.inherits(_ol_MapBrowserEventHandler_, _ol_events_EventTarget_);\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.emulateClick_ = function(pointerEvent) {\n  var newEvent = new _ol_MapBrowserPointerEvent_(\n      _ol_MapBrowserEventType_.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new _ol_MapBrowserPointerEvent_(\n        _ol_MapBrowserEventType_.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      var newEvent = new _ol_MapBrowserPointerEvent_(\n          _ol_MapBrowserEventType_.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.updateActivePointers_ = function(pointerEvent) {\n  var event = pointerEvent;\n\n  if (event.type == _ol_MapBrowserEventType_.POINTERUP ||\n      event.type == _ol_MapBrowserEventType_.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == _ol_MapBrowserEventType_.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  var newEvent = new _ol_MapBrowserPointerEvent_(\n      _ol_MapBrowserEventType_.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(_ol_events_.unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  var newEvent = new _ol_MapBrowserPointerEvent_(\n      _ol_MapBrowserEventType_.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new _ol_pointer_PointerEventHandler_(document);\n\n    this.dragListenerKeys_.push(\n        _ol_events_.listen(this.documentPointerEventHandler_,\n            _ol_MapBrowserEventType_.POINTERMOVE,\n            this.handlePointerMove_, this),\n        _ol_events_.listen(this.documentPointerEventHandler_,\n            _ol_MapBrowserEventType_.POINTERUP,\n            this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n        _ol_events_.listen(this.pointerEventHandler_,\n            _ol_MapBrowserEventType_.POINTERCANCEL,\n            this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    var newEvent = new _ol_MapBrowserPointerEvent_(\n        _ol_MapBrowserEventType_.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.relayEvent_ = function(pointerEvent) {\n  var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new _ol_MapBrowserPointerEvent_(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {ol.pointer.PointerEvent} pointerEvent Pointer event.\n * @return {boolean} Is moving.\n * @private\n */\n_ol_MapBrowserEventHandler_.prototype.isMoving_ = function(pointerEvent) {\n  return Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_MapBrowserEventHandler_.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    _ol_events_.unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    _ol_events_.unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  _ol_events_EventTarget_.prototype.disposeInternal.call(this);\n};\nexport default _ol_MapBrowserEventHandler_;\n","/**\n * @enum {string}\n */\nvar _ol_MapProperty_ = {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\nexport default _ol_MapProperty_;\n","import _ol_asserts_ from '../asserts.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nvar _ol_structs_PriorityQueue_ = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_structs_PriorityQueue_.DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_structs_PriorityQueue_.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  _ol_obj_.clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\n_ol_structs_PriorityQueue_.prototype.dequeue = function() {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\n_ol_structs_PriorityQueue_.prototype.enqueue = function(element) {\n  _ol_asserts_.assert(!(this.keyFunction_(element) in this.queuedElements_),\n      31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != _ol_structs_PriorityQueue_.DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\n_ol_structs_PriorityQueue_.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.heapify_ = function() {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_structs_PriorityQueue_.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\n_ol_structs_PriorityQueue_.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\n_ol_structs_PriorityQueue_.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.siftUp_ = function(index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\n_ol_structs_PriorityQueue_.prototype.siftDown_ = function(startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_structs_PriorityQueue_.prototype.reprioritize = function() {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == _ol_structs_PriorityQueue_.DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default _ol_structs_PriorityQueue_;\n","import _ol_ from './index.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_structs_PriorityQueue_ from './structs/priorityqueue.js';\n\n/**\n * @constructor\n * @extends {ol.structs.PriorityQueue.<Array>}\n * @param {ol.TilePriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nvar _ol_TileQueue_ = function(tilePriorityFunction, tileChangeCallback) {\n\n  _ol_structs_PriorityQueue_.call(\n      this,\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return /** @type {ol.Tile} */ (element[0]).getKey();\n      });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\n_ol_.inherits(_ol_TileQueue_, _ol_structs_PriorityQueue_);\n\n\n/**\n * @inheritDoc\n */\n_ol_TileQueue_.prototype.enqueue = function(element) {\n  var added = _ol_structs_PriorityQueue_.prototype.enqueue.call(this, element);\n  if (added) {\n    var tile = element[0];\n    _ol_events_.listen(tile, _ol_events_EventType_.CHANGE,\n        this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\n_ol_TileQueue_.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_TileQueue_.prototype.handleTileChange = function(event) {\n  var tile = /** @type {ol.Tile} */ (event.target);\n  var state = tile.getState();\n  if (state === _ol_TileState_.LOADED || state === _ol_TileState_.ERROR ||\n      state === _ol_TileState_.EMPTY || state === _ol_TileState_.ABORT) {\n    _ol_events_.unlisten(tile, _ol_events_EventType_.CHANGE,\n        this.handleTileChange, this);\n    var tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\n_ol_TileQueue_.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  var newLoads = 0;\n  var abortedTiles = false;\n  var state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {ol.Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === _ol_TileState_.ABORT) {\n      abortedTiles = true;\n    } else if (state === _ol_TileState_.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default _ol_TileQueue_;\n","import _ol_ from '../index.js';\nimport _ol_Collection_ from '../collection.js';\nimport _ol_CollectionEventType_ from '../collectioneventtype.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_ObjectEventType_ from '../objecteventtype.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_layer_Base_ from '../layer/base.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @classdesc\n * A {@link ol.Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {ol.layer.Base}\n * @param {olx.layer.GroupOptions=} opt_options Layer options.\n * @api\n */\nvar _ol_layer_Group_ = function(opt_options) {\n\n  var options = opt_options || {};\n  var baseOptions = /** @type {olx.layer.GroupOptions} */\n      (_ol_obj_.assign({}, options));\n  delete baseOptions.layers;\n\n  var layers = options.layers;\n\n  _ol_layer_Base_.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<ol.EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  _ol_events_.listen(this,\n      _ol_Object_.getChangeEventType(_ol_layer_Group_.Property_.LAYERS),\n      this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new _ol_Collection_(layers.slice(), {unique: true});\n    } else {\n      _ol_asserts_.assert(layers instanceof _ol_Collection_,\n          43); // Expected `layers` to be an array or an `ol.Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new _ol_Collection_(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\n_ol_.inherits(_ol_layer_Group_, _ol_layer_Base_);\n\n\n/**\n * @private\n */\n_ol_layer_Group_.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @private\n */\n_ol_layer_Group_.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  var layers = this.getLayers();\n  this.layersListenerKeys_.push(\n      _ol_events_.listen(layers, _ol_CollectionEventType_.ADD,\n          this.handleLayersAdd_, this),\n      _ol_events_.listen(layers, _ol_CollectionEventType_.REMOVE,\n          this.handleLayersRemove_, this));\n\n  for (var id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(_ol_events_.unlistenByKey);\n  }\n  _ol_obj_.clear(this.listenerKeys_);\n\n  var layersArray = layers.getArray();\n  var i, ii, layer;\n  for (i = 0, ii = layersArray.length; i < ii; i++) {\n    layer = layersArray[i];\n    this.listenerKeys_[_ol_.getUid(layer).toString()] = [\n      _ol_events_.listen(layer, _ol_ObjectEventType_.PROPERTYCHANGE,\n          this.handleLayerChange_, this),\n      _ol_events_.listen(layer, _ol_events_EventType_.CHANGE,\n          this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {ol.Collection.Event} collectionEvent Collection event.\n * @private\n */\n_ol_layer_Group_.prototype.handleLayersAdd_ = function(collectionEvent) {\n  var layer = /** @type {ol.layer.Base} */ (collectionEvent.element);\n  var key = _ol_.getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    _ol_events_.listen(layer, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleLayerChange_, this),\n    _ol_events_.listen(layer, _ol_events_EventType_.CHANGE,\n        this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {ol.Collection.Event} collectionEvent Collection event.\n * @private\n */\n_ol_layer_Group_.prototype.handleLayersRemove_ = function(collectionEvent) {\n  var layer = /** @type {ol.layer.Base} */ (collectionEvent.element);\n  var key = _ol_.getUid(layer).toString();\n  this.listenerKeys_[key].forEach(_ol_events_.unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link ol.Collection collection} of {@link ol.layer.Layer layers}\n * in this group.\n * @return {!ol.Collection.<ol.layer.Base>} Collection of\n *   {@link ol.layer.Base layers} that are part of this group.\n * @observable\n * @api\n */\n_ol_layer_Group_.prototype.getLayers = function() {\n  return (\n    /** @type {!ol.Collection.<ol.layer.Base>} */ this.get(\n        _ol_layer_Group_.Property_.LAYERS)\n  );\n};\n\n\n/**\n * Set the {@link ol.Collection collection} of {@link ol.layer.Layer layers}\n * in this group.\n * @param {!ol.Collection.<ol.layer.Base>} layers Collection of\n *   {@link ol.layer.Base layers} that are part of this group.\n * @observable\n * @api\n */\n_ol_layer_Group_.prototype.setLayers = function(layers) {\n  this.set(_ol_layer_Group_.Property_.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Group_.prototype.getLayersArray = function(opt_array) {\n  var array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Group_.prototype.getLayerStatesArray = function(opt_states) {\n  var states = opt_states !== undefined ? opt_states : [];\n\n  var pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  var ownLayerState = this.getLayerState();\n  var i, ii, layerState;\n  for (i = pos, ii = states.length; i < ii; i++) {\n    layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = _ol_extent_.getIntersection(\n            layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_layer_Group_.prototype.getSourceState = function() {\n  return _ol_source_State_.READY;\n};\n\n/**\n * @enum {string}\n * @private\n */\n_ol_layer_Group_.Property_ = {\n  LAYERS: 'layers'\n};\nexport default _ol_layer_Group_;\n","/**\n * A plugin type used when registering a plugin.  The supported plugin types are\n * 'MAP_RENDERER', and 'LAYER_RENDERER'.\n * @enum {string}\n */\nvar _ol_PluginType_ = {\n  MAP_RENDERER: 'MAP_RENDERER',\n  LAYER_RENDERER: 'LAYER_RENDERER'\n};\n\nexport default _ol_PluginType_;\n","import _ol_PluginType_ from './plugintype.js';\nvar _ol_plugins_ = {};\n\n/**\n * The registry of map renderer plugins.\n * @type {Array<olx.MapRendererPlugin>}\n * @private\n */\n_ol_plugins_.mapRendererPlugins_ = [];\n\n\n/**\n * Get all registered map renderer plugins.\n * @return {Array<olx.MapRendererPlugin>} The registered map renderer plugins.\n */\n_ol_plugins_.getMapRendererPlugins = function() {\n  return _ol_plugins_.mapRendererPlugins_;\n};\n\n\n/**\n * The registry of layer renderer plugins.\n * @type {Array<olx.LayerRendererPlugin>}\n * @private\n */\n_ol_plugins_.layerRendererPlugins_ = [];\n\n\n/**\n * Get all registered layer renderer plugins.\n * @return {Array<olx.LayerRendererPlugin>} The registered layer renderer plugins.\n */\n_ol_plugins_.getLayerRendererPlugins = function() {\n  return _ol_plugins_.layerRendererPlugins_;\n};\n\n\n/**\n * Register a plugin.\n * @param {ol.PluginType} type The plugin type.\n * @param {*} plugin The plugin.\n */\n_ol_plugins_.register = function(type, plugin) {\n  var plugins;\n  switch (type) {\n    case _ol_PluginType_.MAP_RENDERER: {\n      plugins = _ol_plugins_.mapRendererPlugins_;\n      plugins.push(/** @type {olx.MapRendererPlugin} */ (plugin));\n      break;\n    }\n    case _ol_PluginType_.LAYER_RENDERER: {\n      plugins = _ol_plugins_.layerRendererPlugins_;\n      plugins.push(/** @type {olx.LayerRendererPlugin} */ (plugin));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported plugin type: ' + type);\n    }\n  }\n};\n\n\n/**\n * Register multiple plugins.\n * @param {ol.PluginType} type The plugin type.\n * @param {Array} plugins The plugins.\n */\n_ol_plugins_.registerMultiple = function(type, plugins) {\n  for (var i = 0, ii = plugins.length; i < ii; ++i) {\n    _ol_plugins_.register(type, plugins[i]);\n  }\n};\nexport default _ol_plugins_;\n","/**\n * Available renderers: `'canvas'` or `'webgl'`.\n * @enum {string}\n */\nvar _ol_renderer_Type_ = {\n  CANVAS: 'canvas',\n  WEBGL: 'webgl'\n};\n\nexport default _ol_renderer_Type_;\n","import _ol_ from './index.js';\nimport _ol_Collection_ from './collection.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_MapBrowserEvent_ from './mapbrowserevent.js';\nimport _ol_MapBrowserEventHandler_ from './mapbrowsereventhandler.js';\nimport _ol_MapBrowserEventType_ from './mapbrowsereventtype.js';\nimport _ol_MapEvent_ from './mapevent.js';\nimport _ol_MapEventType_ from './mapeventtype.js';\nimport _ol_MapProperty_ from './mapproperty.js';\nimport _ol_Object_ from './object.js';\nimport _ol_ObjectEventType_ from './objecteventtype.js';\nimport _ol_TileQueue_ from './tilequeue.js';\nimport _ol_View_ from './view.js';\nimport _ol_ViewHint_ from './viewhint.js';\nimport _ol_asserts_ from './asserts.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_Event_ from './events/event.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_functions_ from './functions.js';\nimport _ol_has_ from './has.js';\nimport _ol_layer_Group_ from './layer/group.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_plugins_ from './plugins.js';\nimport _ol_renderer_Type_ from './renderer/type.js';\nimport _ol_size_ from './size.js';\nimport _ol_structs_PriorityQueue_ from './structs/priorityqueue.js';\nimport _ol_transform_ from './transform.js';\n\n/**\n * @constructor\n * @extends {ol.Object}\n * @param {olx.MapOptions} options Map options.\n * @fires ol.MapBrowserEvent\n * @fires ol.MapEvent\n * @fires ol.render.Event#postcompose\n * @fires ol.render.Event#precompose\n * @api\n */\nvar _ol_PluggableMap_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  var optionsInternal = _ol_PluggableMap_.createOptionsInternal(options);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : _ol_has_.DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {Object.<string, string>}\n   */\n  this.logos_ = optionsInternal.logos;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.coordinateToPixelTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.pixelToCoordinateTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?olx.FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {ol.Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (_ol_has_.TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  var overlayEvents = [\n    _ol_events_EventType_.CLICK,\n    _ol_events_EventType_.DBLCLICK,\n    _ol_events_EventType_.MOUSEDOWN,\n    _ol_events_EventType_.TOUCHSTART,\n    _ol_events_EventType_.MSPOINTERDOWN,\n    _ol_MapBrowserEventType_.POINTERDOWN,\n    _ol_events_EventType_.MOUSEWHEEL,\n    _ol_events_EventType_.WHEEL\n  ];\n  for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    _ol_events_.listen(this.overlayContainerStopEvent_, overlayEvents[i],\n        _ol_events_Event_.stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {ol.MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new _ol_MapBrowserEventHandler_(this, options.moveTolerance);\n  for (var key in _ol_MapBrowserEventType_) {\n    _ol_events_.listen(this.mapBrowserEventHandler_, _ol_MapBrowserEventType_[key],\n        this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.WHEEL,\n      this.handleBrowserEvent, this);\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.MOUSEWHEEL,\n      this.handleBrowserEvent, this);\n\n  /**\n   * @type {ol.Collection.<ol.control.Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new _ol_Collection_();\n\n  /**\n   * @type {ol.Collection.<ol.interaction.Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new _ol_Collection_();\n\n  /**\n   * @type {ol.Collection.<ol.Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, ol.Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {ol.renderer.Map}\n   * @private\n   */\n  this.renderer_ = optionsInternal.mapRendererPlugin['create'](this.viewport_, this);\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {Array.<ol.PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {ol.TileQueue}\n   */\n  this.tileQueue_ = new _ol_TileQueue_(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(_ol_MapProperty_.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.VIEW),\n      this.handleViewChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.SIZE),\n      this.handleSizeChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.TARGET),\n      this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n      /**\n       * @param {ol.control.Control} control Control.\n       * @this {ol.PluggableMap}\n       */\n      function(control) {\n        control.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n  this.interactions.forEach(\n      /**\n       * @param {ol.interaction.Interaction} interaction Interaction.\n       * @this {ol.PluggableMap}\n       */\n      function(interaction) {\n        interaction.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {ol.Overlay} */ (event.element));\n      }, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        var overlay = /** @type {ol.Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n};\n\n_ol_.inherits(_ol_PluggableMap_, _ol_Object_);\n\n\n/**\n * Add the given control to the map.\n * @param {ol.control.Control} control Control.\n * @api\n */\n_ol_PluggableMap_.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {ol.interaction.Interaction} interaction Interaction to add.\n * @api\n */\n_ol_PluggableMap_.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link ol.Collection}.\n * @param {ol.layer.Base} layer Layer.\n * @api\n */\n_ol_PluggableMap_.prototype.addLayer = function(layer) {\n  var layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {ol.Overlay} overlay Overlay.\n * @api\n */\n_ol_PluggableMap_.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {ol.Overlay} overlay Overlay.\n * @private\n */\n_ol_PluggableMap_.prototype.addOverlayInternal_ = function(overlay) {\n  var id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\n_ol_PluggableMap_.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.WHEEL,\n      this.handleBrowserEvent, this);\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.MOUSEWHEEL,\n      this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    window.removeEventListener(_ol_events_EventType_.RESIZE,\n        this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  _ol_Object_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, (ol.Feature|ol.render.Feature),\n *     ol.layer.Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link ol.Feature feature} or\n *     {@link ol.render.Feature render feature} at the pixel, the second is\n *     the {@link ol.layer.Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\n_ol_PluggableMap_.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  var layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : _ol_functions_.TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {Array.<ol.Feature|ol.render.Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\n_ol_PluggableMap_.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  var features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link ol.layer.Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {S=} opt_this Value to use as `this` when executing `callback`.\n * @param {(function(this: U, ol.layer.Layer): boolean)=} opt_layerFilter Layer\n *     filter function. The filter function will receive one argument, the\n *     {@link ol.layer.Layer layer-candidate} and it should return a boolean\n *     value. Only layers which are visible and for which this function returns\n *     `true` will be tested for features. By default, all visible layers will\n *     be tested.\n * @param {U=} opt_this2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T,U\n * @api\n */\n_ol_PluggableMap_.prototype.forEachLayerAtPixel = function(pixel, callback, opt_this, opt_layerFilter, opt_this2) {\n  if (!this.frameState_) {\n    return;\n  }\n  var thisArg = opt_this !== undefined ? opt_this : null;\n  var layerFilter = opt_layerFilter !== undefined ?\n    opt_layerFilter : _ol_functions_.TRUE;\n  var thisArg2 = opt_this2 !== undefined ? opt_this2 : null;\n  return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, callback, thisArg,\n      layerFilter, thisArg2);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\n_ol_PluggableMap_.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : _ol_functions_.TRUE;\n  var hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_PluggableMap_.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {ol.Pixel} Pixel.\n * @api\n */\n_ol_PluggableMap_.prototype.getEventPixel = function(event) {\n  var viewportPosition = this.viewport_.getBoundingClientRect();\n  var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getTarget = function() {\n  return (\n    /** @type {Element|string|undefined} */ this.get(_ol_MapProperty_.TARGET)\n  );\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\n_ol_PluggableMap_.prototype.getTargetElement = function() {\n  var target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {ol.Pixel} pixel Pixel position in the map viewport.\n * @return {ol.Coordinate} The coordinate for the pixel position.\n * @api\n */\n_ol_PluggableMap_.prototype.getCoordinateFromPixel = function(pixel) {\n  var frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {ol.Collection.<ol.control.Control>} Controls.\n * @api\n */\n_ol_PluggableMap_.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {ol.Collection.<ol.Overlay>} Overlays.\n * @api\n */\n_ol_PluggableMap_.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {ol.Overlay} Overlay.\n * @api\n */\n_ol_PluggableMap_.prototype.getOverlayById = function(id) {\n  var overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {ol.Collection.<ol.interaction.Interaction>} Interactions.\n * @api\n */\n_ol_PluggableMap_.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {ol.layer.Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getLayerGroup = function() {\n  return (\n    /** @type {ol.layer.Group} */ this.get(_ol_MapProperty_.LAYERGROUP)\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!ol.Collection.<ol.layer.Base>} Layers.\n * @api\n */\n_ol_PluggableMap_.prototype.getLayers = function() {\n  var layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {ol.Coordinate} coordinate A map coordinate.\n * @return {ol.Pixel} A pixel position in the map viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.getPixelFromCoordinate = function(coordinate) {\n  var frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {ol.renderer.Map} Renderer\n */\n_ol_PluggableMap_.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {ol.Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getSize = function() {\n  return (\n    /** @type {ol.Size|undefined} */ this.get(_ol_MapProperty_.SIZE)\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {ol.View} The view that controls this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getView = function() {\n  return (\n    /** @type {ol.View} */ this.get(_ol_MapProperty_.VIEW)\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link ol.MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\n_ol_PluggableMap_.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link ol.MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\n_ol_PluggableMap_.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {ol.Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\n_ol_PluggableMap_.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  var frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return _ol_structs_PriorityQueue_.DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return _ol_structs_PriorityQueue_.DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  var deltaX = tileCenter[0] - frameState.focus[0];\n  var deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\n_ol_PluggableMap_.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  var type = opt_type || browserEvent.type;\n  var mapBrowserEvent = new _ol_MapBrowserEvent_(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent The event to handle.\n */\n_ol_PluggableMap_.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  var interactionsArray = this.getInteractions().getArray();\n  var i;\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (i = interactionsArray.length - 1; i >= 0; i--) {\n      var interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      var cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\n_ol_PluggableMap_.prototype.handlePostRender = function() {\n\n  var frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  var tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    var maxTotalLoading = 16;\n    var maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      var hints = frameState.viewHints;\n      if (hints[_ol_ViewHint_.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[_ol_ViewHint_.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  var postRenderFunctions = this.postRenderFunctions_;\n  var i, ii;\n  for (i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  var targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      _ol_events_.unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    _ol_dom_.removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      window.removeEventListener(_ol_events_EventType_.RESIZE,\n          this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    var keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      _ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYDOWN,\n          this.handleBrowserEvent, this),\n      _ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYPRESS,\n          this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      window.addEventListener(_ol_events_EventType_.RESIZE,\n          this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  var view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', _ol_.getUid(view));\n    this.viewPropertyListenerKey_ = _ol_events_.listen(\n        view, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = _ol_events_.listen(\n        view, _ol_events_EventType_.CHANGE,\n        this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(_ol_events_.unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  var layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      _ol_events_.listen(\n          layerGroup, _ol_ObjectEventType_.PROPERTYCHANGE,\n          this.render, this),\n      _ol_events_.listen(\n          layerGroup, _ol_events_EventType_.CHANGE,\n          this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\n_ol_PluggableMap_.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\n_ol_PluggableMap_.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\n_ol_PluggableMap_.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(\n        this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {ol.control.Control} control Control.\n * @return {ol.control.Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {ol.interaction.Interaction} interaction Interaction to remove.\n * @return {ol.interaction.Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {ol.layer.Base} layer Layer.\n * @return {ol.layer.Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeLayer = function(layer) {\n  var layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {ol.Overlay} overlay Overlay.\n * @return {ol.Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\n_ol_PluggableMap_.prototype.renderFrame_ = function(time) {\n  var i, ii, viewState;\n\n  var size = this.getSize();\n  var view = this.getView();\n  var extent = _ol_extent_.createEmpty();\n  var previousFrameState = this.frameState_;\n  /** @type {?olx.FrameState} */\n  var frameState = null;\n  if (size !== undefined && _ol_size_.hasArea(size) && view && view.isDef()) {\n    var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    var layerStates = {};\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[_ol_.getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    var center = viewState.center;\n    var pixelResolution = viewState.resolution / this.pixelRatio_;\n    center[0] = Math.round(center[0] / pixelResolution) * pixelResolution;\n    center[1] = Math.round(center[1] / pixelResolution) * pixelResolution;\n    frameState = /** @type {olx.FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: !this.focus_ ? center : this.focus_,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      logos: _ol_obj_.assign({}, this.logos_),\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = _ol_extent_.getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(\n        this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      var moveStart = !this.previousExtent_ ||\n                  (!_ol_extent_.isEmpty(this.previousExtent_) &&\n                  !_ol_extent_.equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n            new _ol_MapEvent_(_ol_MapEventType_.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = _ol_extent_.createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    var idle = this.previousExtent_ &&\n        !frameState.viewHints[_ol_ViewHint_.ANIMATING] &&\n        !frameState.viewHints[_ol_ViewHint_.INTERACTING] &&\n        !_ol_extent_.equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(\n          new _ol_MapEvent_(_ol_MapEventType_.MOVEEND, this, frameState));\n      _ol_extent_.clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(\n      new _ol_MapEvent_(_ol_MapEventType_.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {ol.layer.Group} layerGroup A layer group containing the layers in\n *     this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setLayerGroup = function(layerGroup) {\n  this.set(_ol_MapProperty_.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {ol.Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setSize = function(size) {\n  this.set(_ol_MapProperty_.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setTarget = function(target) {\n  this.set(_ol_MapProperty_.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {ol.View} view The view that controls this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setView = function(view) {\n  this.set(_ol_MapProperty_.VIEW, view);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n */\n_ol_PluggableMap_.prototype.skipFeature = function(feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.updateSize = function() {\n  var targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    var computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n */\n_ol_PluggableMap_.prototype.unskipFeature = function(feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @type {Array.<ol.renderer.Type>}\n * @const\n */\n_ol_PluggableMap_.DEFAULT_RENDERER_TYPES = [\n  _ol_renderer_Type_.CANVAS,\n  _ol_renderer_Type_.WEBGL\n];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_PluggableMap_.LOGO_URL = 'data:image/png;base64,' +\n    'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAAA3NCSVQICAjb4U/gAAAACXBI' +\n    'WXMAAAHGAAABxgEXwfpGAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAA' +\n    'AhNQTFRF////AP//AICAgP//AFVVQECA////K1VVSbbbYL/fJ05idsTYJFtbbcjbJllmZszW' +\n    'WMTOIFhoHlNiZszTa9DdUcHNHlNlV8XRIVdiasrUHlZjIVZjaMnVH1RlIFRkH1RkH1ZlasvY' +\n    'asvXVsPQH1VkacnVa8vWIVZjIFRjVMPQa8rXIVVkXsXRsNveIFVkIFZlIVVj3eDeh6GmbMvX' +\n    'H1ZkIFRka8rWbMvXIFVkIFVjIFVkbMvWH1VjbMvWIFVlbcvWIFVla8vVIFVkbMvWbMvVH1Vk' +\n    'bMvWIFVlbcvWIFVkbcvVbMvWjNPbIFVkU8LPwMzNIFVkbczWIFVkbsvWbMvXIFVkRnB8bcvW' +\n    '2+TkW8XRIFVkIlZlJVloJlpoKlxrLl9tMmJwOWd0Omh1RXF8TneCT3iDUHiDU8LPVMLPVcLP' +\n    'VcPQVsPPVsPQV8PQWMTQWsTQW8TQXMXSXsXRX4SNX8bSYMfTYcfTYsfTY8jUZcfSZsnUaIqT' +\n    'acrVasrVa8jTa8rWbI2VbMvWbcvWdJObdcvUdszUd8vVeJaee87Yfc3WgJyjhqGnitDYjaar' +\n    'ldPZnrK2oNbborW5o9bbo9fbpLa6q9ndrL3ArtndscDDutzfu8fJwN7gwt7gxc/QyuHhy+Hi' +\n    'zeHi0NfX0+Pj19zb1+Tj2uXk29/e3uLg3+Lh3+bl4uXj4ufl4+fl5Ofl5ufl5ujm5+jmySDn' +\n    'BAAAAFp0Uk5TAAECAgMEBAYHCA0NDg4UGRogIiMmKSssLzU7PkJJT1JTVFliY2hrdHZ3foSF' +\n    'hYeJjY2QkpugqbG1tre5w8zQ09XY3uXn6+zx8vT09vf4+Pj5+fr6/P39/f3+gz7SsAAAAVVJ' +\n    'REFUOMtjYKA7EBDnwCPLrObS1BRiLoJLnte6CQy8FLHLCzs2QUG4FjZ5GbcmBDDjxJBXDWxC' +\n    'Brb8aM4zbkIDzpLYnAcE9VXlJSWlZRU13koIeW57mGx5XjoMZEUqwxWYQaQbSzLSkYGfKFSe' +\n    '0QMsX5WbjgY0YS4MBplemI4BdGBW+DQ11eZiymfqQuXZIjqwyadPNoSZ4L+0FVM6e+oGI6g8' +\n    'a9iKNT3o8kVzNkzRg5lgl7p4wyRUL9Yt2jAxVh6mQCogae6GmflI8p0r13VFWTHBQ0rWPW7a' +\n    'hgWVcPm+9cuLoyy4kCJDzCm6d8PSFoh0zvQNC5OjDJhQopPPJqph1doJBUD5tnkbZiUEqaCn' +\n    'B3bTqLTFG1bPn71kw4b+GFdpLElKIzRxxgYgWNYc5SCENVHKeUaltHdXx0dZ8uBI1hJ2UUDg' +\n    'q82CM2MwKeibqAvSO7MCABq0wXEPiqWEAAAAAElFTkSuQmCC';\n\n\n/**\n * @param {olx.MapOptions} options Map options.\n * @return {ol.MapOptionsInternal} Internal map options.\n */\n_ol_PluggableMap_.createOptionsInternal = function(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var values = {};\n\n  var logos = {};\n  if (options.logo === undefined ||\n      (typeof options.logo === 'boolean' && options.logo)) {\n    logos[_ol_PluggableMap_.LOGO_URL] = 'https://openlayers.org/';\n  } else {\n    var logo = options.logo;\n    if (typeof logo === 'string') {\n      logos[logo] = '';\n    } else if (logo instanceof HTMLElement) {\n      logos[_ol_.getUid(logo).toString()] = logo;\n    } else if (logo) {\n      _ol_asserts_.assert(typeof logo.href == 'string', 44); // `logo.href` should be a string.\n      _ol_asserts_.assert(typeof logo.src == 'string', 45); // `logo.src` should be a string.\n      logos[logo.src] = logo.href;\n    }\n  }\n\n  var layerGroup = (options.layers instanceof _ol_layer_Group_) ?\n    options.layers : new _ol_layer_Group_({layers: options.layers});\n  values[_ol_MapProperty_.LAYERGROUP] = layerGroup;\n\n  values[_ol_MapProperty_.TARGET] = options.target;\n\n  values[_ol_MapProperty_.VIEW] = options.view !== undefined ?\n    options.view : new _ol_View_();\n\n  /**\n   * @type {Array.<ol.renderer.Type>}\n   */\n  var rendererTypes;\n\n  if (options.renderer !== undefined) {\n    if (Array.isArray(options.renderer)) {\n      rendererTypes = options.renderer;\n    } else if (typeof options.renderer === 'string') {\n      rendererTypes = [options.renderer];\n    } else {\n      _ol_asserts_.assert(false, 46); // Incorrect format for `renderer` option\n    }\n    if (rendererTypes.indexOf(/** @type {ol.renderer.Type} */ ('dom')) >= 0) {\n      rendererTypes = rendererTypes.concat(_ol_PluggableMap_.DEFAULT_RENDERER_TYPES);\n    }\n  } else {\n    rendererTypes = _ol_PluggableMap_.DEFAULT_RENDERER_TYPES;\n  }\n\n  /**\n   * @type {olx.MapRendererPlugin}\n   */\n  var mapRendererPlugin;\n\n  var mapRendererPlugins = _ol_plugins_.getMapRendererPlugins();\n  outer: for (var i = 0, ii = rendererTypes.length; i < ii; ++i) {\n    var rendererType = rendererTypes[i];\n    for (var j = 0, jj = mapRendererPlugins.length; j < jj; ++j) {\n      var candidate = mapRendererPlugins[j];\n      if (candidate['handles'](rendererType)) {\n        mapRendererPlugin = candidate;\n        break outer;\n      }\n    }\n  }\n\n  if (!mapRendererPlugin) {\n    throw new Error('Unable to create a map renderer for types: ' +  rendererTypes.join(', '));\n  }\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new _ol_Collection_(options.controls.slice());\n    } else {\n      _ol_asserts_.assert(options.controls instanceof _ol_Collection_,\n          47); // Expected `controls` to be an array or an `ol.Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new _ol_Collection_(options.interactions.slice());\n    } else {\n      _ol_asserts_.assert(options.interactions instanceof _ol_Collection_,\n          48); // Expected `interactions` to be an array or an `ol.Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new _ol_Collection_(options.overlays.slice());\n    } else {\n      _ol_asserts_.assert(options.overlays instanceof _ol_Collection_,\n          49); // Expected `overlays` to be an array or an `ol.Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new _ol_Collection_();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    logos: logos,\n    overlays: overlays,\n    mapRendererPlugin: mapRendererPlugin,\n    values: values\n  };\n\n};\nexport default _ol_PluggableMap_;\n","import _ol_ from './index.js';\nimport _ol_events_EventTarget_ from './events/eventtarget.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.events.EventTarget}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.ImageState} state State.\n */\nvar _ol_ImageBase_ = function(extent, resolution, pixelRatio, state) {\n\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @protected\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = state;\n\n};\n\n_ol_.inherits(_ol_ImageBase_, _ol_events_EventTarget_);\n\n\n/**\n * @protected\n */\n_ol_ImageBase_.prototype.changed = function() {\n  this.dispatchEvent(_ol_events_EventType_.CHANGE);\n};\n\n\n/**\n * @return {ol.Extent} Extent.\n */\n_ol_ImageBase_.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\n_ol_ImageBase_.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\n_ol_ImageBase_.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\n_ol_ImageBase_.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {ol.ImageState} State.\n */\n_ol_ImageBase_.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n_ol_ImageBase_.prototype.load = function() {};\nexport default _ol_ImageBase_;\n","import _ol_ from './index.js';\nimport _ol_ImageBase_ from './imagebase.js';\nimport _ol_ImageState_ from './imagestate.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {ol.ImageCanvasLoader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nvar _ol_ImageCanvas_ = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?ol.ImageCanvasLoader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  var state = opt_loader !== undefined ?\n    _ol_ImageState_.IDLE : _ol_ImageState_.LOADED;\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\n_ol_.inherits(_ol_ImageCanvas_, _ol_ImageBase_);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\n_ol_ImageCanvas_.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\n_ol_ImageCanvas_.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = _ol_ImageState_.ERROR;\n  } else {\n    this.state = _ol_ImageState_.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageCanvas_.prototype.load = function() {\n  if (this.state == _ol_ImageState_.IDLE) {\n    this.state = _ol_ImageState_.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageCanvas_.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default _ol_ImageCanvas_;\n","import _ol_ from '../index.js';\nimport _ol_events_Event_ from '../events/event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.render.Event}\n * @param {ol.render.EventType} type Type.\n * @param {ol.render.VectorContext=} opt_vectorContext Vector context.\n * @param {olx.FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?ol.webgl.Context=} opt_glContext WebGL Context.\n */\nvar _ol_render_Event_ = function(\n    type, opt_vectorContext, opt_frameState, opt_context,\n    opt_glContext) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link ol.render.canvas.Immediate}.\n   * @type {ol.render.VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {olx.FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {ol.webgl.Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\n_ol_.inherits(_ol_render_Event_, _ol_events_Event_);\nexport default _ol_render_Event_;\n","/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nvar _ol_render_VectorContext_ = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\n_ol_render_VectorContext_.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {ol.geom.Geometry} geometry The geometry to render.\n */\n_ol_render_VectorContext_.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {ol.style.Style} style The rendering style.\n */\n_ol_render_VectorContext_.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {ol.geom.Circle} circleGeometry Circle geometry.\n * @param {ol.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n */\n_ol_render_VectorContext_.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {ol.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.LineString|ol.render.Feature} lineStringGeometry Line\n *     string geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.MultiLineString|ol.render.Feature} multiLineStringGeometry\n *     MultiLineString geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.MultiPoint|ol.render.Feature} multiPointGeometry MultiPoint\n *     geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.Point|ol.render.Feature} pointGeometry Point geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.Polygon|ol.render.Feature} polygonGeometry Polygon\n *     geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_VectorContext_.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n */\n_ol_render_VectorContext_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {ol.style.Image} imageStyle Image style.\n * @param {ol.DeclutterGroup=} opt_declutterGroup Declutter.\n */\n_ol_render_VectorContext_.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {ol.style.Text} textStyle Text style.\n * @param {ol.DeclutterGroup=} opt_declutterGroup Declutter.\n */\n_ol_render_VectorContext_.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default _ol_render_VectorContext_;\n","// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol.geom.flat.transform.transform2D?\n\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../../geom/simplegeometry.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link ol.render.VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link ol.render.Event} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.Extent} extent Extent.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nvar _ol_render_canvas_Immediate_ = function(context, pixelRatio, extent, transform, viewRotation) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpLocalTransform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_render_canvas_Immediate_, _ol_render_VectorContext_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n  var context = this.context_;\n  var localTransform = this.tmpLocalTransform_;\n  var alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  var rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  var i, ii;\n  for (i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    var x = pixelCoordinates[i] - this.imageAnchorX_;\n    var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      var centerX = x + this.imageAnchorX_;\n      var centerY = y + this.imageAnchorY_;\n      _ol_transform_.compose(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n  var context = this.context_;\n  var rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    var x = pixelCoordinates[offset] + this.textOffsetX_;\n    var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      var localTransform = _ol_transform_.compose(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\n_ol_render_canvas_Immediate_.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  var context = this.context_;\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  var length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (var i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\n_ol_render_canvas_Immediate_.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(\n        flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {ol.geom.Circle} geometry Circle geometry.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawCircle = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var pixelCoordinates = _ol_geom_SimpleGeometry_.transform2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n    var dx = pixelCoordinates[2] - pixelCoordinates[0];\n    var dy = pixelCoordinates[3] - pixelCoordinates[1];\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    var context = this.context_;\n    context.beginPath();\n    context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {ol.style.Style} style The rendering style.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol.render.canvas.Immediate#setStyle} first to set the rendering style.\n *\n * @param {ol.geom.Geometry|ol.render.Feature} geometry The geometry to render.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawGeometry = function(geometry) {\n  var type = geometry.getType();\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n      this.drawPoint(/** @type {ol.geom.Point} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.LINE_STRING:\n      this.drawLineString(/** @type {ol.geom.LineString} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.POLYGON:\n      this.drawPolygon(/** @type {ol.geom.Polygon} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_POINT:\n      this.drawMultiPoint(/** @type {ol.geom.MultiPoint} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {ol.geom.MultiLineString} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {ol.geom.MultiPolygon} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {ol.geom.GeometryCollection} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.CIRCLE:\n      this.drawCircle(/** @type {ol.geom.Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link ol.layer.Vector} instead.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawFeature = function(feature, style) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry ||\n      !_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {ol.geom.GeometryCollection} geometry Geometry collection.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawGeometryCollection = function(geometry) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Point|ol.render.Feature} geometry Point geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawPoint = function(geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {ol.geom.MultiPoint|ol.render.Feature} geometry MultiPoint geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiPoint = function(geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.LineString|ol.render.Feature} geometry LineString geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawLineString = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    var flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {ol.geom.MultiLineString|ol.render.Feature} geometry MultiLineString\n *     geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiLineString = function(geometry) {\n  var geometryExtent = geometry.getExtent();\n  if (!_ol_extent_.intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var offset = 0;\n    var ends = geometry.getEnds();\n    var stride = geometry.getStride();\n    context.beginPath();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n          flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    var flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Polygon|ol.render.Feature} geometry Polygon geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawPolygon = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    var flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiPolygon = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var context = this.context_;\n    var flatCoordinates = geometry.getOrientedFlatCoordinates();\n    var offset = 0;\n    var endss = geometry.getEndss();\n    var stride = geometry.getStride();\n    var i, ii;\n    context.beginPath();\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    var flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {ol.CanvasFillState} fillState Fill state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextFillState_ = function(fillState) {\n  var context = this.context_;\n  var contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {ol.CanvasStrokeState} strokeState Stroke state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextStrokeState_ = function(strokeState) {\n  var context = this.context_;\n  var contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      if (!_ol_array_.equals(\n          contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {ol.CanvasTextState} textState Text state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextTextState_ = function(textState) {\n  var context = this.context_;\n  var contextTextState = this.contextTextState_;\n  var textAlign = textState.textAlign ?\n    textState.textAlign : _ol_render_canvas_.defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    var fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: _ol_colorlike_.asColorLike(fillStyleColor ?\n        fillStyleColor : _ol_render_canvas_.defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    var strokeStyleColor = strokeStyle.getColor();\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    var strokeStyleWidth = strokeStyle.getWidth();\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : _ol_render_canvas_.defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n      strokeStyle: _ol_colorlike_.asColorLike(strokeStyleColor ?\n        strokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {ol.style.Image} imageStyle Image style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    var imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    var imageImage = imageStyle.getImage(1);\n    var imageOrigin = imageStyle.getOrigin();\n    var imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {ol.style.Text} textStyle Text style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    var textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      var textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: _ol_colorlike_.asColorLike(textFillStyleColor ?\n          textFillStyleColor : _ol_render_canvas_.defaultFillStyle)\n      };\n    }\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      var textStrokeStyleColor = textStrokeStyle.getColor();\n      var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      var textStrokeStyleWidth = textStrokeStyle.getWidth();\n      var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : _ol_render_canvas_.defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n        strokeStyle: _ol_colorlike_.asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n      };\n    }\n    var textFont = textStyle.getFont();\n    var textOffsetX = textStyle.getOffsetX();\n    var textOffsetY = textStyle.getOffsetY();\n    var textRotateWithView = textStyle.getRotateWithView();\n    var textRotation = textStyle.getRotation();\n    var textScale = textStyle.getScale();\n    var textText = textStyle.getText();\n    var textTextAlign = textStyle.getTextAlign();\n    var textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : _ol_render_canvas_.defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : _ol_render_canvas_.defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : _ol_render_canvas_.defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default _ol_render_canvas_Immediate_;\n","import _ol_ from '../index.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_Observable_ from '../observable.js';\nimport _ol_TileState_ from '../tilestate.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_source_State_ from '../source/state.js';\n\n/**\n * @constructor\n * @extends {ol.Observable}\n * @param {ol.layer.Layer} layer Layer.\n * @struct\n */\nvar _ol_renderer_Layer_ = function(layer) {\n\n  _ol_Observable_.call(this);\n\n  /**\n   * @private\n   * @type {ol.layer.Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\n_ol_.inherits(_ol_renderer_Layer_, _ol_Observable_);\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (ol.Feature|ol.render.Feature), ol.layer.Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\n_ol_renderer_Layer_.prototype.forEachFeatureAtCoordinate = _ol_.nullFunction;\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\n_ol_renderer_Layer_.prototype.hasFeatureAtCoordinate = _ol_functions_.FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {ol.source.Tile} source Tile source.\n * @param {ol.proj.Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, ol.Tile>>} tiles Lookup of loaded\n *     tiles by zoom level.\n * @return {function(number, ol.TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the\n *     lookup.\n * @protected\n */\n_ol_renderer_Layer_.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {ol.TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    });\n};\n\n\n/**\n * @return {ol.layer.Layer} Layer.\n */\n_ol_renderer_Layer_.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {ol.events.Event} event Image change event.\n * @private\n */\n_ol_renderer_Layer_.prototype.handleImageChange_ = function(event) {\n  var image = /** @type {ol.Image} */ (event.target);\n  if (image.getState() === _ol_ImageState_.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {ol.ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false`\n *     otherwise.\n * @protected\n */\n_ol_renderer_Layer_.prototype.loadImage = function(image) {\n  var imageState = image.getState();\n  if (imageState != _ol_ImageState_.LOADED &&\n      imageState != _ol_ImageState_.ERROR) {\n    _ol_events_.listen(image, _ol_events_EventType_.CHANGE,\n        this.handleImageChange_, this);\n  }\n  if (imageState == _ol_ImageState_.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == _ol_ImageState_.LOADED;\n};\n\n\n/**\n * @protected\n */\n_ol_renderer_Layer_.prototype.renderIfReadyAndVisible = function() {\n  var layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == _ol_source_State_.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.source.Tile} tileSource Tile source.\n * @protected\n */\n_ol_renderer_Layer_.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {ol.source.Tile} tileSource Tile source.\n     * @param {ol.PluggableMap} map Map.\n     * @param {olx.FrameState} frameState Frame state.\n     */\n    var postRenderFunction = function(tileSource, map, frameState) {\n      var tileSourceKey = _ol_.getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n        /** @type {ol.PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.source.Source} source Source.\n * @protected\n */\n_ol_renderer_Layer_.prototype.updateLogos = function(frameState, source) {\n  var logo = source.getLogo();\n  if (logo !== undefined) {\n    if (typeof logo === 'string') {\n      frameState.logos[logo] = '';\n    } else if (logo) {\n      _ol_asserts_.assert(typeof logo.href == 'string', 44); // `logo.href` should be a string.\n      _ol_asserts_.assert(typeof logo.src == 'string', 45); // `logo.src` should be a string.\n      frameState.logos[logo.src] = logo.href;\n    }\n  }\n};\n\n\n/**\n * @param {Object.<string, Object.<string, ol.TileRange>>} usedTiles Used tiles.\n * @param {ol.source.Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {ol.TileRange} tileRange Tile range.\n * @protected\n */\n_ol_renderer_Layer_.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  var tileSourceKey = _ol_.getUid(tileSource).toString();\n  var zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.source.Tile} tileSource Tile source.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {ol.Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, ol.Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\n_ol_renderer_Layer_.prototype.manageTilePyramid = function(\n    frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n    currentZ, preload, opt_tileCallback, opt_this) {\n  var tileSourceKey = _ol_.getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  var wantedTiles = frameState.wantedTiles[tileSourceKey];\n  var tileQueue = frameState.tileQueue;\n  var minZoom = tileGrid.getMinZoom();\n  var tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == _ol_TileState_.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default _ol_renderer_Layer_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_functions_ from '../../functions.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_Immediate_ from '../../render/canvas/immediate.js';\nimport _ol_renderer_Layer_ from '../layer.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.renderer.Layer}\n * @param {ol.layer.Layer} layer Layer.\n */\nvar _ol_renderer_canvas_Layer_ = function(layer) {\n\n  _ol_renderer_Layer_.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.transform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_Layer_, _ol_renderer_Layer_);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Extent} extent Clip extent.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.clip = function(context, frameState, extent) {\n  var pixelRatio = frameState.pixelRatio;\n  var width = frameState.size[0] * pixelRatio;\n  var height = frameState.size[1] * pixelRatio;\n  var rotation = frameState.viewState.rotation;\n  var topLeft = _ol_extent_.getTopLeft(/** @type {ol.Extent} */ (extent));\n  var topRight = _ol_extent_.getTopRight(/** @type {ol.Extent} */ (extent));\n  var bottomRight = _ol_extent_.getBottomRight(/** @type {ol.Extent} */ (extent));\n  var bottomLeft = _ol_extent_.getBottomLeft(/** @type {ol.Extent} */ (extent));\n\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, topLeft);\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, topRight);\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, bottomRight);\n  _ol_transform_.apply(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  _ol_render_canvas_.rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  _ol_render_canvas_.rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Transform=} opt_transform Transform.\n * @private\n */\n_ol_renderer_canvas_Layer_.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  var layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    _ol_render_canvas_.rotateAtOffset(context, -rotation, width / 2, height / 2);\n    var transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    var render = new _ol_render_canvas_Immediate_(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n    var composeEvent = new _ol_render_Event_(type, render, frameState,\n        context, null);\n    layer.dispatchEvent(composeEvent);\n    _ol_render_canvas_.rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState FrameState.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_canvas_Layer_.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, 0, _ol_functions_.TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {ol.Transform=} opt_transform Transform.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(_ol_render_EventType_.POSTCOMPOSE, context,\n      frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Transform=} opt_transform Transform.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(_ol_render_EventType_.PRECOMPOSE, context,\n      frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.Transform=} opt_transform Transform.\n * @protected\n */\n_ol_renderer_canvas_Layer_.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(_ol_render_EventType_.RENDER, context,\n      frameState, opt_transform);\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!ol.Transform} Transform.\n */\n_ol_renderer_canvas_Layer_.prototype.getTransform = function(frameState, offsetX) {\n  var viewState = frameState.viewState;\n  var pixelRatio = frameState.pixelRatio;\n  var dx1 = pixelRatio * frameState.size[0] / 2;\n  var dy1 = pixelRatio * frameState.size[1] / 2;\n  var sx = pixelRatio / viewState.resolution;\n  var sy = -sx;\n  var angle = -viewState.rotation;\n  var dx2 = -viewState.center[0] + offsetX;\n  var dy2 = -viewState.center[1];\n  return _ol_transform_.compose(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\n_ol_renderer_canvas_Layer_.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\n_ol_renderer_canvas_Layer_.prototype.prepareFrame = function(frameState, layerState) {};\nexport default _ol_renderer_canvas_Layer_;\n","import _ol_ from '../../index.js';\nimport _ol_coordinate_ from '../../coordinate.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_renderer_canvas_Layer_ from '../canvas/layer.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.renderer.canvas.Layer}\n * @param {ol.layer.Layer} layer Layer.\n */\nvar _ol_renderer_canvas_IntermediateCanvas_ = function(layer) {\n\n  _ol_renderer_canvas_Layer_.call(this, layer);\n\n  /**\n   * @protected\n   * @type {ol.Transform}\n   */\n  this.coordinateToCanvasPixelTransform = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_IntermediateCanvas_, _ol_renderer_canvas_Layer_);\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  var image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    var extent = layerState.extent;\n    var clipped = extent !== undefined &&\n        !_ol_extent_.containsExtent(extent, frameState.extent) &&\n        _ol_extent_.intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {ol.Extent} */ (extent));\n    }\n\n    var imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    var alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    var dx = imageTransform[4];\n    var dy = imageTransform[5];\n    var dw = image.width * imageTransform[0];\n    var dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!ol.Transform} Image transform.\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  var layer = this.getLayer();\n  var source = layer.getSource();\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  var skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_IntermediateCanvas_.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== _ol_.nullFunction) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return _ol_renderer_canvas_Layer_.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    var pixel = _ol_transform_.apply(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    _ol_coordinate_.scale(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\nexport default _ol_renderer_canvas_IntermediateCanvas_;\n","import _ol_ from '../../index.js';\nimport _ol_ImageCanvas_ from '../../imagecanvas.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_layer_VectorRenderType_ from '../../layer/vectorrendertype.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_plugins_ from '../../plugins.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_IntermediateCanvas_ from '../canvas/intermediatecanvas.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.IntermediateCanvas}\n * @param {ol.layer.Image} imageLayer Single image layer.\n * @api\n */\nvar _ol_renderer_canvas_ImageLayer_ = function(imageLayer) {\n\n  _ol_renderer_canvas_IntermediateCanvas_.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?ol.ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.imageTransform_ = _ol_transform_.create();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {ol.renderer.canvas.VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_ImageLayer_, _ol_renderer_canvas_IntermediateCanvas_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_ImageLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && (layer.getType() === _ol_LayerType_.IMAGE ||\n      layer.getType() === _ol_LayerType_.VECTOR &&\n      /** @type {ol.layer.Vector} */ (layer).getRenderMode() === _ol_layer_VectorRenderType_.IMAGE);\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.ImageLayer} The layer renderer.\n */\n_ol_renderer_canvas_ImageLayer_['create'] = function(mapRenderer, layer) {\n  var renderer = new _ol_renderer_canvas_ImageLayer_(/** @type {ol.layer.Image} */ (layer));\n  if (layer.getType() === _ol_LayerType_.VECTOR) {\n    var candidates = _ol_plugins_.getLayerRendererPlugins();\n    for (var i = 0, ii = candidates.length; i < ii; ++i) {\n      var candidate = /** @type {Object.<string, Function>} */ (candidates[i]);\n      if (candidate !== _ol_renderer_canvas_ImageLayer_ && candidate['handles'](_ol_renderer_Type_.CANVAS, layer)) {\n        renderer.setVectorRenderer(candidate['create'](mapRenderer, layer));\n      }\n    }\n  }\n  return renderer;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.prepareFrame = function(frameState, layerState) {\n\n  var pixelRatio = frameState.pixelRatio;\n  var size = frameState.size;\n  var viewState = frameState.viewState;\n  var viewCenter = viewState.center;\n  var viewResolution = viewState.resolution;\n\n  var image;\n  var imageLayer = /** @type {ol.layer.Image} */ (this.getLayer());\n  var imageSource = imageLayer.getSource();\n\n  var hints = frameState.viewHints;\n\n  var renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = _ol_extent_.getIntersection(\n        renderedExtent, layerState.extent);\n  }\n\n  if (!hints[_ol_ViewHint_.ANIMATING] && !hints[_ol_ViewHint_.INTERACTING] &&\n      !_ol_extent_.isEmpty(renderedExtent)) {\n    var projection = viewState.projection;\n    if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n      var sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    var vectorRenderer = this.vectorRenderer_;\n    if (vectorRenderer) {\n      var context = vectorRenderer.context;\n      var imageFrameState = /** @type {olx.FrameState} */ (_ol_obj_.assign({}, frameState, {\n        size: [\n          _ol_extent_.getWidth(renderedExtent) / viewResolution,\n          _ol_extent_.getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {olx.ViewState} */ (_ol_obj_.assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      var skippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n          (vectorRenderer.replayGroupChanged ||\n          !_ol_array_.equals(skippedFeatures, this.skippedFeatures_))) {\n        context.canvas.width = imageFrameState.size[0] * pixelRatio;\n        context.canvas.height = imageFrameState.size[1] * pixelRatio;\n        vectorRenderer.composeFrame(imageFrameState, layerState, context);\n        this.image_ = new _ol_ImageCanvas_(renderedExtent, viewResolution, pixelRatio, context.canvas);\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    } else {\n      image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      if (image) {\n        var loaded = this.loadImage(image);\n        if (loaded) {\n          this.image_ = image;\n        }\n      }\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    var imageExtent = image.getExtent();\n    var imageResolution = image.getResolution();\n    var imagePixelRatio = image.getPixelRatio();\n    var scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    var transform = _ol_transform_.compose(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    _ol_transform_.compose(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n    this.updateLogos(frameState, imageSource);\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_ImageLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return _ol_renderer_canvas_IntermediateCanvas_.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\n/**\n * @param {ol.renderer.canvas.VectorLayer} renderer Vector renderer.\n */\n_ol_renderer_canvas_ImageLayer_.prototype.setVectorRenderer = function(renderer) {\n  this.vectorRenderer_ = renderer;\n};\nexport default _ol_renderer_canvas_ImageLayer_;\n","import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_plugins_ from '../plugins.js';\nimport _ol_style_ from '../style.js';\nimport _ol_transform_ from '../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.Disposable}\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @struct\n */\nvar _ol_renderer_Map_ = function(container, map) {\n\n  _ol_Disposable_.call(this);\n\n\n  /**\n   * @private\n   * @type {ol.PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {Object.<string, ol.renderer.Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, ol.EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n};\n\n_ol_.inherits(_ol_renderer_Map_, _ol_Disposable_);\n\n\n/**\n * @param {olx.FrameState} frameState FrameState.\n * @protected\n */\n_ol_renderer_Map_.prototype.calculateMatrices2D = function(frameState) {\n  var viewState = frameState.viewState;\n  var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  _ol_transform_.compose(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n  _ol_transform_.invert(\n      _ol_transform_.setFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\n_ol_renderer_Map_.prototype.removeLayerRenderers = function() {\n  for (var key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_Map_.expireIconCache_ = function(map, frameState) {\n  var cache = _ol_style_.iconImageCache;\n  cache.expire();\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (ol.Feature|ol.render.Feature),\n *     ol.layer.Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, ol.layer.Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_Map_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n    layerFilter, thisArg2) {\n  var result;\n  var viewState = frameState.viewState;\n  var viewResolution = viewState.resolution;\n\n  /**\n   * @param {ol.Feature|ol.render.Feature} feature Feature.\n   * @param {ol.layer.Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    var key = _ol_.getUid(feature).toString();\n    var managed = frameState.layerStates[_ol_.getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  var projection = viewState.projection;\n\n  var translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    var projectionExtent = projection.getExtent();\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n    var x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      var layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.FrameState} frameState FrameState.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, ol.layer.Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_Map_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n    layerFilter, thisArg2) {};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {olx.FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, ol.layer.Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\n_ol_renderer_Map_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, _ol_functions_.TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer.\n * @protected\n * @return {ol.renderer.Layer} Layer renderer.\n */\n_ol_renderer_Map_.prototype.getLayerRenderer = function(layer) {\n  var layerKey = _ol_.getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    var layerRendererPlugins = _ol_plugins_.getLayerRendererPlugins();\n    var renderer;\n    var type = this.getType();\n    for (var i = 0, ii = layerRendererPlugins.length; i < ii; ++i) {\n      var plugin = layerRendererPlugins[i];\n      if (plugin['handles'](type, layer)) {\n        renderer = plugin['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = _ol_events_.listen(renderer,\n          _ol_events_EventType_.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {ol.renderer.Layer} Layer renderer.\n */\n_ol_renderer_Map_.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, ol.renderer.Layer>} Layer renderers.\n */\n_ol_renderer_Map_.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {ol.PluggableMap} Map.\n */\n_ol_renderer_Map_.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * @abstract\n * @return {ol.renderer.Type} Type\n */\n_ol_renderer_Map_.prototype.getType = function() {};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\n_ol_renderer_Map_.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {ol.renderer.Layer} Layer renderer.\n * @private\n */\n_ol_renderer_Map_.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  var layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  _ol_events_.unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?olx.FrameState} frameState Frame state.\n */\n_ol_renderer_Map_.prototype.renderFrame = _ol_.nullFunction;\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_Map_.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  var layerKey;\n  for (layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @protected\n */\n_ol_renderer_Map_.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(\n      /** @type {ol.PostRenderFunction} */ (_ol_renderer_Map_.expireIconCache_)\n  );\n};\n\n\n/**\n * @param {!olx.FrameState} frameState Frame state.\n * @protected\n */\n_ol_renderer_Map_.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  var layerKey;\n  for (layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n          /** @type {ol.PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {ol.LayerState} state1 First layer state.\n * @param {ol.LayerState} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\n_ol_renderer_Map_.sortByZIndex = function(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n};\nexport default _ol_renderer_Map_;\n","// FIXME offset panning\n\nimport _ol_transform_ from '../../transform.js';\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_css_ from '../../css.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_layer_Layer_ from '../../layer/layer.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_Immediate_ from '../../render/canvas/immediate.js';\nimport _ol_renderer_Map_ from '../map.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_source_State_ from '../../source/state.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.Map}\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @api\n */\nvar _ol_renderer_canvas_Map_ = function(container, map) {\n\n  _ol_renderer_Map_.call(this, container, map);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = _ol_dom_.createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = _ol_css_.CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.transform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_Map_, _ol_renderer_Map_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_Map_['handles'] = function(type) {\n  return type === _ol_renderer_Type_.CANVAS;\n};\n\n\n/**\n * Create the map renderer.\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @return {ol.renderer.canvas.Map} The map renderer.\n */\n_ol_renderer_canvas_Map_['create'] = function(container, map) {\n  return new _ol_renderer_canvas_Map_(container, map);\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_canvas_Map_.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  var map = this.getMap();\n  var context = this.context_;\n  if (map.hasListener(type)) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var rotation = viewState.rotation;\n\n    var transform = this.getTransform(frameState);\n\n    var vectorContext = new _ol_render_canvas_Immediate_(context, pixelRatio,\n        extent, transform, rotation);\n    var composeEvent = new _ol_render_Event_(type, vectorContext,\n        frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @protected\n * @return {!ol.Transform} Transform.\n */\n_ol_renderer_canvas_Map_.prototype.getTransform = function(frameState) {\n  var viewState = frameState.viewState;\n  var dx1 = this.canvas_.width / 2;\n  var dy1 = this.canvas_.height / 2;\n  var sx = frameState.pixelRatio / viewState.resolution;\n  var sy = -sx;\n  var angle = -viewState.rotation;\n  var dx2 = -viewState.center[0];\n  var dy2 = -viewState.center[1];\n  return _ol_transform_.compose(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_Map_.prototype.getType = function() {\n  return _ol_renderer_Type_.CANVAS;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_Map_.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var context = this.context_;\n  var pixelRatio = frameState.pixelRatio;\n  var width = Math.round(frameState.size[0] * pixelRatio);\n  var height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  var rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(_ol_render_EventType_.PRECOMPOSE, frameState);\n\n  var layerStatesArray = frameState.layerStatesArray;\n  _ol_array_.stableSort(layerStatesArray, _ol_renderer_Map_.sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    _ol_render_canvas_.rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  var viewResolution = frameState.viewState.resolution;\n  var i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {ol.renderer.canvas.Layer} */ (this.getLayerRenderer(layer));\n    if (!_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != _ol_source_State_.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(\n      _ol_render_EventType_.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_Map_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n    layerFilter, thisArg2) {\n  var result;\n  var viewState = frameState.viewState;\n  var viewResolution = viewState.resolution;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n\n  var coordinate = _ol_transform_.apply(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      var layerRenderer = /** @type {ol.renderer.canvas.Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\nexport default _ol_renderer_canvas_Map_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileRange_ from '../../tilerange.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_IntermediateCanvas_ from '../canvas/intermediatecanvas.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.IntermediateCanvas}\n * @param {ol.layer.Tile|ol.layer.VectorTile} tileLayer Tile layer.\n * @api\n */\nvar _ol_renderer_canvas_TileLayer_ = function(tileLayer) {\n\n  _ol_renderer_canvas_IntermediateCanvas_.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null :  _ol_dom_.createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<ol.Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @protected\n   * @type {ol.Extent}\n   */\n  this.tmpExtent = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {ol.TileRange}\n   */\n  this.tmpTileRange_ = new _ol_TileRange_(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.imageTransform_ = _ol_transform_.create();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_TileLayer_, _ol_renderer_canvas_IntermediateCanvas_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_TileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.TileLayer} The layer renderer.\n */\n_ol_renderer_canvas_TileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_TileLayer_(/** @type {ol.layer.Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {ol.Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\n_ol_renderer_canvas_TileLayer_.prototype.isDrawableTile_ = function(tile) {\n  var tileState = tile.getState();\n  var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == _ol_TileState_.LOADED ||\n      tileState == _ol_TileState_.EMPTY ||\n      tileState == _ol_TileState_.ERROR && !useInterimTilesOnError;\n};\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_TileLayer_.prototype.prepareFrame = function(frameState, layerState) {\n\n  var pixelRatio = frameState.pixelRatio;\n  var size = frameState.size;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var viewResolution = viewState.resolution;\n  var viewCenter = viewState.center;\n\n  var tileLayer = this.getLayer();\n  var tileSource = /** @type {ol.source.Tile} */ (tileLayer.getSource());\n  var sourceRevision = tileSource.getRevision();\n  var tileGrid = tileSource.getTileGridForProjection(projection);\n  var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  var tileResolution = tileGrid.getResolution(z);\n  var oversampling = Math.round(viewResolution / tileResolution) || 1;\n  var extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = _ol_extent_.getIntersection(extent, layerState.extent);\n  }\n  if (_ol_extent_.isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, ol.Tile>>}\n   */\n  var tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n  var tmpExtent = this.tmpExtent;\n  var tmpTileRange = this.tmpTileRange_;\n  var newTiles = false;\n  var tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n      if (tile.getState() == _ol_TileState_.ERROR) {\n        if (!tileLayer.getUseInterimTilesOnError()) {\n          // When useInterimTilesOnError is false, we consider the error tile as loaded.\n          tile.setState(_ol_TileState_.LOADED);\n        } else if (tileLayer.getPreload() > 0) {\n          // Preloaded tiles for lower resolutions might have finished loading.\n          newTiles = true;\n        }\n      }\n      if (!this.isDrawableTile_(tile)) {\n        tile = tile.getInterimTile();\n      }\n      if (this.isDrawableTile_(tile)) {\n        var uid = _ol_.getUid(this);\n        if (tile.getState() == _ol_TileState_.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          var inTransition = tile.inTransition(uid);\n          if (!newTiles && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            newTiles = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n      var covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  var hints = frameState.viewHints;\n  var animatingOrInteracting = hints[_ol_ViewHint_.ANIMATING] || hints[_ol_ViewHint_.INTERACTING];\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    newTiles ||\n        !(this.renderedExtent_ && _ol_extent_.containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    var context = this.context;\n    if (context) {\n      var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      var canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !_ol_extent_.equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    var tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (var tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  var scale = this.renderedResolution / viewResolution;\n  var transform = _ol_transform_.compose(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  _ol_transform_.compose(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n  this.updateLogos(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\n_ol_renderer_canvas_TileLayer_.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  var image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  var uid = _ol_.getUid(this);\n  var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  var alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_TileLayer_.prototype.getImage = function() {\n  var context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {ol.layer.Tile|ol.layer.VectorTile}\n */\n_ol_renderer_canvas_TileLayer_.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_TileLayer_.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default _ol_renderer_canvas_TileLayer_;\n","/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nvar _ol_render_ReplayGroup_ = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {ol.render.ReplayType} replayType Replay type.\n * @return {ol.render.VectorContext} Replay.\n */\n_ol_render_ReplayGroup_.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\n_ol_render_ReplayGroup_.prototype.isEmpty = function() {};\nexport default _ol_render_ReplayGroup_;\n","/**\n * @enum {string}\n */\nvar _ol_render_ReplayType_ = {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\nexport default _ol_render_ReplayType_;\n","var _ol_geom_flat_length_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\n_ol_geom_flat_length_.lineString = function(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  var i;\n  for (i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\n_ol_geom_flat_length_.linearRing = function(flatCoordinates, offset, end, stride) {\n  var perimeter =\n      _ol_geom_flat_length_.lineString(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n};\nexport default _ol_geom_flat_length_;\n","import _ol_math_ from '../../math.js';\nvar _ol_geom_flat_textpath_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\n_ol_geom_flat_textpath_.lineString = function(\n    flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = _ol_math_.lerp(x1, x2, interpolate);\n    var y = _ol_math_.lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n};\nexport default _ol_geom_flat_textpath_;\n","/**\n * @enum {number}\n */\nvar _ol_render_canvas_Instruction_ = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\nexport default _ol_render_canvas_Instruction_;\n","import _ol_render_ReplayType_ from '../render/replaytype.js';\nvar _ol_render_replay_ = {};\n\n\n/**\n * @const\n * @type {Array.<ol.render.ReplayType>}\n */\n_ol_render_replay_.ORDER = [\n  _ol_render_ReplayType_.POLYGON,\n  _ol_render_ReplayType_.CIRCLE,\n  _ol_render_ReplayType_.LINE_STRING,\n  _ol_render_ReplayType_.IMAGE,\n  _ol_render_ReplayType_.TEXT,\n  _ol_render_ReplayType_.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\n_ol_render_replay_.TEXT_ALIGN = {};\n_ol_render_replay_.TEXT_ALIGN['left'] = 0;\n_ol_render_replay_.TEXT_ALIGN['end'] = 0;\n_ol_render_replay_.TEXT_ALIGN['center'] = 0.5;\n_ol_render_replay_.TEXT_ALIGN['right'] = 1;\n_ol_render_replay_.TEXT_ALIGN['start'] = 1;\n_ol_render_replay_.TEXT_ALIGN['top'] = 0;\n_ol_render_replay_.TEXT_ALIGN['middle'] = 0.5;\n_ol_render_replay_.TEXT_ALIGN['hanging'] = 0.2;\n_ol_render_replay_.TEXT_ALIGN['alphabetic'] = 0.8;\n_ol_render_replay_.TEXT_ALIGN['ideographic'] = 0.8;\n_ol_render_replay_.TEXT_ALIGN['bottom'] = 1;\nexport default _ol_render_replay_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_extent_Relationship_ from '../../extent/relationship.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_geom_flat_inflate_ from '../../geom/flat/inflate.js';\nimport _ol_geom_flat_length_ from '../../geom/flat/length.js';\nimport _ol_geom_flat_textpath_ from '../../geom/flat/textpath.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_Replay_ = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {ol.Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.fillOrigin_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {Object.<number,ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!ol.Transform}\n   */\n  this.renderedTransform_ = _ol_transform_.create();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {ol.CanvasFillStrokeState}\n   */\n  this.state = /** @type {ol.CanvasFillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n  /**\n   * @private\n   * @type {!ol.Transform}\n   */\n  this.tmpLocalTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {!ol.Transform}\n   */\n  this.resetTransform_ = _ol_transform_.create();\n};\n\n_ol_.inherits(_ol_render_canvas_Replay_, _ol_render_VectorContext_);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Coordinate} p1 1st point of the background box.\n * @param {ol.Coordinate} p2 2nd point of the background box.\n * @param {ol.Coordinate} p3 3rd point of the background box.\n * @param {ol.Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\n_ol_render_canvas_Replay_.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n    fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.fillOrigin_ = /** @type {Array.<number>} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {ol.DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\n_ol_render_canvas_Replay_.prototype.replayImage_ = function(context, x, y, image,\n    anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n    rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  var fillStroke = fillInstruction || strokeInstruction;\n  var localTransform = this.tmpLocalTransform_;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  var w = (width + originX > image.width) ? image.width - originX : width;\n  var h = (height + originY > image.height) ? image.height - originY : height;\n  var box = this.tmpExtent_;\n  var boxW = padding[3] + w * scale + padding[1];\n  var boxH = padding[0] + h * scale + padding[2];\n  var boxX = x - padding[3];\n  var boxY = y - padding[0];\n\n  /** @type {ol.Coordinate} */\n  var p1;\n  /** @type {ol.Coordinate} */\n  var p2;\n  /** @type {ol.Coordinate} */\n  var p3;\n  /** @type {ol.Coordinate} */\n  var p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  var transform = null;\n  if (rotation !== 0) {\n    var centerX = x + anchorX;\n    var centerY = y + anchorY;\n    transform = _ol_transform_.compose(localTransform,\n        centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    _ol_extent_.createOrUpdateEmpty(box);\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p1));\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p2));\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p3));\n    _ol_extent_.extendCoordinate(box, _ol_transform_.apply(localTransform, p4));\n  } else {\n    _ol_extent_.createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, box);\n  }\n  var canvas = context.canvas;\n  var intersects = box[0] <= canvas.width && box[2] >= 0 && box[1] <= canvas.height && box[3] >= 0;\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    _ol_extent_.extend(declutterGroup, box);\n    var declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array.<*>} */ (fillInstruction),\n          /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    _ol_render_canvas_.drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\n_ol_render_canvas_Replay_.prototype.applyPixelRatio = function(dashArray) {\n  var pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\n_ol_render_canvas_Replay_.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  var myEnd = this.coordinates.length;\n  var extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var nextCoord = [NaN, NaN];\n  var skipped = true;\n\n  var i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = _ol_extent_.coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === _ol_extent_Relationship_.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\n_ol_render_canvas_Replay_.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\n_ol_render_canvas_Replay_.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  var type = geometry.getType();\n  var stride = geometry.getStride();\n  var replayBegin = this.coordinates.length;\n  var flatCoordinates, replayEnd, replayEnds, replayEndss;\n  var offset;\n  if (type == _ol_geom_GeometryType_.MULTI_POLYGON) {\n    geometry = /** @type {ol.geom.MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    var endss = geometry.getEndss();\n    offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, _ol_geom_flat_inflate_.coordinatesss]);\n  } else if (type == _ol_geom_GeometryType_.POLYGON || type == _ol_geom_GeometryType_.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == _ol_geom_GeometryType_.POLYGON) ?\n      /** @type {ol.geom.Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {ol.geom.Polygon|ol.geom.MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, _ol_geom_flat_inflate_.coordinatess]);\n  } else if (type == _ol_geom_GeometryType_.LINE_STRING || type == _ol_geom_GeometryType_.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, _ol_geom_flat_inflate_.coordinates]);\n  } else if (type == _ol_geom_GeometryType_.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([_ol_render_canvas_Instruction_.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_canvas_Replay_.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ =\n      [_ol_render_canvas_Instruction_.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ =\n      [_ol_render_canvas_Instruction_.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\n_ol_render_canvas_Replay_.prototype.fill_ = function(context) {\n  if (this.fillOrigin_) {\n    var origin = _ol_transform_.apply(this.renderedTransform_, this.fillOrigin_.slice());\n    context.translate(origin[0], origin[1]);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.fillOrigin_) {\n    context.setTransform.apply(context, _ol_render_canvas_.resetTransform_);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\n_ol_render_canvas_Replay_.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {ol.ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (_ol_has_.CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {ol.DeclutterGroup} declutterGroup Declutter group.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_canvas_Replay_.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    var groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {ol.RBushEntry} */\n      var box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        var drawImage = _ol_render_canvas_.drawImage;\n        for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          var declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      _ol_extent_.createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {ol.Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_canvas_Replay_.prototype.replay_ = function(\n    context, transform, skippedFeaturesHash,\n    instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  var pixelCoordinates;\n  if (this.pixelCoordinates_ && _ol_array_.equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n    _ol_transform_.setFromArray(this.renderedTransform_, transform);\n  }\n  var skipFeatures = !_ol_obj_.isEmpty(skippedFeaturesHash);\n  var i = 0; // instruction index\n  var ii = instructions.length; // end of instructions\n  var d = 0; // data index\n  var dd; // end of per-instruction data\n  var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  var pendingFill = 0;\n  var pendingStroke = 0;\n  var lastFillInstruction = null;\n  var lastStrokeInstruction = null;\n  var coordinateCache = this.coordinateCache_;\n  var viewRotation = this.viewRotation_;\n\n  var state = /** @type {olx.render.State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  var batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n  while (i < ii) {\n    var instruction = instructions[i];\n    var type = /** @type {ol.render.canvas.Instruction} */ (instruction[0]);\n    var /** @type {ol.Feature|ol.render.Feature} */ feature, x, y;\n    switch (type) {\n      case _ol_render_canvas_Instruction_.BEGIN_GEOMETRY:\n        feature = /** @type {ol.Feature|ol.render.Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[_ol_.getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !_ol_extent_.intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case _ol_render_canvas_Instruction_.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        var x1 = pixelCoordinates[d];\n        var y1 = pixelCoordinates[d + 1];\n        var x2 = pixelCoordinates[d + 2];\n        var y2 = pixelCoordinates[d + 3];\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        var geometry = /** @type {ol.geom.SimpleGeometry} */ (instruction[3]);\n        var renderer = instruction[4];\n        var fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        var coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {ol.DeclutterGroup} */ (instruction[6]);\n        var height = /** @type {number} */ (instruction[7]);\n        var opacity = /** @type {number} */ (instruction[8]);\n        var originX = /** @type {number} */ (instruction[9]);\n        var originY = /** @type {number} */ (instruction[10]);\n        var rotateWithView = /** @type {boolean} */ (instruction[11]);\n        var rotation = /** @type {number} */ (instruction[12]);\n        var scale = /** @type {number} */ (instruction[13]);\n        var snapToPixel = /** @type {boolean} */ (instruction[14]);\n        var width = /** @type {number} */ (instruction[15]);\n\n        var padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = _ol_render_canvas_.defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.DRAW_CHARS:\n        var begin = /** @type {number} */ (instruction[1]);\n        var end = /** @type {number} */ (instruction[2]);\n        var baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {ol.DeclutterGroup} */ (instruction[4]);\n        var overflow = /** @type {number} */ (instruction[5]);\n        var fillKey = /** @type {string} */ (instruction[6]);\n        var maxAngle = /** @type {number} */ (instruction[7]);\n        var measure = /** @type {function(string):number} */ (instruction[8]);\n        var offsetY = /** @type {number} */ (instruction[9]);\n        var strokeKey = /** @type {string} */ (instruction[10]);\n        var strokeWidth =  /** @type {number} */ (instruction[11]);\n        var text = /** @type {string} */ (instruction[12]);\n        var textKey = /** @type {string} */ (instruction[13]);\n        var textScale = /** @type {number} */ (instruction[14]);\n\n        var pathLength = _ol_geom_flat_length_.lineString(pixelCoordinates, begin, end, 2);\n        var textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          var textAlign = /** @type {ol.render.canvas.TextReplay} */ (this).textStates[textKey].textAlign;\n          var startM = (pathLength - textLength) * _ol_render_replay_.TEXT_ALIGN[textAlign];\n          var parts = _ol_geom_flat_textpath_.lineString(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            var c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {ol.render.canvas.TextReplay} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    _ol_render_canvas_.defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {ol.render.canvas.TextReplay} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    _ol_render_canvas_.defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {ol.Feature|ol.render.Feature} */ (instruction[1]);\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.fillOrigin_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {ol.ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case _ol_render_canvas_Instruction_.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\n_ol_render_canvas_Replay_.prototype.replay = function(\n    context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {ol.Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_canvas_Replay_.prototype.replayHitDetection = function(\n    context, transform, viewRotation, skippedFeaturesHash,\n    opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\n_ol_render_canvas_Replay_.prototype.reverseHitDetectionInstructions = function() {\n  var hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  var i;\n  var n = hitDetectionInstructions.length;\n  var instruction;\n  var type;\n  var begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {ol.render.canvas.Instruction} */ (instruction[0]);\n    if (type == _ol_render_canvas_Instruction_.END_GEOMETRY) {\n      begin = i;\n    } else if (type == _ol_render_canvas_Instruction_.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      _ol_array_.reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_Replay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var state = this.state;\n  if (fillStyle) {\n    var fillStyleColor = fillStyle.getColor();\n    state.fillStyle = _ol_colorlike_.asColorLike(fillStyleColor ?\n      fillStyleColor : _ol_render_canvas_.defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    var strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = _ol_colorlike_.asColorLike(strokeStyleColor ?\n      strokeStyleColor : _ol_render_canvas_.defaultStrokeStyle);\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : _ol_render_canvas_.defaultLineCap;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : _ol_render_canvas_.defaultLineDash;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin;\n    var strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : _ol_render_canvas_.defaultLineWidth;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n */\n_ol_render_canvas_Replay_.prototype.applyFill = function(state, geometry) {\n  var fillStyle = state.fillStyle;\n  var fillInstruction = [_ol_render_canvas_Instruction_.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    var fillExtent = geometry.getExtent();\n    fillInstruction.push([fillExtent[0], fillExtent[3]]);\n  }\n  this.instructions.push(fillInstruction);\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n */\n_ol_render_canvas_Replay_.prototype.applyStroke = function(state) {\n  this.instructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ]);\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n * @param {function(this:ol.render.canvas.Replay, ol.CanvasFillStrokeState, (ol.geom.Geometry|ol.render.Feature))} applyFill Apply fill.\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n */\n_ol_render_canvas_Replay_.prototype.updateFillStyle = function(state, applyFill, geometry) {\n  var fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    applyFill.call(this, state, geometry);\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {ol.CanvasFillStrokeState} state State.\n * @param {function(this:ol.render.canvas.Replay, ol.CanvasFillStrokeState)} applyStroke Apply stroke.\n */\n_ol_render_canvas_Replay_.prototype.updateStrokeStyle = function(state, applyStroke) {\n  var strokeStyle = state.strokeStyle;\n  var lineCap = state.lineCap;\n  var lineDash = state.lineDash;\n  var lineDashOffset = state.lineDashOffset;\n  var lineJoin = state.lineJoin;\n  var lineWidth = state.lineWidth;\n  var miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !_ol_array_.equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    applyStroke.call(this, state);\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n */\n_ol_render_canvas_Replay_.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  var endGeometryInstruction =\n      [_ol_render_canvas_Instruction_.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_render_canvas_Replay_.prototype.finish = _ol_.nullFunction;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {ol.Extent} The buffered rendering extent.\n * @protected\n */\n_ol_render_canvas_Replay_.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = _ol_extent_.clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      var width = this.resolution * (this.maxLineWidth + 1) / 2;\n      _ol_extent_.buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default _ol_render_canvas_Replay_;\n","import _ol_ from '../../index.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_ImageReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {ol.DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\n_ol_.inherits(_ol_render_canvas_ImageReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\n_ol_render_canvas_ImageReplay_.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  var flatCoordinates = pointGeometry.getFlatCoordinates();\n  var stride = pointGeometry.getStride();\n  var myBegin = this.coordinates.length;\n  var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd,\n    this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  var stride = multiPointGeometry.getStride();\n  var myBegin = this.coordinates.length;\n  var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.DRAW_IMAGE, myBegin, myEnd,\n    this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ImageReplay_.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  var anchor = imageStyle.getAnchor();\n  var size = imageStyle.getSize();\n  var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  var image = imageStyle.getImage(1);\n  var origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {ol.DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default _ol_render_canvas_ImageReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_LineStringReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\n_ol_.inherits(_ol_render_canvas_LineStringReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  var myBegin = this.coordinates.length;\n  var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n  var moveToLineToInstruction =\n      [_ol_render_canvas_Instruction_.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawLineString = function(lineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], [\n    _ol_render_canvas_Instruction_.BEGIN_PATH\n  ]);\n  var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  var stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], [\n    _ol_render_canvas_Instruction_.BEGIN_PATH\n  ]);\n  var ends = multiLineStringGeometry.getEnds();\n  var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  var stride = multiLineStringGeometry.getStride();\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(\n        flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.finish = function() {\n  var state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\n_ol_render_canvas_LineStringReplay_.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  _ol_render_canvas_Replay_.prototype.applyStroke.call(this, state);\n  this.instructions.push([_ol_render_canvas_Instruction_.BEGIN_PATH]);\n};\nexport default _ol_render_canvas_LineStringReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_geom_flat_simplify_ from '../../geom/flat/simplify.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_PolygonReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\n_ol_.inherits(_ol_render_canvas_PolygonReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  var state = this.state;\n  var fill = state.fillStyle !== undefined;\n  var stroke = state.strokeStyle != undefined;\n  var numEnds = ends.length;\n  var beginPathInstruction = [_ol_render_canvas_Instruction_.BEGIN_PATH];\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (var i = 0; i < numEnds; ++i) {\n    var end = ends[i];\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n        flatCoordinates, offset, end, stride, true, !stroke);\n    var moveToLineToInstruction =\n        [_ol_render_canvas_Instruction_.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      var closePathInstruction = [_ol_render_canvas_Instruction_.CLOSE_PATH];\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  var fillInstruction = [_ol_render_canvas_Instruction_.FILL];\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (fill) {\n    this.instructions.push(fillInstruction);\n  }\n  if (stroke) {\n    var strokeInstruction = [_ol_render_canvas_Instruction_.STROKE];\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawCircle = function(circleGeometry, feature) {\n  var state = this.state;\n  var fillStyle = state.fillStyle;\n  var strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  // always fill the circle for hit detection\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_FILL_STYLE,\n    _ol_color_.asString(_ol_render_canvas_.defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  var flatCoordinates = circleGeometry.getFlatCoordinates();\n  var stride = circleGeometry.getStride();\n  var myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  var beginPathInstruction = [_ol_render_canvas_Instruction_.BEGIN_PATH];\n  var circleInstruction = [_ol_render_canvas_Instruction_.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  var fillInstruction = [_ol_render_canvas_Instruction_.FILL];\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    var strokeInstruction = [_ol_render_canvas_Instruction_.STROKE];\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawPolygon = function(polygonGeometry, feature) {\n  var state = this.state;\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  // always fill the polygon for hit detection\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_FILL_STYLE,\n    _ol_color_.asString(_ol_render_canvas_.defaultFillStyle)]\n  );\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  var ends = polygonGeometry.getEnds();\n  var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  var stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  var state = this.state;\n  var fillStyle = state.fillStyle;\n  var strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  // always fill the multi-polygon for hit detection\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_FILL_STYLE,\n    _ol_color_.asString(_ol_render_canvas_.defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  var endss = multiPolygonGeometry.getEndss();\n  var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  var stride = multiPolygonGeometry.getStride();\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(\n        flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_PolygonReplay_.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  var tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    var coordinates = this.coordinates;\n    var i, ii;\n    for (i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = _ol_geom_flat_simplify_.snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n */\n_ol_render_canvas_PolygonReplay_.prototype.setFillStrokeStyles_ = function(geometry) {\n  var state = this.state;\n  var fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.applyFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default _ol_render_canvas_PolygonReplay_;\n","var _ol_geom_flat_straightchunk_ = {};\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\n_ol_geom_flat_straightchunk_.lineString = function(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n};\nexport default _ol_geom_flat_straightchunk_;\n","/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link ol.geom.LineString},\n * {@link ol.geom.Polygon}, {@link ol.geom.MultiLineString} or\n * {@link ol.geom.MultiPolygon}.\n * @enum {string}\n */\nvar _ol_style_TextPlacement_ = {\n  POINT: 'point',\n  LINE: 'line'\n};\n\nexport default _ol_style_TextPlacement_;\n","import _ol_ from '../../index.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_straightchunk_ from '../../geom/flat/straightchunk.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_style_TextPlacement_ from '../../style/textplacement.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_TextReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {ol.DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {Object.<string, ol.CanvasFillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {Object.<string, ol.CanvasStrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {ol.CanvasTextState}\n   */\n  this.textState_ = /** @type {ol.CanvasTextState} */ ({});\n\n  /**\n   * @type {Object.<string, ol.CanvasTextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  var labelCache = _ol_render_canvas_.labelCache;\n  labelCache.prune();\n\n};\n\n_ol_.inherits(_ol_render_canvas_TextReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\n_ol_render_canvas_TextReplay_.measureTextWidths = function(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  var currentWidth, i;\n  for (i = 0; i < numLines; ++i) {\n    currentWidth = _ol_render_canvas_.measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_TextReplay_.prototype.drawText = function(geometry, feature) {\n  var fillState = this.textFillState_;\n  var strokeState = this.textStrokeState_;\n  var textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  var begin = this.coordinates.length;\n\n  var geometryType = geometry.getType();\n  var flatCoordinates = null;\n  var end = 2;\n  var stride = 2;\n  var i, ii;\n\n  if (textState.placement === _ol_style_TextPlacement_.LINE) {\n    if (!_ol_extent_.intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    var ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == _ol_geom_GeometryType_.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == _ol_geom_GeometryType_.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == _ol_geom_GeometryType_.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == _ol_geom_GeometryType_.MULTI_POLYGON) {\n      var endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    var textAlign = textState.textAlign;\n    var flatOffset = 0;\n    var flatEnd;\n    for (var o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        var range = _ol_geom_flat_straightchunk_.lineString(\n            textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    var width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case _ol_geom_GeometryType_.POINT:\n      case _ol_geom_GeometryType_.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case _ol_geom_GeometryType_.LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case _ol_geom_GeometryType_.CIRCLE:\n        flatCoordinates = /** @type {ol.geom.Circle} */ (geometry).getCenter();\n        break;\n      case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case _ol_geom_GeometryType_.POLYGON:\n        flatCoordinates = /** @type {ol.geom.Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case _ol_geom_GeometryType_.MULTI_POLYGON:\n        var interiorPoints = /** @type {ol.geom.MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    this.beginGeometry(geometry, feature);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      this.updateFillStyle(this.state, this.applyFill, geometry);\n      this.updateStrokeStyle(this.state, this.applyStroke);\n    }\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\n_ol_render_canvas_TextReplay_.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  var label;\n  var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  var labelCache = _ol_render_canvas_.labelCache;\n  if (!labelCache.containsKey(key)) {\n    var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    var textState = this.textStates[textKey] || this.textState_;\n    var pixelRatio = this.pixelRatio;\n    var scale = textState.scale * pixelRatio;\n    var align =  _ol_render_replay_.TEXT_ALIGN[textState.textAlign || _ol_render_canvas_.defaultTextAlign];\n    var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var lines = text.split('\\n');\n    var numLines = lines.length;\n    var widths = [];\n    var width = _ol_render_canvas_TextReplay_.measureTextWidths(textState.font, lines, widths);\n    var lineHeight = _ol_render_canvas_.measureTextHeight(textState.font);\n    var height = lineHeight * numLines;\n    var renderWidth = (width + strokeWidth);\n    var context = _ol_dom_.createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth * (_ol_has_.SAFARI ? scale : 1);\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (_ol_has_.CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    var leftRight = (0.5 - align);\n    var x = align * label.width / scale + leftRight * strokeWidth;\n    var i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\n_ol_render_canvas_TextReplay_.prototype.drawTextImage_ = function(label, begin, end) {\n  var textState = this.textState_;\n  var strokeState = this.textStrokeState_;\n  var pixelRatio = this.pixelRatio;\n  var align = _ol_render_replay_.TEXT_ALIGN[textState.textAlign || _ol_render_canvas_.defaultTextAlign];\n  var baseline = _ol_render_replay_.TEXT_ALIGN[textState.textBaseline];\n  var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([_ol_render_canvas_Instruction_.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == _ol_render_canvas_.defaultPadding ?\n      _ol_render_canvas_.defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {ol.DeclutterGroup} declutterGroup Declutter group.\n */\n_ol_render_canvas_TextReplay_.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  var strokeState = this.textStrokeState_;\n  var textState = this.textState_;\n  var fillState = this.textFillState_;\n\n  var strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {ol.CanvasStrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  var textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {ol.CanvasTextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || _ol_render_canvas_.defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  var fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {ol.CanvasFillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  var pixelRatio = this.pixelRatio;\n  var baseline = _ol_render_replay_.TEXT_ALIGN[textState.textBaseline];\n\n  var offsetY = this.textOffsetY_ * pixelRatio;\n  var text = this.text_;\n  var font = textState.font;\n  var textScale = textState.scale;\n  var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  var widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([_ol_render_canvas_Instruction_.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      var width = widths[text];\n      if (!width) {\n        width = widths[text] = _ol_render_canvas_.measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      var width = widths[text];\n      if (!width) {\n        width = widths[text] = _ol_render_canvas_.measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_TextReplay_.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  var textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {ol.DeclutterGroup} */ (declutterGroup);\n\n    var textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {ol.CanvasFillState} */ ({});\n      }\n      fillState.fillStyle = _ol_colorlike_.asColorLike(\n          textFillStyle.getColor() || _ol_render_canvas_.defaultFillStyle);\n    }\n\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {ol.CanvasStrokeState} */ ({});\n      }\n      var lineDash = textStrokeStyle.getLineDash();\n      var lineDashOffset = textStrokeStyle.getLineDashOffset();\n      var lineWidth = textStrokeStyle.getWidth();\n      var miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || _ol_render_canvas_.defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : _ol_render_canvas_.defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? _ol_render_canvas_.defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || _ol_render_canvas_.defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? _ol_render_canvas_.defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? _ol_render_canvas_.defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = _ol_colorlike_.asColorLike(\n          textStrokeStyle.getColor() || _ol_render_canvas_.defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    var font = textStyle.getFont() || _ol_render_canvas_.defaultFont;\n    _ol_render_canvas_.checkFont(font);\n    var textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || _ol_render_canvas_.defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || _ol_render_canvas_.defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    var textOffsetX = textStyle.getOffsetX();\n    var textOffsetY = textStyle.getOffsetY();\n    var textRotateWithView = textStyle.getRotateWithView();\n    var textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : _ol_.getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + _ol_.getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default _ol_render_canvas_TextReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_ReplayGroup_ from '../replaygroup.js';\nimport _ol_render_ReplayType_ from '../replaytype.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\nimport _ol_render_canvas_ImageReplay_ from '../canvas/imagereplay.js';\nimport _ol_render_canvas_LineStringReplay_ from '../canvas/linestringreplay.js';\nimport _ol_render_canvas_PolygonReplay_ from '../canvas/polygonreplay.js';\nimport _ol_render_canvas_TextReplay_ from '../canvas/textreplay.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.render.ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nvar _ol_render_canvas_ReplayGroup_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  _ol_render_ReplayGroup_.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {ol.DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<ol.render.ReplayType, ol.render.canvas.Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.hitDetectionTransform_ = _ol_transform_.create();\n};\n\n_ol_.inherits(_ol_render_canvas_ReplayGroup_, _ol_render_ReplayGroup_);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n * @private\n */\n_ol_render_canvas_ReplayGroup_.circleArrayCache_ = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @private\n */\n_ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_ = function(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n};\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n * @private\n */\n_ol_render_canvas_ReplayGroup_.getCircleArray_ = function(radius) {\n  if (_ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] !== undefined) {\n    return _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius + y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius + x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius + x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius + y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius - y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius - x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius - x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] = arr;\n  return arr;\n};\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\n_ol_render_canvas_ReplayGroup_.replayDeclutter = function(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(_ol_array_.numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n};\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {ol.DeclutterGroup} Declutter instruction group.\n */\n_ol_render_canvas_ReplayGroup_.prototype.addDeclutter = function(group) {\n  var declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = _ol_extent_.createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n */\n_ol_render_canvas_ReplayGroup_.prototype.clip = function(context, transform) {\n  var flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<ol.render.ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\n_ol_render_canvas_ReplayGroup_.prototype.hasReplays = function(replays) {\n  for (var zIndex in this.replaysByZIndex_) {\n    var candidates = this.replaysByZIndex_[zIndex];\n    for (var i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.finish = function() {\n  var zKey;\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n    for (replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T} callback Feature\n *     callback.\n * @param {Object.<string, ol.DeclutterGroup>} declutterReplays Declutter\n *     replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_canvas_ReplayGroup_.prototype.forEachFeatureAtCoordinate = function(\n    coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  var contextSize = hitTolerance * 2 + 1;\n  var transform = _ol_transform_.compose(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n  var context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {ol.Extent}\n   */\n  var hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = _ol_extent_.createEmpty();\n    _ol_extent_.extendCoordinate(hitExtent, coordinate);\n    _ol_extent_.buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  var mask = _ol_render_canvas_ReplayGroup_.getCircleArray_(hitTolerance);\n  var declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  var replayType;\n\n  /**\n   * @param {ol.Feature|ol.render.Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (var i = 0; i < contextSize; i++) {\n      for (var j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            var result;\n            if (!(declutteredFeatures && (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  var i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = _ol_render_replay_.ORDER.length - 1; j >= 0; --j) {\n      replayType = _ol_render_replay_.ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\n_ol_render_canvas_ReplayGroup_.prototype.getClipCoords = function(transform) {\n  var maxExtent = this.maxExtent_;\n  var minX = maxExtent[0];\n  var minY = maxExtent[1];\n  var maxX = maxExtent[2];\n  var maxY = maxExtent[3];\n  var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  _ol_geom_flat_transform_.transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.getReplay = function(zIndex, replayType) {\n  var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  var replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  var replay = replays[replayType];\n  if (replay === undefined) {\n    var Constructor = _ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<ol.render.ReplayType, ol.render.canvas.Replay>>} Replays.\n */\n_ol_render_canvas_ReplayGroup_.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.isEmpty = function() {\n  return _ol_obj_.isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<ol.render.ReplayType>=} opt_replayTypes Ordered replay types\n *     to replay. Default is {@link ol.render.replay.ORDER}\n * @param {Object.<string, ol.DeclutterGroup>=} opt_declutterReplays Declutter\n *     replays.\n */\n_ol_render_canvas_ReplayGroup_.prototype.replay = function(context,\n    transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  var replayTypes = opt_replayTypes ? opt_replayTypes : _ol_render_replay_.ORDER;\n  var i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      var replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<ol.render.ReplayType,\n *                function(new: ol.render.canvas.Replay, number, ol.Extent,\n *                number, number, boolean, Array.<ol.DeclutterGroup>)>}\n */\n_ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_ = {\n  'Circle': _ol_render_canvas_PolygonReplay_,\n  'Default': _ol_render_canvas_Replay_,\n  'Image': _ol_render_canvas_ImageReplay_,\n  'LineString': _ol_render_canvas_LineStringReplay_,\n  'Polygon': _ol_render_canvas_PolygonReplay_,\n  'Text': _ol_render_canvas_TextReplay_\n};\nexport default _ol_render_canvas_ReplayGroup_;\n","import _ol_ from '../index.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_render_ReplayType_ from '../render/replaytype.js';\nvar _ol_renderer_vector_ = {};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature1 Feature 1.\n * @param {ol.Feature|ol.render.Feature} feature2 Feature 2.\n * @return {number} Order.\n */\n_ol_renderer_vector_.defaultOrder = function(feature1, feature2) {\n  return _ol_.getUid(feature1) - _ol_.getUid(feature2);\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\n_ol_renderer_vector_.getSquaredTolerance = function(resolution, pixelRatio) {\n  var tolerance = _ol_renderer_vector_.getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\n_ol_renderer_vector_.getTolerance = function(resolution, pixelRatio) {\n  return _ol_.SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Circle} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderCircleGeometry_ = function(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\n_ol_renderer_vector_.renderFeature = function(\n    replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle, imageState;\n  imageStyle = style.getImage();\n  if (imageStyle) {\n    imageState = imageStyle.getImageState();\n    if (imageState == _ol_ImageState_.LOADED ||\n        imageState == _ol_ImageState_.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == _ol_ImageState_.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  _ol_renderer_vector_.renderFeature_(replayGroup, feature, style,\n      squaredTolerance);\n\n  return loading;\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\n_ol_renderer_vector_.renderFeature_ = function(\n    replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    _ol_renderer_vector_.renderGeometry_(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer =\n        _ol_renderer_vector_.GEOMETRY_RENDERERS_[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderGeometry_ = function(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == _ol_geom_GeometryType_.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      _ol_renderer_vector_.renderGeometry_(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), _ol_render_ReplayType_.DEFAULT);\n  replay.drawCustom(/** @type {ol.geom.SimpleGeometry} */ (geometry), feature, style.getRenderer());\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderGeometryCollectionGeometry_ = function(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        _ol_renderer_vector_.GEOMETRY_RENDERERS_[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.LineString|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderLineStringGeometry_ = function(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.MultiLineString|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderMultiLineStringGeometry_ = function(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderMultiPolygonGeometry_ = function(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Point|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderPointGeometry_ = function(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != _ol_ImageState_.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.MultiPoint|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderMultiPointGeometry_ = function(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != _ol_ImageState_.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @param {ol.render.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Polygon|ol.render.Feature} geometry Geometry.\n * @param {ol.style.Style} style Style.\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @private\n */\n_ol_renderer_vector_.renderPolygonGeometry_ = function(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(\n        style.getZIndex(), _ol_render_ReplayType_.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<ol.geom.GeometryType,\n *                function(ol.render.ReplayGroup, ol.geom.Geometry,\n *                         ol.style.Style, Object)>}\n */\n_ol_renderer_vector_.GEOMETRY_RENDERERS_ = {\n  'Point': _ol_renderer_vector_.renderPointGeometry_,\n  'LineString': _ol_renderer_vector_.renderLineStringGeometry_,\n  'Polygon': _ol_renderer_vector_.renderPolygonGeometry_,\n  'MultiPoint': _ol_renderer_vector_.renderMultiPointGeometry_,\n  'MultiLineString': _ol_renderer_vector_.renderMultiLineStringGeometry_,\n  'MultiPolygon': _ol_renderer_vector_.renderMultiPolygonGeometry_,\n  'GeometryCollection': _ol_renderer_vector_.renderGeometryCollectionGeometry_,\n  'Circle': _ol_renderer_vector_.renderCircleGeometry_\n};\nexport default _ol_renderer_vector_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_Layer_ from '../canvas/layer.js';\nimport _ol_renderer_vector_ from '../vector.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.Layer}\n * @param {ol.layer.Vector} vectorLayer Vector layer.\n * @api\n */\nvar _ol_renderer_canvas_VectorLayer_ = function(vectorLayer) {\n\n  _ol_renderer_canvas_Layer_.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ?\n    _ol_ext_rbush_(9) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedExtent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {function(ol.Feature, ol.Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {ol.render.canvas.ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = _ol_dom_.createCanvasContext2D();\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorLayer_, _ol_renderer_canvas_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_VectorLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorLayer} The layer renderer.\n */\n_ol_renderer_canvas_VectorLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorLayer_(/** @type {ol.layer.Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.disposeInternal = function() {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n  _ol_renderer_canvas_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.composeFrame = function(frameState, layerState, context) {\n\n  var extent = frameState.extent;\n  var pixelRatio = frameState.pixelRatio;\n  var skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var rotation = viewState.rotation;\n  var projectionExtent = projection.getExtent();\n  var vectorSource = /** @type {ol.source.Vector} */ (this.getLayer().getSource());\n\n  var transform = this.getTransform(frameState, 0);\n\n  this.preCompose(context, frameState, transform);\n\n  // clipped rendering if layer extent is set\n  var clipExtent = layerState.extent;\n  var clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {ol.Extent} */ (clipExtent));\n  }\n  var replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    var layer = /** @type {ol.layer.Vector} */ (this.getLayer());\n    var drawOffsetX = 0;\n    var drawOffsetY = 0;\n    var replayContext;\n    var transparentLayer = layerState.opacity !== 1;\n    var hasRenderListeners = layer.hasListener(_ol_render_EventType_.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      var drawWidth = context.canvas.width;\n      var drawHeight = context.canvas.height;\n      if (rotation) {\n        var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    var alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    _ol_render_canvas_.rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !_ol_extent_.containsExtent(projectionExtent, extent)) {\n      var startX = extent[0];\n      var worldWidth = _ol_extent_.getWidth(projectionExtent);\n      var world = 0;\n      var offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n      // restore original transform for render and compose events\n      transform = this.getTransform(frameState, 0);\n    }\n    _ol_render_canvas_.rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        var mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n  this.postCompose(context, frameState, layerState, transform);\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var layer = /** @type {ol.layer.Vector} */ (this.getLayer());\n    /** @type {Object.<string, boolean>} */\n    var features = {};\n    var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution,\n        rotation, hitTolerance, {},\n        /**\n         * @param {ol.Feature|ol.render.Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = _ol_.getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n */\n_ol_renderer_canvas_VectorLayer_.prototype.handleFontsChanged_ = function(event) {\n  var layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_canvas_VectorLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.prepareFrame = function(frameState, layerState) {\n\n  var vectorLayer = /** @type {ol.layer.Vector} */ (this.getLayer());\n  var vectorSource = vectorLayer.getSource();\n\n  this.updateLogos(frameState, vectorSource);\n\n  var animating = frameState.viewHints[_ol_ViewHint_.ANIMATING];\n  var interacting = frameState.viewHints[_ol_ViewHint_.INTERACTING];\n  var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  var frameStateExtent = frameState.extent;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var vectorLayerRevision = vectorLayer.getRevision();\n  var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = _ol_renderer_vector_.defaultOrder;\n  }\n\n  var extent = _ol_extent_.buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n  var projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !_ol_extent_.containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n    var buffer = Math.max(_ol_extent_.getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - buffer;\n    extent[2] = projectionExtent[2] + buffer;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      _ol_extent_.containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  var replayGroup = new _ol_render_canvas_ReplayGroup_(\n      _ol_renderer_vector_.getTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {ol.Feature} feature Feature.\n   * @this {ol.renderer.canvas.VectorLayer}\n   */\n  var renderFeature = function(feature) {\n    var styles;\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction.call(feature, resolution);\n    } else {\n      styleFunction = vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n    }\n    if (styles) {\n      var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<ol.Feature>} */\n    var features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {ol.Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      renderFeature(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, renderFeature, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_canvas_VectorLayer_.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i],\n          _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles,\n        _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default _ol_renderer_canvas_VectorLayer_;\n","/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nvar _ol_layer_VectorTileRenderType_ = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\nexport default _ol_layer_VectorTileRenderType_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_layer_VectorTileRenderType_ from '../../layer/vectortilerendertype.js';\nimport _ol_proj_ from '../../proj.js';\nimport _ol_proj_Units_ from '../../proj/units.js';\nimport _ol_render_ReplayType_ from '../../render/replaytype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_render_replay_ from '../../render/replay.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_TileLayer_ from '../canvas/tilelayer.js';\nimport _ol_renderer_vector_ from '../vector.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.TileLayer}\n * @param {ol.layer.VectorTile} layer VectorTile layer.\n * @api\n */\nvar _ol_renderer_canvas_VectorTileLayer_ = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  _ol_renderer_canvas_TileLayer_.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n     */\n  this.declutterTree_ = layer.getDeclutter() ? _ol_ext_rbush_(9) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpTransform_ = _ol_transform_.create();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection =\n      layer.getRenderMode() == _ol_layer_VectorTileRenderType_.VECTOR ? 1 : 0;\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorTileLayer_, _ol_renderer_canvas_TileLayer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_VectorTileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorTileLayer} The layer renderer.\n */\n_ol_renderer_canvas_VectorTileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorTileLayer_(/** @type {ol.layer.VectorTile} */ (layer));\n};\n\n\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n_ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS = {\n  'image': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.CIRCLE,\n    _ol_render_ReplayType_.LINE_STRING, _ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT],\n  'hybrid': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.LINE_STRING]\n};\n\n\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n_ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS = {\n  'image': [_ol_render_ReplayType_.DEFAULT],\n  'hybrid': [_ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT, _ol_render_ReplayType_.DEFAULT],\n  'vector': _ol_render_replay_.ORDER\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.disposeInternal = function() {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n  _ol_renderer_canvas_TileLayer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.prepareFrame = function(frameState, layerState) {\n  var layer = this.getLayer();\n  var layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    var renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = _ol_dom_.createCanvasContext2D();\n    }\n    if (this.context && renderMode == _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return _ol_renderer_canvas_TileLayer_.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.createReplayGroup_ = function(\n    tile, frameState) {\n  var layer = this.getLayer();\n  var pixelRatio = frameState.pixelRatio;\n  var projection = frameState.viewState.projection;\n  var revision = layer.getRevision();\n  var renderOrder = /** @type {ol.RenderOrderFunction} */\n      (layer.getRenderOrder()) || null;\n\n  var replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var sourceTileGrid = source.getTileGrid();\n  var tileGrid = source.getTileGridForProjection(projection);\n  var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n  var zIndexKeys = {};\n  for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    var sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() == _ol_TileState_.ERROR) {\n      continue;\n    }\n\n    var sourceTileCoord = sourceTile.tileCoord;\n    var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    var sharedExtent = _ol_extent_.getIntersection(tileExtent, sourceTileExtent);\n    var bufferedExtent = _ol_extent_.equals(sourceTileExtent, sharedExtent) ? null :\n      _ol_extent_.buffer(sharedExtent, layer.getRenderBuffer() * resolution);\n    var tileProjection = sourceTile.getProjection();\n    var reproject = false;\n    if (!_ol_proj_.equivalent(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    var replayGroup = new _ol_render_canvas_ReplayGroup_(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    var squaredTolerance = _ol_renderer_vector_.getSquaredTolerance(\n        resolution, pixelRatio);\n\n    /**\n     * @param {ol.Feature|ol.render.Feature} feature Feature.\n     * @this {ol.renderer.canvas.VectorTileLayer}\n     */\n    var renderFeature = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction.call(/** @type {ol.Feature} */ (feature), resolution);\n      } else {\n        styleFunction = layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n      }\n      if (styles) {\n        var dirty = this.renderFeature(feature, squaredTolerance, styles,\n            replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    var features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    var feature;\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == _ol_proj_Units_.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || _ol_extent_.intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        renderFeature.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (var r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.drawTileImage = function(\n    tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  var vectorImageTile = /** @type {ol.VectorImageTile} */ (tile);\n  this.createReplayGroup_(vectorImageTile, frameState);\n  if (this.context) {\n    this.renderTileImage_(vectorImageTile, frameState, layerState);\n    _ol_renderer_canvas_TileLayer_.prototype.drawTileImage.apply(this, arguments);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  var layer = this.getLayer();\n  /** @type {Object.<string, boolean>} */\n  var features = {};\n\n  /** @type {Array.<ol.VectorImageTile>} */\n  var renderedTiles = this.renderedTiles;\n\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var bufferedExtent, found;\n  var i, ii, replayGroup;\n  var tile, tileCoord, tileExtent;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    tile = renderedTiles[i];\n    tileCoord = tile.wrappedTileCoord;\n    tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    bufferedExtent = _ol_extent_.buffer(tileExtent, hitTolerance * resolution, bufferedExtent);\n    if (!_ol_extent_.containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(\n          coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {ol.Feature|ol.render.Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = _ol_.getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {ol.VectorTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @return {ol.Transform} transform Transform.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.getReplayTransform_ = function(tile, frameState) {\n  var layer = this.getLayer();\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var tileGrid = source.getTileGrid();\n  var tileCoord = tile.tileCoord;\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var viewState = frameState.viewState;\n  var pixelRatio = frameState.pixelRatio;\n  var renderResolution = viewState.resolution / pixelRatio;\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  var center = viewState.center;\n  var origin = _ol_extent_.getTopLeft(tileExtent);\n  var size = frameState.size;\n  var offsetX = Math.round(pixelRatio * size[0] / 2);\n  var offsetY = Math.round(pixelRatio * size[1] / 2);\n  return _ol_transform_.compose(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleFontsChanged_ = function(event) {\n  var layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.postCompose = function(context, frameState, layerState) {\n  var layer = this.getLayer();\n  var declutterReplays = layer.getDeclutter() ? {} : null;\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var renderMode = layer.getRenderMode();\n  var replayTypes = _ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS[renderMode];\n  var pixelRatio = frameState.pixelRatio;\n  var rotation = frameState.viewState.rotation;\n  var size = frameState.size;\n  var offsetX, offsetY;\n  if (rotation) {\n    offsetX = Math.round(pixelRatio * size[0] / 2);\n    offsetY = Math.round(pixelRatio * size[1] / 2);\n    _ol_render_canvas_.rotateAtOffset(context, -rotation, offsetX, offsetY);\n  }\n  if (declutterReplays) {\n    this.declutterTree_.clear();\n  }\n  var tiles = this.renderedTiles;\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var clips = [];\n  var zs = [];\n  for (var i = tiles.length - 1; i >= 0; --i) {\n    var tile = /** @type {ol.VectorImageTile} */ (tiles[i]);\n    if (tile.getState() == _ol_TileState_.ABORT) {\n      continue;\n    }\n    var tileCoord = tile.tileCoord;\n    var worldOffset = tileGrid.getTileCoordExtent(tileCoord)[0] -\n        tileGrid.getTileCoordExtent(tile.wrappedTileCoord)[0];\n    var transform = undefined;\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n      if (renderMode != _ol_layer_VectorTileRenderType_.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n        continue;\n      }\n      if (!transform) {\n        transform = this.getTransform(frameState, worldOffset);\n      }\n      var currentZ = sourceTile.tileCoord[0];\n      var currentClip = replayGroup.getClipCoords(transform);\n      context.save();\n      context.globalAlpha = layerState.opacity;\n      // Create a clip mask for regions in this low resolution tile that are\n      // already filled by a higher resolution tile\n      for (var j = 0, jj = clips.length; j < jj; ++j) {\n        var clip = clips[j];\n        if (currentZ < zs[j]) {\n          context.beginPath();\n          // counter-clockwise (outer ring) for current tile\n          context.moveTo(currentClip[0], currentClip[1]);\n          context.lineTo(currentClip[2], currentClip[3]);\n          context.lineTo(currentClip[4], currentClip[5]);\n          context.lineTo(currentClip[6], currentClip[7]);\n          // clockwise (inner ring) for higher resolution tile\n          context.moveTo(clip[6], clip[7]);\n          context.lineTo(clip[4], clip[5]);\n          context.lineTo(clip[2], clip[3]);\n          context.lineTo(clip[0], clip[1]);\n          context.clip();\n        }\n      }\n      replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n      context.restore();\n      clips.push(currentClip);\n      zs.push(currentZ);\n    }\n  }\n  if (declutterReplays) {\n    _ol_render_canvas_ReplayGroup_.replayDeclutter(declutterReplays, context, rotation);\n  }\n  if (rotation) {\n    _ol_render_canvas_.rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n  }\n  _ol_renderer_canvas_TileLayer_.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderTileImage_ = function(\n    tile, frameState, layerState) {\n  var layer = this.getLayer();\n  var replayState = tile.getReplayState(layer);\n  var revision = layer.getRevision();\n  var replays = _ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    var tileCoord = tile.wrappedTileCoord;\n    var z = tileCoord[0];\n    var pixelRatio = frameState.pixelRatio;\n    var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    var resolution = tileGrid.getResolution(z);\n    var context = tile.getContext(layer);\n    var size = source.getTilePixelSize(z, pixelRatio, frameState.viewState.projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      var sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      var pixelScale = pixelRatio / resolution;\n      var transform = _ol_transform_.reset(this.tmpTransform_);\n      _ol_transform_.scale(transform, pixelScale, -pixelScale);\n      _ol_transform_.translate(transform, -tileExtent[0], -tileExtent[3]);\n      var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\nexport default _ol_renderer_canvas_VectorTileLayer_;\n","import _ol_functions_ from '../functions.js';\n\n/**\n * @constructor\n * @abstract\n * @param {string} source Source.\n * @struct\n */\nvar _ol_webgl_Shader_ = function(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n\n/**\n * @abstract\n * @return {number} Type.\n */\n_ol_webgl_Shader_.prototype.getType = function() {};\n\n\n/**\n * @return {string} Source.\n */\n_ol_webgl_Shader_.prototype.getSource = function() {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\n_ol_webgl_Shader_.prototype.isAnimated = _ol_functions_.FALSE;\nexport default _ol_webgl_Shader_;\n","import _ol_ from '../index.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_Shader_ from '../webgl/shader.js';\n\n/**\n * @constructor\n * @extends {ol.webgl.Shader}\n * @param {string} source Source.\n * @struct\n */\nvar _ol_webgl_Fragment_ = function(source) {\n  _ol_webgl_Shader_.call(this, source);\n};\n\n_ol_.inherits(_ol_webgl_Fragment_, _ol_webgl_Shader_);\n\n\n/**\n * @inheritDoc\n */\n_ol_webgl_Fragment_.prototype.getType = function() {\n  return _ol_webgl_.FRAGMENT_SHADER;\n};\nexport default _ol_webgl_Fragment_;\n","import _ol_ from '../index.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_Shader_ from '../webgl/shader.js';\n\n/**\n * @constructor\n * @extends {ol.webgl.Shader}\n * @param {string} source Source.\n * @struct\n */\nvar _ol_webgl_Vertex_ = function(source) {\n  _ol_webgl_Shader_.call(this, source);\n};\n\n_ol_.inherits(_ol_webgl_Vertex_, _ol_webgl_Shader_);\n\n\n/**\n * @inheritDoc\n */\n_ol_webgl_Vertex_.prototype.getType = function() {\n  return _ol_webgl_.VERTEX_SHADER;\n};\nexport default _ol_webgl_Vertex_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_circlereplay_defaultshader_ = {};\n\n\n_ol_render_webgl_circlereplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\n_ol_render_webgl_circlereplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;//Until we get gl_VertexID in WebGL,we store an instruction.if(f==0.0){//Offsetting the edges of the triangle by lineWidth/2 is necessary,however//we should also leave some space for the antialiasing,thus we offset by lineWidth.offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\nexport default _ol_render_webgl_circlereplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_circlereplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_radius' : 'g');\n};\n\nexport default _ol_render_webgl_circlereplay_defaultshader_Locations_;","var _ol_vec_Mat4_ = {};\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\n_ol_vec_Mat4_.create = function() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n};\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {ol.Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\n_ol_vec_Mat4_.fromTransform = function(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n};\nexport default _ol_vec_Mat4_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_vec_Mat4_ from '../../vec/mat4.js';\nimport _ol_webgl_ from '../../webgl.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.render.VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_Replay_ = function(tolerance, maxExtent) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {ol.Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * The origin of the coordinate system for the point coordinates sent to\n   * the GPU. To eliminate jitter caused by precision problems in the GPU\n   * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n   * Engine Design for Virtual Globes\" book.\n   * @protected\n   * @type {ol.Coordinate}\n   */\n  this.origin = _ol_extent_.getCenter(maxExtent);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.projectionMatrix_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.offsetRotateMatrix_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.offsetScaleMatrix_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.tmpMat4_ = _ol_vec_Mat4_.create();\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.indices = [];\n\n  /**\n   * @protected\n   * @type {?ol.webgl.Buffer}\n   */\n  this.indicesBuffer = null;\n\n  /**\n   * Start index per feature (the index).\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.startIndices = [];\n\n  /**\n   * Start index per feature (the feature).\n   * @protected\n   * @type {Array.<ol.Feature|ol.render.Feature>}\n   */\n  this.startIndicesFeature = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.vertices = [];\n\n  /**\n   * @protected\n   * @type {?ol.webgl.Buffer}\n   */\n  this.verticesBuffer = null;\n\n  /**\n   * Optional parameter for PolygonReplay instances.\n   * @protected\n   * @type {ol.render.webgl.LineStringReplay|undefined}\n   */\n  this.lineStringReplay = undefined;\n\n};\n\n_ol_.inherits(_ol_render_webgl_Replay_, _ol_render_VectorContext_);\n\n\n/**\n * @abstract\n * @param {ol.webgl.Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\n_ol_render_webgl_Replay_.prototype.getDeleteResourcesFunction = function(context) {};\n\n\n/**\n * @abstract\n * @param {ol.webgl.Context} context Context.\n */\n_ol_render_webgl_Replay_.prototype.finish = function(context) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @return {ol.render.webgl.circlereplay.defaultshader.Locations|\n            ol.render.webgl.linestringreplay.defaultshader.Locations|\n            ol.render.webgl.polygonreplay.defaultshader.Locations|\n            ol.render.webgl.texturereplay.defaultshader.Locations} Locations.\n */\n_ol_render_webgl_Replay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.render.webgl.circlereplay.defaultshader.Locations|\n           ol.render.webgl.linestringreplay.defaultshader.Locations|\n           ol.render.webgl.polygonreplay.defaultshader.Locations|\n           ol.render.webgl.texturereplay.defaultshader.Locations} locations Locations.\n */\n_ol_render_webgl_Replay_.prototype.shutDownProgram = function(gl, locations) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {boolean} hitDetection Hit detection mode.\n */\n_ol_render_webgl_Replay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.drawHitDetectionReplay = function(gl, context, skippedFeaturesHash,\n    featureCallback, oneByOne, opt_hitExtent) {\n  if (!oneByOne) {\n    // draw all hit-detection features in \"once\" (by texture group)\n    return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n  } else {\n    // draw hit-detection features one by one\n    return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n  }\n};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.drawHitDetectionReplayAll = function(gl, context, skippedFeaturesHash,\n    featureCallback) {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n  var result = featureCallback(null);\n  if (result) {\n    return result;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_Replay_.prototype.replay = function(context,\n    center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash,\n    featureCallback, oneByOne, opt_hitExtent) {\n  var gl = context.getGL();\n  var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n      tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n  if (this.lineStringReplay) {\n    tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n    tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n    tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n    tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n    tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n    tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n    tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n    tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilMask(255);\n    gl.stencilFunc(gl.ALWAYS, 1, 255);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n    this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n    gl.stencilMask(0);\n    gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n  }\n\n  context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.verticesBuffer);\n\n  context.bindBuffer(_ol_webgl_.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n  var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n  // set the \"uniform\" values\n  var projectionMatrix = _ol_transform_.reset(this.projectionMatrix_);\n  _ol_transform_.scale(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n  _ol_transform_.rotate(projectionMatrix, -rotation);\n  _ol_transform_.translate(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n  var offsetScaleMatrix = _ol_transform_.reset(this.offsetScaleMatrix_);\n  _ol_transform_.scale(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n  var offsetRotateMatrix = _ol_transform_.reset(this.offsetRotateMatrix_);\n  if (rotation !== 0) {\n    _ol_transform_.rotate(offsetRotateMatrix, -rotation);\n  }\n\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, projectionMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, offsetScaleMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, offsetRotateMatrix));\n  gl.uniform1f(locations.u_opacity, opacity);\n\n  // draw!\n  var result;\n  if (featureCallback === undefined) {\n    this.drawReplay(gl, context, skippedFeaturesHash, false);\n  } else {\n    // draw feature by feature for the hit-detection\n    result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n  }\n\n  // disable the vertex attrib arrays\n  this.shutDownProgram(gl, locations);\n\n  if (this.lineStringReplay) {\n    if (!tmpStencil) {\n      gl.disable(gl.STENCIL_TEST);\n    }\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n    gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n    gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n  }\n\n  return result;\n};\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {number} start Start index.\n * @param {number} end End index.\n */\n_ol_render_webgl_Replay_.prototype.drawElements = function(\n    gl, context, start, end) {\n  var elementType = context.hasOESElementIndexUint ?\n    _ol_webgl_.UNSIGNED_INT : _ol_webgl_.UNSIGNED_SHORT;\n  var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n  var numItems = end - start;\n  var offsetInBytes = start * elementSize;\n  gl.drawElements(_ol_webgl_.TRIANGLES, numItems, elementType, offsetInBytes);\n};\nexport default _ol_render_webgl_Replay_;\n","var _ol_render_webgl_ = {};\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_webgl_.defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_webgl_.defaultFillStyle = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_webgl_.defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_webgl_.defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_webgl_.defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_webgl_.defaultStrokeStyle = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultTextAlign = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultTextBaseline = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.defaultLineWidth = 1;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\n_ol_render_webgl_.triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= _ol_render_webgl_.EPSILON && area >= -_ol_render_webgl_.EPSILON) ?\n    undefined : area > 0;\n};\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_webgl_.EPSILON = Number.EPSILON || 2.220446049250313e-16;\nexport default _ol_render_webgl_;\n","import _ol_webgl_ from '../webgl.js';\n\n/**\n * @constructor\n * @param {Array.<number>=} opt_arr Array.\n * @param {number=} opt_usage Usage.\n * @struct\n */\nvar _ol_webgl_Buffer_ = function(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ?\n    opt_usage : _ol_webgl_Buffer_.Usage_.STATIC_DRAW;\n\n};\n\n\n/**\n * @return {Array.<number>} Array.\n */\n_ol_webgl_Buffer_.prototype.getArray = function() {\n  return this.arr_;\n};\n\n\n/**\n * @return {number} Usage.\n */\n_ol_webgl_Buffer_.prototype.getUsage = function() {\n  return this.usage_;\n};\n\n\n/**\n * @enum {number}\n * @private\n */\n_ol_webgl_Buffer_.Usage_ = {\n  STATIC_DRAW: _ol_webgl_.STATIC_DRAW,\n  STREAM_DRAW: _ol_webgl_.STREAM_DRAW,\n  DYNAMIC_DRAW: _ol_webgl_.DYNAMIC_DRAW\n};\nexport default _ol_webgl_Buffer_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_render_webgl_circlereplay_defaultshader_ from '../webgl/circlereplay/defaultshader.js';\nimport _ol_render_webgl_circlereplay_defaultshader_Locations_ from '../webgl/circlereplay/defaultshader/locations.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_CircleReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {ol.render.webgl.circlereplay.defaultshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<Array.<number>|number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.radius_ = 0;\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         strokeColor: (Array.<number>|null),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineWidth: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    strokeColor: null,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineWidth: undefined,\n    changed: false\n  };\n\n};\n\n_ol_.inherits(_ol_render_webgl_CircleReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_CircleReplay_.prototype.drawCoordinates_ = function(\n    flatCoordinates, offset, end, stride) {\n  var numVertices = this.vertices.length;\n  var numIndices = this.indices.length;\n  var n = numVertices / 4;\n  var i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 0;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 1;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 2;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 3;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n    this.indices[numIndices++] = n;\n\n    n += 4;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.drawCircle = function(circleGeometry, feature) {\n  var radius = circleGeometry.getRadius();\n  var stride = circleGeometry.getStride();\n  if (radius) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n\n    this.radius_ = radius;\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    flatCoordinates = _ol_geom_flat_transform_.translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n    this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n  } else {\n    if (this.state_.changed) {\n      this.styles_.pop();\n      if (this.styles_.length) {\n        var lastState = this.styles_[this.styles_.length - 1];\n        this.state_.fillColor =  /** @type {Array.<number>} */ (lastState[0]);\n        this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n        this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n        this.state_.changed = false;\n      }\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\n_ol_render_webgl_CircleReplay_.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  // We only delete our stuff here. The shaders and the program may\n  // be used by other CircleReplay instances (for other layers). And\n  // they will be deleted when disposing of the ol.webgl.Context\n  // object.\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader, vertexShader;\n  fragmentShader = _ol_render_webgl_circlereplay_defaultshader_.fragment;\n  vertexShader = _ol_render_webgl_circlereplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_render_webgl_circlereplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 16, 0);\n\n  gl.enableVertexAttribArray(locations.a_instruction);\n  gl.vertexAttribPointer(locations.a_instruction, 1, _ol_webgl_.FLOAT,\n      false, 16, 8);\n\n  gl.enableVertexAttribArray(locations.a_radius);\n  gl.vertexAttribPointer(locations.a_radius, 1, _ol_webgl_.FLOAT,\n      false, 16, 12);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_instruction);\n  gl.disableVertexAttribArray(locations.a_radius);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    var i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\n_ol_render_webgl_CircleReplay_.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\n_ol_render_webgl_CircleReplay_.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n */\n_ol_render_webgl_CircleReplay_.prototype.setStrokeStyle_ = function(gl, color, lineWidth) {\n  gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_CircleReplay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var strokeStyleColor, strokeStyleWidth;\n  if (strokeStyle) {\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : _ol_render_webgl_.defaultLineDash;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : _ol_render_webgl_.defaultLineDashOffset;\n    strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = _ol_color_.asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || _ol_render_webgl_.defaultStrokeStyle;\n    } else {\n      strokeStyleColor = _ol_render_webgl_.defaultStrokeStyle;\n    }\n    strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : _ol_render_webgl_.defaultLineWidth;\n  } else {\n    strokeStyleColor = [0, 0, 0, 0];\n    strokeStyleWidth = 0;\n  }\n  var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = _ol_color_.asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || _ol_render_webgl_.defaultFillStyle;\n  } else {\n    fillStyleColor = _ol_render_webgl_.defaultFillStyle;\n  }\n  if (!this.state_.strokeColor || !_ol_array_.equals(this.state_.strokeColor, strokeStyleColor) ||\n      !this.state_.fillColor || !_ol_array_.equals(this.state_.fillColor, fillStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth) {\n    this.state_.changed = true;\n    this.state_.fillColor = fillStyleColor;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n  }\n};\nexport default _ol_render_webgl_CircleReplay_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_texturereplay_defaultshader_ = {};\n\n\n_ol_render_webgl_texturereplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\n_ol_render_webgl_texturereplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\nexport default _ol_render_webgl_texturereplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_texturereplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n};\n\nexport default _ol_render_webgl_texturereplay_defaultshader_Locations_;","/**\n * @enum {string}\n */\nvar _ol_webgl_ContextEventType_ = {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\nexport default _ol_webgl_ContextEventType_;\n","import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_array_ from '../array.js';\nimport _ol_events_ from '../events.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_ContextEventType_ from '../webgl/contexteventtype.js';\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {ol.Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\nvar _ol_webgl_Context_ = function(canvas, gl) {\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = gl;\n\n  /**\n   * @private\n   * @type {Object.<string, ol.WebglBufferCacheEntry>}\n   */\n  this.bufferCache_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, WebGLShader>}\n   */\n  this.shaderCache_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, WebGLProgram>}\n   */\n  this.programCache_ = {};\n\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n  this.currentProgram_ = null;\n\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n  this.hitDetectionFramebuffer_ = null;\n\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n  this.hitDetectionTexture_ = null;\n\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n  this.hitDetectionRenderbuffer_ = null;\n\n  /**\n   * @type {boolean}\n   */\n  this.hasOESElementIndexUint = _ol_array_.includes(\n      _ol_.WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n  // use the OES_element_index_uint extension if available\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.LOST,\n      this.handleWebGLContextLost, this);\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n};\n\n_ol_.inherits(_ol_webgl_Context_, _ol_Disposable_);\n\n\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n_ol_webgl_Context_.prototype.bindBuffer = function(target, buf) {\n  var gl = this.getGL();\n  var arr = buf.getArray();\n  var bufferKey = String(_ol_.getUid(buf));\n  if (bufferKey in this.bufferCache_) {\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    var /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == _ol_webgl_.ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == _ol_webgl_.ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n\n\n/**\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n_ol_webgl_Context_.prototype.deleteBuffer = function(buf) {\n  var gl = this.getGL();\n  var bufferKey = String(_ol_.getUid(buf));\n  var bufferCacheEntry = this.bufferCache_[bufferKey];\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n  delete this.bufferCache_[bufferKey];\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_webgl_Context_.prototype.disposeInternal = function() {\n  _ol_events_.unlistenAll(this.canvas_);\n  var gl = this.getGL();\n  if (!gl.isContextLost()) {\n    var key;\n    for (key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n    for (key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n    for (key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    }\n    // delete objects for hit-detection\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\n_ol_webgl_Context_.prototype.getCanvas = function() {\n  return this.canvas_;\n};\n\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\n_ol_webgl_Context_.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\n_ol_webgl_Context_.prototype.getHitDetectionFramebuffer = function() {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n  return this.hitDetectionFramebuffer_;\n};\n\n\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {ol.webgl.Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\n_ol_webgl_Context_.prototype.getShader = function(shaderObject) {\n  var shaderKey = String(_ol_.getUid(shaderObject));\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    var gl = this.getGL();\n    var shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n\n\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {ol.webgl.Fragment} fragmentShaderObject Fragment shader.\n * @param {ol.webgl.Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\n_ol_webgl_Context_.prototype.getProgram = function(\n    fragmentShaderObject, vertexShaderObject) {\n  var programKey =\n      _ol_.getUid(fragmentShaderObject) + '/' + _ol_.getUid(vertexShaderObject);\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    var gl = this.getGL();\n    var program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n\n\n/**\n * FIXME empy description for jsdoc\n */\n_ol_webgl_Context_.prototype.handleWebGLContextLost = function() {\n  _ol_obj_.clear(this.bufferCache_);\n  _ol_obj_.clear(this.shaderCache_);\n  _ol_obj_.clear(this.programCache_);\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n\n\n/**\n * FIXME empy description for jsdoc\n */\n_ol_webgl_Context_.prototype.handleWebGLContextRestored = function() {\n};\n\n\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\n_ol_webgl_Context_.prototype.initHitDetectionFramebuffer_ = function() {\n  var gl = this.gl_;\n  var framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  var texture = _ol_webgl_Context_.createEmptyTexture(gl, 1, 1);\n  var renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n\n\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\n_ol_webgl_Context_.prototype.useProgram = function(program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    var gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n * @private\n */\n_ol_webgl_Context_.createTexture_ = function(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n_ol_webgl_Context_.createEmptyTexture = function(\n    gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n      null);\n\n  return texture;\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n_ol_webgl_Context_.createTexture = function(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\n  return texture;\n};\nexport default _ol_webgl_Context_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_webgl_texturereplay_defaultshader_ from '../webgl/texturereplay/defaultshader.js';\nimport _ol_render_webgl_texturereplay_defaultshader_Locations_ from '../webgl/texturereplay/defaultshader/locations.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_TextureReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorY = undefined;\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.groupIndices = [];\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.hitDetectionGroupIndices = [];\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.height = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageHeight = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageWidth = undefined;\n\n  /**\n   * @protected\n   * @type {ol.render.webgl.texturereplay.defaultshader.Locations}\n   */\n  this.defaultLocations = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.opacity = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originY = undefined;\n\n  /**\n   * @protected\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.rotation = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.scale = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.width = undefined;\n};\n\n_ol_.inherits(_ol_render_webgl_TextureReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  var textures = this.getTextures(true);\n  var gl = context.getGL();\n  return function() {\n    if (!gl.isContextLost()) {\n      var i, ii;\n      for (i = 0, ii = textures.length; i < ii; ++i) {\n        gl.deleteTexture(textures[i]);\n      }\n    }\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} My end.\n * @protected\n */\n_ol_render_webgl_TextureReplay_.prototype.drawCoordinates = function(flatCoordinates, offset, end, stride) {\n  var anchorX = /** @type {number} */ (this.anchorX);\n  var anchorY = /** @type {number} */ (this.anchorY);\n  var height = /** @type {number} */ (this.height);\n  var imageHeight = /** @type {number} */ (this.imageHeight);\n  var imageWidth = /** @type {number} */ (this.imageWidth);\n  var opacity = /** @type {number} */ (this.opacity);\n  var originX = /** @type {number} */ (this.originX);\n  var originY = /** @type {number} */ (this.originY);\n  var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n  // this.rotation_ is anti-clockwise, but rotation is clockwise\n  var rotation = /** @type {number} */ (-this.rotation);\n  var scale = /** @type {number} */ (this.scale);\n  var width = /** @type {number} */ (this.width);\n  var cos = Math.cos(rotation);\n  var sin = Math.sin(rotation);\n  var numIndices = this.indices.length;\n  var numVertices = this.vertices.length;\n  var i, n, offsetX, offsetY, x, y;\n  for (i = offset; i < end; i += stride) {\n    x = flatCoordinates[i] - this.origin[0];\n    y = flatCoordinates[i + 1] - this.origin[1];\n\n    // There are 4 vertices per [x, y] point, one for each corner of the\n    // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n    // WebGL supported Geometry Shaders (which can emit new vertices), but that\n    // is not currently the case.\n    //\n    // And each vertex includes 8 values: the x and y coordinates, the x and\n    // y offsets used to calculate the position of the corner, the u and\n    // v texture coordinates for the corner, the opacity, and whether the\n    // the image should be rotated with the view (rotateWithView).\n\n    n = numVertices / 8;\n\n    // bottom-left corner\n    offsetX = -scale * anchorX;\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // bottom-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-left corner\n    offsetX = -scale * anchorX;\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n  }\n\n  return numVertices;\n};\n\n\n/**\n * @protected\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images\n *    Images.\n * @param {Object.<string, WebGLTexture>} texturePerImage Texture cache.\n * @param {WebGLRenderingContext} gl Gl.\n */\n_ol_render_webgl_TextureReplay_.prototype.createTextures = function(textures, images, texturePerImage, gl) {\n  var texture, image, uid, i;\n  var ii = images.length;\n  for (i = 0; i < ii; ++i) {\n    image = images[i];\n\n    uid = _ol_.getUid(image).toString();\n    if (uid in texturePerImage) {\n      texture = texturePerImage[uid];\n    } else {\n      texture = _ol_webgl_Context_.createTexture(\n          gl, image, _ol_webgl_.CLAMP_TO_EDGE, _ol_webgl_.CLAMP_TO_EDGE);\n      texturePerImage[uid] = texture;\n    }\n    textures[i] = texture;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader = _ol_render_webgl_texturereplay_defaultshader_.fragment;\n  var vertexShader = _ol_render_webgl_texturereplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations) {\n    locations = new _ol_render_webgl_texturereplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations = locations;\n  } else {\n    locations = this.defaultLocations;\n  }\n\n  // use the program (FIXME: use the return value)\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 32, 0);\n\n  gl.enableVertexAttribArray(locations.a_offsets);\n  gl.vertexAttribPointer(locations.a_offsets, 2, _ol_webgl_.FLOAT,\n      false, 32, 8);\n\n  gl.enableVertexAttribArray(locations.a_texCoord);\n  gl.vertexAttribPointer(locations.a_texCoord, 2, _ol_webgl_.FLOAT,\n      false, 32, 16);\n\n  gl.enableVertexAttribArray(locations.a_opacity);\n  gl.vertexAttribPointer(locations.a_opacity, 1, _ol_webgl_.FLOAT,\n      false, 32, 24);\n\n  gl.enableVertexAttribArray(locations.a_rotateWithView);\n  gl.vertexAttribPointer(locations.a_rotateWithView, 1, _ol_webgl_.FLOAT,\n      false, 32, 28);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_offsets);\n  gl.disableVertexAttribArray(locations.a_texCoord);\n  gl.disableVertexAttribArray(locations.a_opacity);\n  gl.disableVertexAttribArray(locations.a_rotateWithView);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n  var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping(\n        gl, context, skippedFeaturesHash, textures, groupIndices);\n  } else {\n    var i, ii, start;\n    for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n      gl.bindTexture(_ol_webgl_.TEXTURE_2D, textures[i]);\n      var end = groupIndices[i];\n      this.drawElements(gl, context, start, end);\n      start = end;\n    }\n  }\n};\n\n\n/**\n * Draw the replay while paying attention to skipped features.\n *\n * This functions creates groups of features that can be drawn to together,\n * so that the number of `drawElements` calls is minimized.\n *\n * For example given the following texture groups:\n *\n *    Group 1: A B C\n *    Group 2: D [E] F G\n *\n * If feature E should be skipped, the following `drawElements` calls will be\n * made:\n *\n *    drawElements with feature A, B and C\n *    drawElements with feature D\n *    drawElements with feature F and G\n *\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<number>} groupIndices Texture group indices.\n */\n_ol_render_webgl_TextureReplay_.prototype.drawReplaySkipping = function(gl, context, skippedFeaturesHash, textures,\n    groupIndices) {\n  var featureIndex = 0;\n\n  var i, ii;\n  for (i = 0, ii = textures.length; i < ii; ++i) {\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, textures[i]);\n    var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n    var groupEnd = groupIndices[i];\n\n    var start = groupStart;\n    var end = groupStart;\n    while (featureIndex < this.startIndices.length &&\n        this.startIndices[featureIndex] <= groupEnd) {\n      var feature = this.startIndicesFeature[featureIndex];\n\n      var featureUid = _ol_.getUid(feature).toString();\n      if (skippedFeaturesHash[featureUid] !== undefined) {\n        // feature should be skipped\n        if (start !== end) {\n          // draw the features so far\n          this.drawElements(gl, context, start, end);\n        }\n        // continue with the next feature\n        start = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n        end = start;\n      } else {\n        // the feature is not skipped, augment the end index\n        end = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n      }\n      featureIndex++;\n    }\n\n    if (start !== end) {\n      // draw the remaining features (in case there was no skipped feature\n      // in this texture group, all features of a group are drawn together)\n      this.drawElements(gl, context, start, end);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, groupStart, start, end, feature, featureUid;\n  var featureIndex = this.startIndices.length - 1;\n  var hitDetectionTextures = this.getHitDetectionTextures();\n  for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, hitDetectionTextures[i]);\n    groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n    end = this.hitDetectionGroupIndices[i];\n\n    // draw all features for this texture group\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n        if (result) {\n          return result;\n        }\n      }\n\n      end = start;\n      featureIndex--;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextureReplay_.prototype.finish = function(context) {\n  this.anchorX = undefined;\n  this.anchorY = undefined;\n  this.height = undefined;\n  this.imageHeight = undefined;\n  this.imageWidth = undefined;\n  this.indices = null;\n  this.opacity = undefined;\n  this.originX = undefined;\n  this.originY = undefined;\n  this.rotateWithView = undefined;\n  this.rotation = undefined;\n  this.scale = undefined;\n  this.vertices = null;\n  this.width = undefined;\n};\n\n\n/**\n * @abstract\n * @protected\n * @param {boolean=} opt_all Return hit detection textures with regular ones.\n * @returns {Array.<WebGLTexture>} Textures.\n */\n_ol_render_webgl_TextureReplay_.prototype.getTextures = function(opt_all) {};\n\n\n/**\n * @abstract\n * @protected\n * @returns {Array.<WebGLTexture>} Textures.\n */\n_ol_render_webgl_TextureReplay_.prototype.getHitDetectionTextures = function() {};\nexport default _ol_render_webgl_TextureReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_render_webgl_TextureReplay_ from '../webgl/texturereplay.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_ImageReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_TextureReplay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.images_ = [];\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.hitDetectionImages_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.textures_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.hitDetectionTextures_ = [];\n\n};\n\n_ol_.inherits(_ol_render_webgl_ImageReplay_, _ol_render_webgl_TextureReplay_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  var stride = multiPointGeometry.getStride();\n  this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.drawPoint = function(pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = pointGeometry.getFlatCoordinates();\n  var stride = pointGeometry.getStride();\n  this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.finish = function(context) {\n  var gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length);\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  var indices = this.indices;\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  var texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n  _ol_render_webgl_TextureReplay_.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.setImageStyle = function(imageStyle) {\n  var anchor = imageStyle.getAnchor();\n  var image = imageStyle.getImage(1);\n  var imageSize = imageStyle.getImageSize();\n  var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  var opacity = imageStyle.getOpacity();\n  var origin = imageStyle.getOrigin();\n  var rotateWithView = imageStyle.getRotateWithView();\n  var rotation = imageStyle.getRotation();\n  var size = imageStyle.getSize();\n  var scale = imageStyle.getScale();\n\n  var currentImage;\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n    if (_ol_.getUid(currentImage) != _ol_.getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage =\n        this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n    if (_ol_.getUid(currentImage) != _ol_.getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.getTextures = function(opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.getHitDetectionTextures = function() {\n  return this.hitDetectionTextures_;\n};\nexport default _ol_render_webgl_ImageReplay_;\n","import _ol_geom_flat_area_ from '../flat/area.js';\nvar _ol_geom_flat_topology_ = {};\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\n_ol_geom_flat_topology_.lineStringIsClosed = function(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!_ol_geom_flat_area_.linearRing(flatCoordinates, offset, end, stride);\n  }\n  return false;\n};\nexport default _ol_geom_flat_topology_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_linestringreplay_defaultshader_ = {};\n\n\n_ol_render_webgl_linestringreplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\n_ol_render_webgl_linestringreplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\nexport default _ol_render_webgl_linestringreplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_linestringreplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_direction' : 'g');\n};\n\nexport default _ol_render_webgl_linestringreplay_defaultshader_Locations_;","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_orient_ from '../../geom/flat/orient.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_geom_flat_topology_ from '../../geom/flat/topology.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_render_webgl_linestringreplay_defaultshader_ from '../webgl/linestringreplay/defaultshader.js';\nimport _ol_render_webgl_linestringreplay_defaultshader_Locations_ from '../webgl/linestringreplay/defaultshader/locations.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_LineStringReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {ol.render.webgl.linestringreplay.defaultshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<?>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{strokeColor: (Array.<number>|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: (number|undefined),\n   *         miterLimit: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: undefined,\n    miterLimit: undefined,\n    changed: false\n  };\n\n};\n\n_ol_.inherits(_ol_render_webgl_LineStringReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * Draw one segment.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n\n  var i, ii;\n  var numVertices = this.vertices.length;\n  var numIndices = this.indices.length;\n  //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n  //ol.render.webgl.LineStringReplay.Instruction_, and a rounding factor (1 or 2). If the product is even,\n  //we round it. If it is odd, we don't.\n  var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n    this.state_.lineJoin === 'miter' ? 1 : 2;\n  var lineCap = this.state_.lineCap === 'butt' ? 0 :\n    this.state_.lineCap === 'square' ? 1 : 2;\n  var closed = _ol_geom_flat_topology_.lineStringIsClosed(flatCoordinates, offset, end, stride);\n  var startCoords, sign, n;\n  var lastIndex = numIndices;\n  var lastSign = 1;\n  //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n  var p0, p1, p2;\n\n  for (i = offset, ii = end; i < ii; i += stride) {\n\n    n = numVertices / 7;\n\n    p0 = p1;\n    p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n    //First vertex.\n    if (i === offset) {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      if (end - offset === stride * 2 && _ol_array_.equals(p1, p2)) {\n        break;\n      }\n      if (closed) {\n        //A closed line! Complete the circle.\n        p0 = [flatCoordinates[end - stride * 2],\n          flatCoordinates[end - stride * 2 + 1]];\n\n        startCoords = p2;\n      } else {\n        //Add the first two/four vertices.\n\n        if (lineCap) {\n          numVertices = this.addVertices_([0, 0], p1, p2,\n              lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n              -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        lastIndex = numVertices / 7 - 1;\n\n        continue;\n      }\n    } else if (i === end - stride) {\n      //Last vertex.\n      if (closed) {\n        //Same as the first vertex.\n        p2 = startCoords;\n        break;\n      } else {\n        p0 = p0 || [0, 0];\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE * (lineCap || 1), numVertices);\n\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = lastIndex;\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n;\n\n        if (lineCap) {\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n              lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n              -lastSign * _ol_render_webgl_LineStringReplay_.Instruction_.END_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        break;\n      }\n    } else {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n    }\n\n    // We group CW and straight lines, thus the not so inituitive CCW checking function.\n    sign = _ol_render_webgl_.triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n      ? -1 : 1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        sign * _ol_render_webgl_LineStringReplay_.Instruction_.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        sign * _ol_render_webgl_LineStringReplay_.Instruction_.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        -sign * _ol_render_webgl_LineStringReplay_.Instruction_.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    if (i > offset) {\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 1;\n\n    lastIndex = n + 2;\n    lastSign = sign;\n\n    //Add miter\n    if (lineJoin) {\n      numVertices = this.addVertices_(p0, p1, p2,\n          sign * _ol_render_webgl_LineStringReplay_.Instruction_.MITER_TOP * lineJoin, numVertices);\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n    }\n  }\n\n  if (closed) {\n    n = n || numVertices / 7;\n    sign = _ol_geom_flat_orient_.linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n      ? 1 : -1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        sign * _ol_render_webgl_LineStringReplay_.Instruction_.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n        -sign * _ol_render_webgl_LineStringReplay_.Instruction_.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastIndex - 1;\n    this.indices[numIndices++] = lastIndex;\n\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n  }\n};\n\n/**\n * @param {Array.<number>} p0 Last coordinates.\n * @param {Array.<number>} p1 Current coordinates.\n * @param {Array.<number>} p2 Next coordinates.\n * @param {number} product Sign, instruction, and rounding product.\n * @param {number} numVertices Vertex counter.\n * @return {number} Vertex counter.\n * @private\n */\n_ol_render_webgl_LineStringReplay_.prototype.addVertices_ = function(p0, p1, p2, product, numVertices) {\n  this.vertices[numVertices++] = p0[0];\n  this.vertices[numVertices++] = p0[1];\n  this.vertices[numVertices++] = p1[0];\n  this.vertices[numVertices++] = p1[1];\n  this.vertices[numVertices++] = p2[0];\n  this.vertices[numVertices++] = p2[1];\n  this.vertices[numVertices++] = product;\n\n  return numVertices;\n};\n\n/**\n * Check if the linestring can be drawn (i. e. valid).\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring can be drawn.\n * @private\n */\n_ol_render_webgl_LineStringReplay_.prototype.isValid_ = function(flatCoordinates, offset, end, stride) {\n  var range = end - offset;\n  if (range < stride * 2) {\n    return false;\n  } else if (range === stride * 2) {\n    var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n    return !_ol_array_.equals(firstP, lastP);\n  }\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawLineString = function(lineStringGeometry, feature) {\n  var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  var stride = lineStringGeometry.getStride();\n  if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates = _ol_geom_flat_transform_.translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  var indexCount = this.indices.length;\n  var ends = multiLineStringGeometry.getEnds();\n  ends.unshift(0);\n  var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  var stride = multiLineStringGeometry.getStride();\n  var i, ii;\n  if (ends.length > 1) {\n    for (i = 1, ii = ends.length; i < ii; ++i) {\n      if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n        var lineString = _ol_geom_flat_transform_.translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this.origin[0], -this.origin[1]);\n        this.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n      }\n    }\n  }\n  if (this.indices.length > indexCount) {\n    this.startIndices.push(indexCount);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(indexCount);\n      this.state_.changed = false;\n    }\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawPolygonCoordinates = function(\n    flatCoordinates, holeFlatCoordinates, stride) {\n  if (!_ol_geom_flat_topology_.lineStringIsClosed(flatCoordinates, 0,\n      flatCoordinates.length, stride)) {\n    flatCoordinates.push(flatCoordinates[0]);\n    flatCoordinates.push(flatCoordinates[1]);\n  }\n  this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  if (holeFlatCoordinates.length) {\n    var i, ii;\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      if (!_ol_geom_flat_topology_.lineStringIsClosed(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride)) {\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n      }\n      this.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number=} opt_index Index count.\n */\n_ol_render_webgl_LineStringReplay_.prototype.setPolygonStyle = function(feature, opt_index) {\n  var index = opt_index === undefined ? this.indices.length : opt_index;\n  this.startIndices.push(index);\n  this.startIndicesFeature.push(feature);\n  if (this.state_.changed) {\n    this.styleIndices_.push(index);\n    this.state_.changed = false;\n  }\n};\n\n\n/**\n * @return {number} Current index.\n */\n_ol_render_webgl_LineStringReplay_.prototype.getCurrentIndex = function() {\n  return this.indices.length;\n};\n\n\n/**\n * @inheritDoc\n **/\n_ol_render_webgl_LineStringReplay_.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader, vertexShader;\n  fragmentShader = _ol_render_webgl_linestringreplay_defaultshader_.fragment;\n  vertexShader = _ol_render_webgl_linestringreplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_render_webgl_linestringreplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_lastPos);\n  gl.vertexAttribPointer(locations.a_lastPos, 2, _ol_webgl_.FLOAT,\n      false, 28, 0);\n\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 28, 8);\n\n  gl.enableVertexAttribArray(locations.a_nextPos);\n  gl.vertexAttribPointer(locations.a_nextPos, 2, _ol_webgl_.FLOAT,\n      false, 28, 16);\n\n  gl.enableVertexAttribArray(locations.a_direction);\n  gl.vertexAttribPointer(locations.a_direction, 1, _ol_webgl_.FLOAT,\n      false, 28, 24);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_lastPos);\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_nextPos);\n  gl.disableVertexAttribArray(locations.a_direction);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    var i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n * @param {number} miterLimit Miter limit.\n */\n_ol_render_webgl_LineStringReplay_.prototype.setStrokeStyle_ = function(gl, color, lineWidth, miterLimit) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_LineStringReplay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var strokeStyleLineCap = strokeStyle.getLineCap();\n  this.state_.lineCap = strokeStyleLineCap !== undefined ?\n    strokeStyleLineCap : _ol_render_webgl_.defaultLineCap;\n  var strokeStyleLineDash = strokeStyle.getLineDash();\n  this.state_.lineDash = strokeStyleLineDash ?\n    strokeStyleLineDash : _ol_render_webgl_.defaultLineDash;\n  var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n  this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n    strokeStyleLineDashOffset : _ol_render_webgl_.defaultLineDashOffset;\n  var strokeStyleLineJoin = strokeStyle.getLineJoin();\n  this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n    strokeStyleLineJoin : _ol_render_webgl_.defaultLineJoin;\n  var strokeStyleColor = strokeStyle.getColor();\n  if (!(strokeStyleColor instanceof CanvasGradient) &&\n      !(strokeStyleColor instanceof CanvasPattern)) {\n    strokeStyleColor = _ol_color_.asArray(strokeStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || _ol_render_webgl_.defaultStrokeStyle;\n  } else {\n    strokeStyleColor = _ol_render_webgl_.defaultStrokeStyle;\n  }\n  var strokeStyleWidth = strokeStyle.getWidth();\n  strokeStyleWidth = strokeStyleWidth !== undefined ?\n    strokeStyleWidth : _ol_render_webgl_.defaultLineWidth;\n  var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n  strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n    strokeStyleMiterLimit : _ol_render_webgl_.defaultMiterLimit;\n  if (!this.state_.strokeColor || !_ol_array_.equals(this.state_.strokeColor, strokeStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n    this.state_.changed = true;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.state_.miterLimit = strokeStyleMiterLimit;\n    this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n  }\n};\n\n/**\n * @enum {number}\n * @private\n */\n_ol_render_webgl_LineStringReplay_.Instruction_ = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\nexport default _ol_render_webgl_LineStringReplay_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\nimport _ol_webgl_Fragment_ from '../../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../../webgl/vertex.js';\nvar _ol_render_webgl_polygonreplay_defaultshader_ = {};\n\n\n_ol_render_webgl_polygonreplay_defaultshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\n_ol_render_webgl_polygonreplay_defaultshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\nexport default _ol_render_webgl_polygonreplay_defaultshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_render_webgl_polygonreplay_defaultshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'a');\n};\n\nexport default _ol_render_webgl_polygonreplay_defaultshader_Locations_;","/**\n * Creates an empty linked list structure.\n *\n * @constructor\n * @struct\n * @param {boolean=} opt_circular The last item is connected to the first one,\n * and the first item to the last one. Default is true.\n */\nvar _ol_structs_LinkedList_ = function(opt_circular) {\n\n  /**\n   * @private\n   * @type {ol.LinkedListItem|undefined}\n   */\n  this.first_ = undefined;\n\n  /**\n   * @private\n   * @type {ol.LinkedListItem|undefined}\n   */\n  this.last_ = undefined;\n\n  /**\n   * @private\n   * @type {ol.LinkedListItem|undefined}\n   */\n  this.head_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\n_ol_structs_LinkedList_.prototype.insertItem = function(data) {\n\n  /** @type {ol.LinkedListItem} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\n_ol_structs_LinkedList_.prototype.removeItem = function() {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.firstItem = function() {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\n_ol_structs_LinkedList_.prototype.lastItem = function() {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.nextItem = function() {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.getNextItem = function() {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.prevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.getPrevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\n_ol_structs_LinkedList_.prototype.getCurrItem = function() {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\n_ol_structs_LinkedList_.prototype.setFirstItem = function() {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {ol.structs.LinkedList} list List to merge into the current list.\n */\n_ol_structs_LinkedList_.prototype.concat = function(list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\n_ol_structs_LinkedList_.prototype.getLength = function() {\n  return this.length_;\n};\nexport default _ol_structs_LinkedList_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_color_ from '../../color.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_geom_flat_contains_ from '../../geom/flat/contains.js';\nimport _ol_geom_flat_orient_ from '../../geom/flat/orient.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_render_webgl_polygonreplay_defaultshader_ from '../webgl/polygonreplay/defaultshader.js';\nimport _ol_render_webgl_polygonreplay_defaultshader_Locations_ from '../webgl/polygonreplay/defaultshader/locations.js';\nimport _ol_render_webgl_LineStringReplay_ from '../webgl/linestringreplay.js';\nimport _ol_render_webgl_Replay_ from '../webgl/replay.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_style_Stroke_ from '../../style/stroke.js';\nimport _ol_structs_LinkedList_ from '../../structs/linkedlist.js';\nimport _ol_structs_RBush_ from '../../structs/rbush.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_PolygonReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_Replay_.call(this, tolerance, maxExtent);\n\n  this.lineStringReplay = new _ol_render_webgl_LineStringReplay_(\n      tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {ol.render.webgl.polygonreplay.defaultshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    changed: false\n  };\n\n};\n\n_ol_.inherits(_ol_render_webgl_PolygonReplay_, _ol_render_webgl_Replay_);\n\n\n/**\n * Draw one polygon.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawCoordinates_ = function(\n    flatCoordinates, holeFlatCoordinates, stride) {\n  // Triangulate the polygon\n  var outerRing = new _ol_structs_LinkedList_();\n  var rtree = new _ol_structs_RBush_();\n  // Initialize the outer ring\n  this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n  var maxCoords = this.getMaxCoords_(outerRing);\n\n  // Eliminate holes, if there are any\n  if (holeFlatCoordinates.length) {\n    var i, ii;\n    var holeLists = [];\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      var holeList = {\n        list: new _ol_structs_LinkedList_(),\n        maxCoords: undefined,\n        rtree: new _ol_structs_RBush_()\n      };\n      holeLists.push(holeList);\n      this.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n      this.classifyPoints_(holeList.list, holeList.rtree, true);\n      holeList.maxCoords = this.getMaxCoords_(holeList.list);\n    }\n    holeLists.sort(function(a, b) {\n      return b.maxCoords[0] === a.maxCoords[0] ?\n        a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n    });\n    for (i = 0; i < holeLists.length; ++i) {\n      var currList = holeLists[i].list;\n      var start = currList.firstItem();\n      var currItem = start;\n      var intersection;\n      do {\n        //TODO: Triangulate holes when they intersect the outer ring.\n        if (this.getIntersections_(currItem, rtree).length) {\n          intersection = true;\n          break;\n        }\n        currItem = currList.nextItem();\n      } while (start !== currItem);\n      if (!intersection) {\n        if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n          rtree.concat(holeLists[i].rtree);\n          this.classifyPoints_(outerRing, rtree, false);\n        }\n      }\n    }\n  } else {\n    this.classifyPoints_(outerRing, rtree, false);\n  }\n  this.triangulate_(outerRing, rtree);\n};\n\n\n/**\n * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {ol.structs.LinkedList} list Linked list.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean} clockwise Coordinate order should be clockwise.\n */\n_ol_render_webgl_PolygonReplay_.prototype.processFlatCoordinates_ = function(\n    flatCoordinates, stride, list, rtree, clockwise) {\n  var isClockwise = _ol_geom_flat_orient_.linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n  var i, ii;\n  var n = this.vertices.length / 2;\n  /** @type {ol.WebglPolygonVertex} */\n  var start;\n  /** @type {ol.WebglPolygonVertex} */\n  var p0;\n  /** @type {ol.WebglPolygonVertex} */\n  var p1;\n  var extents = [];\n  var segments = [];\n  if (clockwise === isClockwise) {\n    start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n    p0 = start;\n    for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  } else {\n    var end = flatCoordinates.length - stride;\n    start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n    p0 = start;\n    for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  }\n  rtree.load(extents, segments);\n};\n\n\n/**\n * Returns the rightmost coordinates of a polygon on the X axis.\n * @private\n * @param {ol.structs.LinkedList} list Polygons ring.\n * @return {Array.<number>} Max X coordinates.\n */\n_ol_render_webgl_PolygonReplay_.prototype.getMaxCoords_ = function(list) {\n  var start = list.firstItem();\n  var seg = start;\n  var maxCoords = [seg.p0.x, seg.p0.y];\n\n  do {\n    seg = list.nextItem();\n    if (seg.p0.x > maxCoords[0]) {\n      maxCoords = [seg.p0.x, seg.p0.y];\n    }\n  } while (seg !== start);\n\n  return maxCoords;\n};\n\n\n/**\n * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n * @private\n * @param {ol.structs.LinkedList} list Polygon ring.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n * @return {boolean} There were reclassified points.\n */\n_ol_render_webgl_PolygonReplay_.prototype.classifyPoints_ = function(list, rtree, ccw) {\n  var start = list.firstItem();\n  var s0 = start;\n  var s1 = list.nextItem();\n  var pointsReclassified = false;\n  do {\n    var reflex = ccw ? _ol_render_webgl_.triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n      _ol_render_webgl_.triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n    if (reflex === undefined) {\n      this.removeItem_(s0, s1, list, rtree);\n      pointsReclassified = true;\n      if (s1 === start) {\n        start = list.getNextItem();\n      }\n      s1 = s0;\n      list.prevItem();\n    } else if (s0.p1.reflex !== reflex) {\n      s0.p1.reflex = reflex;\n      pointsReclassified = true;\n    }\n    s0 = s1;\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return pointsReclassified;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} hole Linked list of the hole.\n * @param {number} holeMaxX Maximum X value of the hole.\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {number} listMaxX Maximum X value of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @return {boolean} Bridging was successful.\n */\n_ol_render_webgl_PolygonReplay_.prototype.bridgeHole_ = function(hole, holeMaxX,\n    list, listMaxX, rtree) {\n  var seg = hole.firstItem();\n  while (seg.p1.x !== holeMaxX) {\n    seg = hole.nextItem();\n  }\n\n  var p1 = seg.p1;\n  /** @type {ol.WebglPolygonVertex} */\n  var p2 = {x: listMaxX, y: p1.y, i: -1};\n  var minDist = Infinity;\n  var i, ii, bestPoint;\n  /** @type {ol.WebglPolygonVertex} */\n  var p5;\n\n  var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n  for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n    var currSeg = intersectingSegments[i];\n    var intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n    var dist = Math.abs(p1.x - intersection[0]);\n    if (dist < minDist && _ol_render_webgl_.triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n      minDist = dist;\n      p5 = {x: intersection[0], y: intersection[1], i: -1};\n      seg = currSeg;\n    }\n  }\n  if (minDist === Infinity) {\n    return false;\n  }\n  bestPoint = seg.p1;\n\n  if (minDist > 0) {\n    var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n    if (pointsInTriangle.length) {\n      var theta = Infinity;\n      for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n        var currPoint = pointsInTriangle[i];\n        var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n        if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n          theta = currTheta;\n          bestPoint = currPoint;\n        }\n      }\n    }\n  }\n\n  seg = list.firstItem();\n  while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n    seg = list.nextItem();\n  }\n\n  //We clone the bridge points as they can have different convexity.\n  var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n  var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n  hole.getNextItem().p0 = p0Bridge;\n  this.insertItem_(p1, seg.p1, hole, rtree);\n  this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n  seg.p1 = p1Bridge;\n  hole.setFirstItem();\n  list.concat(hole);\n\n  return true;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n */\n_ol_render_webgl_PolygonReplay_.prototype.triangulate_ = function(list, rtree) {\n  var ccw = false;\n  var simple = this.isSimple_(list, rtree);\n\n  // Start clipping ears\n  while (list.getLength() > 3) {\n    if (simple) {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n          // introduce touching segments. However, the original data may have some.\n          if (!this.resolveSelfIntersections_(list, rtree, true)) {\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        // We ran out of ears, try to reclassify.\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // We have a bad polygon, try to resolve local self-intersections.\n          if (!this.resolveSelfIntersections_(list, rtree)) {\n            simple = this.isSimple_(list, rtree);\n            if (!simple) {\n              // We have a really bad polygon, try more time consuming methods.\n              this.splitPolygon_(list, rtree);\n              break;\n            } else {\n              ccw = !this.isClockwise_(list);\n              this.classifyPoints_(list, rtree, ccw);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (list.getLength() === 3) {\n    var numIndices = this.indices.length;\n    this.indices[numIndices++] = list.getPrevItem().p0.i;\n    this.indices[numIndices++] = list.getCurrItem().p0.i;\n    this.indices[numIndices++] = list.getNextItem().p0.i;\n  }\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean} simple The polygon is simple.\n * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n * @return {boolean} There were processed ears.\n */\n_ol_render_webgl_PolygonReplay_.prototype.clipEars_ = function(list, rtree, simple, ccw) {\n  var numIndices = this.indices.length;\n  var start = list.firstItem();\n  var s0 = list.getPrevItem();\n  var s1 = start;\n  var s2 = list.nextItem();\n  var s3 = list.getNextItem();\n  var p0, p1, p2;\n  var processedEars = false;\n  do {\n    p0 = s1.p0;\n    p1 = s1.p1;\n    p2 = s2.p1;\n    if (p1.reflex === false) {\n      // We might have a valid ear\n      var variableCriterion;\n      if (simple) {\n        variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n      } else {\n        variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n      }\n      if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n          variableCriterion) {\n        //The diagonal is completely inside the polygon\n        if (simple || p0.reflex === false || p2.reflex === false ||\n            _ol_geom_flat_orient_.linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n              p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n          //The diagonal is persumably valid, we have an ear\n          this.indices[numIndices++] = p0.i;\n          this.indices[numIndices++] = p1.i;\n          this.indices[numIndices++] = p2.i;\n          this.removeItem_(s1, s2, list, rtree);\n          if (s2 === start) {\n            start = s3;\n          }\n          processedEars = true;\n        }\n      }\n    }\n    // Else we have a reflex point.\n    s0 = list.getPrevItem();\n    s1 = list.getCurrItem();\n    s2 = list.nextItem();\n    s3 = list.getNextItem();\n  } while (s1 !== start && list.getLength() > 3);\n\n  return processedEars;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Resolve touching segments.\n * @return {boolean} There were resolved intersections.\n*/\n_ol_render_webgl_PolygonReplay_.prototype.resolveSelfIntersections_ = function(\n    list, rtree, opt_touch) {\n  var start = list.firstItem();\n  list.nextItem();\n  var s0 = start;\n  var s1 = list.nextItem();\n  var resolvedIntersections = false;\n\n  do {\n    var intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n    if (intersection) {\n      var breakCond = false;\n      var numVertices = this.vertices.length;\n      var numIndices = this.indices.length;\n      var n = numVertices / 2;\n      var seg = list.prevItem();\n      list.removeItem();\n      rtree.remove(seg);\n      breakCond = (seg === start);\n      var p;\n      if (opt_touch) {\n        if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n          list.prevItem();\n          p = s0.p0;\n          s1.p0 = p;\n          rtree.remove(s0);\n          breakCond = breakCond || (s0 === start);\n        } else {\n          p = s1.p1;\n          s0.p1 = p;\n          rtree.remove(s1);\n          breakCond = breakCond || (s1 === start);\n        }\n        list.removeItem();\n      } else {\n        p = this.createPoint_(intersection[0], intersection[1], n);\n        s0.p1 = p;\n        s1.p0 = p;\n        rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n          Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n        rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n          Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n      }\n\n      this.indices[numIndices++] = seg.p0.i;\n      this.indices[numIndices++] = seg.p1.i;\n      this.indices[numIndices++] = p.i;\n\n      resolvedIntersections = true;\n      if (breakCond) {\n        break;\n      }\n    }\n\n    s0 = list.getPrevItem();\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return resolvedIntersections;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @return {boolean} The polygon is simple.\n */\n_ol_render_webgl_PolygonReplay_.prototype.isSimple_ = function(list, rtree) {\n  var start = list.firstItem();\n  var seg = start;\n  do {\n    if (this.getIntersections_(seg, rtree).length) {\n      return false;\n    }\n    seg = list.nextItem();\n  } while (seg !== start);\n  return true;\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @return {boolean} Orientation is clockwise.\n */\n_ol_render_webgl_PolygonReplay_.prototype.isClockwise_ = function(list) {\n  var length = list.getLength() * 2;\n  var flatCoordinates = new Array(length);\n  var start = list.firstItem();\n  var seg = start;\n  var i = 0;\n  do {\n    flatCoordinates[i++] = seg.p0.x;\n    flatCoordinates[i++] = seg.p0.y;\n    seg = list.nextItem();\n  } while (seg !== start);\n  return _ol_geom_flat_orient_.linearRingIsClockwise(flatCoordinates, 0, length, 2);\n};\n\n\n/**\n * @private\n * @param {ol.structs.LinkedList} list Linked list of the polygon.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n */\n_ol_render_webgl_PolygonReplay_.prototype.splitPolygon_ = function(list, rtree) {\n  var start = list.firstItem();\n  var s0 = start;\n  do {\n    var intersections = this.getIntersections_(s0, rtree);\n    if (intersections.length) {\n      var s1 = intersections[0];\n      var n = this.vertices.length / 2;\n      var intersection = this.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n      var p = this.createPoint_(intersection[0], intersection[1], n);\n      var newPolygon = new _ol_structs_LinkedList_();\n      var newRtree = new _ol_structs_RBush_();\n      this.insertItem_(p, s0.p1, newPolygon, newRtree);\n      s0.p1 = p;\n      rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n        Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n      var currItem = list.nextItem();\n      while (currItem !== s1) {\n        this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n        rtree.remove(currItem);\n        list.removeItem();\n        currItem = list.getCurrItem();\n      }\n      this.insertItem_(s1.p0, p, newPolygon, newRtree);\n      s1.p0 = p;\n      rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n        Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n      this.classifyPoints_(list, rtree, false);\n      this.triangulate_(list, rtree);\n      this.classifyPoints_(newPolygon, newRtree, false);\n      this.triangulate_(newPolygon, newRtree);\n      break;\n    }\n    s0 = list.nextItem();\n  } while (s0 !== start);\n};\n\n\n/**\n * @private\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @param {number} i Index.\n * @return {ol.WebglPolygonVertex} List item.\n */\n_ol_render_webgl_PolygonReplay_.prototype.createPoint_ = function(x, y, i) {\n  var numVertices = this.vertices.length;\n  this.vertices[numVertices++] = x;\n  this.vertices[numVertices++] = y;\n  /** @type {ol.WebglPolygonVertex} */\n  var p = {\n    x: x,\n    y: y,\n    i: i,\n    reflex: undefined\n  };\n  return p;\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonVertex} p0 First point of segment.\n * @param {ol.WebglPolygonVertex} p1 Second point of segment.\n * @param {ol.structs.LinkedList} list Polygon ring.\n * @param {ol.structs.RBush=} opt_rtree Insert the segment into the R-Tree.\n * @return {ol.WebglPolygonSegment} segment.\n */\n_ol_render_webgl_PolygonReplay_.prototype.insertItem_ = function(p0, p1, list, opt_rtree) {\n  var seg = {\n    p0: p0,\n    p1: p1\n  };\n  list.insertItem(seg);\n  if (opt_rtree) {\n    opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n      Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n  }\n  return seg;\n};\n\n\n/**\n  * @private\n  * @param {ol.WebglPolygonSegment} s0 Segment before the remove candidate.\n  * @param {ol.WebglPolygonSegment} s1 Remove candidate segment.\n  * @param {ol.structs.LinkedList} list Polygon ring.\n  * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n  */\n_ol_render_webgl_PolygonReplay_.prototype.removeItem_ = function(s0, s1, list, rtree) {\n  if (list.getCurrItem() === s1) {\n    list.removeItem();\n    s0.p1 = s1.p1;\n    rtree.remove(s1);\n    rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n      Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n  }\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonVertex} p0 First point.\n * @param {ol.WebglPolygonVertex} p1 Second point.\n * @param {ol.WebglPolygonVertex} p2 Third point.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_reflex Only include reflex points.\n * @return {Array.<ol.WebglPolygonVertex>} Points in the triangle.\n */\n_ol_render_webgl_PolygonReplay_.prototype.getPointsInTriangle_ = function(p0, p1,\n    p2, rtree, opt_reflex) {\n  var i, ii, j, p;\n  var result = [];\n  var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n    Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n  for (i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    for (j in segmentsInExtent[i]) {\n      p = segmentsInExtent[i][j];\n      if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n        if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n            (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n            _ol_geom_flat_contains_.linearRingContainsXY([p0.x, p0.y, p1.x, p1.y,\n              p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n          result.push(p);\n        }\n      }\n    }\n  }\n  return result;\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonSegment} segment Segment.\n * @param {ol.structs.RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<ol.WebglPolygonSegment>} Intersecting segments.\n */\n_ol_render_webgl_PolygonReplay_.prototype.getIntersections_ = function(segment, rtree, opt_touch) {\n  var p0 = segment.p0;\n  var p1 = segment.p1;\n  var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n    Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n  var result = [];\n  var i, ii;\n  for (i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    var currSeg = segmentsInExtent[i];\n    if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n        this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n      result.push(currSeg);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Line intersection algorithm by Paul Bourke.\n * @see http://paulbourke.net/geometry/pointlineplane/\n *\n * @private\n * @param {ol.WebglPolygonVertex} p0 First point.\n * @param {ol.WebglPolygonVertex} p1 Second point.\n * @param {ol.WebglPolygonVertex} p2 Third point.\n * @param {ol.WebglPolygonVertex} p3 Fourth point.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<number>|undefined} Intersection coordinates.\n */\n_ol_render_webgl_PolygonReplay_.prototype.calculateIntersection_ = function(p0,\n    p1, p2, p3, opt_touch) {\n  var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n  if (denom !== 0) {\n    var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n    var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n    if ((!opt_touch && ua > _ol_render_webgl_.EPSILON && ua < 1 - _ol_render_webgl_.EPSILON &&\n        ub > _ol_render_webgl_.EPSILON && ub < 1 - _ol_render_webgl_.EPSILON) || (opt_touch &&\n        ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n      return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {ol.WebglPolygonVertex} p0 Point before the start of the diagonal.\n * @param {ol.WebglPolygonVertex} p1 Start point of the diagonal.\n * @param {ol.WebglPolygonVertex} p2 Ear candidate.\n * @param {ol.WebglPolygonVertex} p3 End point of the diagonal.\n * @param {ol.WebglPolygonVertex} p4 Point after the end of the diagonal.\n * @return {boolean} Diagonal is inside the polygon.\n */\n_ol_render_webgl_PolygonReplay_.prototype.diagonalIsInside_ = function(p0, p1, p2, p3, p4) {\n  if (p1.reflex === undefined || p3.reflex === undefined) {\n    return false;\n  }\n  var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n  var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n  var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n  var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n  var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n  var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n  return p1InCone && p3InCone;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  var endss = multiPolygonGeometry.getEndss();\n  var stride = multiPolygonGeometry.getStride();\n  var currIndex = this.indices.length;\n  var currLineIndex = this.lineStringReplay.getCurrentIndex();\n  var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n  var i, ii, j, jj;\n  var start = 0;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (ends.length > 0) {\n      var outerRing = _ol_geom_flat_transform_.translate(flatCoordinates, start, ends[0],\n          stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var holeFlatCoords;\n        for (j = 1, jj = ends.length; j < jj; ++j) {\n          if (ends[j] !== ends[j - 1]) {\n            holeFlatCoords = _ol_geom_flat_transform_.translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n    start = ends[ends.length - 1];\n  }\n  if (this.indices.length > currIndex) {\n    this.startIndices.push(currIndex);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(currIndex);\n      this.state_.changed = false;\n    }\n  }\n  if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n    this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawPolygon = function(polygonGeometry, feature) {\n  var ends = polygonGeometry.getEnds();\n  var stride = polygonGeometry.getStride();\n  if (ends.length > 0) {\n    var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n    var outerRing = _ol_geom_flat_transform_.translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n    if (outerRing.length) {\n      var holes = [];\n      var i, ii, holeFlatCoords;\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (ends[i] !== ends[i - 1]) {\n          holeFlatCoords = _ol_geom_flat_transform_.translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this.origin[0], -this.origin[1]);\n          holes.push(holeFlatCoords);\n        }\n      }\n\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.lineStringReplay.setPolygonStyle(feature);\n\n      this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n      this.drawCoordinates_(outerRing, holes, stride);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\n_ol_render_webgl_PolygonReplay_.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  this.lineStringReplay.finish(context);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.getDeleteResourcesFunction = function(context) {\n  var verticesBuffer = this.verticesBuffer;\n  var indicesBuffer = this.indicesBuffer;\n  var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n    lineDeleter();\n  };\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  var fragmentShader, vertexShader;\n  fragmentShader = _ol_render_webgl_polygonreplay_defaultshader_.fragment;\n  vertexShader = _ol_render_webgl_polygonreplay_defaultshader_.vertex;\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  // get the locations\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_render_webgl_polygonreplay_defaultshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, _ol_webgl_.FLOAT,\n      false, 8, 0);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!_ol_obj_.isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    var i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n    featureCallback, opt_hitExtent) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || _ol_extent_.intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        var result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {ol.webgl.Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\n_ol_render_webgl_PolygonReplay_.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = _ol_.getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\n_ol_render_webgl_PolygonReplay_.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_PolygonReplay_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = _ol_color_.asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || _ol_render_webgl_.defaultFillStyle;\n  } else {\n    fillStyleColor = _ol_render_webgl_.defaultFillStyle;\n  }\n  if (!this.state_.fillColor || !_ol_array_.equals(fillStyleColor, this.state_.fillColor)) {\n    this.state_.fillColor = fillStyleColor;\n    this.state_.changed = true;\n    this.styles_.push(fillStyleColor);\n  }\n  //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n  if (strokeStyle) {\n    this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n  } else {\n    var nullStrokeStyle = new _ol_style_Stroke_({\n      color: [0, 0, 0, 0],\n      lineWidth: 0\n    });\n    this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n  }\n};\nexport default _ol_render_webgl_PolygonReplay_;\n","import _ol_dom_ from '../dom.js';\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar _ol_style_Atlas_ = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<ol.AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, ol.AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = _ol_dom_.createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?ol.AtlasInfo} The atlas info.\n */\n_ol_style_Atlas_.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?ol.AtlasInfo} The position and atlas image for the entry.\n */\n_ol_style_Atlas_.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  var block, i, ii;\n  for (i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n          block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {ol.AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\n_ol_style_Atlas_.prototype.split_ = function(index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {ol.AtlasBlock} */\n  var newBlock1;\n  /** @type {ol.AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {ol.AtlasBlock} newBlock1 The 1st block to add.\n * @param {ol.AtlasBlock} newBlock2 The 2nd block to add.\n */\n_ol_style_Atlas_.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  var args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default _ol_style_Atlas_;\n","import _ol_ from '../index.js';\nimport _ol_style_Atlas_ from '../style/atlas.js';\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {olx.style.AtlasManagerOptions=} opt_options Options.\n */\nvar _ol_style_AtlasManager_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : _ol_.INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : _ol_.MAX_ATLAS_SIZE != -1 ?\n      _ol_.MAX_ATLAS_SIZE : _ol_.WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        _ol_.WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Atlas>}\n   */\n  this.atlases_ = [new _ol_style_Atlas_(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Atlas>}\n   */\n  this.hitAtlases_ = [new _ol_style_Atlas_(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?ol.AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\n_ol_style_AtlasManager_.prototype.getInfo = function(id) {\n  /** @type {?ol.AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {ol.AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<ol.style.Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?ol.AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\n_ol_style_AtlasManager_.prototype.getInfo_ = function(atlases, id) {\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {ol.AtlasInfo} info The info for the real image.\n * @param {ol.AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?ol.AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\n_ol_style_AtlasManager_.prototype.mergeInfos_ = function(info, hitInfo) {\n  return /** @type {ol.AtlasManagerInfo} */ ({\n    offsetX: info.offsetX,\n    offsetY: info.offsetY,\n    image: info.image,\n    hitImage: hitInfo.image\n  });\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?ol.AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\n_ol_style_AtlasManager_.prototype.add = function(id, width, height,\n    renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?ol.AtlasInfo} */\n  var info = this.add_(false,\n      id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : _ol_.nullFunction;\n\n  var hitInfo = /** @type {ol.AtlasInfo} */ (this.add_(true,\n      id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?ol.AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\n_ol_style_AtlasManager_.prototype.add_ = function(isHitAtlas, id, width, height,\n    renderCallback, opt_this) {\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new _ol_style_Atlas_(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default _ol_style_AtlasManager_;\n","import _ol_ from '../../index.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_render_webgl_ from '../webgl.js';\nimport _ol_render_webgl_TextureReplay_ from '../webgl/texturereplay.js';\nimport _ol_style_AtlasManager_ from '../../style/atlasmanager.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_TextReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_TextureReplay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.images_ = [];\n\n  /**\n   * @private\n   * @type {Array.<WebGLTexture>}\n   */\n  this.textures_ = [];\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.measureCanvas_ = _ol_dom_.createCanvasContext2D(0, 0).canvas;\n\n  /**\n   * @private\n   * @type {{strokeColor: (ol.ColorLike|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: number,\n   *         miterLimit: (number|undefined),\n   *         fillColor: (ol.ColorLike|null),\n   *         font: (string|undefined),\n   *         scale: (number|undefined)}}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textAlign_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textBaseline_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetY_ = undefined;\n\n  /**\n   * @private\n   * @type {Object.<string, ol.WebglGlyphAtlas>}\n   */\n  this.atlases_ = {};\n\n  /**\n   * @private\n   * @type {ol.WebglGlyphAtlas|undefined}\n   */\n  this.currAtlas_ = undefined;\n\n  this.scale = 1;\n\n  this.opacity = 1;\n\n};\n\n_ol_.inherits(_ol_render_webgl_TextReplay_, _ol_render_webgl_TextureReplay_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.drawText = function(geometry, feature) {\n  if (this.text_) {\n    var flatCoordinates = null;\n    var offset = 0;\n    var end = 2;\n    var stride = 2;\n    switch (geometry.getType()) {\n      case _ol_geom_GeometryType_.POINT:\n      case _ol_geom_GeometryType_.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        stride = geometry.getStride();\n        break;\n      case _ol_geom_GeometryType_.CIRCLE:\n        flatCoordinates = /** @type {ol.geom.Circle} */ (geometry).getCenter();\n        break;\n      case _ol_geom_GeometryType_.LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {ol.geom.MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case _ol_geom_GeometryType_.POLYGON:\n        flatCoordinates = /** @type {ol.geom.Polygon} */ (geometry).getFlatInteriorPoint();\n        break;\n      case _ol_geom_GeometryType_.MULTI_POLYGON:\n        flatCoordinates = /** @type {ol.geom.MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        end = flatCoordinates.length;\n        break;\n      default:\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n\n    var glyphAtlas = this.currAtlas_;\n    var lines = this.text_.split('\\n');\n    var textSize = this.getTextSize_(lines);\n    var i, ii, j, jj, currX, currY, charArr, charInfo;\n    var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n    var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n    var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      currX = 0;\n      currY = glyphAtlas.height * i;\n      charArr = lines[i].split('');\n\n      for (j = 0, jj = charArr.length; j < jj; ++j) {\n        charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n        if (charInfo) {\n          var image = charInfo.image;\n\n          this.anchorX = anchorX - currX;\n          this.anchorY = anchorY - currY;\n          this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n          this.originY = charInfo.offsetY;\n          this.height = glyphAtlas.height;\n          this.width = j === 0 || j === charArr.length - 1 ?\n            glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n          this.imageHeight = image.height;\n          this.imageWidth = image.width;\n\n          var currentImage;\n          if (this.images_.length === 0) {\n            this.images_.push(image);\n          } else {\n            currentImage = this.images_[this.images_.length - 1];\n            if (_ol_.getUid(currentImage) != _ol_.getUid(image)) {\n              this.groupIndices.push(this.indices.length);\n              this.images_.push(image);\n            }\n          }\n\n          this.drawText_(flatCoordinates, offset, end, stride);\n        }\n        currX += this.width;\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Array.<string>} lines Label to draw split to lines.\n * @return {Array.<number>} Size of the label in pixels.\n */\n_ol_render_webgl_TextReplay_.prototype.getTextSize_ = function(lines) {\n  var self = this;\n  var glyphAtlas = this.currAtlas_;\n  var textHeight = lines.length * glyphAtlas.height;\n  //Split every line to an array of chars, sum up their width, and select the longest.\n  var textWidth = lines.map(function(str) {\n    var sum = 0;\n    var i, ii;\n    for (i = 0, ii = str.length; i < ii; ++i) {\n      var curr = str[i];\n      if (!glyphAtlas.width[curr]) {\n        self.addCharToAtlas_(curr);\n      }\n      sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n    }\n    return sum;\n  }).reduce(function(max, curr) {\n    return Math.max(max, curr);\n  });\n\n  return [textWidth, textHeight];\n};\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\n_ol_render_webgl_TextReplay_.prototype.drawText_ = function(flatCoordinates, offset,\n    end, stride) {\n  var i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.drawCoordinates(flatCoordinates, offset, end, stride);\n  }\n};\n\n\n/**\n * @private\n * @param {string} char Character.\n */\n_ol_render_webgl_TextReplay_.prototype.addCharToAtlas_ = function(char) {\n  if (char.length === 1) {\n    var glyphAtlas = this.currAtlas_;\n    var state = this.state_;\n    var mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n    var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (_ol_has_.CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n                /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n    if (info) {\n      glyphAtlas.width[char] = width;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.finish = function(context) {\n  var gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices = this.groupIndices;\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(this.indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  var texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n  this.text_ = '';\n  this.textAlign_ = undefined;\n  this.textBaseline_ = undefined;\n  this.offsetX_ = undefined;\n  this.offsetY_ = undefined;\n  this.images_ = null;\n  this.atlases_ = {};\n  this.currAtlas_ = undefined;\n  _ol_render_webgl_TextureReplay_.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.setTextStyle = function(textStyle) {\n  var state = this.state_;\n  var textFillStyle = textStyle.getFill();\n  var textStrokeStyle = textStyle.getStroke();\n  if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n    this.text_ = '';\n  } else {\n    if (!textFillStyle) {\n      state.fillColor = null;\n    } else {\n      var textFillStyleColor = textFillStyle.getColor();\n      state.fillColor = _ol_colorlike_.asColorLike(textFillStyleColor ?\n        textFillStyleColor : _ol_render_webgl_.defaultFillStyle);\n    }\n    if (!textStrokeStyle) {\n      state.strokeColor = null;\n      state.lineWidth = 0;\n    } else {\n      var textStrokeStyleColor = textStrokeStyle.getColor();\n      state.strokeColor = _ol_colorlike_.asColorLike(textStrokeStyleColor ?\n        textStrokeStyleColor : _ol_render_webgl_.defaultStrokeStyle);\n      state.lineWidth = textStrokeStyle.getWidth() || _ol_render_webgl_.defaultLineWidth;\n      state.lineCap = textStrokeStyle.getLineCap() || _ol_render_webgl_.defaultLineCap;\n      state.lineDashOffset = textStrokeStyle.getLineDashOffset() || _ol_render_webgl_.defaultLineDashOffset;\n      state.lineJoin = textStrokeStyle.getLineJoin() || _ol_render_webgl_.defaultLineJoin;\n      state.miterLimit = textStrokeStyle.getMiterLimit() || _ol_render_webgl_.defaultMiterLimit;\n      var lineDash = textStrokeStyle.getLineDash();\n      state.lineDash = lineDash ? lineDash.slice() : _ol_render_webgl_.defaultLineDash;\n    }\n    state.font = textStyle.getFont() || _ol_render_webgl_.defaultFont;\n    state.scale = textStyle.getScale() || 1;\n    this.text_ = /** @type {string} */ (textStyle.getText());\n    var textAlign = _ol_render_replay_.TEXT_ALIGN[textStyle.getTextAlign()];\n    var textBaseline = _ol_render_replay_.TEXT_ALIGN[textStyle.getTextBaseline()];\n    this.textAlign_ = textAlign === undefined ?\n      _ol_render_webgl_.defaultTextAlign : textAlign;\n    this.textBaseline_ = textBaseline === undefined ?\n      _ol_render_webgl_.defaultTextBaseline : textBaseline;\n    this.offsetX_ = textStyle.getOffsetX() || 0;\n    this.offsetY_ = textStyle.getOffsetY() || 0;\n    this.rotateWithView = !!textStyle.getRotateWithView();\n    this.rotation = textStyle.getRotation() || 0;\n\n    this.currAtlas_ = this.getAtlas_(state);\n  }\n};\n\n\n/**\n * @private\n * @param {Object} state Font attributes.\n * @return {ol.WebglGlyphAtlas} Glyph atlas.\n */\n_ol_render_webgl_TextReplay_.prototype.getAtlas_ = function(state) {\n  var params = [];\n  var i;\n  for (i in state) {\n    if (state[i] || state[i] === 0) {\n      if (Array.isArray(state[i])) {\n        params = params.concat(state[i]);\n      } else {\n        params.push(state[i]);\n      }\n    }\n  }\n  var hash = this.calculateHash_(params);\n  if (!this.atlases_[hash]) {\n    var mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n        state.lineWidth / 2) * state.scale);\n\n    this.atlases_[hash] = {\n      atlas: new _ol_style_AtlasManager_({\n        space: state.lineWidth + 1\n      }),\n      width: {},\n      height: height\n    };\n  }\n  return this.atlases_[hash];\n};\n\n\n/**\n * @private\n * @param {Array.<string|number>} params Array of parameters.\n * @return {string} Hash string.\n */\n_ol_render_webgl_TextReplay_.prototype.calculateHash_ = function(params) {\n  //TODO: Create a more performant, reliable, general hash function.\n  var i, ii;\n  var hash = '';\n  for (i = 0, ii = params.length; i < ii; ++i) {\n    hash += params[i];\n  }\n  return hash;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.getTextures = function(opt_all) {\n  return this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_TextReplay_.prototype.getHitDetectionTextures = function() {\n  return this.textures_;\n};\nexport default _ol_render_webgl_TextReplay_;\n","import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_render_ReplayGroup_ from '../replaygroup.js';\nimport _ol_render_webgl_CircleReplay_ from '../webgl/circlereplay.js';\nimport _ol_render_webgl_ImageReplay_ from '../webgl/imagereplay.js';\nimport _ol_render_webgl_LineStringReplay_ from '../webgl/linestringreplay.js';\nimport _ol_render_webgl_PolygonReplay_ from '../webgl/polygonreplay.js';\nimport _ol_render_webgl_TextReplay_ from '../webgl/textreplay.js';\n\n/**\n * @constructor\n * @extends {ol.render.ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @param {number=} opt_renderBuffer Render buffer.\n * @struct\n */\nvar _ol_render_webgl_ReplayGroup_ = function(tolerance, maxExtent, opt_renderBuffer) {\n  _ol_render_ReplayGroup_.call(this);\n\n  /**\n   * @type {ol.Extent}\n   * @private\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<ol.render.ReplayType, ol.render.webgl.Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n};\n\n_ol_.inherits(_ol_render_webgl_ReplayGroup_, _ol_render_ReplayGroup_);\n\n\n/**\n * @param {ol.style.Style} style Style.\n * @param {boolean} group Group with previous replay.\n */\n_ol_render_webgl_ReplayGroup_.prototype.addDeclutter = function(style, group) {};\n\n\n/**\n * @param {ol.webgl.Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\n_ol_render_webgl_ReplayGroup_.prototype.getDeleteResourcesFunction = function(context) {\n  var functions = [];\n  var zKey;\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n    for (replayKey in replays) {\n      functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n    }\n  }\n  return function() {\n    var length = functions.length;\n    var result;\n    for (var i = 0; i < length; i++) {\n      result = functions[i].apply(this, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * @param {ol.webgl.Context} context Context.\n */\n_ol_render_webgl_ReplayGroup_.prototype.finish = function(context) {\n  var zKey;\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n    for (replayKey in replays) {\n      replays[replayKey].finish(context);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ReplayGroup_.prototype.getReplay = function(zIndex, replayType) {\n  var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  var replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  var replay = replays[replayType];\n  if (replay === undefined) {\n    /**\n     * @type {Function}\n     */\n    var Constructor = _ol_render_webgl_ReplayGroup_.BATCH_CONSTRUCTORS_[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ReplayGroup_.prototype.isEmpty = function() {\n  return _ol_obj_.isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n */\n_ol_render_webgl_ReplayGroup_.prototype.replay = function(context,\n    center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash) {\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  var i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = 0, jj = _ol_render_replay_.ORDER.length; j < jj; ++j) {\n      replay = replays[_ol_render_replay_.ORDER[j]];\n      if (replay !== undefined) {\n        replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {ol.Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_ReplayGroup_.prototype.replayHitDetection_ = function(context,\n    center, resolution, rotation, size, pixelRatio, opacity,\n    skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(function(a, b) {\n    return b - a;\n  });\n\n  var i, ii, j, replays, replay, result;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = _ol_render_replay_.ORDER.length - 1; j >= 0; --j) {\n      replay = replays[_ol_render_replay_.ORDER[j]];\n      if (replay !== undefined) {\n        result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T|undefined} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_webgl_ReplayGroup_.prototype.forEachFeatureAtCoordinate = function(\n    coordinate, context, center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash,\n    callback) {\n  var gl = context.getGL();\n  gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n  /**\n   * @type {ol.Extent}\n   */\n  var hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    // build an extent around the coordinate, so that only features that\n    // intersect this extent are checked\n    hitExtent = _ol_extent_.buffer(\n        _ol_extent_.createOrUpdateFromCoordinate(coordinate),\n        resolution * this.renderBuffer_);\n  }\n\n  return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, _ol_render_webgl_ReplayGroup_.HIT_DETECTION_SIZE_,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @return {boolean} Is there a feature at the given coordinate?\n */\n_ol_render_webgl_ReplayGroup_.prototype.hasFeatureAtCoordinate = function(\n    coordinate, context, center, resolution, rotation, size, pixelRatio,\n    opacity, skippedFeaturesHash) {\n  var gl = context.getGL();\n  gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n  var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, _ol_render_webgl_ReplayGroup_.HIT_DETECTION_SIZE_,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n  return hasFeature !== undefined;\n};\n\n/**\n * @const\n * @private\n * @type {Array.<number>}\n */\n_ol_render_webgl_ReplayGroup_.HIT_DETECTION_SIZE_ = [1, 1];\n\n/**\n * @const\n * @private\n * @type {Object.<ol.render.ReplayType,\n *                function(new: ol.render.webgl.Replay, number,\n *                ol.Extent)>}\n */\n_ol_render_webgl_ReplayGroup_.BATCH_CONSTRUCTORS_ = {\n  'Circle': _ol_render_webgl_CircleReplay_,\n  'Image': _ol_render_webgl_ImageReplay_,\n  'LineString': _ol_render_webgl_LineStringReplay_,\n  'Polygon': _ol_render_webgl_PolygonReplay_,\n  'Text': _ol_render_webgl_TextReplay_\n};\nexport default _ol_render_webgl_ReplayGroup_;\n","import _ol_ from '../../index.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_render_ReplayType_ from '../replaytype.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_webgl_ReplayGroup_ from '../webgl/replaygroup.js';\n\n/**\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {ol.webgl.Context} context Context.\n * @param {ol.Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {ol.Size} size Size.\n * @param {ol.Extent} extent Extent.\n * @param {number} pixelRatio Pixel ratio.\n * @struct\n */\nvar _ol_render_webgl_Immediate_ = function(context, center, resolution, rotation, size, extent, pixelRatio) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @private\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   */\n  this.center_ = center;\n\n  /**\n   * @private\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   */\n  this.rotation_ = rotation;\n\n  /**\n   * @private\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {ol.style.Image}\n   */\n  this.imageStyle_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fillStyle_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.strokeStyle_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Text}\n   */\n  this.textStyle_ = null;\n\n};\n\n_ol_.inherits(_ol_render_webgl_Immediate_, _ol_render_VectorContext_);\n\n\n/**\n * @param {ol.render.webgl.ReplayGroup} replayGroup Replay group.\n * @param {ol.geom.Geometry|ol.render.Feature} geometry Geometry.\n * @private\n */\n_ol_render_webgl_Immediate_.prototype.drawText_ = function(replayGroup, geometry) {\n  var context = this.context_;\n  var replay = /** @type {ol.render.webgl.TextReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.TEXT));\n  replay.setTextStyle(this.textStyle_);\n  replay.drawText(geometry, null);\n  replay.finish(context);\n  // default colors\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {ol.style.Style} style The rendering style.\n * @override\n * @api\n */\n_ol_render_webgl_Immediate_.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol.render.webgl.Immediate#setStyle} first to set the rendering style.\n *\n * @param {ol.geom.Geometry|ol.render.Feature} geometry The geometry to render.\n * @override\n * @api\n */\n_ol_render_webgl_Immediate_.prototype.drawGeometry = function(geometry) {\n  var type = geometry.getType();\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n      this.drawPoint(/** @type {ol.geom.Point} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.LINE_STRING:\n      this.drawLineString(/** @type {ol.geom.LineString} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.POLYGON:\n      this.drawPolygon(/** @type {ol.geom.Polygon} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.MULTI_POINT:\n      this.drawMultiPoint(/** @type {ol.geom.MultiPoint} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {ol.geom.MultiLineString} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {ol.geom.MultiPolygon} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {ol.geom.GeometryCollection} */ (geometry), null);\n      break;\n    case _ol_geom_GeometryType_.CIRCLE:\n      this.drawCircle(/** @type {ol.geom.Circle} */ (geometry), null);\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_render_webgl_Immediate_.prototype.drawFeature = function(feature, style) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry ||\n      !_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawGeometryCollection = function(geometry, data) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawPoint = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.ImageReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawPoint(geometry, data);\n  replay.finish(context);\n  // default colors\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawMultiPoint = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.ImageReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawMultiPoint(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawLineString = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.LineStringReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawLineString(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawMultiLineString = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.LineStringReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawMultiLineString(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawPolygon = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.PolygonReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawPolygon(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawMultiPolygon = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.PolygonReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawMultiPolygon(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.drawCircle = function(geometry, data) {\n  var context = this.context_;\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(1, this.extent_);\n  var replay = /** @type {ol.render.webgl.CircleReplay} */ (\n    replayGroup.getReplay(0, _ol_render_ReplayType_.CIRCLE));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawCircle(geometry, data);\n  replay.finish(context);\n  var opacity = 1;\n  var skippedFeatures = {};\n  var featureCallback;\n  var oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.setImageStyle = function(imageStyle) {\n  this.imageStyle_ = imageStyle;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  this.fillStyle_ = fillStyle;\n  this.strokeStyle_ = strokeStyle;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_Immediate_.prototype.setTextStyle = function(textStyle) {\n  this.textStyle_ = textStyle;\n};\nexport default _ol_render_webgl_Immediate_;\n","// This file is automatically generated, do not edit\nimport _ol_ from '../../index.js';\nimport _ol_webgl_Fragment_ from '../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../webgl/vertex.js';\nvar _ol_renderer_webgl_defaultmapshader_ = {};\n\n\n_ol_renderer_webgl_defaultmapshader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\n_ol_renderer_webgl_defaultmapshader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\nexport default _ol_renderer_webgl_defaultmapshader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_renderer_webgl_defaultmapshader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default _ol_renderer_webgl_defaultmapshader_Locations_;","import _ol_ from '../../index.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_webgl_Immediate_ from '../../render/webgl/immediate.js';\nimport _ol_renderer_Layer_ from '../layer.js';\nimport _ol_renderer_webgl_defaultmapshader_ from '../webgl/defaultmapshader.js';\nimport _ol_renderer_webgl_defaultmapshader_Locations_ from '../webgl/defaultmapshader/locations.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_vec_Mat4_ from '../../vec/mat4.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {ol.renderer.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Layer} layer Layer.\n */\nvar _ol_renderer_webgl_Layer_ = function(mapRenderer, layer) {\n\n  _ol_renderer_Layer_.call(this, layer);\n\n  /**\n   * @protected\n   * @type {ol.renderer.webgl.Map}\n   */\n  this.mapRenderer = mapRenderer;\n\n  /**\n   * @private\n   * @type {ol.webgl.Buffer}\n   */\n  this.arrayBuffer_ = new _ol_webgl_Buffer_([\n    -1, -1, 0, 0,\n    1, -1, 1, 0,\n    -1, 1, 0, 1,\n    1, 1, 1, 1\n  ]);\n\n  /**\n   * @protected\n   * @type {WebGLTexture}\n   */\n  this.texture = null;\n\n  /**\n   * @protected\n   * @type {WebGLFramebuffer}\n   */\n  this.framebuffer = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.framebufferDimension = undefined;\n\n  /**\n   * @protected\n   * @type {ol.Transform}\n   */\n  this.texCoordMatrix = _ol_transform_.create();\n\n  /**\n   * @protected\n   * @type {ol.Transform}\n   */\n  this.projectionMatrix = _ol_transform_.create();\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.tmpMat4_ = _ol_vec_Mat4_.create();\n\n  /**\n   * @private\n   * @type {ol.renderer.webgl.defaultmapshader.Locations}\n   */\n  this.defaultLocations_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_Layer_, _ol_renderer_Layer_);\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {number} framebufferDimension Framebuffer dimension.\n * @protected\n */\n_ol_renderer_webgl_Layer_.prototype.bindFramebuffer = function(frameState, framebufferDimension) {\n\n  var gl = this.mapRenderer.getGL();\n\n  if (this.framebufferDimension === undefined ||\n      this.framebufferDimension != framebufferDimension) {\n    /**\n     * @param {WebGLRenderingContext} gl GL.\n     * @param {WebGLFramebuffer} framebuffer Framebuffer.\n     * @param {WebGLTexture} texture Texture.\n     */\n    var postRenderFunction = function(gl, framebuffer, texture) {\n      if (!gl.isContextLost()) {\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n      }\n    }.bind(null, gl, this.framebuffer, this.texture);\n\n    frameState.postRenderFunctions.push(\n        /** @type {ol.PostRenderFunction} */ (postRenderFunction)\n    );\n\n    var texture = _ol_webgl_Context_.createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(_ol_webgl_.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(_ol_webgl_.FRAMEBUFFER,\n        _ol_webgl_.COLOR_ATTACHMENT0, _ol_webgl_.TEXTURE_2D, texture, 0);\n\n    this.texture = texture;\n    this.framebuffer = framebuffer;\n    this.framebufferDimension = framebufferDimension;\n\n  } else {\n    gl.bindFramebuffer(_ol_webgl_.FRAMEBUFFER, this.framebuffer);\n  }\n\n};\n\n\n/**\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {ol.webgl.Context} context Context.\n */\n_ol_renderer_webgl_Layer_.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.dispatchComposeEvent_(\n      _ol_render_EventType_.PRECOMPOSE, context, frameState);\n\n  context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.arrayBuffer_);\n\n  var gl = context.getGL();\n\n  var fragmentShader = _ol_renderer_webgl_defaultmapshader_.fragment;\n  var vertexShader = _ol_renderer_webgl_defaultmapshader_.vertex;\n\n  var program = context.getProgram(fragmentShader, vertexShader);\n\n  var locations;\n  if (!this.defaultLocations_) {\n    locations = new _ol_renderer_webgl_defaultmapshader_Locations_(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  if (context.useProgram(program)) {\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(\n        locations.a_position, 2, _ol_webgl_.FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(\n        locations.a_texCoord, 2, _ol_webgl_.FLOAT, false, 16, 8);\n    gl.uniform1i(locations.u_texture, 0);\n  }\n\n  gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      _ol_vec_Mat4_.fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n  gl.uniform1f(locations.u_opacity, layerState.opacity);\n  gl.bindTexture(_ol_webgl_.TEXTURE_2D, this.getTexture());\n  gl.drawArrays(_ol_webgl_.TRIANGLE_STRIP, 0, 4);\n\n  this.dispatchComposeEvent_(\n      _ol_render_EventType_.POSTCOMPOSE, context, frameState);\n\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {ol.webgl.Context} context WebGL context.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_webgl_Layer_.prototype.dispatchComposeEvent_ = function(type, context, frameState) {\n  var layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    var viewState = frameState.viewState;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var extent = frameState.extent;\n    var center = viewState.center;\n    var rotation = viewState.rotation;\n    var size = frameState.size;\n\n    var render = new _ol_render_webgl_Immediate_(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n    var composeEvent = new _ol_render_Event_(\n        type, render, frameState, null, context);\n    layer.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @return {!ol.Transform} Matrix.\n */\n_ol_renderer_webgl_Layer_.prototype.getTexCoordMatrix = function() {\n  return this.texCoordMatrix;\n};\n\n\n/**\n * @return {WebGLTexture} Texture.\n */\n_ol_renderer_webgl_Layer_.prototype.getTexture = function() {\n  return this.texture;\n};\n\n\n/**\n * @return {!ol.Transform} Matrix.\n */\n_ol_renderer_webgl_Layer_.prototype.getProjectionMatrix = function() {\n  return this.projectionMatrix;\n};\n\n\n/**\n * Handle webglcontextlost.\n */\n_ol_renderer_webgl_Layer_.prototype.handleWebGLContextLost = function() {\n  this.texture = null;\n  this.framebuffer = null;\n  this.framebufferDimension = undefined;\n};\n\n\n/**\n * @abstract\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @param {ol.webgl.Context} context Context.\n * @return {boolean} whether composeFrame should be called.\n */\n_ol_renderer_webgl_Layer_.prototype.prepareFrame = function(frameState, layerState, context) {};\n\n\n/**\n * @abstract\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.FrameState} frameState FrameState.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\n_ol_renderer_webgl_Layer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {};\nexport default _ol_renderer_webgl_Layer_;\n","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_functions_ from '../../functions.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Image} imageLayer Tile layer.\n * @api\n */\nvar _ol_renderer_webgl_ImageLayer_ = function(mapRenderer, imageLayer) {\n\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, imageLayer);\n\n  /**\n   * The last rendered image.\n   * @private\n   * @type {?ol.ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n  /**\n   * @private\n   * @type {?ol.Transform}\n   */\n  this.hitTransformationMatrix_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_ImageLayer_, _ol_renderer_webgl_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_ImageLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.ImageLayer} The layer renderer.\n */\n_ol_renderer_webgl_ImageLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_webgl_ImageLayer_(\n      /** @type {ol.renderer.webgl.Map} */ (mapRenderer),\n      /** @type {ol.layer.Image} */ (layer)\n  );\n};\n\n\n/**\n * @param {ol.ImageBase} image Image.\n * @private\n * @return {WebGLTexture} Texture.\n */\n_ol_renderer_webgl_ImageLayer_.prototype.createTexture_ = function(image) {\n\n  // We meet the conditions to work with non-power of two textures.\n  // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n  // http://learningwebgl.com/blog/?p=2101\n\n  var imageElement = image.getImage();\n  var gl = this.mapRenderer.getGL();\n\n  return _ol_webgl_Context_.createTexture(\n      gl, imageElement, _ol_webgl_.CLAMP_TO_EDGE, _ol_webgl_.CLAMP_TO_EDGE);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  var layer = this.getLayer();\n  var source = layer.getSource();\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  var skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  var gl = this.mapRenderer.getGL();\n\n  var pixelRatio = frameState.pixelRatio;\n  var viewState = frameState.viewState;\n  var viewCenter = viewState.center;\n  var viewResolution = viewState.resolution;\n  var viewRotation = viewState.rotation;\n\n  var image = this.image_;\n  var texture = this.texture;\n  var imageLayer = /** @type {ol.layer.Image} */ (this.getLayer());\n  var imageSource = imageLayer.getSource();\n\n  var hints = frameState.viewHints;\n\n  var renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = _ol_extent_.getIntersection(\n        renderedExtent, layerState.extent);\n  }\n  if (!hints[_ol_ViewHint_.ANIMATING] && !hints[_ol_ViewHint_.INTERACTING] &&\n      !_ol_extent_.isEmpty(renderedExtent)) {\n    var projection = viewState.projection;\n    if (!_ol_.ENABLE_RASTER_REPROJECTION) {\n      var sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n    if (image_) {\n      var loaded = this.loadImage(image_);\n      if (loaded) {\n        image = image_;\n        texture = this.createTexture_(image_);\n        if (this.texture) {\n          /**\n           * @param {WebGLRenderingContext} gl GL.\n           * @param {WebGLTexture} texture Texture.\n           */\n          var postRenderFunction = function(gl, texture) {\n            if (!gl.isContextLost()) {\n              gl.deleteTexture(texture);\n            }\n          }.bind(null, gl, this.texture);\n          frameState.postRenderFunctions.push(\n              /** @type {ol.PostRenderFunction} */ (postRenderFunction)\n          );\n        }\n      }\n    }\n  }\n\n  if (image) {\n    var canvas = this.mapRenderer.getContext().getCanvas();\n\n    this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n    this.hitTransformationMatrix_ = null;\n\n    // Translate and scale to flip the Y coord.\n    var texCoordMatrix = this.texCoordMatrix;\n    _ol_transform_.reset(texCoordMatrix);\n    _ol_transform_.scale(texCoordMatrix, 1, -1);\n    _ol_transform_.translate(texCoordMatrix, 0, -1);\n\n    this.image_ = image;\n    this.texture = texture;\n\n    this.updateLogos(frameState, imageSource);\n  }\n\n  return !!image;\n};\n\n\n/**\n * @param {number} canvasWidth Canvas width.\n * @param {number} canvasHeight Canvas height.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.Coordinate} viewCenter View center.\n * @param {number} viewResolution View resolution.\n * @param {number} viewRotation View rotation.\n * @param {ol.Extent} imageExtent Image extent.\n * @private\n */\n_ol_renderer_webgl_ImageLayer_.prototype.updateProjectionMatrix_ = function(canvasWidth, canvasHeight, pixelRatio,\n    viewCenter, viewResolution, viewRotation, imageExtent) {\n\n  var canvasExtentWidth = canvasWidth * viewResolution;\n  var canvasExtentHeight = canvasHeight * viewResolution;\n\n  var projectionMatrix = this.projectionMatrix;\n  _ol_transform_.reset(projectionMatrix);\n  _ol_transform_.scale(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n  _ol_transform_.rotate(projectionMatrix, -viewRotation);\n  _ol_transform_.translate(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n  _ol_transform_.scale(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n  _ol_transform_.translate(projectionMatrix, 1, 1);\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, 0, _ol_functions_.TRUE, this);\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_ImageLayer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.image_ || !this.image_.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== _ol_.nullFunction) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    var coordinate = _ol_transform_.apply(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.forEachFeatureAtCoordinate(\n        coordinate, frameState, 0, _ol_functions_.TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  } else {\n    var imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n    }\n\n    var pixelOnFrameBuffer = _ol_transform_.apply(\n        this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\n\n/**\n * The transformation matrix to get the pixel on the image for a\n * pixel on the map.\n * @param {ol.Size} mapSize The map size.\n * @param {ol.Size} imageSize The image size.\n * @return {ol.Transform} The transformation matrix.\n * @private\n */\n_ol_renderer_webgl_ImageLayer_.prototype.getHitTransformationMatrix_ = function(mapSize, imageSize) {\n  // the first matrix takes a map pixel, flips the y-axis and scales to\n  // a range between -1 ... 1\n  var mapCoordTransform = _ol_transform_.create();\n  _ol_transform_.translate(mapCoordTransform, -1, -1);\n  _ol_transform_.scale(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n  _ol_transform_.translate(mapCoordTransform, 0, mapSize[1]);\n  _ol_transform_.scale(mapCoordTransform, 1, -1);\n\n  // the second matrix is the inverse of the projection matrix used in the\n  // shader for drawing\n  var projectionMatrixInv = _ol_transform_.invert(this.projectionMatrix.slice());\n\n  // the third matrix scales to the image dimensions and flips the y-axis again\n  var transform = _ol_transform_.create();\n  _ol_transform_.translate(transform, 0, imageSize[1]);\n  _ol_transform_.scale(transform, 1, -1);\n  _ol_transform_.scale(transform, imageSize[0] / 2, imageSize[1] / 2);\n  _ol_transform_.translate(transform, 1, 1);\n\n  _ol_transform_.multiply(transform, projectionMatrixInv);\n  _ol_transform_.multiply(transform, mapCoordTransform);\n\n  return transform;\n};\nexport default _ol_renderer_webgl_ImageLayer_;\n","// FIXME check against gl.getParameter(webgl.MAX_TEXTURE_SIZE)\n\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_css_ from '../../css.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_layer_Layer_ from '../../layer/layer.js';\nimport _ol_render_Event_ from '../../render/event.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_webgl_Immediate_ from '../../render/webgl/immediate.js';\nimport _ol_renderer_Map_ from '../map.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_source_State_ from '../../source/state.js';\nimport _ol_structs_LRUCache_ from '../../structs/lrucache.js';\nimport _ol_structs_PriorityQueue_ from '../../structs/priorityqueue.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Context_ from '../../webgl/context.js';\nimport _ol_webgl_ContextEventType_ from '../../webgl/contexteventtype.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.Map}\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @api\n */\nvar _ol_renderer_webgl_Map_ = function(container, map) {\n  _ol_renderer_Map_.call(this, container, map);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = /** @type {HTMLCanvasElement} */\n    (document.createElement('CANVAS'));\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = _ol_css_.CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasWidth_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasHeight_ = 0;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.clipTileContext_ = _ol_dom_.createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = _ol_webgl_.getContext(this.canvas_, {\n    antialias: true,\n    depth: true,\n    failIfMajorPerformanceCaveat: true,\n    preserveDrawingBuffer: false,\n    stencil: true\n  });\n\n  /**\n   * @private\n   * @type {ol.webgl.Context}\n   */\n  this.context_ = new _ol_webgl_Context_(this.canvas_, this.gl_);\n\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.LOST,\n      this.handleWebGLContextLost, this);\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  /**\n   * @private\n   * @type {ol.structs.LRUCache.<ol.WebglTextureCacheEntry|null>}\n   */\n  this.textureCache_ = new _ol_structs_LRUCache_();\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {ol.structs.PriorityQueue.<Array>}\n   */\n  this.tileTextureQueue_ = new _ol_structs_PriorityQueue_(\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {number} Priority.\n       * @this {ol.renderer.webgl.Map}\n       */\n      (function(element) {\n        var tileCenter = /** @type {ol.Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return /** @type {ol.Tile} */ (element[0]).getKey();\n      });\n\n\n  /**\n   * @param {ol.PluggableMap} map Map.\n   * @param {?olx.FrameState} frameState Frame state.\n   * @return {boolean} false.\n   * @this {ol.renderer.webgl.Map}\n   */\n  this.loadNextTileTexture_ =\n      function(map, frameState) {\n        if (!this.tileTextureQueue_.isEmpty()) {\n          this.tileTextureQueue_.reprioritize();\n          var element = this.tileTextureQueue_.dequeue();\n          var tile = /** @type {ol.Tile} */ (element[0]);\n          var tileSize = /** @type {ol.Size} */ (element[3]);\n          var tileGutter = /** @type {number} */ (element[4]);\n          this.bindTileTexture(\n              tile, tileSize, tileGutter, _ol_webgl_.LINEAR, _ol_webgl_.LINEAR);\n        }\n        return false;\n      }.bind(this);\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  this.initializeGL_();\n};\n\n_ol_.inherits(_ol_renderer_webgl_Map_, _ol_renderer_Map_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_Map_['handles'] = function(type) {\n  return _ol_has_.WEBGL && type === _ol_renderer_Type_.WEBGL;\n};\n\n\n/**\n * Create the map renderer.\n * @param {Element} container Container.\n * @param {ol.PluggableMap} map Map.\n * @return {ol.renderer.webgl.Map} The map renderer.\n */\n_ol_renderer_webgl_Map_['create'] = function(container, map) {\n  return new _ol_renderer_webgl_Map_(container, map);\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @param {ol.Size} tileSize Tile size.\n * @param {number} tileGutter Tile gutter.\n * @param {number} magFilter Mag filter.\n * @param {number} minFilter Min filter.\n */\n_ol_renderer_webgl_Map_.prototype.bindTileTexture = function(tile, tileSize, tileGutter, magFilter, minFilter) {\n  var gl = this.getGL();\n  var tileKey = tile.getKey();\n  if (this.textureCache_.containsKey(tileKey)) {\n    var textureCacheEntry = this.textureCache_.get(tileKey);\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, textureCacheEntry.texture);\n    if (textureCacheEntry.magFilter != magFilter) {\n      gl.texParameteri(\n          _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MAG_FILTER, magFilter);\n      textureCacheEntry.magFilter = magFilter;\n    }\n    if (textureCacheEntry.minFilter != minFilter) {\n      gl.texParameteri(\n          _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MIN_FILTER, minFilter);\n      textureCacheEntry.minFilter = minFilter;\n    }\n  } else {\n    var texture = gl.createTexture();\n    gl.bindTexture(_ol_webgl_.TEXTURE_2D, texture);\n    if (tileGutter > 0) {\n      var clipTileCanvas = this.clipTileContext_.canvas;\n      var clipTileContext = this.clipTileContext_;\n      if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n          this.clipTileCanvasHeight_ !== tileSize[1]) {\n        clipTileCanvas.width = tileSize[0];\n        clipTileCanvas.height = tileSize[1];\n        this.clipTileCanvasWidth_ = tileSize[0];\n        this.clipTileCanvasHeight_ = tileSize[1];\n      } else {\n        clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n      }\n      clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n      gl.texImage2D(_ol_webgl_.TEXTURE_2D, 0,\n          _ol_webgl_.RGBA, _ol_webgl_.RGBA,\n          _ol_webgl_.UNSIGNED_BYTE, clipTileCanvas);\n    } else {\n      gl.texImage2D(_ol_webgl_.TEXTURE_2D, 0,\n          _ol_webgl_.RGBA, _ol_webgl_.RGBA,\n          _ol_webgl_.UNSIGNED_BYTE, tile.getImage());\n    }\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MAG_FILTER, magFilter);\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_MIN_FILTER, minFilter);\n    gl.texParameteri(_ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_S,\n        _ol_webgl_.CLAMP_TO_EDGE);\n    gl.texParameteri(_ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_T,\n        _ol_webgl_.CLAMP_TO_EDGE);\n    this.textureCache_.set(tileKey, {\n      texture: texture,\n      magFilter: magFilter,\n      minFilter: minFilter\n    });\n  }\n};\n\n\n/**\n * @param {ol.render.EventType} type Event type.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_webgl_Map_.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  var map = this.getMap();\n  if (map.hasListener(type)) {\n    var context = this.context_;\n\n    var extent = frameState.extent;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n\n    var resolution = viewState.resolution;\n    var center = viewState.center;\n    var rotation = viewState.rotation;\n\n    var vectorContext = new _ol_render_webgl_Immediate_(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n    var composeEvent = new _ol_render_Event_(type, vectorContext,\n        frameState, null, context);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.disposeInternal = function() {\n  var gl = this.getGL();\n  if (!gl.isContextLost()) {\n    this.textureCache_.forEach(\n        /**\n         * @param {?ol.WebglTextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n  }\n  this.context_.dispose();\n  _ol_renderer_Map_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {ol.PluggableMap} map Map.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_webgl_Map_.prototype.expireCache_ = function(map, frameState) {\n  var gl = this.getGL();\n  var textureCacheEntry;\n  while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      _ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    textureCacheEntry = this.textureCache_.peekLast();\n    if (!textureCacheEntry) {\n      if (+this.textureCache_.peekLastKey() == frameState.index) {\n        break;\n      } else {\n        --this.textureCacheFrameMarkerCount_;\n      }\n    } else {\n      gl.deleteTexture(textureCacheEntry.texture);\n    }\n    this.textureCache_.pop();\n  }\n};\n\n\n/**\n * @return {ol.webgl.Context} The context.\n */\n_ol_renderer_webgl_Map_.prototype.getContext = function() {\n  return this.context_;\n};\n\n\n/**\n * @return {WebGLRenderingContext} GL.\n */\n_ol_renderer_webgl_Map_.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * @return {ol.structs.PriorityQueue.<Array>} Tile texture queue.\n */\n_ol_renderer_webgl_Map_.prototype.getTileTextureQueue = function() {\n  return this.tileTextureQueue_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.getType = function() {\n  return _ol_renderer_Type_.WEBGL;\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_renderer_webgl_Map_.prototype.handleWebGLContextLost = function(event) {\n  event.preventDefault();\n  this.textureCache_.clear();\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  var renderers = this.getLayerRenderers();\n  for (var id in renderers) {\n    var renderer = /** @type {ol.renderer.webgl.Layer} */ (renderers[id]);\n    renderer.handleWebGLContextLost();\n  }\n};\n\n\n/**\n * @protected\n */\n_ol_renderer_webgl_Map_.prototype.handleWebGLContextRestored = function() {\n  this.initializeGL_();\n  this.getMap().render();\n};\n\n\n/**\n * @private\n */\n_ol_renderer_webgl_Map_.prototype.initializeGL_ = function() {\n  var gl = this.gl_;\n  gl.activeTexture(_ol_webgl_.TEXTURE0);\n  gl.blendFuncSeparate(\n      _ol_webgl_.SRC_ALPHA, _ol_webgl_.ONE_MINUS_SRC_ALPHA,\n      _ol_webgl_.ONE, _ol_webgl_.ONE_MINUS_SRC_ALPHA);\n  gl.disable(_ol_webgl_.CULL_FACE);\n  gl.disable(_ol_webgl_.DEPTH_TEST);\n  gl.disable(_ol_webgl_.SCISSOR_TEST);\n  gl.disable(_ol_webgl_.STENCIL_TEST);\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @return {boolean} Is tile texture loaded.\n */\n_ol_renderer_webgl_Map_.prototype.isTileTextureLoaded = function(tile) {\n  return this.textureCache_.containsKey(tile.getKey());\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.renderFrame = function(frameState) {\n\n  var context = this.getContext();\n  var gl = this.getGL();\n\n  if (gl.isContextLost()) {\n    return false;\n  }\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return false;\n  }\n\n  this.focus_ = frameState.focus;\n\n  this.textureCache_.set((-frameState.index).toString(), null);\n  ++this.textureCacheFrameMarkerCount_;\n\n  this.dispatchComposeEvent_(_ol_render_EventType_.PRECOMPOSE, frameState);\n\n  /** @type {Array.<ol.LayerState>} */\n  var layerStatesToDraw = [];\n  var layerStatesArray = frameState.layerStatesArray;\n  _ol_array_.stableSort(layerStatesArray, _ol_renderer_Map_.sortByZIndex);\n\n  var viewResolution = frameState.viewState.resolution;\n  var i, ii, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewResolution) &&\n        layerState.sourceState == _ol_source_State_.READY) {\n      layerRenderer = /** @type {ol.renderer.webgl.Layer} */ (this.getLayerRenderer(layerState.layer));\n      if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n        layerStatesToDraw.push(layerState);\n      }\n    }\n  }\n\n  var width = frameState.size[0] * frameState.pixelRatio;\n  var height = frameState.size[1] * frameState.pixelRatio;\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  }\n\n  gl.bindFramebuffer(_ol_webgl_.FRAMEBUFFER, null);\n\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(_ol_webgl_.COLOR_BUFFER_BIT);\n  gl.enable(_ol_webgl_.BLEND);\n  gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n  for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n    layerState = layerStatesToDraw[i];\n    layerRenderer = /** @type {ol.renderer.webgl.Layer} */ (this.getLayerRenderer(layerState.layer));\n    layerRenderer.composeFrame(frameState, layerState, context);\n  }\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.calculateMatrices2D(frameState);\n\n  if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      _ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    frameState.postRenderFunctions.push(\n        /** @type {ol.PostRenderFunction} */ (this.expireCache_.bind(this))\n    );\n  }\n\n  if (!this.tileTextureQueue_.isEmpty()) {\n    frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n    frameState.animate = true;\n  }\n\n  this.dispatchComposeEvent_(_ol_render_EventType_.POSTCOMPOSE, frameState);\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n    layerFilter, thisArg2) {\n  var result;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  var viewState = frameState.viewState;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      var layerRenderer = this.getLayerRenderer(layer);\n      result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  var hasFeature = false;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  var viewState = frameState.viewState;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      var layerRenderer = this.getLayerRenderer(layer);\n      hasFeature =\n          layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n      if (hasFeature) {\n        return true;\n      }\n    }\n  }\n  return hasFeature;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_Map_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n    layerFilter, thisArg2) {\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  var viewState = frameState.viewState;\n  var result;\n\n  var layerStates = frameState.layerStatesArray;\n  var numLayers = layerStates.length;\n  var i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    var layerState = layerStates[i];\n    var layer = layerState.layer;\n    if (_ol_layer_Layer_.visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      var layerRenderer = /** @type {ol.renderer.webgl.Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\nexport default _ol_renderer_webgl_Map_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../index.js';\nimport _ol_webgl_Fragment_ from '../../webgl/fragment.js';\nimport _ol_webgl_Vertex_ from '../../webgl/vertex.js';\nvar _ol_renderer_webgl_tilelayershader_ = {};\n\n\n_ol_renderer_webgl_tilelayershader_.fragment = new _ol_webgl_Fragment_(_ol_.DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\n_ol_renderer_webgl_tilelayershader_.vertex = new _ol_webgl_Vertex_(_ol_.DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\nexport default _ol_renderer_webgl_tilelayershader_;","// This file is automatically generated, do not edit\nimport _ol_ from '../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nvar _ol_renderer_webgl_tilelayershader_Locations_ = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n      program, _ol_.DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n      program, _ol_.DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default _ol_renderer_webgl_tilelayershader_Locations_;","// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileRange_ from '../../tilerange.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_math_ from '../../math.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_renderer_webgl_tilelayershader_ from '../webgl/tilelayershader.js';\nimport _ol_renderer_webgl_tilelayershader_Locations_ from '../webgl/tilelayershader/locations.js';\nimport _ol_size_ from '../../size.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Tile} tileLayer Tile layer.\n * @api\n */\nvar _ol_renderer_webgl_TileLayer_ = function(mapRenderer, tileLayer) {\n\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, tileLayer);\n\n  /**\n   * @private\n   * @type {ol.webgl.Fragment}\n   */\n  this.fragmentShader_ = _ol_renderer_webgl_tilelayershader_.fragment;\n\n  /**\n   * @private\n   * @type {ol.webgl.Vertex}\n   */\n  this.vertexShader_ = _ol_renderer_webgl_tilelayershader_.vertex;\n\n  /**\n   * @private\n   * @type {ol.renderer.webgl.tilelayershader.Locations}\n   */\n  this.locations_ = null;\n\n  /**\n   * @private\n   * @type {ol.webgl.Buffer}\n   */\n  this.renderArrayBuffer_ = new _ol_webgl_Buffer_([\n    0, 0, 0, 1,\n    1, 0, 1, 1,\n    0, 1, 0, 0,\n    1, 1, 1, 0\n  ]);\n\n  /**\n   * @private\n   * @type {ol.TileRange}\n   */\n  this.renderedTileRange_ = null;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedFramebufferExtent_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_TileLayer_, _ol_renderer_webgl_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_TileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.TileLayer} The layer renderer.\n */\n_ol_renderer_webgl_TileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_webgl_TileLayer_(\n      /** @type {ol.renderer.webgl.Map} */ (mapRenderer),\n      /** @type {ol.layer.Tile} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.disposeInternal = function() {\n  var context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n  _ol_renderer_webgl_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  var mapRenderer = this.mapRenderer;\n\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {ol.TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        var loaded = mapRenderer.isTileTextureLoaded(tile);\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return loaded;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.handleWebGLContextLost = function() {\n  _ol_renderer_webgl_Layer_.prototype.handleWebGLContextLost.call(this);\n  this.locations_ = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  var mapRenderer = this.mapRenderer;\n  var gl = context.getGL();\n\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n\n  var tileLayer = /** @type {ol.layer.Tile} */ (this.getLayer());\n  var tileSource = tileLayer.getSource();\n  var tileGrid = tileSource.getTileGridForProjection(projection);\n  var z = tileGrid.getZForResolution(viewState.resolution);\n  var tileResolution = tileGrid.getResolution(z);\n\n  var tilePixelSize =\n      tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n  var pixelRatio = tilePixelSize[0] /\n      _ol_size_.toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n  var tilePixelResolution = tileResolution / pixelRatio;\n  var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n  var center = viewState.center;\n  var extent = frameState.extent;\n  var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n  var framebufferExtent;\n  if (this.renderedTileRange_ &&\n      this.renderedTileRange_.equals(tileRange) &&\n      this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n\n    var tileRangeSize = tileRange.getSize();\n\n    var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n    var framebufferDimension = _ol_math_.roundUpToPowerOfTwo(maxDimension);\n    var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    var origin = tileGrid.getOrigin(z);\n    var minX = origin[0] +\n        tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    var minY = origin[1] +\n        tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [\n      minX, minY,\n      minX + framebufferExtentDimension, minY + framebufferExtentDimension\n    ];\n\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(_ol_webgl_.COLOR_BUFFER_BIT);\n    gl.disable(_ol_webgl_.BLEND);\n\n    var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n    if (!this.locations_) {\n      this.locations_ = new _ol_renderer_webgl_tilelayershader_Locations_(gl, program);\n    }\n\n    context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(\n        this.locations_.a_position, 2, _ol_webgl_.FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, _ol_webgl_.FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n\n    /**\n     * @type {Object.<number, Object.<string, ol.Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    var allTilesLoaded = true;\n    var tmpExtent = _ol_extent_.createEmpty();\n    var tmpTileRange = new _ol_TileRange_(0, 0, 0, 0);\n    var childTileRange, drawable, fullyLoaded, tile, tileState;\n    var x, y, tileExtent;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          if (!_ol_extent_.intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n        tileState = tile.getState();\n        drawable = tileState == _ol_TileState_.LOADED ||\n            tileState == _ol_TileState_.EMPTY ||\n            tileState == _ol_TileState_.ERROR && !useInterimTilesOnError;\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n        tileState = tile.getState();\n        if (tileState == _ol_TileState_.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == _ol_TileState_.EMPTY ||\n                   (tileState == _ol_TileState_.ERROR &&\n                    !useInterimTilesOnError)) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n\n      }\n\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(_ol_array_.numberSafeCompareFunction);\n    var u_tileOffset = new Float32Array(4);\n    var i, ii, tileKey, tilesToDraw;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      tilesToDraw = tilesToDrawByZ[zs[i]];\n      for (tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n            framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n            framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n            framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n            framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, _ol_webgl_.LINEAR, _ol_webgl_.LINEAR);\n        gl.drawArrays(_ol_webgl_.TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  var tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {ol.Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == _ol_TileState_.LOADED &&\n            !mapRenderer.isTileTextureLoaded(tile) &&\n            !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n  this.updateLogos(frameState, tileSource);\n\n  var texCoordMatrix = this.texCoordMatrix;\n  _ol_transform_.reset(texCoordMatrix);\n  _ol_transform_.translate(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n          (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  if (viewState.rotation !== 0) {\n    _ol_transform_.rotate(texCoordMatrix, viewState.rotation);\n  }\n  _ol_transform_.scale(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n          (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  _ol_transform_.translate(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  var pixelOnMapScaled = [\n    pixel[0] / frameState.size[0],\n    (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  var pixelOnFrameBufferScaled = _ol_transform_.apply(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n  var pixelOnFrameBuffer = [\n    pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n    pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n  var gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  var imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\nexport default _ol_renderer_webgl_TileLayer_;","import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_webgl_ReplayGroup_ from '../../render/webgl/replaygroup.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_vector_ from '../vector.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Vector} vectorLayer Vector layer.\n * @api\n */\nvar _ol_renderer_webgl_VectorLayer_ = function(mapRenderer, vectorLayer) {\n\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, vectorLayer);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedExtent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {function(ol.Feature, ol.Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {ol.render.webgl.ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * The last layer state.\n   * @private\n   * @type {?ol.LayerState}\n   */\n  this.layerState_ = null;\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_VectorLayer_, _ol_renderer_webgl_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_VectorLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.VectorLayer} The layer renderer.\n */\n_ol_renderer_webgl_VectorLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_webgl_VectorLayer_(\n      /** @type {ol.renderer.webgl.Map} */ (mapRenderer),\n      /** @type {ol.layer.Vector} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.composeFrame = function(frameState, layerState, context) {\n  this.layerState_ = layerState;\n  var viewState = frameState.viewState;\n  var replayGroup = this.replayGroup_;\n  var size = frameState.size;\n  var pixelRatio = frameState.pixelRatio;\n  var gl = this.mapRenderer.getGL();\n  if (replayGroup && !replayGroup.isEmpty()) {\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n    replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n    gl.disable(gl.SCISSOR_TEST);\n  }\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.disposeInternal = function() {\n  var replayGroup = this.replayGroup_;\n  if (replayGroup) {\n    var context = this.mapRenderer.getContext();\n    replayGroup.getDeleteResourcesFunction(context)();\n    this.replayGroup_ = null;\n  }\n  _ol_renderer_webgl_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return undefined;\n  } else {\n    var context = this.mapRenderer.getContext();\n    var viewState = frameState.viewState;\n    var layer = this.getLayer();\n    var layerState = this.layerState_;\n    /** @type {Object.<string, boolean>} */\n    var features = {};\n    return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {ol.Feature|ol.render.Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = _ol_.getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return false;\n  } else {\n    var context = this.mapRenderer.getContext();\n    var viewState = frameState.viewState;\n    var layerState = this.layerState_;\n    return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  var coordinate = _ol_transform_.apply(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n  var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_webgl_VectorLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_VectorLayer_.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  var vectorLayer = /** @type {ol.layer.Vector} */ (this.getLayer());\n  var vectorSource = vectorLayer.getSource();\n\n  this.updateLogos(frameState, vectorSource);\n\n  var animating = frameState.viewHints[_ol_ViewHint_.ANIMATING];\n  var interacting = frameState.viewHints[_ol_ViewHint_.INTERACTING];\n  var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  var frameStateExtent = frameState.extent;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var vectorLayerRevision = vectorLayer.getRevision();\n  var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = _ol_renderer_vector_.defaultOrder;\n  }\n\n  var extent = _ol_extent_.buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      _ol_extent_.containsExtent(this.renderedExtent_, extent)) {\n    return true;\n  }\n\n  if (this.replayGroup_) {\n    frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n  }\n\n  this.dirty_ = false;\n\n  var replayGroup = new _ol_render_webgl_ReplayGroup_(\n      _ol_renderer_vector_.getTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {ol.Feature} feature Feature.\n   * @this {ol.renderer.webgl.VectorLayer}\n   */\n  var renderFeature = function(feature) {\n    var styles;\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction.call(feature, resolution);\n    } else {\n      styleFunction = vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n    }\n    if (styles) {\n      var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  };\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<ol.Feature>} */\n    var features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {ol.Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n    features.sort(vectorLayerRenderOrder);\n    features.forEach(renderFeature, this);\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, renderFeature, this);\n  }\n  replayGroup.finish(context);\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  return true;\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.webgl.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_webgl_VectorLayer_.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i],\n          _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles,\n        _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n  }\n  return loading;\n};\nexport default _ol_renderer_webgl_VectorLayer_;\n","import _ol_ from './index.js';\nimport _ol_PluggableMap_ from './pluggablemap.js';\nimport _ol_PluginType_ from './plugintype.js';\nimport _ol_control_ from './control.js';\nimport _ol_interaction_ from './interaction.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_plugins_ from './plugins.js';\nimport _ol_renderer_canvas_ImageLayer_ from './renderer/canvas/imagelayer.js';\nimport _ol_renderer_canvas_Map_ from './renderer/canvas/map.js';\nimport _ol_renderer_canvas_TileLayer_ from './renderer/canvas/tilelayer.js';\nimport _ol_renderer_canvas_VectorLayer_ from './renderer/canvas/vectorlayer.js';\nimport _ol_renderer_canvas_VectorTileLayer_ from './renderer/canvas/vectortilelayer.js';\nimport _ol_renderer_webgl_ImageLayer_ from './renderer/webgl/imagelayer.js';\nimport _ol_renderer_webgl_Map_ from './renderer/webgl/map.js';\nimport _ol_renderer_webgl_TileLayer_ from './renderer/webgl/tilelayer.js';\nimport _ol_renderer_webgl_VectorLayer_ from './renderer/webgl/vectorlayer.js';\n\n\nif (_ol_.ENABLE_CANVAS) {\n  _ol_plugins_.register(_ol_PluginType_.MAP_RENDERER, _ol_renderer_canvas_Map_);\n  _ol_plugins_.registerMultiple(_ol_PluginType_.LAYER_RENDERER, [\n    _ol_renderer_canvas_ImageLayer_,\n    _ol_renderer_canvas_TileLayer_,\n    _ol_renderer_canvas_VectorLayer_,\n    _ol_renderer_canvas_VectorTileLayer_\n  ]);\n}\n\nif (_ol_.ENABLE_WEBGL) {\n  _ol_plugins_.register(_ol_PluginType_.MAP_RENDERER, _ol_renderer_webgl_Map_);\n  _ol_plugins_.registerMultiple(_ol_PluginType_.LAYER_RENDERER, [\n    _ol_renderer_webgl_ImageLayer_,\n    _ol_renderer_webgl_TileLayer_,\n    _ol_renderer_webgl_VectorLayer_\n  ]);\n}\n\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     var map = new ol.Map({\n *       view: new ol.View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new ol.layer.Tile({\n *           source: new ol.source.OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link ol.layer.Tile} to display\n * {@link ol.source.OSM} OSM data and render it to a DOM element with the\n * id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link ol.Overlay} for the difference). The map itself is placed in\n * a further element within the viewport.\n *\n * Layers are stored as a `ol.Collection` in layerGroups. A top-level group is\n * provided by the library. This is what is accessed by `getLayerGroup` and\n * `setLayerGroup`. Layers entered in the options are added to this group, and\n * `addLayer` and `removeLayer` change the layer collection in the group.\n * `getLayers` is a convenience function for `getLayerGroup().getLayers()`.\n * Note that `ol.layer.Group` is a subclass of `ol.layer.Base`, so layers\n * entered in the options or added with `addLayer` can be groups, which can\n * contain further groups, and so on.\n *\n * @constructor\n * @extends {ol.PluggableMap}\n * @param {olx.MapOptions} options Map options.\n * @fires ol.MapBrowserEvent\n * @fires ol.MapEvent\n * @fires ol.render.Event#postcompose\n * @fires ol.render.Event#precompose\n * @api\n */\nvar _ol_Map_ = function(options) {\n  options = _ol_obj_.assign({}, options);\n  if (!options.controls) {\n    options.controls = _ol_control_.defaults();\n  }\n  if (!options.interactions) {\n    options.interactions = _ol_interaction_.defaults();\n  }\n\n  _ol_PluggableMap_.call(this, options);\n};\n\n_ol_.inherits(_ol_Map_, _ol_PluggableMap_);\nexport default _ol_Map_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_ from './index.js';\nimport _ol_Object_ from './object.js';\nimport _ol_geom_Geometry_ from './geom/geometry.js';\nimport _ol_style_Style_ from './style/style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link ol.Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n * var feature = new ol.Feature({\n *   geometry: new ol.geom.Polygon(polyCoords),\n *   labelPoint: new ol.geom.Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {ol.Object}\n * @param {ol.geom.Geometry|Object.<string, *>=} opt_geometryOrProperties\n *     You may pass a Geometry object directly, or an object literal\n *     containing properties.  If you pass an object literal, you may\n *     include a Geometry associated with a `geometry` key.\n * @api\n */\nvar _ol_Feature_ = function(opt_geometryOrProperties) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {ol.style.Style|Array.<ol.style.Style>|\n   *     ol.FeatureStyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {ol.FeatureStyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof _ol_geom_Geometry_ ||\n        !opt_geometryOrProperties) {\n      var geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      var properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\n_ol_.inherits(_ol_Feature_, _ol_Object_);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {ol.Feature} The clone.\n * @api\n */\n_ol_Feature_.prototype.clone = function() {\n  var clone = new _ol_Feature_(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  var geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  var style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link ol.Feature#setGeometry}.\n * @return {ol.geom.Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\n_ol_Feature_.prototype.getGeometry = function() {\n  return /** @type {ol.geom.Geometry|undefined} */ (\n    this.get(this.geometryName_));\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link ol.Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\n_ol_Feature_.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\n_ol_Feature_.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link ol.Feature#setStyle} method.\n * @return {ol.style.Style|Array.<ol.style.Style>|\n *     ol.FeatureStyleFunction|ol.StyleFunction} The feature style.\n * @api\n */\n_ol_Feature_.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {ol.FeatureStyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\n_ol_Feature_.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\n_ol_Feature_.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\n_ol_Feature_.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    _ol_events_.unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  var geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = _ol_events_.listen(geometry,\n        _ol_events_EventType_.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link ol.Feature#getGeometryName}.\n * @param {ol.geom.Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\n_ol_Feature_.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {ol.style.Style|Array.<ol.style.Style>|\n *     ol.FeatureStyleFunction|ol.StyleFunction} style Style for this feature.\n * @api\n * @fires ol.events.Event#event:change\n */\n_ol_Feature_.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ?\n    undefined : _ol_Feature_.createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the {@link ol.source.Vector#getFeatureById}\n * method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires ol.events.Event#event:change\n */\n_ol_Feature_.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link ol.Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\n_ol_Feature_.prototype.setGeometryName = function(name) {\n  _ol_events_.unlisten(\n      this, _ol_Object_.getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of ol.style.Style or single style objects wrapped\n * in a new feature style function.\n * @param {ol.FeatureStyleFunction|!Array.<ol.style.Style>|!ol.style.Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {ol.FeatureStyleFunction} A style function.\n */\n_ol_Feature_.createStyleFunction = function(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    if (obj.length == 2) {\n      styleFunction = function(resolution) {\n        return /** @type {ol.StyleFunction} */ (obj)(this, resolution);\n      };\n    } else {\n      styleFunction = obj;\n    }\n  } else {\n    /**\n     * @type {Array.<ol.style.Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      _ol_asserts_.assert(obj instanceof _ol_style_Style_,\n          41); // Expected an `ol.style.Style` or an array of `ol.style.Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n};\nexport default _ol_Feature_;\n","import _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {ol.format.Feature} subclasses provide the ability to decode and encode\n * {@link ol.Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @constructor\n * @abstract\n * @api\n */\nvar _ol_format_Feature_ = function() {\n\n  /**\n   * @protected\n   * @type {ol.proj.Projection}\n   */\n  this.defaultDataProjection = null;\n\n  /**\n   * @protected\n   * @type {ol.proj.Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {olx.format.ReadOptions|undefined} Options.\n * @protected\n */\n_ol_format_Feature_.prototype.getReadOptions = function(source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n\n/**\n * Sets the `defaultDataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {olx.format.WriteOptions|olx.format.ReadOptions|undefined} options\n *     Options.\n * @protected\n * @return {olx.format.WriteOptions|olx.format.ReadOptions|undefined}\n *     Updated options.\n */\n_ol_format_Feature_.prototype.adaptOptions = function(options) {\n  return _ol_obj_.assign({\n    dataProjection: this.defaultDataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {ol.Extent} Tile extent.\n */\n_ol_format_Feature_.prototype.getLastExtent = function() {\n  return null;\n};\n\n\n/**\n * @abstract\n * @return {ol.format.FormatType} Format.\n */\n_ol_format_Feature_.prototype.getType = function() {};\n\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n */\n_ol_format_Feature_.prototype.readFeature = function(source, opt_options) {};\n\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n */\n_ol_format_Feature_.prototype.readFeatures = function(source, opt_options) {};\n\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_Feature_.prototype.readGeometry = function(source, opt_options) {};\n\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n */\n_ol_format_Feature_.prototype.readProjection = function(source) {};\n\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeFeature = function(feature, opt_options) {};\n\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeFeatures = function(features, opt_options) {};\n\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeGeometry = function(geometry, opt_options) {};\n\n\n/**\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(olx.format.WriteOptions|olx.format.ReadOptions)=} opt_options\n *     Options.\n * @return {ol.geom.Geometry|ol.Extent} Transformed geometry.\n * @protected\n */\n_ol_format_Feature_.transformWithOptions = function(\n    geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    _ol_proj_.get(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    _ol_proj_.get(opt_options.dataProjection) : null;\n  /**\n   * @type {ol.geom.Geometry|ol.Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !_ol_proj_.equivalent(featureProjection, dataProjection)) {\n    if (geometry instanceof _ol_geom_Geometry_) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n          write ? featureProjection : dataProjection,\n          write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because ol.format.GML treats extents\n      // as geometries\n      transformed = _ol_proj_.transformExtent(\n          geometry,\n          dataProjection,\n          featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    var power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n};\nexport default _ol_format_Feature_;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n"],"sourceRoot":""}